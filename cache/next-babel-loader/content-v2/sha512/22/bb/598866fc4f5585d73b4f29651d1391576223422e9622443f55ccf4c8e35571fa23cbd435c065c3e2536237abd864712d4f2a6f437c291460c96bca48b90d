{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useState } from 'react';\nimport { Col, Container, Row } from 'react-bootstrap';\nimport { Counter } from '../../components/Counter';\nimport { DatePickerButton } from '../../components/DatePickerButton';\nimport { NumeroTotalVacinados } from '../../components/graphs/NumeroTotalVacinados';\nimport { VacinadosPorDia } from '../../components/graphs/VacinadosPorDia';\nimport { useData } from '../../hooks/useData';\nimport styles from '../../styles/Home.module.scss';\nimport { useRouter } from 'next/router';\nimport Error from 'next/error';\nimport Plausible from 'plausible-tracker';\nconst plausible = Plausible({\n  domain: 'vacinacaocovid19.pt',\n  trackLocalhost: true\n});\nimport { useColors } from './../../hooks/useColors';\nexport default function Embed() {\n  const router = useRouter();\n  const {\n    id,\n    colors: queryColors\n  } = router.query;\n  let {\n    colors,\n    tints,\n    shades,\n    complement,\n    setColors\n  } = useColors();\n  let {\n    statistics,\n    labels,\n    values\n  } = useData();\n  let rawData = statistics.getRaw();\n  let {\n    valuesIn1,\n    valuesIn2\n  } = statistics.getVacinadosAcum();\n  let {\n    0: selectedItem,\n    1: setSelectedItem\n  } = useState({});\n  let {\n    0: previousItem,\n    1: setPreviousItem\n  } = useState({});\n  let {\n    0: previousSelectedItem,\n    1: setPreviousSelectedItem\n  } = useState({});\n  let {\n    0: last,\n    1: setLast\n  } = useState({});\n  let {\n    0: first,\n    1: setFirst\n  } = useState({});\n  let {\n    0: loaded,\n    1: setLoaded\n  } = useState(false);\n\n  function onDateSelect(d) {\n    let item = rawData.filter((el, elIdx) => {\n      if (el.Data == d.getTime()) {\n        if (elIdx - 1 >= 0) {\n          setPreviousItem(rawData[elIdx - 1]);\n        } else {\n          setPreviousItem(el);\n        }\n\n        return true;\n      }\n    });\n\n    if (selectedItem.Data != item[0].Data) {\n      setPreviousSelectedItem(selectedItem);\n      setSelectedItem(item[0]);\n    }\n  }\n\n  useEffect(() => {\n    let rawData = statistics.getRaw();\n    setLast(rawData[rawData.length - 1]);\n    onDateSelect(new Date(rawData[rawData.length - 1].Data));\n  }, [values]);\n  useEffect(() => {\n    setLast(rawData[rawData.length - 1]);\n    setSelectedItem(rawData[rawData.length - 1]);\n    setPreviousItem(rawData[rawData.length - 2]);\n    setFirst(rawData[0]);\n    setLoaded(true);\n    plausible.trackPageview();\n  }, []);\n  useEffect(() => {\n    if (queryColors != undefined) {\n      setColors([...queryColors.map(c => '#' + c)]);\n    }\n  }, [queryColors]);\n\n  let content = /*#__PURE__*/_jsx(Row, {\n    children: /*#__PURE__*/_jsx(Col, {\n      children: /*#__PURE__*/_jsx(\"p\", {\n        style: {\n          padding: '20px',\n          textAlign: 'center'\n        },\n        children: \"A carregar...\"\n      })\n    })\n  });\n\n  let css = `:root{\n\t\t--foreground:${colors[0]}\n\t\t}`;\n\n  if (id) {\n    switch (id) {\n      case 'counter':\n        content = /*#__PURE__*/_jsxs(_Fragment, {\n          children: [/*#__PURE__*/_jsx(_Fragment, {\n            children: /*#__PURE__*/_jsx(\"style\", {\n              children: css\n            })\n          }), /*#__PURE__*/_jsx(Row, {\n            className: styles.datepickerRow,\n            children: /*#__PURE__*/_jsx(Col, {\n              style: {\n                textAlign: 'center'\n              },\n              children: loaded ? /*#__PURE__*/_jsx(DatePickerButton, {\n                colors: colors,\n                onDateSelect: onDateSelect,\n                minDate: first.Data,\n                maxDate: last.Data\n              }) : ''\n            })\n          }), /*#__PURE__*/_jsxs(Row, {\n            children: [/*#__PURE__*/_jsx(Col, {\n              lg: 4,\n              xs: 12,\n              children: /*#__PURE__*/_jsx(Counter, {\n                colors: colors,\n                title: \"N\\xFAmero total de vacinas administradas\",\n                subtitle: \"\",\n                yesterday: previousItem === null || previousItem === void 0 ? void 0 : previousItem.Vacinados_Ac,\n                from: (previousSelectedItem === null || previousSelectedItem === void 0 ? void 0 : previousSelectedItem.Vacinados_Ac) || 0,\n                to: selectedItem === null || selectedItem === void 0 ? void 0 : selectedItem.Vacinados_Ac\n              })\n            }), /*#__PURE__*/_jsx(Col, {\n              lg: 4,\n              xs: 12,\n              children: /*#__PURE__*/_jsx(Counter, {\n                colors: colors,\n                title: \"N\\xFAmero de doses administradas - 1\\xAA Dose\",\n                subtitle: \"Vacina Pfizer/BioNTech\",\n                yesterday: previousItem === null || previousItem === void 0 ? void 0 : previousItem.Inoculacao1_Ac,\n                from: (previousSelectedItem === null || previousSelectedItem === void 0 ? void 0 : previousSelectedItem.Inoculacao1_Ac) || 0,\n                to: selectedItem === null || selectedItem === void 0 ? void 0 : selectedItem.Inoculacao1_Ac\n              })\n            }), /*#__PURE__*/_jsx(Col, {\n              lg: 4,\n              xs: 12,\n              children: /*#__PURE__*/_jsx(Counter, {\n                colors: colors,\n                title: \"N\\xFAmero de doses administradas - 2\\xAA Dose\",\n                subtitle: \"Vacina Pfizer/BioNTech\",\n                yesterday: previousItem === null || previousItem === void 0 ? void 0 : previousItem.Inoculacao2_Ac,\n                from: (previousSelectedItem === null || previousSelectedItem === void 0 ? void 0 : previousSelectedItem.Inoculacao2_Ac) || 0,\n                to: selectedItem === null || selectedItem === void 0 ? void 0 : selectedItem.Inoculacao2_Ac\n              })\n            })]\n          })]\n        });\n        break;\n\n      case 'line':\n        content = /*#__PURE__*/_jsx(_Fragment, {\n          children: /*#__PURE__*/_jsx(NumeroTotalVacinados, {\n            colors: colors,\n            labels: labels,\n            values: values,\n            valuesIn1: valuesIn1,\n            valuesIn2: valuesIn2\n          })\n        });\n        break;\n\n      case 'bar':\n        content = /*#__PURE__*/_jsx(_Fragment, {\n          children: /*#__PURE__*/_jsx(VacinadosPorDia, {\n            colors: colors,\n            labels: labels,\n            values: values,\n            statistics: statistics\n          })\n        });\n        break;\n\n      default:\n        content = /*#__PURE__*/_jsx(Error, {\n          statusCode: 404\n        });\n    }\n  }\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: content\n  }); // <Footer></Footer>\n}","map":null,"metadata":{},"sourceType":"module"}