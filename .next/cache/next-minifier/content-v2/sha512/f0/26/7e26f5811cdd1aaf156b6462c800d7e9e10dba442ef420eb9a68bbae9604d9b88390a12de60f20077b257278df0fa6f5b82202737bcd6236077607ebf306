{"code":"(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[5],{m0r1:function(t,e,i){\"use strict\";i.r(e),i.d(e,\"Animation\",(function(){return r})),i.d(e,\"Animations\",(function(){return c})),i.d(e,\"ArcElement\",(function(){return re})),i.d(e,\"BarController\",(function(){return k})),i.d(e,\"BarElement\",(function(){return Se})),i.d(e,\"BasePlatform\",(function(){return it})),i.d(e,\"BasicPlatform\",(function(){return nt})),i.d(e,\"BubbleController\",(function(){return S})),i.d(e,\"CategoryScale\",(function(){return pi})),i.d(e,\"Chart\",(function(){return Zt})),i.d(e,\"DatasetController\",(function(){return v})),i.d(e,\"Decimation\",(function(){return Ae})),i.d(e,\"DomPlatform\",(function(){return bt})),i.d(e,\"DoughnutController\",(function(){return D})),i.d(e,\"Element\",(function(){return mt})),i.d(e,\"Filler\",(function(){return Ke})),i.d(e,\"Interaction\",(function(){return $})),i.d(e,\"Legend\",(function(){return Ge})),i.d(e,\"LineController\",(function(){return P})),i.d(e,\"LineElement\",(function(){return be})),i.d(e,\"LinearScale\",(function(){return mi})),i.d(e,\"LogarithmicScale\",(function(){return _i})),i.d(e,\"PieController\",(function(){return A})),i.d(e,\"PointElement\",(function(){return xe})),i.d(e,\"PolarAreaController\",(function(){return C})),i.d(e,\"RadarController\",(function(){return T})),i.d(e,\"RadialLinearScale\",(function(){return ki})),i.d(e,\"Scale\",(function(){return Dt})),i.d(e,\"ScatterController\",(function(){return L})),i.d(e,\"Ticks\",(function(){return _t})),i.d(e,\"TimeScale\",(function(){return Ei})),i.d(e,\"TimeSeriesScale\",(function(){return Ri})),i.d(e,\"Title\",(function(){return Ze})),i.d(e,\"Tooltip\",(function(){return ui})),i.d(e,\"_adapters\",(function(){return I})),i.d(e,\"animator\",(function(){return o})),i.d(e,\"controllers\",(function(){return E})),i.d(e,\"elements\",(function(){return De})),i.d(e,\"layouts\",(function(){return et})),i.d(e,\"plugins\",(function(){return gi})),i.d(e,\"registerables\",(function(){return Fi})),i.d(e,\"registry\",(function(){return Ct})),i.d(e,\"scales\",(function(){return Ii}));var n=i(\"3T2N\");i.d(e,\"defaults\",(function(){return n.Nb}));var o=new class{constructor(){this._request=null,this._charts=new Map,this._running=!1,this._lastDate=void 0}_notify(t,e,i,n){const o=e.listeners[n],s=e.duration;o.forEach((n=>n({chart:t,initial:e.initial,numSteps:s,currentStep:Math.min(i-e.start,s)})))}_refresh(){const t=this;t._request||(t._running=!0,t._request=n.bc.call(window,(()=>{t._update(),t._request=null,t._running&&t._refresh()})))}_update(t=Date.now()){const e=this;let i=0;e._charts.forEach(((n,o)=>{if(!n.running||!n.items.length)return;const s=n.items;let a,r=s.length-1,l=!1;for(;r>=0;--r)a=s[r],a._active?(a._total>n.duration&&(n.duration=a._total),a.tick(t),l=!0):(s[r]=s[s.length-1],s.pop());l&&(o.draw(),e._notify(o,n,t,\"progress\")),s.length||(n.running=!1,e._notify(o,n,t,\"complete\"),n.initial=!1),i+=s.length})),e._lastDate=t,0===i&&(e._running=!1)}_getAnims(t){const e=this._charts;let i=e.get(t);return i||(i={running:!1,initial:!0,items:[],listeners:{complete:[],progress:[]}},e.set(t,i)),i}listen(t,e,i){this._getAnims(t).listeners[e].push(i)}add(t,e){e&&e.length&&this._getAnims(t).items.push(...e)}has(t){return this._getAnims(t).items.length>0}start(t){const e=this._charts.get(t);e&&(e.running=!0,e.start=Date.now(),e.duration=e.items.reduce(((t,e)=>Math.max(t,e._duration)),0),this._refresh())}running(t){if(!this._running)return!1;const e=this._charts.get(t);return!!(e&&e.running&&e.items.length)}stop(t){const e=this._charts.get(t);if(!e||!e.items.length)return;const i=e.items;let n=i.length-1;for(;n>=0;--n)i[n].cancel();e.items=[],this._notify(t,e,Date.now(),\"complete\")}remove(t){return this._charts.delete(t)}};const s=\"transparent\",a={boolean:(t,e,i)=>i>.5?e:t,color(t,e,i){const o=Object(n.Mb)(t||s),a=o.valid&&Object(n.Mb)(e||s);return a&&a.valid?a.mix(o,i).hexString():e},number:(t,e,i)=>t+(e-t)*i};class r{constructor(t,e,i,o){const s=e[i];o=Object(n.C)([t.to,o,s,t.from]);const r=Object(n.C)([t.from,s,o]);this._active=!0,this._fn=t.fn||a[t.type||typeof r],this._easing=n.Ob[t.easing]||n.Ob.linear,this._start=Math.floor(Date.now()+(t.delay||0)),this._duration=this._total=Math.floor(t.duration),this._loop=!!t.loop,this._target=e,this._prop=i,this._from=r,this._to=o,this._promises=void 0}active(){return this._active}update(t,e,i){const o=this;if(o._active){o._notify(!1);const s=o._target[o._prop],a=i-o._start,r=o._duration-a;o._start=i,o._duration=Math.floor(Math.max(r,t.duration)),o._total+=a,o._loop=!!t.loop,o._to=Object(n.C)([t.to,e,s,t.from]),o._from=Object(n.C)([t.from,s,e])}}cancel(){const t=this;t._active&&(t.tick(Date.now()),t._active=!1,t._notify(!1))}tick(t){const e=this,i=t-e._start,n=e._duration,o=e._prop,s=e._from,a=e._loop,r=e._to;let l;if(e._active=s!==r&&(a||i<n),!e._active)return e._target[o]=r,void e._notify(!0);i<0?e._target[o]=s:(l=i/n%2,l=a&&l>1?2-l:l,l=e._easing(Math.min(1,Math.max(0,l))),e._target[o]=e._fn(s,r,l))}wait(){const t=this._promises||(this._promises=[]);return new Promise(((e,i)=>{t.push({res:e,rej:i})}))}_notify(t){const e=t?\"res\":\"rej\",i=this._promises||[];for(let n=0;n<i.length;n++)i[n][e]()}}n.Nb.set(\"animation\",{delay:void 0,duration:1e3,easing:\"easeOutQuart\",fn:void 0,from:void 0,loop:void 0,to:void 0,type:void 0});const l=Object.keys(n.Nb.animation);n.Nb.describe(\"animation\",{_fallback:!1,_indexable:!1,_scriptable:t=>\"onProgress\"!==t&&\"onComplete\"!==t&&\"fn\"!==t}),n.Nb.set(\"animations\",{colors:{type:\"color\",properties:[\"color\",\"borderColor\",\"backgroundColor\"]},numbers:{type:\"number\",properties:[\"x\",\"y\",\"borderWidth\",\"radius\",\"tension\"]}}),n.Nb.describe(\"animations\",{_fallback:\"animation\"}),n.Nb.set(\"transitions\",{active:{animation:{duration:400}},resize:{animation:{duration:0}},show:{animations:{colors:{from:\"transparent\"},visible:{type:\"boolean\",duration:0}}},hide:{animations:{colors:{to:\"transparent\"},visible:{type:\"boolean\",easing:\"linear\",fn:t=>0|t}}}});class c{constructor(t,e){this._chart=t,this._properties=new Map,this.configure(e)}configure(t){if(!Object(n.Sb)(t))return;const e=this._properties;Object.getOwnPropertyNames(t).forEach((i=>{const o=t[i];if(!Object(n.Sb)(o))return;const s={};for(const t of l)s[t]=o[t];(Object(n.Lb)(o.properties)&&o.properties||[i]).forEach((t=>{t!==i&&e.has(t)||e.set(t,s)}))}))}_animateOptions(t,e){const i=e.options,n=function(t,e){if(!e)return;let i=t.options;if(!i)return void(t.options=e);i.$shared&&(t.options=i=Object.assign({},i,{$shared:!1,$animations:{}}));return i}(t,i);if(!n)return[];const o=this._createAnimations(n,i);return i.$shared&&function(t,e){const i=[],n=Object.keys(e);for(let o=0;o<n.length;o++){const e=t[n[o]];e&&e.active()&&i.push(e.wait())}return Promise.all(i)}(t.options.$animations,i).then((()=>{t.options=i}),(()=>{})),o}_createAnimations(t,e){const i=this._properties,n=[],o=t.$animations||(t.$animations={}),s=Object.keys(e),a=Date.now();let l;for(l=s.length-1;l>=0;--l){const c=s[l];if(\"$\"===c.charAt(0))continue;if(\"options\"===c){n.push(...this._animateOptions(t,e));continue}const h=e[c];let d=o[c];const u=i.get(c);if(d){if(u&&d.active()){d.update(u,h,a);continue}d.cancel()}u&&u.duration?(o[c]=d=new r(u,t,c,h),n.push(d)):t[c]=h}return n}update(t,e){if(0===this._properties.size)return void Object.assign(t,e);const i=this._createAnimations(t,e);return i.length?(o.add(this._chart,i),!0):void 0}}function h(t,e){const i=t&&t.options||{},n=i.reverse,o=void 0===i.min?e:0,s=void 0===i.max?e:0;return{start:n?s:o,end:n?o:s}}function d(t,e){const i=[],n=t._getSortedDatasetMetas(e);let o,s;for(o=0,s=n.length;o<s;++o)i.push(n[o].index);return i}function u(t,e,i,o){const s=t.keys,a=\"single\"===o.mode;let r,l,c,h;if(null!==e){for(r=0,l=s.length;r<l;++r){if(c=+s[r],c===i){if(o.all)continue;break}h=t.values[c],Object(n.Qb)(h)&&(a||0===e||Object(n.cc)(e)===Object(n.cc)(h))&&(e+=h)}return e}}function g(t,e){const i=t&&t.options.stacked;return i||void 0===i&&void 0!==e.stack}function f(t,e,i){const n=t[e]||(t[e]={});return n[i]||(n[i]={})}function p(t,e,i){for(const n of e.getMatchingVisibleMetas(\"bar\").reverse()){const e=t[n.index];if(i&&e>0||!i&&e<0)return n.index}return null}function b(t,e){const{chart:i,_cachedMeta:n}=t,o=i._stacks||(i._stacks={}),{iScale:s,vScale:a,index:r}=n,l=s.axis,c=a.axis,h=function(t,e,i){return`${t.id}.${e.id}.${i.stack||i.type}`}(s,a,n),d=e.length;let u;for(let g=0;g<d;++g){const t=e[g],{[l]:i,[c]:n}=t;u=(t._stacks||(t._stacks={}))[c]=f(o,h,i),u[r]=n,u._top=p(u,a,!0),u._bottom=p(u,a,!1)}}function m(t,e){const i=t.scales;return Object.keys(i).filter((t=>i[t].axis===e)).shift()}function x(t,e){e=e||t._parsed;for(const i of e){const e=i._stacks;if(!e||void 0===e[t.vScale.id]||void 0===e[t.vScale.id][t.index])return;delete e[t.vScale.id][t.index]}}const _=t=>\"reset\"===t||\"none\"===t,y=(t,e)=>e?t:Object.assign({},t);class v{constructor(t,e){this.chart=t,this._ctx=t.ctx,this.index=e,this._cachedDataOpts={},this._cachedMeta=this.getMeta(),this._type=this._cachedMeta.type,this.options=void 0,this._parsing=!1,this._data=void 0,this._objectData=void 0,this._sharedOptions=void 0,this._drawStart=void 0,this._drawCount=void 0,this.enableOptionSharing=!1,this.$context=void 0,this.initialize()}initialize(){const t=this,e=t._cachedMeta;t.configure(),t.linkScales(),e._stacked=g(e.vScale,e),t.addElements()}updateIndex(t){this.index=t}linkScales(){const t=this,e=t.chart,i=t._cachedMeta,o=t.getDataset(),s=(t,e,i,n)=>\"x\"===t?e:\"r\"===t?n:i,a=i.xAxisID=Object(n.fc)(o.xAxisID,m(e,\"x\")),r=i.yAxisID=Object(n.fc)(o.yAxisID,m(e,\"y\")),l=i.rAxisID=Object(n.fc)(o.rAxisID,m(e,\"r\")),c=i.indexAxis,h=i.iAxisID=s(c,a,r,l),d=i.vAxisID=s(c,r,a,l);i.xScale=t.getScaleForId(a),i.yScale=t.getScaleForId(r),i.rScale=t.getScaleForId(l),i.iScale=t.getScaleForId(h),i.vScale=t.getScaleForId(d)}getDataset(){return this.chart.data.datasets[this.index]}getMeta(){return this.chart.getDatasetMeta(this.index)}getScaleForId(t){return this.chart.scales[t]}_getOtherScale(t){const e=this._cachedMeta;return t===e.iScale?e.vScale:e.iScale}reset(){this._update(\"reset\")}_destroy(){const t=this._cachedMeta;this._data&&Object(n.ec)(this._data,this),t._stacked&&x(t)}_dataCheck(){const t=this,e=t.getDataset(),i=e.data||(e.data=[]);Object(n.Sb)(i)?t._data=function(t){const e=Object.keys(t),i=new Array(e.length);let n,o,s;for(n=0,o=e.length;n<o;++n)s=e[n],i[n]={x:s,y:t[s]};return i}(i):t._data!==i&&(t._data&&(Object(n.ec)(t._data,t),x(t._cachedMeta)),i&&Object.isExtensible(i)&&Object(n.Vb)(i,t),t._data=i)}addElements(){const t=this,e=t._cachedMeta;t._dataCheck(),t.datasetElementType&&(e.dataset=new t.datasetElementType)}buildOrUpdateElements(t){const e=this,i=e._cachedMeta,n=e.getDataset();let o=!1;e._dataCheck(),i._stacked=g(i.vScale,i),i.stack!==n.stack&&(o=!0,x(i),i.stack=n.stack),e._resyncElements(t),o&&b(e,i._parsed)}configure(){const t=this,e=t.chart.config,i=e.datasetScopeKeys(t._type),n=e.getOptionScopes(t.getDataset(),i,!0);t.options=e.createResolver(n,t.getContext()),t._parsing=t.options.parsing}parse(t,e){const i=this,{_cachedMeta:o,_data:s}=i,{iScale:a,_stacked:r}=o,l=a.axis;let c,h,d,u=0===t&&e===s.length||o._sorted,g=t>0&&o._parsed[t-1];if(!1===i._parsing)o._parsed=s,o._sorted=!0,d=s;else{d=Object(n.Lb)(s[t])?i.parseArrayData(o,s,t,e):Object(n.Sb)(s[t])?i.parseObjectData(o,s,t,e):i.parsePrimitiveData(o,s,t,e);const a=()=>null===h[l]||g&&h[l]<g[l];for(c=0;c<e;++c)o._parsed[c+t]=h=d[c],u&&(a()&&(u=!1),g=h);o._sorted=u}r&&b(i,d)}parsePrimitiveData(t,e,i,n){const{iScale:o,vScale:s}=t,a=o.axis,r=s.axis,l=o.getLabels(),c=o===s,h=new Array(n);let d,u,g;for(d=0,u=n;d<u;++d)g=d+i,h[d]={[a]:c||o.parse(l[g],g),[r]:s.parse(e[g],g)};return h}parseArrayData(t,e,i,n){const{xScale:o,yScale:s}=t,a=new Array(n);let r,l,c,h;for(r=0,l=n;r<l;++r)c=r+i,h=e[c],a[r]={x:o.parse(h[0],c),y:s.parse(h[1],c)};return a}parseObjectData(t,e,i,o){const{xScale:s,yScale:a}=t,{xAxisKey:r=\"x\",yAxisKey:l=\"y\"}=this._parsing,c=new Array(o);let h,d,u,g;for(h=0,d=o;h<d;++h)u=h+i,g=e[u],c[h]={x:s.parse(Object(n.Pb)(g,r),u),y:a.parse(Object(n.Pb)(g,l),u)};return c}getParsed(t){return this._cachedMeta._parsed[t]}getDataElement(t){return this._cachedMeta.data[t]}applyStack(t,e,i){const n=this.chart,o=this._cachedMeta,s=e[t.axis];return u({keys:d(n,!0),values:e._stacks[t.axis]},s,o.index,{mode:i})}updateRangeFromParsed(t,e,i,n){const o=i[e.axis];let s=null===o?NaN:o;const a=n&&i._stacks[e.axis];n&&a&&(n.values=a,t.min=Math.min(t.min,s),t.max=Math.max(t.max,s),s=u(n,o,this._cachedMeta.index,{all:!0})),t.min=Math.min(t.min,s),t.max=Math.max(t.max,s)}getMinMax(t,e){const i=this,o=i._cachedMeta,s=o._parsed,a=o._sorted&&t===o.iScale,r=s.length,l=i._getOtherScale(t),c=e&&o._stacked&&{keys:d(i.chart,!0),values:null},h={min:Number.POSITIVE_INFINITY,max:Number.NEGATIVE_INFINITY},{min:u,max:g}=function(t){const{min:e,max:i,minDefined:n,maxDefined:o}=t.getUserBounds();return{min:n?e:Number.NEGATIVE_INFINITY,max:o?i:Number.POSITIVE_INFINITY}}(l);let f,p,b,m;function x(){return b=s[f],p=b[t.axis],m=b[l.axis],!Object(n.Qb)(p)||u>m||g<m}for(f=0;f<r&&(x()||(i.updateRangeFromParsed(h,t,b,c),!a));++f);if(a)for(f=r-1;f>=0;--f)if(!x()){i.updateRangeFromParsed(h,t,b,c);break}return h}getAllParsedValues(t){const e=this._cachedMeta._parsed,i=[];let o,s,a;for(o=0,s=e.length;o<s;++o)a=e[o][t.axis],Object(n.Qb)(a)&&i.push(a);return i}getMaxOverflow(){return!1}getLabelAndValue(t){const e=this._cachedMeta,i=e.iScale,n=e.vScale,o=this.getParsed(t);return{label:i?\"\"+i.getLabelForValue(o[i.axis]):\"\",value:n?\"\"+n.getLabelForValue(o[n.axis]):\"\"}}_update(t){const e=this,i=e._cachedMeta;e.configure(),e._cachedDataOpts={},e.update(t||\"default\"),i._clip=function(t){let e,i,o,s;return Object(n.Sb)(t)?(e=t.top,i=t.right,o=t.bottom,s=t.left):e=i=o=s=t,{top:e,right:i,bottom:o,left:s}}(Object(n.fc)(e.options.clip,function(t,e,i){if(!1===i)return!1;const n=h(t,i),o=h(e,i);return{top:o.end,right:n.end,bottom:o.start,left:n.start}}(i.xScale,i.yScale,e.getMaxOverflow())))}update(t){}draw(){const t=this,e=t._ctx,i=t.chart,n=t._cachedMeta,o=n.data||[],s=i.chartArea,a=[],r=t._drawStart||0,l=t._drawCount||o.length-r;let c;for(n.dataset&&n.dataset.draw(e,s,r,l),c=r;c<r+l;++c){const t=o[c];t.active?a.push(t):t.draw(e,s)}for(c=0;c<a.length;++c)a[c].draw(e,s)}getStyle(t,e){const i=e?\"active\":\"default\";return void 0===t&&this._cachedMeta.dataset?this.resolveDatasetElementOptions(i):this.resolveDataElementOptions(t||0,i)}getContext(t,e,i){const n=this,o=n.getDataset();let s;if(t>=0&&t<n._cachedMeta.data.length){const e=n._cachedMeta.data[t];s=e.$context||(e.$context=function(t,e,i){return Object.assign(Object.create(t),{active:!1,dataIndex:e,parsed:void 0,raw:void 0,element:i,index:e,mode:\"default\",type:\"data\"})}(n.getContext(),t,e)),s.parsed=n.getParsed(t),s.raw=o.data[t]}else s=n.$context||(n.$context=function(t,e){return Object.assign(Object.create(t),{active:!1,dataset:void 0,datasetIndex:e,index:e,mode:\"default\",type:\"dataset\"})}(n.chart.getContext(),n.index)),s.dataset=o;return s.active=!!e,s.mode=i,s}resolveDatasetElementOptions(t){return this._resolveElementOptions(this.datasetElementType.id,t)}resolveDataElementOptions(t,e){return this._resolveElementOptions(this.dataElementType.id,e,t)}_resolveElementOptions(t,e=\"default\",i){const o=this,s=\"active\"===e,a=o._cachedDataOpts,r=t+\"-\"+e,l=a[r],c=o.enableOptionSharing&&Object(n.Rb)(i);if(l)return y(l,c);const h=o.chart.config,d=h.datasetElementScopeKeys(o._type,t),u=s?[`${t}Hover`,\"hover\",t,\"\"]:[t,\"\"],g=h.getOptionScopes(o.getDataset(),d),f=Object.keys(n.Nb.elements[t]),p=h.resolveNamedOptions(g,f,(()=>o.getContext(i,s)),u);return p.$shared&&(p.$shared=c,a[r]=Object.freeze(y(p,c))),p}_resolveAnimations(t,e,i){const n=this,o=n.chart,s=n._cachedDataOpts,a=`animation-${e}`,r=s[a];if(r)return r;let l;if(!1!==o.options.animation){const o=n.chart.config,s=o.datasetAnimationScopeKeys(n._type,e),a=o.getOptionScopes(n.getDataset(),s);l=o.createResolver(a,n.getContext(t,i,e))}const h=new c(o,l&&l.animations);return l&&l._cacheable&&(s[a]=Object.freeze(h)),h}getSharedOptions(t){if(t.$shared)return this._sharedOptions||(this._sharedOptions=Object.assign({},t))}includeOptions(t,e){return!e||_(t)||this.chart._animationsDisabled}updateElement(t,e,i,n){_(n)?Object.assign(t,i):this._resolveAnimations(e,n).update(t,i)}updateSharedOptions(t,e,i){t&&!_(e)&&this._resolveAnimations(void 0,e).update(t,i)}_setStyle(t,e,i,n){t.active=n;const o=this.getStyle(e,n);this._resolveAnimations(e,i,n).update(t,{options:!n&&this.getSharedOptions(o)||o})}removeHoverStyle(t,e,i){this._setStyle(t,i,\"active\",!1)}setHoverStyle(t,e,i){this._setStyle(t,i,\"active\",!0)}_removeDatasetHoverStyle(){const t=this._cachedMeta.dataset;t&&this._setStyle(t,void 0,\"active\",!1)}_setDatasetHoverStyle(){const t=this._cachedMeta.dataset;t&&this._setStyle(t,void 0,\"active\",!0)}_resyncElements(t){const e=this,i=e._cachedMeta.data.length,n=e._data.length;n>i?e._insertElements(i,n-i,t):n<i&&e._removeElements(n,i-n);const o=Math.min(n,i);o&&e.parse(0,o)}_insertElements(t,e,i=!0){const n=this,o=n._cachedMeta,s=o.data,a=t+e;let r;const l=t=>{for(t.length+=e,r=t.length-1;r>=a;r--)t[r]=t[r-e]};for(l(s),r=t;r<a;++r)s[r]=new n.dataElementType;n._parsing&&l(o._parsed),n.parse(t,e),i&&n.updateElements(s,t,e,\"reset\")}updateElements(t,e,i,n){}_removeElements(t,e){const i=this._cachedMeta;if(this._parsing){const n=i._parsed.splice(t,e);i._stacked&&x(i,n)}i.data.splice(t,e)}_onDataPush(){const t=arguments.length;this._insertElements(this.getDataset().data.length-t,t)}_onDataPop(){this._removeElements(this._cachedMeta.data.length-1,1)}_onDataShift(){this._removeElements(0,1)}_onDataSplice(t,e){this._removeElements(t,e),this._insertElements(t,arguments.length-2)}_onDataUnshift(){this._insertElements(0,arguments.length)}}function O(t){const e=function(t){if(!t._cache.$bar){const e=t.getMatchingVisibleMetas(\"bar\");let i=[];for(let n=0,o=e.length;n<o;n++)i=i.concat(e[n].controller.getAllParsedValues(t));t._cache.$bar=Object(n.B)(i.sort(((t,e)=>t-e)))}return t._cache.$bar}(t);let i,o,s,a,r=t._length;const l=()=>{32767!==s&&-32768!==s&&(Object(n.Rb)(a)&&(r=Math.min(r,Math.abs(s-a)||r)),a=s)};for(i=0,o=e.length;i<o;++i)s=t.getPixelForValue(e[i]),l();for(a=void 0,i=0,o=t.ticks.length;i<o;++i)s=t.getPixelForTick(i),l();return r}function j(t,e,i,o){return Object(n.Lb)(t)?function(t,e,i,n){const o=i.parse(t[0],n),s=i.parse(t[1],n),a=Math.min(o,s),r=Math.max(o,s);let l=a,c=r;Math.abs(a)>Math.abs(r)&&(l=r,c=a),e[i.axis]=c,e._custom={barStart:l,barEnd:c,start:o,end:s,min:a,max:r}}(t,e,i,o):e[i.axis]=i.parse(t,o),e}function w(t,e,i,n){const o=t.iScale,s=t.vScale,a=o.getLabels(),r=o===s,l=[];let c,h,d,u;for(c=i,h=i+n;c<h;++c)u=e[c],d={},d[o.axis]=r||o.parse(a[c],c),l.push(j(u,d,s,c));return l}function M(t){return t&&void 0!==t.barStart&&void 0!==t.barEnd}v.defaults={},v.prototype.datasetElementType=null,v.prototype.dataElementType=null;class k extends v{parsePrimitiveData(t,e,i,n){return w(t,e,i,n)}parseArrayData(t,e,i,n){return w(t,e,i,n)}parseObjectData(t,e,i,o){const{iScale:s,vScale:a}=t,{xAxisKey:r=\"x\",yAxisKey:l=\"y\"}=this._parsing,c=\"x\"===s.axis?r:l,h=\"x\"===a.axis?r:l,d=[];let u,g,f,p;for(u=i,g=i+o;u<g;++u)p=e[u],f={},f[s.axis]=s.parse(Object(n.Pb)(p,c),u),d.push(j(Object(n.Pb)(p,h),f,a,u));return d}updateRangeFromParsed(t,e,i,n){super.updateRangeFromParsed(t,e,i,n);const o=i._custom;o&&e===this._cachedMeta.vScale&&(t.min=Math.min(t.min,o.min),t.max=Math.max(t.max,o.max))}getLabelAndValue(t){const e=this._cachedMeta,{iScale:i,vScale:n}=e,o=this.getParsed(t),s=o._custom,a=M(s)?\"[\"+s.start+\", \"+s.end+\"]\":\"\"+n.getLabelForValue(o[n.axis]);return{label:\"\"+i.getLabelForValue(o[i.axis]),value:a}}initialize(){const t=this;t.enableOptionSharing=!0,super.initialize();t._cachedMeta.stack=t.getDataset().stack}update(t){const e=this._cachedMeta;this.updateElements(e.data,0,e.data.length,t)}updateElements(t,e,i,o){const s=this,a=\"reset\"===o,r=s._cachedMeta.vScale,l=r.getBasePixel(),c=r.isHorizontal(),h=s._getRuler(),d=s.resolveDataElementOptions(e,o),u=s.getSharedOptions(d),g=s.includeOptions(o,u);s.updateSharedOptions(u,o,d);for(let f=e;f<e+i;f++){const e=s.getParsed(f),i=a||Object(n.Tb)(e[r.axis])?{base:l,head:l}:s._calculateBarValuePixels(f),d=s._calculateBarIndexPixels(f,h),p=(e._stacks||{})[r.axis],b={horizontal:c,base:i.base,enableBorderRadius:!p||M(e._custom)||s.index===p._top||s.index===p._bottom,x:c?i.head:d.center,y:c?d.center:i.head,height:c?d.size:void 0,width:c?void 0:d.size};g&&(b.options=u||s.resolveDataElementOptions(f,o)),s.updateElement(t[f],f,b,o)}}_getStacks(t,e){const i=this._cachedMeta.iScale,o=i.getMatchingVisibleMetas(this._type),s=i.options.stacked,a=o.length,r=[];let l,c;for(l=0;l<a;++l){if(c=o[l],\"undefined\"!==typeof e){const t=c.controller.getParsed(e)[c.controller._cachedMeta.vScale.axis];if(Object(n.Tb)(t)||isNaN(t))continue}if((!1===s||-1===r.indexOf(c.stack)||void 0===s&&void 0===c.stack)&&r.push(c.stack),c.index===t)break}return r.length||r.push(void 0),r}_getStackCount(t){return this._getStacks(void 0,t).length}_getStackIndex(t,e,i){const n=this._getStacks(t,i),o=void 0!==e?n.indexOf(e):-1;return-1===o?n.length-1:o}_getRuler(){const t=this,e=t.options,i=t._cachedMeta,n=i.iScale,o=[];let s,a;for(s=0,a=i.data.length;s<a;++s)o.push(n.getPixelForValue(t.getParsed(s)[n.axis],s));const r=e.barThickness;return{min:r||O(n),pixels:o,start:n._startPixel,end:n._endPixel,stackCount:t._getStackCount(),scale:n,grouped:e.grouped,ratio:r?1:e.categoryPercentage*e.barPercentage}}_calculateBarValuePixels(t){const e=this,{vScale:i,_stacked:o}=e._cachedMeta,{base:s,minBarLength:a}=e.options,r=e.getParsed(t),l=r._custom,c=M(l);let h,d,u=r[i.axis],g=0,f=o?e.applyStack(i,r,o):u;f!==u&&(g=f-u,f=u),c&&(u=l.barStart,f=l.barEnd-l.barStart,0!==u&&Object(n.cc)(u)!==Object(n.cc)(l.barEnd)&&(g=0),g+=u);const p=Object(n.Tb)(s)||c?g:s;let b=i.getPixelForValue(p);h=this.chart.getDataVisibility(t)?i.getPixelForValue(g+f):b,d=h-b,void 0!==a&&Math.abs(d)<a&&(d=d<0?-a:a,0===u&&(b-=d/2),h=b+d);const m=s||0;if(b===i.getPixelForValue(m)){const t=i.getLineWidthForValue(m)/2;d>0?(b+=t,d-=t):d<0&&(b-=t,d+=t)}return{size:d,base:b,head:h,center:h+d/2}}_calculateBarIndexPixels(t,e){const i=this,o=e.scale,s=i.options,a=s.skipNull,r=Object(n.fc)(s.maxBarThickness,1/0);let l,c;if(e.grouped){const o=a?i._getStackCount(t):e.stackCount,h=\"flex\"===s.barThickness?function(t,e,i,n){const o=e.pixels,s=o[t];let a=t>0?o[t-1]:null,r=t<o.length-1?o[t+1]:null;const l=i.categoryPercentage;null===a&&(a=s-(null===r?e.end-e.start:r-s)),null===r&&(r=s+s-a);const c=s-(s-Math.min(a,r))/2*l;return{chunk:Math.abs(r-a)/2*l/n,ratio:i.barPercentage,start:c}}(t,e,s,o):function(t,e,i,o){const s=i.barThickness;let a,r;return Object(n.Tb)(s)?(a=e.min*i.categoryPercentage,r=i.barPercentage):(a=s*o,r=1),{chunk:a/o,ratio:r,start:e.pixels[t]-a/2}}(t,e,s,o),d=i._getStackIndex(i.index,i._cachedMeta.stack,a?t:void 0);l=h.start+h.chunk*d+h.chunk/2,c=Math.min(r,h.chunk*h.ratio)}else l=o.getPixelForValue(i.getParsed(t)[o.axis],t),c=Math.min(r,e.min*e.ratio);return{base:l-c/2,head:l+c/2,center:l,size:c}}draw(){const t=this,e=t.chart,i=t._cachedMeta,o=i.vScale,s=i.data,a=s.length;let r=0;for(Object(n.Ub)(e.ctx,e.chartArea);r<a;++r)null!==t.getParsed(r)[o.axis]&&s[r].draw(t._ctx);Object(n.Wb)(e.ctx)}}k.id=\"bar\",k.defaults={datasetElementType:!1,dataElementType:\"bar\",categoryPercentage:.8,barPercentage:.9,grouped:!0,animations:{numbers:{type:\"number\",properties:[\"x\",\"y\",\"base\",\"width\",\"height\"]}}},k.overrides={interaction:{mode:\"index\"},scales:{_index_:{type:\"category\",offset:!0,grid:{offset:!0}},_value_:{type:\"linear\",beginAtZero:!0}}};class S extends v{initialize(){this.enableOptionSharing=!0,super.initialize()}parseObjectData(t,e,i,o){const{xScale:s,yScale:a}=t,{xAxisKey:r=\"x\",yAxisKey:l=\"y\"}=this._parsing,c=[];let h,d,u;for(h=i,d=i+o;h<d;++h)u=e[h],c.push({x:s.parse(Object(n.Pb)(u,r),h),y:a.parse(Object(n.Pb)(u,l),h),_custom:u&&u.r&&+u.r});return c}getMaxOverflow(){const{data:t,_parsed:e}=this._cachedMeta;let i=0;for(let n=t.length-1;n>=0;--n)i=Math.max(i,t[n].size()/2,e[n]._custom);return i>0&&i}getLabelAndValue(t){const e=this._cachedMeta,{xScale:i,yScale:n}=e,o=this.getParsed(t),s=i.getLabelForValue(o.x),a=n.getLabelForValue(o.y),r=o._custom;return{label:e.label,value:\"(\"+s+\", \"+a+(r?\", \"+r:\"\")+\")\"}}update(t){const e=this._cachedMeta.data;this.updateElements(e,0,e.length,t)}updateElements(t,e,i,n){const o=this,s=\"reset\"===n,{xScale:a,yScale:r}=o._cachedMeta,l=o.resolveDataElementOptions(e,n),c=o.getSharedOptions(l),h=o.includeOptions(n,c);for(let d=e;d<e+i;d++){const e=t[d],i=!s&&o.getParsed(d),l=s?a.getPixelForDecimal(.5):a.getPixelForValue(i.x),c=s?r.getBasePixel():r.getPixelForValue(i.y),u={x:l,y:c,skip:isNaN(l)||isNaN(c)};h&&(u.options=o.resolveDataElementOptions(d,n),s&&(u.options.radius=0)),o.updateElement(e,d,u,n)}o.updateSharedOptions(c,n,l)}resolveDataElementOptions(t,e){const i=this.getParsed(t);let o=super.resolveDataElementOptions(t,e);o.$shared&&(o=Object.assign({},o,{$shared:!1}));const s=o.radius;return\"active\"!==e&&(o.radius=0),o.radius+=Object(n.fc)(i&&i._custom,s),o}}S.id=\"bubble\",S.defaults={datasetElementType:!1,dataElementType:\"point\",animations:{numbers:{type:\"number\",properties:[\"x\",\"y\",\"borderWidth\",\"radius\"]}}},S.overrides={scales:{x:{type:\"linear\"},y:{type:\"linear\"}},plugins:{tooltip:{callbacks:{title:()=>\"\"}}}};class D extends v{constructor(t,e){super(t,e),this.enableOptionSharing=!0,this.innerRadius=void 0,this.outerRadius=void 0,this.offsetX=void 0,this.offsetY=void 0}linkScales(){}parse(t,e){const i=this.getDataset().data,n=this._cachedMeta;let o,s;for(o=t,s=t+e;o<s;++o)n._parsed[o]=+i[o]}_getRotation(){return Object(n.dc)(this.options.rotation-90)}_getCircumference(){return Object(n.dc)(this.options.circumference)}_getRotationExtents(){let t=n.u,e=-n.u;const i=this;for(let n=0;n<i.chart.data.datasets.length;++n)if(i.chart.isDatasetVisible(n)){const o=i.chart.getDatasetMeta(n).controller,s=o._getRotation(),a=o._getCircumference();t=Math.min(t,s),e=Math.max(e,s+a)}return{rotation:t,circumference:e-t}}update(t){const e=this,i=e.chart,{chartArea:o}=i,s=e._cachedMeta,a=s.data,r=e.getMaxBorderWidth()+e.getMaxOffset(a),l=Math.max((Math.min(o.width,o.height)-r)/2,0),c=Math.min(Object(n.Xb)(e.options.cutout,l),1),h=e._getRingWeight(e.index),{circumference:d,rotation:u}=e._getRotationExtents(),{ratioX:g,ratioY:f,offsetX:p,offsetY:b}=function(t,e,i){let o=1,s=1,a=0,r=0;if(e<n.u){const l=t,c=l+e,h=Math.cos(l),d=Math.sin(l),u=Math.cos(c),g=Math.sin(c),f=(t,e,o)=>Object(n.ac)(t,l,c)?1:Math.max(e,e*i,o,o*i),p=(t,e,o)=>Object(n.ac)(t,l,c)?-1:Math.min(e,e*i,o,o*i),b=f(0,h,u),m=f(n.i,d,g),x=p(n.q,h,u),_=p(n.q+n.i,d,g);o=(b-x)/2,s=(m-_)/2,a=-(b+x)/2,r=-(m+_)/2}return{ratioX:o,ratioY:s,offsetX:a,offsetY:r}}(u,d,c),m=(o.width-r)/g,x=(o.height-r)/f,_=Math.max(Math.min(m,x)/2,0),y=Object(n.Yb)(e.options.radius,_),v=(y-Math.max(y*c,0))/e._getVisibleDatasetWeightTotal();e.offsetX=p*y,e.offsetY=b*y,s.total=e.calculateTotal(),e.outerRadius=y-v*e._getRingWeightOffset(e.index),e.innerRadius=Math.max(e.outerRadius-v*h,0),e.updateElements(a,0,a.length,t)}_circumference(t,e){const i=this,o=i.options,s=i._cachedMeta,a=i._getCircumference();return e&&o.animation.animateRotate||!this.chart.getDataVisibility(t)||null===s._parsed[t]?0:i.calculateCircumference(s._parsed[t]*a/n.u)}updateElements(t,e,i,n){const o=this,s=\"reset\"===n,a=o.chart,r=a.chartArea,l=a.options.animation,c=(r.left+r.right)/2,h=(r.top+r.bottom)/2,d=s&&l.animateScale,u=d?0:o.innerRadius,g=d?0:o.outerRadius,f=o.resolveDataElementOptions(e,n),p=o.getSharedOptions(f),b=o.includeOptions(n,p);let m,x=o._getRotation();for(m=0;m<e;++m)x+=o._circumference(m,s);for(m=e;m<e+i;++m){const e=o._circumference(m,s),i=t[m],a={x:c+o.offsetX,y:h+o.offsetY,startAngle:x,endAngle:x+e,circumference:e,outerRadius:g,innerRadius:u};b&&(a.options=p||o.resolveDataElementOptions(m,n)),x+=e,o.updateElement(i,m,a,n)}o.updateSharedOptions(p,n,f)}calculateTotal(){const t=this._cachedMeta,e=t.data;let i,n=0;for(i=0;i<e.length;i++){const e=t._parsed[i];null!==e&&!isNaN(e)&&this.chart.getDataVisibility(i)&&(n+=Math.abs(e))}return n}calculateCircumference(t){const e=this._cachedMeta.total;return e>0&&!isNaN(t)?n.u*(Math.abs(t)/e):0}getLabelAndValue(t){const e=this._cachedMeta,i=this.chart,o=i.data.labels||[],s=Object(n.Zb)(e._parsed[t],i.options.locale);return{label:o[t]||\"\",value:s}}getMaxBorderWidth(t){const e=this;let i=0;const n=e.chart;let o,s,a,r,l;if(!t)for(o=0,s=n.data.datasets.length;o<s;++o)if(n.isDatasetVisible(o)){a=n.getDatasetMeta(o),t=a.data,r=a.controller,r!==e&&r.configure();break}if(!t)return 0;for(o=0,s=t.length;o<s;++o)l=r.resolveDataElementOptions(o),\"inner\"!==l.borderAlign&&(i=Math.max(i,l.borderWidth||0,l.hoverBorderWidth||0));return i}getMaxOffset(t){let e=0;for(let i=0,n=t.length;i<n;++i){const t=this.resolveDataElementOptions(i);e=Math.max(e,t.offset||0,t.hoverOffset||0)}return e}_getRingWeightOffset(t){let e=0;for(let i=0;i<t;++i)this.chart.isDatasetVisible(i)&&(e+=this._getRingWeight(i));return e}_getRingWeight(t){return Math.max(Object(n.fc)(this.chart.data.datasets[t].weight,1),0)}_getVisibleDatasetWeightTotal(){return this._getRingWeightOffset(this.chart.data.datasets.length)||1}}D.id=\"doughnut\",D.defaults={datasetElementType:!1,dataElementType:\"arc\",animation:{animateRotate:!0,animateScale:!1},animations:{numbers:{type:\"number\",properties:[\"circumference\",\"endAngle\",\"innerRadius\",\"outerRadius\",\"startAngle\",\"x\",\"y\",\"offset\",\"borderWidth\"]}},cutout:\"50%\",rotation:0,circumference:360,radius:\"100%\",indexAxis:\"r\"},D.overrides={aspectRatio:1,plugins:{legend:{labels:{generateLabels(t){const e=t.data;return e.labels.length&&e.datasets.length?e.labels.map(((e,i)=>{const n=t.getDatasetMeta(0).controller.getStyle(i);return{text:e,fillStyle:n.backgroundColor,strokeStyle:n.borderColor,lineWidth:n.borderWidth,hidden:!t.getDataVisibility(i),index:i}})):[]}},onClick(t,e,i){i.chart.toggleDataVisibility(e.index),i.chart.update()}},tooltip:{callbacks:{title:()=>\"\",label(t){let e=t.label;const i=\": \"+t.formattedValue;return Object(n.Lb)(e)?(e=e.slice(),e[0]+=i):e+=i,e}}}}};class P extends v{initialize(){this.enableOptionSharing=!0,super.initialize()}update(t){const e=this,i=e._cachedMeta,{dataset:o,data:s=[],_dataset:a}=i,r=e.chart._animationsDisabled;let{start:l,count:c}=function(t,e,i){const o=e.length;let s=0,a=o;if(t._sorted){const{iScale:r,_parsed:l}=t,c=r.axis,{min:h,max:d,minDefined:u,maxDefined:g}=r.getUserBounds();u&&(s=Object(n.hc)(Math.min(Object(n.ic)(l,r.axis,h).lo,i?o:Object(n.ic)(e,c,r.getPixelForValue(h)).lo),0,o-1)),a=g?Object(n.hc)(Math.max(Object(n.ic)(l,r.axis,d).hi+1,i?0:Object(n.ic)(e,c,r.getPixelForValue(d)).hi+1),s,o)-s:o-s}return{start:s,count:a}}(i,s,r);e._drawStart=l,e._drawCount=c,function(t){const{xScale:e,yScale:i,_scaleRanges:n}=t,o={xmin:e.min,xmax:e.max,ymin:i.min,ymax:i.max};if(!n)return t._scaleRanges=o,!0;const s=n.xmin!==e.min||n.xmax!==e.max||n.ymin!==i.min||n.ymax!==i.max;return Object.assign(n,o),s}(i)&&(l=0,c=s.length),o._decimated=!!a._decimated,o.points=s;const h=e.resolveDatasetElementOptions(t);e.options.showLine||(h.borderWidth=0),h.segment=e.options.segment,e.updateElement(o,void 0,{animated:!r,options:h},t),e.updateElements(s,l,c,t)}updateElements(t,e,i,o){const s=this,a=\"reset\"===o,{xScale:r,yScale:l,_stacked:c}=s._cachedMeta,h=s.resolveDataElementOptions(e,o),d=s.getSharedOptions(h),u=s.includeOptions(o,d),g=s.options.spanGaps,f=Object(n.gc)(g)?g:Number.POSITIVE_INFINITY,p=s.chart._animationsDisabled||a||\"none\"===o;let b=e>0&&s.getParsed(e-1);for(let m=e;m<e+i;++m){const e=t[m],i=s.getParsed(m),h=p?e:{},g=Object(n.Tb)(i.y),x=h.x=r.getPixelForValue(i.x,m),_=h.y=a||g?l.getBasePixel():l.getPixelForValue(c?s.applyStack(l,i,c):i.y,m);h.skip=isNaN(x)||isNaN(_)||g,h.stop=m>0&&i.x-b.x>f,h.parsed=i,u&&(h.options=d||s.resolveDataElementOptions(m,o)),p||s.updateElement(e,m,h,o),b=i}s.updateSharedOptions(d,o,h)}getMaxOverflow(){const t=this,e=t._cachedMeta,i=e.dataset,n=i.options&&i.options.borderWidth||0,o=e.data||[];if(!o.length)return n;const s=o[0].size(t.resolveDataElementOptions(0)),a=o[o.length-1].size(t.resolveDataElementOptions(o.length-1));return Math.max(n,s,a)/2}draw(){this._cachedMeta.dataset.updateControlPoints(this.chart.chartArea),super.draw()}}P.id=\"line\",P.defaults={datasetElementType:\"line\",dataElementType:\"point\",showLine:!0,spanGaps:!1},P.overrides={scales:{_index_:{type:\"category\"},_value_:{type:\"linear\"}}};class C extends v{constructor(t,e){super(t,e),this.innerRadius=void 0,this.outerRadius=void 0}update(t){const e=this._cachedMeta.data;this._updateRadius(),this.updateElements(e,0,e.length,t)}_updateRadius(){const t=this,e=t.chart,i=e.chartArea,n=e.options,o=Math.min(i.right-i.left,i.bottom-i.top),s=Math.max(o/2,0),a=(s-Math.max(n.cutoutPercentage?s/100*n.cutoutPercentage:1,0))/e.getVisibleDatasetCount();t.outerRadius=s-a*t.index,t.innerRadius=t.outerRadius-a}updateElements(t,e,i,o){const s=this,a=\"reset\"===o,r=s.chart,l=s.getDataset(),c=r.options.animation,h=s._cachedMeta.rScale,d=h.xCenter,u=h.yCenter,g=h.getIndexAngle(0)-.5*n.q;let f,p=g;const b=360/s.countVisibleElements();for(f=0;f<e;++f)p+=s._computeAngle(f,o,b);for(f=e;f<e+i;f++){const e=t[f];let i=p,n=p+s._computeAngle(f,o,b),m=r.getDataVisibility(f)?h.getDistanceFromCenterForValue(l.data[f]):0;p=n,a&&(c.animateScale&&(m=0),c.animateRotate&&(i=n=g));const x={x:d,y:u,innerRadius:0,outerRadius:m,startAngle:i,endAngle:n,options:s.resolveDataElementOptions(f,o)};s.updateElement(e,f,x,o)}}countVisibleElements(){const t=this.getDataset(),e=this._cachedMeta;let i=0;return e.data.forEach(((e,n)=>{!isNaN(t.data[n])&&this.chart.getDataVisibility(n)&&i++})),i}_computeAngle(t,e,i){return this.chart.getDataVisibility(t)?Object(n.dc)(this.resolveDataElementOptions(t,e).angle||i):0}}C.id=\"polarArea\",C.defaults={dataElementType:\"arc\",animation:{animateRotate:!0,animateScale:!0},animations:{numbers:{type:\"number\",properties:[\"x\",\"y\",\"startAngle\",\"endAngle\",\"innerRadius\",\"outerRadius\"]}},indexAxis:\"r\",startAngle:0},C.overrides={aspectRatio:1,plugins:{legend:{labels:{generateLabels(t){const e=t.data;return e.labels.length&&e.datasets.length?e.labels.map(((e,i)=>{const n=t.getDatasetMeta(0).controller.getStyle(i);return{text:e,fillStyle:n.backgroundColor,strokeStyle:n.borderColor,lineWidth:n.borderWidth,hidden:!t.getDataVisibility(i),index:i}})):[]}},onClick(t,e,i){i.chart.toggleDataVisibility(e.index),i.chart.update()}},tooltip:{callbacks:{title:()=>\"\",label:t=>t.chart.data.labels[t.dataIndex]+\": \"+t.formattedValue}}},scales:{r:{type:\"radialLinear\",angleLines:{display:!1},beginAtZero:!0,grid:{circular:!0},pointLabels:{display:!1},startAngle:0}}};class A extends D{}A.id=\"pie\",A.defaults={cutout:0,rotation:0,circumference:360,radius:\"100%\"};class T extends v{getLabelAndValue(t){const e=this._cachedMeta.vScale,i=this.getParsed(t);return{label:e.getLabels()[t],value:\"\"+e.getLabelForValue(i[e.axis])}}update(t){const e=this,i=e._cachedMeta,n=i.dataset,o=i.data||[],s=i.iScale.getLabels();if(n.points=o,\"resize\"!==t){const i=e.resolveDatasetElementOptions(t);e.options.showLine||(i.borderWidth=0);const a={_loop:!0,_fullLoop:s.length===o.length,options:i};e.updateElement(n,void 0,a,t)}e.updateElements(o,0,o.length,t)}updateElements(t,e,i,n){const o=this,s=o.getDataset(),a=o._cachedMeta.rScale,r=\"reset\"===n;for(let l=e;l<e+i;l++){const e=t[l],i=o.resolveDataElementOptions(l,n),c=a.getPointPositionForValue(l,s.data[l]),h=r?a.xCenter:c.x,d=r?a.yCenter:c.y,u={x:h,y:d,angle:c.angle,skip:isNaN(h)||isNaN(d),options:i};o.updateElement(e,l,u,n)}}}T.id=\"radar\",T.defaults={datasetElementType:\"line\",dataElementType:\"point\",indexAxis:\"r\",showLine:!0,elements:{line:{fill:\"start\"}}},T.overrides={aspectRatio:1,scales:{r:{type:\"radialLinear\"}}};class L extends P{}L.id=\"scatter\",L.defaults={showLine:!1,fill:!1},L.overrides={interaction:{mode:\"point\"},plugins:{tooltip:{callbacks:{title:()=>\"\",label:t=>\"(\"+t.label+\", \"+t.formattedValue+\")\"}}},scales:{x:{type:\"linear\"},y:{type:\"linear\"}}};var E=Object.freeze({__proto__:null,BarController:k,BubbleController:S,DoughnutController:D,LineController:P,PolarAreaController:C,PieController:A,RadarController:T,ScatterController:L});function z(){throw new Error(\"This method is not implemented: either no adapter can be found or an incomplete integration was provided.\")}class R{constructor(t){this.options=t||{}}formats(){return z()}parse(t,e){return z()}format(t,e){return z()}add(t,e,i){return z()}diff(t,e,i){return z()}startOf(t,e,i){return z()}endOf(t,e){return z()}}R.override=function(t){Object.assign(R.prototype,t)};var I={_date:R};function F(t,e){return\"native\"in t?{x:t.x,y:t.y}:Object(n.jc)(t,e)}function V(t,e,i,o){const{controller:s,data:a,_sorted:r}=t,l=s._cachedMeta.iScale;if(l&&e===l.axis&&r&&a.length){const t=l._reversePixels?n.c:n.ic;if(!o)return t(a,e,i);if(s._sharedOptions){const n=a[0],o=\"function\"===typeof n.getRange&&n.getRange(e);if(o){const n=t(a,e,i-o),s=t(a,e,i+o);return{lo:n.lo,hi:s.hi}}}}return{lo:0,hi:a.length-1}}function B(t,e,i,n,o){const s=t.getSortedVisibleDatasetMetas(),a=i[e];for(let r=0,l=s.length;r<l;++r){const{index:t,data:i}=s[r],{lo:l,hi:c}=V(s[r],e,a,o);for(let e=l;e<=c;++e){const o=i[e];o.skip||n(o,t,e)}}}function N(t,e,i,o){const s=[];if(!Object(n.b)(e,t.chartArea,t._minPadding))return s;return B(t,i,e,(function(t,i,n){t.inRange(e.x,e.y,o)&&s.push({element:t,datasetIndex:i,index:n})}),!0),s}function W(t,e,i,o,s){const a=function(t){const e=-1!==t.indexOf(\"x\"),i=-1!==t.indexOf(\"y\");return function(t,n){const o=e?Math.abs(t.x-n.x):0,s=i?Math.abs(t.y-n.y):0;return Math.sqrt(Math.pow(o,2)+Math.pow(s,2))}}(i);let r=Number.POSITIVE_INFINITY,l=[];if(!Object(n.b)(e,t.chartArea,t._minPadding))return l;return B(t,i,e,(function(t,i,n){if(o&&!t.inRange(e.x,e.y,s))return;const c=t.getCenterPoint(s),h=a(e,c);h<r?(l=[{element:t,datasetIndex:i,index:n}],r=h):h===r&&l.push({element:t,datasetIndex:i,index:n})})),l}function H(t,e,i,n){const o=F(e,t),s=[],a=i.axis,r=\"x\"===a?\"inXRange\":\"inYRange\";let l=!1;return function(t,e){const i=t.getSortedVisibleDatasetMetas();let n,o,s;for(let a=0,r=i.length;a<r;++a){({index:n,data:o}=i[a]);for(let t=0,i=o.length;t<i;++t)s=o[t],s.skip||e(s,n,t)}}(t,((t,e,i)=>{t[r](o[a],n)&&s.push({element:t,datasetIndex:e,index:i}),t.inRange(o.x,o.y,n)&&(l=!0)})),i.intersect&&!l?[]:s}var $={modes:{index(t,e,i,n){const o=F(e,t),s=i.axis||\"x\",a=i.intersect?N(t,o,s,n):W(t,o,s,!1,n),r=[];return a.length?(t.getSortedVisibleDatasetMetas().forEach((t=>{const e=a[0].index,i=t.data[e];i&&!i.skip&&r.push({element:i,datasetIndex:t.index,index:e})})),r):[]},dataset(t,e,i,n){const o=F(e,t),s=i.axis||\"xy\";let a=i.intersect?N(t,o,s,n):W(t,o,s,!1,n);if(a.length>0){const e=a[0].datasetIndex,i=t.getDatasetMeta(e).data;a=[];for(let t=0;t<i.length;++t)a.push({element:i[t],datasetIndex:e,index:t})}return a},point:(t,e,i,n)=>N(t,F(e,t),i.axis||\"xy\",n),nearest:(t,e,i,n)=>W(t,F(e,t),i.axis||\"xy\",i.intersect,n),x:(t,e,i,n)=>(i.axis=\"x\",H(t,e,i,n)),y:(t,e,i,n)=>(i.axis=\"y\",H(t,e,i,n))}};const U=[\"left\",\"top\",\"right\",\"bottom\"];function Y(t,e){return t.filter((t=>t.pos===e))}function X(t,e){return t.filter((t=>-1===U.indexOf(t.pos)&&t.box.axis===e))}function K(t,e){return t.sort(((t,i)=>{const n=e?i:t,o=e?t:i;return n.weight===o.weight?n.index-o.index:n.weight-o.weight}))}function Q(t,e,i,n){return Math.max(t[i],e[i])+Math.max(t[n],e[n])}function q(t,e){t.top=Math.max(t.top,e.top),t.left=Math.max(t.left,e.left),t.bottom=Math.max(t.bottom,e.bottom),t.right=Math.max(t.right,e.right)}function G(t,e,i){const o=i.box,s=t.maxPadding;Object(n.Sb)(i.pos)||(i.size&&(t[i.pos]-=i.size),i.size=i.horizontal?o.height:o.width,t[i.pos]+=i.size),o.getPadding&&q(s,o.getPadding());const a=Math.max(0,e.outerWidth-Q(s,t,\"left\",\"right\")),r=Math.max(0,e.outerHeight-Q(s,t,\"top\",\"bottom\")),l=a!==t.w,c=r!==t.h;return t.w=a,t.h=r,i.horizontal?{same:l,other:c}:{same:c,other:l}}function J(t,e){const i=e.maxPadding;function n(t){const n={left:0,top:0,right:0,bottom:0};return t.forEach((t=>{n[t]=Math.max(e[t],i[t])})),n}return n(t?[\"left\",\"right\"]:[\"top\",\"bottom\"])}function Z(t,e,i){const n=[];let o,s,a,r,l,c;for(o=0,s=t.length,l=0;o<s;++o){a=t[o],r=a.box,r.update(a.width||e.w,a.height||e.h,J(a.horizontal,e));const{same:s,other:h}=G(e,i,a);l|=s&&n.length,c=c||h,r.fullSize||n.push(a)}return l&&Z(n,e,i)||c}function tt(t,e,i){const n=i.padding;let o,s,a,r,l=e.x,c=e.y;for(o=0,s=t.length;o<s;++o)a=t[o],r=a.box,a.horizontal?(r.left=r.fullSize?n.left:e.left,r.right=r.fullSize?i.outerWidth-n.right:e.left+e.w,r.top=c,r.bottom=c+r.height,r.width=r.right-r.left,c=r.bottom):(r.left=l,r.right=l+r.width,r.top=r.fullSize?n.top:e.top,r.bottom=r.fullSize?i.outerHeight-n.right:e.top+e.h,r.height=r.bottom-r.top,l=r.right);e.x=l,e.y=c}n.Nb.set(\"layout\",{padding:{top:0,right:0,bottom:0,left:0}});var et={addBox(t,e){t.boxes||(t.boxes=[]),e.fullSize=e.fullSize||!1,e.position=e.position||\"top\",e.weight=e.weight||0,e._layers=e._layers||function(){return[{z:0,draw(t){e.draw(t)}}]},t.boxes.push(e)},removeBox(t,e){const i=t.boxes?t.boxes.indexOf(e):-1;-1!==i&&t.boxes.splice(i,1)},configure(t,e,i){e.fullSize=i.fullSize,e.position=i.position,e.weight=i.weight},update(t,e,i,o){if(!t)return;const s=Object(n.d)(t.options.layout.padding),a=e-s.width,r=i-s.height,l=function(t){const e=function(t){const e=[];let i,n,o;for(i=0,n=(t||[]).length;i<n;++i)o=t[i],e.push({index:i,box:o,pos:o.position,horizontal:o.isHorizontal(),weight:o.weight});return e}(t),i=K(e.filter((t=>t.box.fullSize)),!0),n=K(Y(e,\"left\"),!0),o=K(Y(e,\"right\")),s=K(Y(e,\"top\"),!0),a=K(Y(e,\"bottom\")),r=X(e,\"x\"),l=X(e,\"y\");return{fullSize:i,leftAndTop:n.concat(s),rightAndBottom:o.concat(l).concat(a).concat(r),chartArea:Y(e,\"chartArea\"),vertical:n.concat(o).concat(l),horizontal:s.concat(a).concat(r)}}(t.boxes),c=l.vertical,h=l.horizontal;Object(n.e)(t.boxes,(t=>{\"function\"===typeof t.beforeLayout&&t.beforeLayout()}));const d=c.reduce(((t,e)=>e.box.options&&!1===e.box.options.display?t:t+1),0)||1,u=Object.freeze({outerWidth:e,outerHeight:i,padding:s,availableWidth:a,availableHeight:r,vBoxMaxWidth:a/2/d,hBoxMaxHeight:r/2}),g=Object.assign({},s);q(g,Object(n.d)(o));const f=Object.assign({maxPadding:g,w:a,h:r,x:s.left,y:s.top},s);!function(t,e){let i,n,o;for(i=0,n=t.length;i<n;++i)o=t[i],o.horizontal?(o.width=o.box.fullSize&&e.availableWidth,o.height=e.hBoxMaxHeight):(o.width=e.vBoxMaxWidth,o.height=o.box.fullSize&&e.availableHeight)}(c.concat(h),u),Z(l.fullSize,f,u),Z(c,f,u),Z(h,f,u)&&Z(c,f,u),function(t){const e=t.maxPadding;function i(i){const n=Math.max(e[i]-t[i],0);return t[i]+=n,n}t.y+=i(\"top\"),t.x+=i(\"left\"),i(\"right\"),i(\"bottom\")}(f),tt(l.leftAndTop,f,u),f.x+=f.w,f.y+=f.h,tt(l.rightAndBottom,f,u),t.chartArea={left:f.left,top:f.top,right:f.left+f.w,bottom:f.top+f.h,height:f.h,width:f.w},Object(n.e)(l.chartArea,(e=>{const i=e.box;Object.assign(i,t.chartArea),i.update(f.w,f.h)}))}};class it{acquireContext(t,e){}releaseContext(t){return!1}addEventListener(t,e,i){}removeEventListener(t,e,i){}getDevicePixelRatio(){return 1}getMaximumSize(t,e,i,n){return e=Math.max(0,e||t.width),i=i||t.height,{width:e,height:Math.max(0,n?Math.floor(e/n):i)}}isAttached(t){return!0}}class nt extends it{acquireContext(t){return t&&t.getContext&&t.getContext(\"2d\")||null}}const ot={touchstart:\"mousedown\",touchmove:\"mousemove\",touchend:\"mouseup\",pointerenter:\"mouseenter\",pointerdown:\"mousedown\",pointermove:\"mousemove\",pointerup:\"mouseup\",pointerleave:\"mouseout\",pointerout:\"mouseout\"},st=t=>null===t||\"\"===t;const at=!!n.k&&{passive:!0};function rt(t,e,i){t.canvas.removeEventListener(e,i,at)}function lt(t,e,i){const o=t.canvas,s=o&&Object(n.g)(o)||o,a=new MutationObserver((t=>{const e=Object(n.g)(s);t.forEach((t=>{for(let n=0;n<t.addedNodes.length;n++){const o=t.addedNodes[n];o!==s&&o!==e||i(t.target)}}))}));return a.observe(document,{childList:!0,subtree:!0}),a}function ct(t,e,i){const o=t.canvas,s=o&&Object(n.g)(o);if(!s)return;const a=new MutationObserver((t=>{t.forEach((t=>{for(let e=0;e<t.removedNodes.length;e++)if(t.removedNodes[e]===o){i();break}}))}));return a.observe(s,{childList:!0}),a}const ht=new Map;let dt=0;function ut(){const t=window.devicePixelRatio;t!==dt&&(dt=t,ht.forEach(((e,i)=>{i.currentDevicePixelRatio!==t&&e()})))}function gt(t,e,i){const o=t.canvas,s=o&&Object(n.g)(o);if(!s)return;const a=Object(n.j)(((t,e)=>{const n=s.clientWidth;i(t,e),n<s.clientWidth&&i()}),window),r=new ResizeObserver((t=>{const e=t[0],i=e.contentRect.width,n=e.contentRect.height;0===i&&0===n||a(i,n)}));return r.observe(s),function(t,e){ht.size||window.addEventListener(\"resize\",ut),ht.set(t,e)}(t,a),r}function ft(t,e,i){i&&i.disconnect(),\"resize\"===e&&function(t){ht.delete(t),ht.size||window.removeEventListener(\"resize\",ut)}(t)}function pt(t,e,i){const o=t.canvas,s=Object(n.j)((e=>{null!==t.ctx&&i(function(t,e){const i=ot[t.type]||t.type,{x:o,y:s}=Object(n.jc)(t,e);return{type:i,chart:e,native:t,x:void 0!==o?o:null,y:void 0!==s?s:null}}(e,t))}),t,(t=>{const e=t[0];return[e,e.offsetX,e.offsetY]}));return function(t,e,i){t.addEventListener(e,i,at)}(o,e,s),s}class bt extends it{acquireContext(t,e){const i=t&&t.getContext&&t.getContext(\"2d\");return i&&i.canvas===t?(function(t,e){const i=t.style,o=t.getAttribute(\"height\"),s=t.getAttribute(\"width\");if(t.$chartjs={initial:{height:o,width:s,style:{display:i.display,height:i.height,width:i.width}}},i.display=i.display||\"block\",i.boxSizing=i.boxSizing||\"border-box\",st(s)){const e=Object(n.h)(t,\"width\");void 0!==e&&(t.width=e)}if(st(o))if(\"\"===t.style.height)t.height=t.width/(e||2);else{const e=Object(n.h)(t,\"height\");void 0!==e&&(t.height=e)}}(t,e),i):null}releaseContext(t){const e=t.canvas;if(!e.$chartjs)return!1;const i=e.$chartjs.initial;[\"height\",\"width\"].forEach((t=>{const o=i[t];Object(n.Tb)(o)?e.removeAttribute(t):e.setAttribute(t,o)}));const o=i.style||{};return Object.keys(o).forEach((t=>{e.style[t]=o[t]})),e.width=e.width,delete e.$chartjs,!0}addEventListener(t,e,i){this.removeEventListener(t,e);const n=t.$proxies||(t.$proxies={}),o={attach:lt,detach:ct,resize:gt}[e]||pt;n[e]=o(t,e,i)}removeEventListener(t,e){const i=t.$proxies||(t.$proxies={}),n=i[e];if(!n)return;({attach:ft,detach:ft,resize:ft}[e]||rt)(t,e,n),i[e]=void 0}getDevicePixelRatio(){return window.devicePixelRatio}getMaximumSize(t,e,i,o){return Object(n.f)(t,e,i,o)}isAttached(t){const e=Object(n.g)(t);return!(!e||!Object(n.g)(e))}}class mt{constructor(){this.x=void 0,this.y=void 0,this.active=!1,this.options=void 0,this.$animations=void 0}tooltipPosition(t){const{x:e,y:i}=this.getProps([\"x\",\"y\"],t);return{x:e,y:i}}hasValue(){return Object(n.gc)(this.x)&&Object(n.gc)(this.y)}getProps(t,e){const i=this,n=this.$animations;if(!e||!n)return i;const o={};return t.forEach((t=>{o[t]=n[t]&&n[t].active()?n[t]._to:i[t]})),o}}mt.defaults={},mt.defaultRoutes=void 0;const xt={values:t=>Object(n.Lb)(t)?t:\"\"+t,numeric(t,e,i){if(0===t)return\"0\";const o=this.chart.options.locale;let s,a=t;if(i.length>1){const e=Math.max(Math.abs(i[0].value),Math.abs(i[i.length-1].value));(e<1e-4||e>1e15)&&(s=\"scientific\"),a=function(t,e){let i=e.length>3?e[2].value-e[1].value:e[1].value-e[0].value;Math.abs(i)>1&&t!==Math.floor(t)&&(i=t-Math.floor(t));return i}(t,i)}const r=Object(n.l)(Math.abs(a)),l=Math.max(Math.min(-1*Math.floor(r),20),0),c={notation:s,minimumFractionDigits:l,maximumFractionDigits:l};return Object.assign(c,this.options.ticks.format),Object(n.Zb)(t,o,c)},logarithmic(t,e,i){if(0===t)return\"0\";const o=t/Math.pow(10,Math.floor(Object(n.l)(t)));return 1===o||2===o||5===o?xt.numeric.call(this,t,e,i):\"\"}};var _t={formatters:xt};function yt(t,e){const i=t.options.ticks,o=i.maxTicksLimit||function(t){const e=t.options.offset,i=t._tickSize(),n=t._length/i+(e?0:1),o=t._maxLength/i;return Math.floor(Math.min(n,o))}(t),s=i.major.enabled?function(t){const e=[];let i,n;for(i=0,n=t.length;i<n;i++)t[i].major&&e.push(i);return e}(e):[],a=s.length,r=s[0],l=s[a-1],c=[];if(a>o)return function(t,e,i,n){let o,s=0,a=i[0];for(n=Math.ceil(n),o=0;o<t.length;o++)o===a&&(e.push(t[o]),s++,a=i[s*n])}(e,c,s,a/o),c;const h=function(t,e,i){const o=function(t){const e=t.length;let i,n;if(e<2)return!1;for(n=t[0],i=1;i<e;++i)if(t[i]-t[i-1]!==n)return!1;return n}(t),s=e.length/i;if(!o)return Math.max(s,1);const a=Object(n.m)(o);for(let n=0,r=a.length-1;n<r;n++){const t=a[n];if(t>s)return t}return Math.max(s,1)}(s,e,o);if(a>0){let t,i;const o=a>1?Math.round((l-r)/(a-1)):null;for(vt(e,c,h,Object(n.Tb)(o)?0:r-o,r),t=0,i=a-1;t<i;t++)vt(e,c,h,s[t],s[t+1]);return vt(e,c,h,l,Object(n.Tb)(o)?e.length:l+o),c}return vt(e,c,h),c}function vt(t,e,i,o,s){const a=Object(n.fc)(o,0),r=Math.min(Object(n.fc)(s,t.length),t.length);let l,c,h,d=0;for(i=Math.ceil(i),s&&(l=s-o,i=l/Math.floor(l/i)),h=a;h<0;)d++,h=Math.round(a+d*i);for(c=Math.max(a,0);c<r;c++)c===h&&(e.push(t[c]),d++,h=Math.round(a+d*i))}n.Nb.set(\"scale\",{display:!0,offset:!1,reverse:!1,beginAtZero:!1,bounds:\"ticks\",grace:0,grid:{display:!0,lineWidth:1,drawBorder:!0,drawOnChartArea:!0,drawTicks:!0,tickLength:8,tickWidth:(t,e)=>e.lineWidth,tickColor:(t,e)=>e.color,offset:!1,borderDash:[],borderDashOffset:0,borderWidth:1},title:{display:!1,text:\"\",padding:{top:4,bottom:4}},ticks:{minRotation:0,maxRotation:50,mirror:!1,textStrokeWidth:0,textStrokeColor:\"\",padding:3,display:!0,autoSkip:!0,autoSkipPadding:3,labelOffset:0,callback:_t.formatters.values,minor:{},major:{},align:\"center\",crossAlign:\"near\",showLabelBackdrop:!1,backdropColor:\"rgba(255, 255, 255, 0.75)\",backdropPadding:2}}),n.Nb.route(\"scale.ticks\",\"color\",\"\",\"color\"),n.Nb.route(\"scale.grid\",\"color\",\"\",\"borderColor\"),n.Nb.route(\"scale.grid\",\"borderColor\",\"\",\"borderColor\"),n.Nb.route(\"scale.title\",\"color\",\"\",\"color\"),n.Nb.describe(\"scale\",{_fallback:!1,_scriptable:t=>!t.startsWith(\"before\")&&!t.startsWith(\"after\")&&\"callback\"!==t&&\"parser\"!==t,_indexable:t=>\"borderDash\"!==t&&\"tickBorderDash\"!==t}),n.Nb.describe(\"scales\",{_fallback:\"scale\"});const Ot=(t,e,i)=>\"top\"===e||\"left\"===e?t[e]+i:t[e]-i;function jt(t,e){const i=[],n=t.length/e,o=t.length;let s=0;for(;s<o;s+=n)i.push(t[Math.floor(s)]);return i}function wt(t,e,i){const n=t.ticks.length,o=Math.min(e,n-1),s=t._startPixel,a=t._endPixel,r=1e-6;let l,c=t.getPixelForTick(o);if(!(i&&(l=1===n?Math.max(c-s,a-c):0===e?(t.getPixelForTick(1)-c)/2:(c-t.getPixelForTick(o-1))/2,c+=o<e?l:-l,c<s-r||c>a+r)))return c}function Mt(t){return t.drawTicks?t.tickLength:0}function kt(t,e){if(!t.display)return 0;const i=Object(n.x)(t.font,e),o=Object(n.d)(t.padding);return(Object(n.Lb)(t.text)?t.text.length:1)*i.lineHeight+o.height}function St(t,e,i){let o=Object(n.y)(t);return(i&&\"right\"!==e||!i&&\"right\"===e)&&(o=(t=>\"left\"===t?\"right\":\"right\"===t?\"left\":t)(o)),o}class Dt extends mt{constructor(t){super(),this.id=t.id,this.type=t.type,this.options=void 0,this.ctx=t.ctx,this.chart=t.chart,this.top=void 0,this.bottom=void 0,this.left=void 0,this.right=void 0,this.width=void 0,this.height=void 0,this._margins={left:0,right:0,top:0,bottom:0},this.maxWidth=void 0,this.maxHeight=void 0,this.paddingTop=void 0,this.paddingBottom=void 0,this.paddingLeft=void 0,this.paddingRight=void 0,this.axis=void 0,this.labelRotation=void 0,this.min=void 0,this.max=void 0,this._range=void 0,this.ticks=[],this._gridLineItems=null,this._labelItems=null,this._labelSizes=null,this._length=0,this._maxLength=0,this._longestTextCache={},this._startPixel=void 0,this._endPixel=void 0,this._reversePixels=!1,this._userMax=void 0,this._userMin=void 0,this._suggestedMax=void 0,this._suggestedMin=void 0,this._ticksLength=0,this._borderValue=0,this._cache={},this._dataLimitsCached=!1,this.$context=void 0}init(t){const e=this;e.options=t.setContext(e.getContext()),e.axis=t.axis,e._userMin=e.parse(t.min),e._userMax=e.parse(t.max),e._suggestedMin=e.parse(t.suggestedMin),e._suggestedMax=e.parse(t.suggestedMax)}parse(t,e){return t}getUserBounds(){let{_userMin:t,_userMax:e,_suggestedMin:i,_suggestedMax:o}=this;return t=Object(n.n)(t,Number.POSITIVE_INFINITY),e=Object(n.n)(e,Number.NEGATIVE_INFINITY),i=Object(n.n)(i,Number.POSITIVE_INFINITY),o=Object(n.n)(o,Number.NEGATIVE_INFINITY),{min:Object(n.n)(t,i),max:Object(n.n)(e,o),minDefined:Object(n.Qb)(t),maxDefined:Object(n.Qb)(e)}}getMinMax(t){const e=this;let i,{min:o,max:s,minDefined:a,maxDefined:r}=e.getUserBounds();if(a&&r)return{min:o,max:s};const l=e.getMatchingVisibleMetas();for(let n=0,c=l.length;n<c;++n)i=l[n].controller.getMinMax(e,t),a||(o=Math.min(o,i.min)),r||(s=Math.max(s,i.max));return{min:Object(n.n)(o,Object(n.n)(s,o)),max:Object(n.n)(s,Object(n.n)(o,s))}}getPadding(){const t=this;return{left:t.paddingLeft||0,top:t.paddingTop||0,right:t.paddingRight||0,bottom:t.paddingBottom||0}}getTicks(){return this.ticks}getLabels(){const t=this.chart.data;return this.options.labels||(this.isHorizontal()?t.xLabels:t.yLabels)||t.labels||[]}beforeLayout(){this._cache={},this._dataLimitsCached=!1}beforeUpdate(){Object(n.o)(this.options.beforeUpdate,[this])}update(t,e,i){const o=this,s=o.options.ticks,a=s.sampleSize;o.beforeUpdate(),o.maxWidth=t,o.maxHeight=e,o._margins=i=Object.assign({left:0,right:0,top:0,bottom:0},i),o.ticks=null,o._labelSizes=null,o._gridLineItems=null,o._labelItems=null,o.beforeSetDimensions(),o.setDimensions(),o.afterSetDimensions(),o._maxLength=o.isHorizontal()?o.width+i.left+i.right:o.height+i.top+i.bottom,o._dataLimitsCached||(o.beforeDataLimits(),o.determineDataLimits(),o.afterDataLimits(),o._range=Object(n.p)(o,o.options.grace),o._dataLimitsCached=!0),o.beforeBuildTicks(),o.ticks=o.buildTicks()||[],o.afterBuildTicks();const r=a<o.ticks.length;o._convertTicksToLabels(r?jt(o.ticks,a):o.ticks),o.configure(),o.beforeCalculateLabelRotation(),o.calculateLabelRotation(),o.afterCalculateLabelRotation(),s.display&&(s.autoSkip||\"auto\"===s.source)&&(o.ticks=yt(o,o.ticks),o._labelSizes=null),r&&o._convertTicksToLabels(o.ticks),o.beforeFit(),o.fit(),o.afterFit(),o.afterUpdate()}configure(){const t=this;let e,i,n=t.options.reverse;t.isHorizontal()?(e=t.left,i=t.right):(e=t.top,i=t.bottom,n=!n),t._startPixel=e,t._endPixel=i,t._reversePixels=n,t._length=i-e,t._alignToPixels=t.options.alignToPixels}afterUpdate(){Object(n.o)(this.options.afterUpdate,[this])}beforeSetDimensions(){Object(n.o)(this.options.beforeSetDimensions,[this])}setDimensions(){const t=this;t.isHorizontal()?(t.width=t.maxWidth,t.left=0,t.right=t.width):(t.height=t.maxHeight,t.top=0,t.bottom=t.height),t.paddingLeft=0,t.paddingTop=0,t.paddingRight=0,t.paddingBottom=0}afterSetDimensions(){Object(n.o)(this.options.afterSetDimensions,[this])}_callHooks(t){const e=this;e.chart.notifyPlugins(t,e.getContext()),Object(n.o)(e.options[t],[e])}beforeDataLimits(){this._callHooks(\"beforeDataLimits\")}determineDataLimits(){}afterDataLimits(){this._callHooks(\"afterDataLimits\")}beforeBuildTicks(){this._callHooks(\"beforeBuildTicks\")}buildTicks(){return[]}afterBuildTicks(){this._callHooks(\"afterBuildTicks\")}beforeTickToLabelConversion(){Object(n.o)(this.options.beforeTickToLabelConversion,[this])}generateTickLabels(t){const e=this,i=e.options.ticks;let o,s,a;for(o=0,s=t.length;o<s;o++)a=t[o],a.label=Object(n.o)(i.callback,[a.value,o,t],e);for(o=0;o<s;o++)Object(n.Tb)(t[o].label)&&(t.splice(o,1),s--,o--)}afterTickToLabelConversion(){Object(n.o)(this.options.afterTickToLabelConversion,[this])}beforeCalculateLabelRotation(){Object(n.o)(this.options.beforeCalculateLabelRotation,[this])}calculateLabelRotation(){const t=this,e=t.options,i=e.ticks,o=t.ticks.length,s=i.minRotation||0,a=i.maxRotation;let r,l,c,h=s;if(!t._isVisible()||!i.display||s>=a||o<=1||!t.isHorizontal())return void(t.labelRotation=s);const d=t._getLabelSizes(),u=d.widest.width,g=d.highest.height,f=Object(n.hc)(t.chart.width-u,0,t.maxWidth);r=e.offset?t.maxWidth/o:f/(o-1),u+6>r&&(r=f/(o-(e.offset?.5:1)),l=t.maxHeight-Mt(e.grid)-i.padding-kt(e.title,t.chart.options.font),c=Math.sqrt(u*u+g*g),h=Object(n.r)(Math.min(Math.asin(Math.min((d.highest.height+6)/r,1)),Math.asin(Math.min(l/c,1))-Math.asin(g/c))),h=Math.max(s,Math.min(a,h))),t.labelRotation=h}afterCalculateLabelRotation(){Object(n.o)(this.options.afterCalculateLabelRotation,[this])}beforeFit(){Object(n.o)(this.options.beforeFit,[this])}fit(){const t=this,e={width:0,height:0},{chart:i,options:{ticks:o,title:s,grid:a}}=t,r=t._isVisible(),l=t.isHorizontal();if(r){const r=kt(s,i.options.font);if(l?(e.width=t.maxWidth,e.height=Mt(a)+r):(e.height=t.maxHeight,e.width=Mt(a)+r),o.display&&t.ticks.length){const{first:i,last:s,widest:a,highest:r}=t._getLabelSizes(),c=2*o.padding,h=Object(n.dc)(t.labelRotation),d=Math.cos(h),u=Math.sin(h);if(l){const i=o.mirror?0:u*a.width+d*r.height;e.height=Math.min(t.maxHeight,e.height+i+c)}else{const i=o.mirror?0:d*a.width+u*r.height;e.width=Math.min(t.maxWidth,e.width+i+c)}t._calculatePadding(i,s,u,d)}}t._handleMargins(),l?(t.width=t._length=i.width-t._margins.left-t._margins.right,t.height=e.height):(t.width=e.width,t.height=t._length=i.height-t._margins.top-t._margins.bottom)}_calculatePadding(t,e,i,n){const o=this,{ticks:{align:s,padding:a},position:r}=o.options,l=0!==o.labelRotation,c=\"top\"!==r&&\"x\"===o.axis;if(o.isHorizontal()){const r=o.getPixelForTick(0)-o.left,h=o.right-o.getPixelForTick(o.ticks.length-1);let d=0,u=0;l?c?(d=n*t.width,u=i*e.height):(d=i*t.height,u=n*e.width):\"start\"===s?u=e.width:\"end\"===s?d=t.width:(d=t.width/2,u=e.width/2),o.paddingLeft=Math.max((d-r+a)*o.width/(o.width-r),0),o.paddingRight=Math.max((u-h+a)*o.width/(o.width-h),0)}else{let i=e.height/2,n=t.height/2;\"start\"===s?(i=0,n=t.height):\"end\"===s&&(i=e.height,n=0),o.paddingTop=i+a,o.paddingBottom=n+a}}_handleMargins(){const t=this;t._margins&&(t._margins.left=Math.max(t.paddingLeft,t._margins.left),t._margins.top=Math.max(t.paddingTop,t._margins.top),t._margins.right=Math.max(t.paddingRight,t._margins.right),t._margins.bottom=Math.max(t.paddingBottom,t._margins.bottom))}afterFit(){Object(n.o)(this.options.afterFit,[this])}isHorizontal(){const{axis:t,position:e}=this.options;return\"top\"===e||\"bottom\"===e||\"x\"===t}isFullSize(){return this.options.fullSize}_convertTicksToLabels(t){const e=this;e.beforeTickToLabelConversion(),e.generateTickLabels(t),e.afterTickToLabelConversion()}_getLabelSizes(){const t=this;let e=t._labelSizes;if(!e){const i=t.options.ticks.sampleSize;let n=t.ticks;i<n.length&&(n=jt(n,i)),t._labelSizes=e=t._computeLabelSizes(n,n.length)}return e}_computeLabelSizes(t,e){const{ctx:i,_longestTextCache:o}=this,s=[],a=[];let r,l,c,h,d,u,g,f,p,b,m,x=0,_=0;for(r=0;r<e;++r){if(h=t[r].label,d=this._resolveTickFontOptions(r),i.font=u=d.string,g=o[u]=o[u]||{data:{},gc:[]},f=d.lineHeight,p=b=0,Object(n.Tb)(h)||Object(n.Lb)(h)){if(Object(n.Lb)(h))for(l=0,c=h.length;l<c;++l)m=h[l],Object(n.Tb)(m)||Object(n.Lb)(m)||(p=Object(n.s)(i,g.data,g.gc,p,m),b+=f)}else p=Object(n.s)(i,g.data,g.gc,p,h),b=f;s.push(p),a.push(b),x=Math.max(p,x),_=Math.max(b,_)}!function(t,e){Object(n.e)(t,(t=>{const i=t.gc,n=i.length/2;let o;if(n>e){for(o=0;o<n;++o)delete t.data[i[o]];i.splice(0,n)}}))}(o,e);const y=s.indexOf(x),v=a.indexOf(_),O=t=>({width:s[t]||0,height:a[t]||0});return{first:O(0),last:O(e-1),widest:O(y),highest:O(v),widths:s,heights:a}}getLabelForValue(t){return t}getPixelForValue(t,e){return NaN}getValueForPixel(t){}getPixelForTick(t){const e=this.ticks;return t<0||t>e.length-1?null:this.getPixelForValue(e[t].value)}getPixelForDecimal(t){const e=this;e._reversePixels&&(t=1-t);const i=e._startPixel+t*e._length;return Object(n.t)(e._alignToPixels?Object(n.v)(e.chart,i,0):i)}getDecimalForPixel(t){const e=(t-this._startPixel)/this._length;return this._reversePixels?1-e:e}getBasePixel(){return this.getPixelForValue(this.getBaseValue())}getBaseValue(){const{min:t,max:e}=this;return t<0&&e<0?e:t>0&&e>0?t:0}getContext(t){const e=this,i=e.ticks||[];if(t>=0&&t<i.length){const n=i[t];return n.$context||(n.$context=function(t,e,i){return Object.assign(Object.create(t),{tick:i,index:e,type:\"tick\"})}(e.getContext(),t,n))}return e.$context||(e.$context=(n=e.chart.getContext(),o=e,Object.assign(Object.create(n),{scale:o,type:\"scale\"})));var n,o}_tickSize(){const t=this,e=t.options.ticks,i=Object(n.dc)(t.labelRotation),o=Math.abs(Math.cos(i)),s=Math.abs(Math.sin(i)),a=t._getLabelSizes(),r=e.autoSkipPadding||0,l=a?a.widest.width+r:0,c=a?a.highest.height+r:0;return t.isHorizontal()?c*o>l*s?l/o:c/s:c*s<l*o?c/o:l/s}_isVisible(){const t=this.options.display;return\"auto\"!==t?!!t:this.getMatchingVisibleMetas().length>0}_computeGridLineItems(t){const e=this,i=e.axis,o=e.chart,s=e.options,{grid:a,position:r}=s,l=a.offset,c=e.isHorizontal(),h=e.ticks.length+(l?1:0),d=Mt(a),u=[],g=a.setContext(e.getContext()),f=g.drawBorder?g.borderWidth:0,p=f/2,b=function(t){return Object(n.v)(o,t,f)};let m,x,_,y,v,O,j,w,M,k,S,D;if(\"top\"===r)m=b(e.bottom),O=e.bottom-d,w=m-p,k=b(t.top)+p,D=t.bottom;else if(\"bottom\"===r)m=b(e.top),k=t.top,D=b(t.bottom)-p,O=m+p,w=e.top+d;else if(\"left\"===r)m=b(e.right),v=e.right-d,j=m-p,M=b(t.left)+p,S=t.right;else if(\"right\"===r)m=b(e.left),M=t.left,S=b(t.right)-p,v=m+p,j=e.left+d;else if(\"x\"===i){if(\"center\"===r)m=b((t.top+t.bottom)/2+.5);else if(Object(n.Sb)(r)){const t=Object.keys(r)[0],i=r[t];m=b(e.chart.scales[t].getPixelForValue(i))}k=t.top,D=t.bottom,O=m+p,w=O+d}else if(\"y\"===i){if(\"center\"===r)m=b((t.left+t.right)/2);else if(Object(n.Sb)(r)){const t=Object.keys(r)[0],i=r[t];m=b(e.chart.scales[t].getPixelForValue(i))}v=m-p,j=v-d,M=t.left,S=t.right}for(x=0;x<h;++x){const t=a.setContext(e.getContext(x)),i=t.lineWidth,s=t.color,r=a.borderDash||[],h=t.borderDashOffset,d=t.tickWidth,g=t.tickColor,f=t.tickBorderDash||[],p=t.tickBorderDashOffset;_=wt(e,x,l),void 0!==_&&(y=Object(n.v)(o,_,i),c?v=j=M=S=y:O=w=k=D=y,u.push({tx1:v,ty1:O,tx2:j,ty2:w,x1:M,y1:k,x2:S,y2:D,width:i,color:s,borderDash:r,borderDashOffset:h,tickWidth:d,tickColor:g,tickBorderDash:f,tickBorderDashOffset:p}))}return e._ticksLength=h,e._borderValue=m,u}_computeLabelItems(t){const e=this,i=e.axis,o=e.options,{position:s,ticks:a}=o,r=e.isHorizontal(),l=e.ticks,{align:c,crossAlign:h,padding:d,mirror:u}=a,g=Mt(o.grid),f=g+d,p=u?-d:f,b=-Object(n.dc)(e.labelRotation),m=[];let x,_,y,v,O,j,w,M,k,S,D,P,C=\"middle\";if(\"top\"===s)j=e.bottom-p,w=e._getXAxisLabelAlignment();else if(\"bottom\"===s)j=e.top+p,w=e._getXAxisLabelAlignment();else if(\"left\"===s){const t=e._getYAxisLabelAlignment(g);w=t.textAlign,O=t.x}else if(\"right\"===s){const t=e._getYAxisLabelAlignment(g);w=t.textAlign,O=t.x}else if(\"x\"===i){if(\"center\"===s)j=(t.top+t.bottom)/2+f;else if(Object(n.Sb)(s)){const t=Object.keys(s)[0],i=s[t];j=e.chart.scales[t].getPixelForValue(i)+f}w=e._getXAxisLabelAlignment()}else if(\"y\"===i){if(\"center\"===s)O=(t.left+t.right)/2-f;else if(Object(n.Sb)(s)){const t=Object.keys(s)[0],i=s[t];O=e.chart.scales[t].getPixelForValue(i)}w=e._getYAxisLabelAlignment(g).textAlign}\"y\"===i&&(\"start\"===c?C=\"top\":\"end\"===c&&(C=\"bottom\"));const A=e._getLabelSizes();for(x=0,_=l.length;x<_;++x){y=l[x],v=y.label;const t=a.setContext(e.getContext(x));M=e.getPixelForTick(x)+a.labelOffset,k=e._resolveTickFontOptions(x),S=k.lineHeight,D=Object(n.Lb)(v)?v.length:1;const i=D/2,o=t.color,c=t.textStrokeColor,d=t.textStrokeWidth;let g;if(r?(O=M,P=\"top\"===s?\"near\"===h||0!==b?-D*S+S/2:\"center\"===h?-A.highest.height/2-i*S+S:-A.highest.height+S/2:\"near\"===h||0!==b?S/2:\"center\"===h?A.highest.height/2-i*S:A.highest.height-D*S,u&&(P*=-1)):(j=M,P=(1-D)*S/2),t.showLabelBackdrop){const e=Object(n.d)(t.backdropPadding),i=A.heights[x],o=A.widths[x];let s=j+P-e.top,a=O-e.left;switch(C){case\"middle\":s-=i/2;break;case\"bottom\":s-=i}switch(w){case\"center\":a-=o/2;break;case\"right\":a-=o}g={left:a,top:s,width:o+e.width,height:i+e.height,color:t.backdropColor}}m.push({rotation:b,label:v,font:k,color:o,strokeColor:c,strokeWidth:d,textOffset:P,textAlign:w,textBaseline:C,translation:[O,j],backdrop:g})}return m}_getXAxisLabelAlignment(){const{position:t,ticks:e}=this.options;if(-Object(n.dc)(this.labelRotation))return\"top\"===t?\"left\":\"right\";let i=\"center\";return\"start\"===e.align?i=\"left\":\"end\"===e.align&&(i=\"right\"),i}_getYAxisLabelAlignment(t){const e=this,{position:i,ticks:{crossAlign:n,mirror:o,padding:s}}=e.options,a=t+s,r=e._getLabelSizes().widest.width;let l,c;return\"left\"===i?o?(l=\"left\",c=e.right+s):(c=e.right-a,\"near\"===n?l=\"right\":\"center\"===n?(l=\"center\",c-=r/2):(l=\"left\",c=e.left)):\"right\"===i?o?(l=\"right\",c=e.left+s):(c=e.left+a,\"near\"===n?l=\"left\":\"center\"===n?(l=\"center\",c+=r/2):(l=\"right\",c=e.right)):l=\"right\",{textAlign:l,x:c}}_computeLabelArea(){const t=this;if(t.options.ticks.mirror)return;const e=t.chart,i=t.options.position;return\"left\"===i||\"right\"===i?{top:0,left:t.left,bottom:e.height,right:t.right}:\"top\"===i||\"bottom\"===i?{top:t.top,left:0,bottom:t.bottom,right:e.width}:void 0}drawBackground(){const{ctx:t,options:{backgroundColor:e},left:i,top:n,width:o,height:s}=this;e&&(t.save(),t.fillStyle=e,t.fillRect(i,n,o,s),t.restore())}getLineWidthForValue(t){const e=this,i=e.options.grid;if(!e._isVisible()||!i.display)return 0;const n=e.ticks.findIndex((e=>e.value===t));if(n>=0){return i.setContext(e.getContext(n)).lineWidth}return 0}drawGrid(t){const e=this,i=e.options.grid,n=e.ctx,o=e._gridLineItems||(e._gridLineItems=e._computeGridLineItems(t));let s,a;const r=(t,e,i)=>{i.width&&i.color&&(n.save(),n.lineWidth=i.width,n.strokeStyle=i.color,n.setLineDash(i.borderDash||[]),n.lineDashOffset=i.borderDashOffset,n.beginPath(),n.moveTo(t.x,t.y),n.lineTo(e.x,e.y),n.stroke(),n.restore())};if(i.display)for(s=0,a=o.length;s<a;++s){const t=o[s];i.drawOnChartArea&&r({x:t.x1,y:t.y1},{x:t.x2,y:t.y2},t),i.drawTicks&&r({x:t.tx1,y:t.ty1},{x:t.tx2,y:t.ty2},{color:t.tickColor,width:t.tickWidth,borderDash:t.tickBorderDash,borderDashOffset:t.tickBorderDashOffset})}}drawBorder(){const t=this,{chart:e,ctx:i,options:{grid:o}}=t,s=o.setContext(t.getContext()),a=o.drawBorder?s.borderWidth:0;if(!a)return;const r=o.setContext(t.getContext(0)).lineWidth,l=t._borderValue;let c,h,d,u;t.isHorizontal()?(c=Object(n.v)(e,t.left,a)-a/2,h=Object(n.v)(e,t.right,r)+r/2,d=u=l):(d=Object(n.v)(e,t.top,a)-a/2,u=Object(n.v)(e,t.bottom,r)+r/2,c=h=l),i.save(),i.lineWidth=s.borderWidth,i.strokeStyle=s.borderColor,i.beginPath(),i.moveTo(c,d),i.lineTo(h,u),i.stroke(),i.restore()}drawLabels(t){const e=this;if(!e.options.ticks.display)return;const i=e.ctx,o=e._computeLabelArea();o&&Object(n.Ub)(i,o);const s=e._labelItems||(e._labelItems=e._computeLabelItems(t));let a,r;for(a=0,r=s.length;a<r;++a){const t=s[a],e=t.font,o=t.label;t.backdrop&&(i.fillStyle=t.backdrop.color,i.fillRect(t.backdrop.left,t.backdrop.top,t.backdrop.width,t.backdrop.height));let r=t.textOffset;Object(n.w)(i,o,0,r,e,t)}o&&Object(n.Wb)(i)}drawTitle(){const{ctx:t,options:{position:e,title:i,reverse:o}}=this;if(!i.display)return;const s=Object(n.x)(i.font),a=Object(n.d)(i.padding),r=i.align;let l=s.lineHeight/2;\"bottom\"===e?(l+=a.bottom,Object(n.Lb)(i.text)&&(l+=s.lineHeight*(i.text.length-1))):l+=a.top;const{titleX:c,titleY:h,maxWidth:d,rotation:u}=function(t,e,i,o){const{top:s,left:a,bottom:r,right:l}=t;let c,h,d,u=0;return t.isHorizontal()?(h=Object(n.z)(o,a,l),d=Ot(t,i,e),c=l-a):(h=Ot(t,i,e),d=Object(n.z)(o,r,s),u=\"left\"===i?-n.i:n.i),{titleX:h,titleY:d,maxWidth:c,rotation:u}}(this,l,e,r);Object(n.w)(t,i.text,0,0,s,{color:i.color,maxWidth:d,rotation:u,textAlign:St(r,e,o),textBaseline:\"middle\",translation:[c,h]})}draw(t){const e=this;e._isVisible()&&(e.drawBackground(),e.drawGrid(t),e.drawBorder(),e.drawTitle(),e.drawLabels(t))}_layers(){const t=this,e=t.options,i=e.ticks&&e.ticks.z||0,n=e.grid&&e.grid.z||0;return t._isVisible()&&t.draw===Dt.prototype.draw?[{z:n,draw(e){t.drawBackground(),t.drawGrid(e),t.drawTitle()}},{z:n+1,draw(){t.drawBorder()}},{z:i,draw(e){t.drawLabels(e)}}]:[{z:i,draw(e){t.draw(e)}}]}getMatchingVisibleMetas(t){const e=this,i=e.chart.getSortedVisibleDatasetMetas(),n=e.axis+\"AxisID\",o=[];let s,a;for(s=0,a=i.length;s<a;++s){const a=i[s];a[n]!==e.id||t&&a.type!==t||o.push(a)}return o}_resolveTickFontOptions(t){const e=this.options.ticks.setContext(this.getContext(t));return Object(n.x)(e.font)}_maxDigits(){const t=this,e=t._resolveTickFontOptions(0).lineHeight;return t.isHorizontal()?t.width/e/.7:t.height/e}}class Pt{constructor(t,e,i){this.type=t,this.scope=e,this.override=i,this.items=Object.create(null)}isForType(t){return Object.prototype.isPrototypeOf.call(this.type.prototype,t.prototype)}register(t){const e=this,i=Object.getPrototypeOf(t);let o;(function(t){return\"id\"in t&&\"defaults\"in t})(i)&&(o=e.register(i));const s=e.items,a=t.id,r=e.scope+\".\"+a;if(!a)throw new Error(\"class does not have id: \"+t);return a in s||(s[a]=t,function(t,e,i){const o=Object(n.a)(Object.create(null),[i?n.Nb.get(i):{},n.Nb.get(e),t.defaults]);n.Nb.set(e,o),t.defaultRoutes&&function(t,e){Object.keys(e).forEach((i=>{const o=i.split(\".\"),s=o.pop(),a=[t].concat(o).join(\".\"),r=e[i].split(\".\"),l=r.pop(),c=r.join(\".\");n.Nb.route(a,s,c,l)}))}(e,t.defaultRoutes);t.descriptors&&n.Nb.describe(e,t.descriptors)}(t,r,o),e.override&&n.Nb.override(t.id,t.overrides)),r}get(t){return this.items[t]}unregister(t){const e=this.items,i=t.id,o=this.scope;i in e&&delete e[i],o&&i in n.Nb[o]&&(delete n.Nb[o][i],this.override&&delete n.A[i])}}var Ct=new class{constructor(){this.controllers=new Pt(v,\"datasets\",!0),this.elements=new Pt(mt,\"elements\"),this.plugins=new Pt(Object,\"plugins\"),this.scales=new Pt(Dt,\"scales\"),this._typedRegistries=[this.controllers,this.scales,this.elements]}add(...t){this._each(\"register\",t)}remove(...t){this._each(\"unregister\",t)}addControllers(...t){this._each(\"register\",t,this.controllers)}addElements(...t){this._each(\"register\",t,this.elements)}addPlugins(...t){this._each(\"register\",t,this.plugins)}addScales(...t){this._each(\"register\",t,this.scales)}getController(t){return this._get(t,this.controllers,\"controller\")}getElement(t){return this._get(t,this.elements,\"element\")}getPlugin(t){return this._get(t,this.plugins,\"plugin\")}getScale(t){return this._get(t,this.scales,\"scale\")}removeControllers(...t){this._each(\"unregister\",t,this.controllers)}removeElements(...t){this._each(\"unregister\",t,this.elements)}removePlugins(...t){this._each(\"unregister\",t,this.plugins)}removeScales(...t){this._each(\"unregister\",t,this.scales)}_each(t,e,i){const o=this;[...e].forEach((e=>{const s=i||o._getRegistryForType(e);i||s.isForType(e)||s===o.plugins&&e.id?o._exec(t,s,e):Object(n.e)(e,(e=>{const n=i||o._getRegistryForType(e);o._exec(t,n,e)}))}))}_exec(t,e,i){const o=Object(n.D)(t);Object(n.o)(i[\"before\"+o],[],i),e[t](i),Object(n.o)(i[\"after\"+o],[],i)}_getRegistryForType(t){for(let e=0;e<this._typedRegistries.length;e++){const i=this._typedRegistries[e];if(i.isForType(t))return i}return this.plugins}_get(t,e,i){const n=e.get(t);if(void 0===n)throw new Error('\"'+t+'\" is not a registered '+i+\".\");return n}};class At{constructor(){this._init=[]}notify(t,e,i,n){const o=this;\"beforeInit\"===e&&(o._init=o._createDescriptors(t,!0),o._notify(o._init,t,\"install\"));const s=n?o._descriptors(t).filter(n):o._descriptors(t),a=o._notify(s,t,e,i);return\"destroy\"===e&&(o._notify(s,t,\"stop\"),o._notify(o._init,t,\"uninstall\")),a}_notify(t,e,i,o){o=o||{};for(const s of t){const t=s.plugin,a=t[i],r=[e,o,s.options];if(!1===Object(n.o)(a,r,t)&&o.cancelable)return!1}return!0}invalidate(){Object(n.Tb)(this._cache)||(this._oldCache=this._cache,this._cache=void 0)}_descriptors(t){if(this._cache)return this._cache;const e=this._cache=this._createDescriptors(t);return this._notifyStateChanges(t),e}_createDescriptors(t,e){const i=t&&t.config,o=Object(n.fc)(i.options&&i.options.plugins,{}),s=function(t){const e=[],i=Object.keys(Ct.plugins.items);for(let o=0;o<i.length;o++)e.push(Ct.getPlugin(i[o]));const n=t.plugins||[];for(let o=0;o<n.length;o++){const t=n[o];-1===e.indexOf(t)&&e.push(t)}return e}(i);return!1!==o||e?function(t,e,i,n){const o=[],s=t.getContext();for(let a=0;a<e.length;a++){const r=e[a],l=Tt(i[r.id],n);null!==l&&o.push({plugin:r,options:Lt(t.config,r,l,s)})}return o}(t,s,o,e):[]}_notifyStateChanges(t){const e=this._oldCache||[],i=this._cache,n=(t,e)=>t.filter((t=>!e.some((e=>t.plugin.id===e.plugin.id))));this._notify(n(e,i),t,\"stop\"),this._notify(n(i,e),t,\"start\")}}function Tt(t,e){return e||!1!==t?!0===t?{}:t:null}function Lt(t,e,i,n){const o=t.pluginScopeKeys(e),s=t.getOptionScopes(i,o);return t.createResolver(s,n,[\"\"],{scriptable:!1,indexable:!1,allKeys:!0})}function Et(t,e){const i=n.Nb.datasets[t]||{};return((e.datasets||{})[t]||{}).indexAxis||e.indexAxis||i.indexAxis||\"x\"}function zt(t,e){return\"x\"===t||\"y\"===t?t:e.axis||(\"top\"===(i=e.position)||\"bottom\"===i?\"x\":\"left\"===i||\"right\"===i?\"y\":void 0)||t.charAt(0).toLowerCase();var i}function Rt(t){const e=t.options||(t.options={});e.plugins=Object(n.fc)(e.plugins,{}),e.scales=function(t,e){const i=n.A[t.type]||{scales:{}},o=e.scales||{},s=Et(t.type,e),a=Object.create(null),r=Object.create(null);return Object.keys(o).forEach((t=>{const e=o[t],l=zt(t,e),c=function(t,e){return t===e?\"_index_\":\"_value_\"}(l,s),h=i.scales||{};a[l]=a[l]||t,r[t]=Object(n.J)(Object.create(null),[{axis:l},e,h[l],h[c]])})),t.data.datasets.forEach((i=>{const s=i.type||t.type,l=i.indexAxis||Et(s,e),c=(n.A[s]||{}).scales||{};Object.keys(c).forEach((t=>{const e=function(t,e){let i=t;return\"_index_\"===t?i=e:\"_value_\"===t&&(i=\"x\"===e?\"y\":\"x\"),i}(t,l),s=i[e+\"AxisID\"]||a[e]||e;r[s]=r[s]||Object.create(null),Object(n.J)(r[s],[{axis:e},o[s],c[t]])}))})),Object.keys(r).forEach((t=>{const e=r[t];Object(n.J)(e,[n.Nb.scales[e.type],n.Nb.scale])})),r}(t,e)}function It(t){return(t=t||{}).datasets=t.datasets||[],t.labels=t.labels||[],t}const Ft=new Map,Vt=new Set;function Bt(t,e){let i=Ft.get(t);return i||(i=e(),Ft.set(t,i),Vt.add(i)),i}const Nt=(t,e,i)=>{const o=Object(n.Pb)(e,i);void 0!==o&&t.add(o)};class Wt{constructor(t){this._config=function(t){return(t=t||{}).data=It(t.data),Rt(t),t}(t),this._scopeCache=new Map,this._resolverCache=new Map}get type(){return this._config.type}set type(t){this._config.type=t}get data(){return this._config.data}set data(t){this._config.data=It(t)}get options(){return this._config.options}set options(t){this._config.options=t}get plugins(){return this._config.plugins}update(){const t=this._config;this.clearCache(),Rt(t)}clearCache(){this._scopeCache.clear(),this._resolverCache.clear()}datasetScopeKeys(t){return Bt(t,(()=>[[`datasets.${t}`,\"\"]]))}datasetAnimationScopeKeys(t,e){return Bt(`${t}.transition.${e}`,(()=>[[`datasets.${t}.transitions.${e}`,`transitions.${e}`],[`datasets.${t}`,\"\"]]))}datasetElementScopeKeys(t,e){return Bt(`${t}-${e}`,(()=>[[`datasets.${t}.elements.${e}`,`datasets.${t}`,`elements.${e}`,\"\"]]))}pluginScopeKeys(t){const e=t.id;return Bt(`${this.type}-plugin-${e}`,(()=>[[`plugins.${e}`,...t.additionalOptionScopes||[]]]))}_cachedScopes(t,e){const i=this._scopeCache;let n=i.get(t);return n&&!e||(n=new Map,i.set(t,n)),n}getOptionScopes(t,e,i){const{options:o,type:s}=this,a=this._cachedScopes(t,i),r=a.get(e);if(r)return r;const l=new Set;e.forEach((e=>{t&&(l.add(t),e.forEach((e=>Nt(l,t,e)))),e.forEach((t=>Nt(l,o,t))),e.forEach((t=>Nt(l,n.A[s]||{},t))),e.forEach((t=>Nt(l,n.Nb,t))),e.forEach((t=>Nt(l,n.E,t)))}));const c=[...l];return Vt.has(e)&&a.set(e,c),c}chartOptionScopes(){const{options:t,type:e}=this;return[t,n.A[e]||{},n.Nb.datasets[e]||{},{type:e},n.Nb,n.E]}resolveNamedOptions(t,e,i,o=[\"\"]){const s={$shared:!0},{resolver:a,subPrefixes:r}=Ht(this._resolverCache,t,o);let l=a;if(function(t,e){const{isScriptable:i,isIndexable:o}=Object(n.I)(t);for(const s of e)if(i(s)&&Object(n.F)(t[s])||o(s)&&Object(n.Lb)(t[s]))return!0;return!1}(a,e)){s.$shared=!1,i=Object(n.F)(i)?i():i;const e=this.createResolver(t,i,r);l=Object(n.G)(a,i,e)}for(const n of e)s[n]=l[n];return s}createResolver(t,e,i=[\"\"],o){const{resolver:s}=Ht(this._resolverCache,t,i);return Object(n.Sb)(e)?Object(n.G)(s,e,void 0,o):s}}function Ht(t,e,i){let o=t.get(e);o||(o=new Map,t.set(e,o));const s=i.join();let a=o.get(s);if(!a){a={resolver:Object(n.H)(e,i),subPrefixes:i.filter((t=>!t.toLowerCase().includes(\"hover\")))},o.set(s,a)}return a}const $t=[\"top\",\"bottom\",\"left\",\"right\",\"chartArea\"];function Ut(t,e){return\"top\"===t||\"bottom\"===t||-1===$t.indexOf(t)&&\"x\"===e}function Yt(t,e){return function(i,n){return i[t]===n[t]?i[e]-n[e]:i[t]-n[t]}}function Xt(t){const e=t.chart,i=e.options.animation;e.notifyPlugins(\"afterRender\"),Object(n.o)(i&&i.onComplete,[t],e)}function Kt(t){const e=t.chart,i=e.options.animation;Object(n.o)(i&&i.onProgress,[t],e)}function Qt(){return\"undefined\"!==typeof window&&\"undefined\"!==typeof document}function qt(t){return Qt()&&\"string\"===typeof t?t=document.getElementById(t):t&&t.length&&(t=t[0]),t&&t.canvas&&(t=t.canvas),t}const Gt={},Jt=t=>{const e=qt(t);return Object.values(Gt).filter((t=>t.canvas===e)).pop()};class Zt{constructor(t,e){const i=this;this.config=e=new Wt(e);const s=qt(t),a=Jt(s);if(a)throw new Error(\"Canvas is already in use. Chart with ID '\"+a.id+\"' must be destroyed before the canvas can be reused.\");const r=e.createResolver(e.chartOptionScopes(),i.getContext());this.platform=i._initializePlatform(s,e);const l=i.platform.acquireContext(s,r.aspectRatio),c=l&&l.canvas,h=c&&c.height,d=c&&c.width;this.id=Object(n.K)(),this.ctx=l,this.canvas=c,this.width=d,this.height=h,this._options=r,this._aspectRatio=this.aspectRatio,this._layers=[],this._metasets=[],this._stacks=void 0,this.boxes=[],this.currentDevicePixelRatio=void 0,this.chartArea=void 0,this._active=[],this._lastEvent=void 0,this._listeners={},this._sortedMetasets=[],this.scales={},this.scale=void 0,this._plugins=new At,this.$proxies={},this._hiddenIndices={},this.attached=!1,this._animationsDisabled=void 0,this.$context=void 0,this._doResize=Object(n.L)((()=>this.update(\"resize\")),r.resizeDelay||0),Gt[i.id]=i,l&&c?(o.listen(i,\"complete\",Xt),o.listen(i,\"progress\",Kt),i._initialize(),i.attached&&i.update()):console.error(\"Failed to create chart: can't acquire context from the given item\")}get aspectRatio(){const{options:{aspectRatio:t,maintainAspectRatio:e},width:i,height:o,_aspectRatio:s}=this;return Object(n.Tb)(t)?e&&s?s:o?i/o:null:t}get data(){return this.config.data}set data(t){this.config.data=t}get options(){return this._options}set options(t){this.config.options=t}_initialize(){const t=this;return t.notifyPlugins(\"beforeInit\"),t.options.responsive?t.resize():Object(n.M)(t,t.options.devicePixelRatio),t.bindEvents(),t.notifyPlugins(\"afterInit\"),t}_initializePlatform(t,e){return e.platform?new e.platform:!Qt()||\"undefined\"!==typeof OffscreenCanvas&&t instanceof OffscreenCanvas?new nt:new bt}clear(){return Object(n.lb)(this.canvas,this.ctx),this}stop(){return o.stop(this),this}resize(t,e){o.running(this)?this._resizeBeforeDraw={width:t,height:e}:this._resize(t,e)}_resize(t,e){const i=this,o=i.options,s=i.canvas,a=o.maintainAspectRatio&&i.aspectRatio,r=i.platform.getMaximumSize(s,t,e,a),l=i.currentDevicePixelRatio,c=o.devicePixelRatio||i.platform.getDevicePixelRatio();i.width===r.width&&i.height===r.height&&l===c||(i.width=r.width,i.height=r.height,i._aspectRatio=i.aspectRatio,Object(n.M)(i,c,!0),i.notifyPlugins(\"resize\",{size:r}),Object(n.o)(o.onResize,[i,r],i),i.attached&&i._doResize()&&i.render())}ensureScalesHaveIDs(){const t=this.options.scales||{};Object(n.e)(t,((t,e)=>{t.id=e}))}buildOrUpdateScales(){const t=this,e=t.options,i=e.scales,o=t.scales,s=Object.keys(o).reduce(((t,e)=>(t[e]=!1,t)),{});let a=[];i&&(a=a.concat(Object.keys(i).map((t=>{const e=i[t],n=zt(t,e),o=\"r\"===n,s=\"x\"===n;return{options:e,dposition:o?\"chartArea\":s?\"bottom\":\"left\",dtype:o?\"radialLinear\":s?\"category\":\"linear\"}})))),Object(n.e)(a,(i=>{const a=i.options,r=a.id,l=zt(r,a),c=Object(n.fc)(a.type,i.dtype);void 0!==a.position&&Ut(a.position,l)===Ut(i.dposition)||(a.position=i.dposition),s[r]=!0;let h=null;if(r in o&&o[r].type===c)h=o[r];else{h=new(Ct.getScale(c))({id:r,type:c,ctx:t.ctx,chart:t}),o[h.id]=h}h.init(a,e)})),Object(n.e)(s,((t,e)=>{t||delete o[e]})),Object(n.e)(o,(e=>{et.configure(t,e,e.options),et.addBox(t,e)}))}_updateMetasetIndex(t,e){const i=this._metasets,n=t.index;n!==e&&(i[n]=i[e],i[e]=t,t.index=e)}_updateMetasets(){const t=this,e=t._metasets,i=t.data.datasets.length,n=e.length;if(n>i){for(let e=i;e<n;++e)t._destroyDatasetMeta(e);e.splice(i,n-i)}t._sortedMetasets=e.slice(0).sort(Yt(\"order\",\"index\"))}_removeUnreferencedMetasets(){const t=this,{_metasets:e,data:{datasets:i}}=t;e.length>i.length&&delete t._stacks,e.forEach(((e,n)=>{0===i.filter((t=>t===e._dataset)).length&&t._destroyDatasetMeta(n)}))}buildOrUpdateControllers(){const t=this,e=[],i=t.data.datasets;let o,s;for(t._removeUnreferencedMetasets(),o=0,s=i.length;o<s;o++){const s=i[o];let a=t.getDatasetMeta(o);const r=s.type||t.config.type;if(a.type&&a.type!==r&&(t._destroyDatasetMeta(o),a=t.getDatasetMeta(o)),a.type=r,a.indexAxis=s.indexAxis||Et(r,t.options),a.order=s.order||0,t._updateMetasetIndex(a,o),a.label=\"\"+s.label,a.visible=t.isDatasetVisible(o),a.controller)a.controller.updateIndex(o),a.controller.linkScales();else{const i=Ct.getController(r),{datasetElementType:s,dataElementType:l}=n.Nb.datasets[r];Object.assign(i.prototype,{dataElementType:Ct.getElement(l),datasetElementType:s&&Ct.getElement(s)}),a.controller=new i(t,o),e.push(a.controller)}}return t._updateMetasets(),e}_resetElements(){const t=this;Object(n.e)(t.data.datasets,((e,i)=>{t.getDatasetMeta(i).controller.reset()}),t)}reset(){this._resetElements(),this.notifyPlugins(\"reset\")}update(t){const e=this,i=e.config;i.update(),e._options=i.createResolver(i.chartOptionScopes(),e.getContext()),Object(n.e)(e.scales,(t=>{et.removeBox(e,t)}));const o=e._animationsDisabled=!e.options.animation;e.ensureScalesHaveIDs(),e.buildOrUpdateScales();const s=new Set(Object.keys(e._listeners)),a=new Set(e.options.events);if(Object(n.mb)(s,a)||(e.unbindEvents(),e.bindEvents()),e._plugins.invalidate(),!1===e.notifyPlugins(\"beforeUpdate\",{mode:t,cancelable:!0}))return;const r=e.buildOrUpdateControllers();e.notifyPlugins(\"beforeElementsUpdate\");let l=0;for(let n=0,c=e.data.datasets.length;n<c;n++){const{controller:t}=e.getDatasetMeta(n),i=!o&&-1===r.indexOf(t);t.buildOrUpdateElements(i),l=Math.max(+t.getMaxOverflow(),l)}e._minPadding=l,e._updateLayout(l),o||Object(n.e)(r,(t=>{t.reset()})),e._updateDatasets(t),e.notifyPlugins(\"afterUpdate\",{mode:t}),e._layers.sort(Yt(\"z\",\"_idx\")),e._lastEvent&&e._eventHandler(e._lastEvent,!0),e.render()}_updateLayout(t){const e=this;if(!1===e.notifyPlugins(\"beforeLayout\",{cancelable:!0}))return;et.update(e,e.width,e.height,t);const i=e.chartArea,o=i.width<=0||i.height<=0;e._layers=[],Object(n.e)(e.boxes,(t=>{o&&\"chartArea\"===t.position||(t.configure&&t.configure(),e._layers.push(...t._layers()))}),e),e._layers.forEach(((t,e)=>{t._idx=e})),e.notifyPlugins(\"afterLayout\")}_updateDatasets(t){const e=this,i=\"function\"===typeof t;if(!1!==e.notifyPlugins(\"beforeDatasetsUpdate\",{mode:t,cancelable:!0})){for(let n=0,o=e.data.datasets.length;n<o;++n)e._updateDataset(n,i?t({datasetIndex:n}):t);e.notifyPlugins(\"afterDatasetsUpdate\",{mode:t})}}_updateDataset(t,e){const i=this,n=i.getDatasetMeta(t),o={meta:n,index:t,mode:e,cancelable:!0};!1!==i.notifyPlugins(\"beforeDatasetUpdate\",o)&&(n.controller._update(e),o.cancelable=!1,i.notifyPlugins(\"afterDatasetUpdate\",o))}render(){const t=this;!1!==t.notifyPlugins(\"beforeRender\",{cancelable:!0})&&(o.has(t)?t.attached&&!o.running(t)&&o.start(t):(t.draw(),Xt({chart:t})))}draw(){const t=this;let e;if(t._resizeBeforeDraw){const{width:e,height:i}=t._resizeBeforeDraw;t._resize(e,i),t._resizeBeforeDraw=null}if(t.clear(),t.width<=0||t.height<=0)return;if(!1===t.notifyPlugins(\"beforeDraw\",{cancelable:!0}))return;const i=t._layers;for(e=0;e<i.length&&i[e].z<=0;++e)i[e].draw(t.chartArea);for(t._drawDatasets();e<i.length;++e)i[e].draw(t.chartArea);t.notifyPlugins(\"afterDraw\")}_getSortedDatasetMetas(t){const e=this._sortedMetasets,i=[];let n,o;for(n=0,o=e.length;n<o;++n){const o=e[n];t&&!o.visible||i.push(o)}return i}getSortedVisibleDatasetMetas(){return this._getSortedDatasetMetas(!0)}_drawDatasets(){const t=this;if(!1===t.notifyPlugins(\"beforeDatasetsDraw\",{cancelable:!0}))return;const e=t.getSortedVisibleDatasetMetas();for(let i=e.length-1;i>=0;--i)t._drawDataset(e[i]);t.notifyPlugins(\"afterDatasetsDraw\")}_drawDataset(t){const e=this,i=e.ctx,o=t._clip,s=e.chartArea,a={meta:t,index:t.index,cancelable:!0};!1!==e.notifyPlugins(\"beforeDatasetDraw\",a)&&(Object(n.Ub)(i,{left:!1===o.left?0:s.left-o.left,right:!1===o.right?e.width:s.right+o.right,top:!1===o.top?0:s.top-o.top,bottom:!1===o.bottom?e.height:s.bottom+o.bottom}),t.controller.draw(),Object(n.Wb)(i),a.cancelable=!1,e.notifyPlugins(\"afterDatasetDraw\",a))}getElementsAtEventForMode(t,e,i,n){const o=$.modes[e];return\"function\"===typeof o?o(this,t,i,n):[]}getDatasetMeta(t){const e=this.data.datasets[t],i=this._metasets;let n=i.filter((t=>t&&t._dataset===e)).pop();return n||(n=i[t]={type:null,data:[],dataset:null,controller:null,hidden:null,xAxisID:null,yAxisID:null,order:e&&e.order||0,index:t,_dataset:e,_parsed:[],_sorted:!1}),n}getContext(){return this.$context||(this.$context={chart:this,type:\"chart\"})}getVisibleDatasetCount(){return this.getSortedVisibleDatasetMetas().length}isDatasetVisible(t){const e=this.data.datasets[t];if(!e)return!1;const i=this.getDatasetMeta(t);return\"boolean\"===typeof i.hidden?!i.hidden:!e.hidden}setDatasetVisibility(t,e){this.getDatasetMeta(t).hidden=!e}toggleDataVisibility(t){this._hiddenIndices[t]=!this._hiddenIndices[t]}getDataVisibility(t){return!this._hiddenIndices[t]}_updateDatasetVisibility(t,e){const i=this,n=e?\"show\":\"hide\",o=i.getDatasetMeta(t),s=o.controller._resolveAnimations(void 0,n);i.setDatasetVisibility(t,e),s.update(o,{visible:e}),i.update((e=>e.datasetIndex===t?n:void 0))}hide(t){this._updateDatasetVisibility(t,!1)}show(t){this._updateDatasetVisibility(t,!0)}_destroyDatasetMeta(t){const e=this,i=e._metasets&&e._metasets[t];i&&i.controller&&(i.controller._destroy(),delete e._metasets[t])}destroy(){const t=this,{canvas:e,ctx:i}=t;let s,a;for(t.stop(),o.remove(t),s=0,a=t.data.datasets.length;s<a;++s)t._destroyDatasetMeta(s);t.config.clearCache(),e&&(t.unbindEvents(),Object(n.lb)(e,i),t.platform.releaseContext(i),t.canvas=null,t.ctx=null),t.notifyPlugins(\"destroy\"),delete Gt[t.id]}toBase64Image(...t){return this.canvas.toDataURL(...t)}bindEvents(){const t=this,e=t._listeners,i=t.platform,o=(n,o)=>{i.addEventListener(t,n,o),e[n]=o},s=(n,o)=>{e[n]&&(i.removeEventListener(t,n,o),delete e[n])};let a=function(e,i,n){e.offsetX=i,e.offsetY=n,t._eventHandler(e)};if(Object(n.e)(t.options.events,(t=>o(t,a))),t.options.responsive){let e;a=(e,i)=>{t.canvas&&t.resize(e,i)};const n=()=>{s(\"attach\",n),t.attached=!0,t.resize(),o(\"resize\",a),o(\"detach\",e)};e=()=>{t.attached=!1,s(\"resize\",a),o(\"attach\",n)},i.isAttached(t.canvas)?n():e()}else t.attached=!0}unbindEvents(){const t=this,e=t._listeners;e&&(t._listeners={},Object(n.e)(e,((e,i)=>{t.platform.removeEventListener(t,i,e)})))}updateHoverStyle(t,e,i){const n=i?\"set\":\"remove\";let o,s,a,r;for(\"dataset\"===e&&(o=this.getDatasetMeta(t[0].datasetIndex),o.controller[\"_\"+n+\"DatasetHoverStyle\"]()),a=0,r=t.length;a<r;++a){s=t[a];const e=s&&this.getDatasetMeta(s.datasetIndex).controller;e&&e[n+\"HoverStyle\"](s.element,s.datasetIndex,s.index)}}getActiveElements(){return this._active||[]}setActiveElements(t){const e=this,i=e._active||[],o=t.map((({datasetIndex:t,index:i})=>{const n=e.getDatasetMeta(t);if(!n)throw new Error(\"No dataset found at index \"+t);return{datasetIndex:t,element:n.data[i],index:i}}));!Object(n.nb)(o,i)&&(e._active=o,e._updateHoverStyles(o,i))}notifyPlugins(t,e,i){return this._plugins.notify(this,t,e,i)}_updateHoverStyles(t,e,i){const n=this,o=n.options.hover,s=(t,e)=>t.filter((t=>!e.some((e=>t.datasetIndex===e.datasetIndex&&t.index===e.index)))),a=s(e,t),r=i?t:s(t,e);a.length&&n.updateHoverStyle(a,o.mode,!1),r.length&&o.mode&&n.updateHoverStyle(r,o.mode,!0)}_eventHandler(t,e){const i=this,n={event:t,replay:e,cancelable:!0},o=e=>(e.options.events||this.options.events).includes(t.type);if(!1===i.notifyPlugins(\"beforeEvent\",n,o))return;const s=i._handleEvent(t,e);return n.cancelable=!1,i.notifyPlugins(\"afterEvent\",n,o),(s||n.changed)&&i.render(),i}_handleEvent(t,e){const i=this,{_active:o=[],options:s}=i,a=s.hover,r=e;let l=[],c=!1,h=null;return\"mouseout\"!==t.type&&(l=i.getElementsAtEventForMode(t,a.mode,a,r),h=\"click\"===t.type?i._lastEvent:t),i._lastEvent=null,Object(n.b)(t,i.chartArea,i._minPadding)&&(Object(n.o)(s.onHover,[t,l,i],i),\"mouseup\"!==t.type&&\"click\"!==t.type&&\"contextmenu\"!==t.type||Object(n.o)(s.onClick,[t,l,i],i)),c=!Object(n.nb)(l,o),(c||e)&&(i._active=l,i._updateHoverStyles(l,o,e)),i._lastEvent=h,c}}const te=()=>Object(n.e)(Zt.instances,(t=>t._plugins.invalidate())),ee=!0;function ie(t,e){const{startAngle:i,endAngle:o,pixelMargin:s,x:a,y:r,outerRadius:l,innerRadius:c}=e;let h=s/l;t.beginPath(),t.arc(a,r,l,i-h,o+h),c>s?(h=s/c,t.arc(a,r,c,o+h,i-h,!0)):t.arc(a,r,s,o+n.i,i-n.i),t.closePath(),t.clip()}function ne(t,e,i,o){const s=(a=t.options.borderRadius,Object(n.pb)(a,[\"outerStart\",\"outerEnd\",\"innerStart\",\"innerEnd\"]));var a;const r=(i-e)/2,l=Math.min(r,o*e/2),c=t=>{const e=(i-Math.min(r,t))*o/2;return Object(n.hc)(t,0,Math.min(r,e))};return{outerStart:c(s.outerStart),outerEnd:c(s.outerEnd),innerStart:Object(n.hc)(s.innerStart,0,l),innerEnd:Object(n.hc)(s.innerEnd,0,l)}}function oe(t,e,i,n){return{x:i+t*Math.cos(e),y:n+t*Math.sin(e)}}function se(t,e){const{x:i,y:o,startAngle:s,endAngle:a,pixelMargin:r}=e,l=Math.max(e.outerRadius-r,0),c=e.innerRadius+r,{outerStart:h,outerEnd:d,innerStart:u,innerEnd:g}=ne(e,c,l,a-s),f=l-h,p=l-d,b=s+h/f,m=a-d/p,x=c+u,_=c+g,y=s+u/x,v=a-g/_;if(t.beginPath(),t.arc(i,o,l,b,m),d>0){const e=oe(p,m,i,o);t.arc(e.x,e.y,d,m,a+n.i)}const O=oe(_,a,i,o);if(t.lineTo(O.x,O.y),g>0){const e=oe(_,v,i,o);t.arc(e.x,e.y,g,a+n.i,v+Math.PI)}if(t.arc(i,o,c,a-g/c,s+u/c,!0),u>0){const e=oe(x,y,i,o);t.arc(e.x,e.y,u,y+Math.PI,s-n.i)}const j=oe(f,s,i,o);if(t.lineTo(j.x,j.y),h>0){const e=oe(f,b,i,o);t.arc(e.x,e.y,h,s-n.i,b)}t.closePath()}function ae(t,e){const{options:i}=e,o=\"inner\"===i.borderAlign;i.borderWidth&&(o?(t.lineWidth=2*i.borderWidth,t.lineJoin=\"round\"):(t.lineWidth=i.borderWidth,t.lineJoin=\"bevel\"),e.fullCircles&&function(t,e,i){const{x:o,y:s,startAngle:a,endAngle:r,pixelMargin:l}=e,c=Math.max(e.outerRadius-l,0),h=e.innerRadius+l;let d;for(i&&(e.endAngle=e.startAngle+n.u,ie(t,e),e.endAngle=r,e.endAngle===e.startAngle&&(e.endAngle+=n.u,e.fullCircles--)),t.beginPath(),t.arc(o,s,h,a+n.u,a,!0),d=0;d<e.fullCircles;++d)t.stroke();for(t.beginPath(),t.arc(o,s,c,a,a+n.u),d=0;d<e.fullCircles;++d)t.stroke()}(t,e,o),o&&ie(t,e),se(t,e),t.stroke())}Object.defineProperties(Zt,{defaults:{enumerable:ee,value:n.Nb},instances:{enumerable:ee,value:Gt},overrides:{enumerable:ee,value:n.A},registry:{enumerable:ee,value:Ct},version:{enumerable:ee,value:\"3.2.1\"},getChart:{enumerable:ee,value:Jt},register:{enumerable:ee,value:(...t)=>{Ct.add(...t),te()}},unregister:{enumerable:ee,value:(...t)=>{Ct.remove(...t),te()}}});class re extends mt{constructor(t){super(),this.options=void 0,this.circumference=void 0,this.startAngle=void 0,this.endAngle=void 0,this.innerRadius=void 0,this.outerRadius=void 0,this.pixelMargin=0,this.fullCircles=0,t&&Object.assign(this,t)}inRange(t,e,i){const o=this.getProps([\"x\",\"y\"],i),{angle:s,distance:a}=Object(n.ob)(o,{x:t,y:e}),{startAngle:r,endAngle:l,innerRadius:c,outerRadius:h,circumference:d}=this.getProps([\"startAngle\",\"endAngle\",\"innerRadius\",\"outerRadius\",\"circumference\"],i);return(d>=n.u||Object(n.ac)(s,r,l))&&(a>=c&&a<=h)}getCenterPoint(t){const{x:e,y:i,startAngle:n,endAngle:o,innerRadius:s,outerRadius:a}=this.getProps([\"x\",\"y\",\"startAngle\",\"endAngle\",\"innerRadius\",\"outerRadius\"],t),r=(n+o)/2,l=(s+a)/2;return{x:e+Math.cos(r)*l,y:i+Math.sin(r)*l}}tooltipPosition(t){return this.getCenterPoint(t)}draw(t){const e=this,i=e.options,o=i.offset||0;if(e.pixelMargin=\"inner\"===i.borderAlign?.33:0,e.fullCircles=Math.floor(e.circumference/n.u),!(0===e.circumference||e.innerRadius<0||e.outerRadius<0)){if(t.save(),o&&e.circumference<n.u){const i=(e.startAngle+e.endAngle)/2;t.translate(Math.cos(i)*o,Math.sin(i)*o)}t.fillStyle=i.backgroundColor,t.strokeStyle=i.borderColor,function(t,e){if(e.fullCircles){e.endAngle=e.startAngle+n.u,se(t,e);for(let i=0;i<e.fullCircles;++i)t.fill()}isNaN(e.circumference)||(e.endAngle=e.startAngle+e.circumference%n.u),se(t,e),t.fill()}(t,e),ae(t,e),t.restore()}}}function le(t,e,i=e){t.lineCap=Object(n.fc)(i.borderCapStyle,e.borderCapStyle),t.setLineDash(Object(n.fc)(i.borderDash,e.borderDash)),t.lineDashOffset=Object(n.fc)(i.borderDashOffset,e.borderDashOffset),t.lineJoin=Object(n.fc)(i.borderJoinStyle,e.borderJoinStyle),t.lineWidth=Object(n.fc)(i.borderWidth,e.borderWidth),t.strokeStyle=Object(n.fc)(i.borderColor,e.borderColor)}function ce(t,e,i){t.lineTo(i.x,i.y)}function he(t,e,i={}){const n=t.length,{start:o=0,end:s=n-1}=i,{start:a,end:r}=e,l=Math.max(o,a),c=Math.min(s,r),h=o<a&&s<a||o>r&&s>r;return{count:n,start:l,loop:e.loop,ilen:c<l&&!h?n+c-l:c-l}}function de(t,e,i,o){const{points:s,options:a}=e,{count:r,start:l,loop:c,ilen:h}=he(s,i,o),d=function(t){return t.stepped?n.wb:t.tension||\"monotone\"===t.cubicInterpolationMode?n.xb:ce}(a);let u,g,f,{move:p=!0,reverse:b}=o||{};for(u=0;u<=h;++u)g=s[(l+(b?h-u:u))%r],g.skip||(p?(t.moveTo(g.x,g.y),p=!1):d(t,f,g,b,a.stepped),f=g);return c&&(g=s[(l+(b?h:0))%r],d(t,f,g,b,a.stepped)),!!c}function ue(t,e,i,n){const o=e.points,{count:s,start:a,ilen:r}=he(o,i,n),{move:l=!0,reverse:c}=n||{};let h,d,u,g,f,p,b=0,m=0;const x=t=>(a+(c?r-t:t))%s,_=()=>{g!==f&&(t.lineTo(b,f),t.lineTo(b,g),t.lineTo(b,p))};for(l&&(d=o[x(0)],t.moveTo(d.x,d.y)),h=0;h<=r;++h){if(d=o[x(h)],d.skip)continue;const e=d.x,i=d.y,n=0|e;n===u?(i<g?g=i:i>f&&(f=i),b=(m*b+e)/++m):(_(),t.lineTo(e,i),u=n,m=0,g=f=i),p=i}_()}function ge(t){const e=t.options,i=e.borderDash&&e.borderDash.length;return!t._decimated&&!t._loop&&!e.tension&&\"monotone\"!==e.cubicInterpolationMode&&!e.stepped&&!i?ue:de}re.id=\"arc\",re.defaults={borderAlign:\"center\",borderColor:\"#fff\",borderRadius:0,borderWidth:2,offset:0,angle:void 0},re.defaultRoutes={backgroundColor:\"backgroundColor\"};const fe=\"function\"===typeof Path2D;function pe(t,e,i,n){fe&&1===e.segments.length?function(t,e,i,n){let o=e._path;o||(o=e._path=new Path2D,e.path(o,i,n)&&o.closePath()),le(t,e.options),t.stroke(o)}(t,e,i,n):function(t,e,i,n){const{segments:o,options:s}=e,a=ge(e);for(const r of o)le(t,s,r.style),t.beginPath(),a(t,e,r,{start:i,end:i+n-1})&&t.closePath(),t.stroke()}(t,e,i,n)}class be extends mt{constructor(t){super(),this.animated=!0,this.options=void 0,this._loop=void 0,this._fullLoop=void 0,this._path=void 0,this._points=void 0,this._segments=void 0,this._decimated=!1,this._pointsUpdated=!1,t&&Object.assign(this,t)}updateControlPoints(t){const e=this,i=e.options;if((i.tension||\"monotone\"===i.cubicInterpolationMode)&&!i.stepped&&!e._pointsUpdated){const o=i.spanGaps?e._loop:e._fullLoop;Object(n.qb)(e._points,i,t,o),e._pointsUpdated=!0}}set points(t){const e=this;e._points=t,delete e._segments,delete e._path,e._pointsUpdated=!1}get points(){return this._points}get segments(){return this._segments||(this._segments=Object(n.rb)(this,this.options.segment))}first(){const t=this.segments,e=this.points;return t.length&&e[t[0].start]}last(){const t=this.segments,e=this.points,i=t.length;return i&&e[t[i-1].end]}interpolate(t,e){const i=this,o=i.options,s=t[e],a=i.points,r=Object(n.sb)(i,{property:e,start:s,end:s});if(!r.length)return;const l=[],c=function(t){return t.stepped?n.tb:t.tension||\"monotone\"===t.cubicInterpolationMode?n.ub:n.vb}(o);let h,d;for(h=0,d=r.length;h<d;++h){const{start:i,end:n}=r[h],d=a[i],u=a[n];if(d===u){l.push(d);continue}const g=c(d,u,Math.abs((s-d[e])/(u[e]-d[e])),o.stepped);g[e]=t[e],l.push(g)}return 1===l.length?l[0]:l}pathSegment(t,e,i){return ge(this)(t,this,e,i)}path(t,e,i){const n=this,o=n.segments,s=ge(n);let a=n._loop;e=e||0,i=i||n.points.length-e;for(const r of o)a&=s(t,n,r,{start:e,end:e+i-1});return!!a}draw(t,e,i,n){const o=this,s=o.options||{};(o.points||[]).length&&s.borderWidth&&(t.save(),pe(t,o,i,n),t.restore(),o.animated&&(o._pointsUpdated=!1,o._path=void 0))}}function me(t,e,i,n){const o=t.options,{[i]:s}=t.getProps([i],n);return Math.abs(e-s)<o.radius+o.hitRadius}be.id=\"line\",be.defaults={borderCapStyle:\"butt\",borderDash:[],borderDashOffset:0,borderJoinStyle:\"miter\",borderWidth:3,capBezierPoints:!0,cubicInterpolationMode:\"default\",fill:!1,spanGaps:!1,stepped:!1,tension:0},be.defaultRoutes={backgroundColor:\"backgroundColor\",borderColor:\"borderColor\"},be.descriptors={_scriptable:!0,_indexable:t=>\"borderDash\"!==t&&\"fill\"!==t};class xe extends mt{constructor(t){super(),this.options=void 0,this.parsed=void 0,this.skip=void 0,this.stop=void 0,t&&Object.assign(this,t)}inRange(t,e,i){const n=this.options,{x:o,y:s}=this.getProps([\"x\",\"y\"],i);return Math.pow(t-o,2)+Math.pow(e-s,2)<Math.pow(n.hitRadius+n.radius,2)}inXRange(t,e){return me(this,t,\"x\",e)}inYRange(t,e){return me(this,t,\"y\",e)}getCenterPoint(t){const{x:e,y:i}=this.getProps([\"x\",\"y\"],t);return{x:e,y:i}}size(t){let e=(t=t||this.options||{}).radius||0;e=Math.max(e,e&&t.hoverRadius||0);return 2*(e+(e&&t.borderWidth||0))}draw(t){const e=this,i=e.options;e.skip||i.radius<.1||(t.strokeStyle=i.borderColor,t.lineWidth=i.borderWidth,t.fillStyle=i.backgroundColor,Object(n.yb)(t,i,e.x,e.y))}getRange(){const t=this.options||{};return t.radius+t.hitRadius}}function _e(t,e){const{x:i,y:n,base:o,width:s,height:a}=t.getProps([\"x\",\"y\",\"base\",\"width\",\"height\"],e);let r,l,c,h,d;return t.horizontal?(d=a/2,r=Math.min(i,o),l=Math.max(i,o),c=n-d,h=n+d):(d=s/2,r=i-d,l=i+d,c=Math.min(n,o),h=Math.max(n,o)),{left:r,top:c,right:l,bottom:h}}function ye(t){let e=t.options.borderSkipped;const i={};return e?(e=t.horizontal?ve(e,\"left\",\"right\",t.base>t.x):ve(e,\"bottom\",\"top\",t.base<t.y),i[e]=!0,i):i}function ve(t,e,i,n){var o,s,a;return n?(a=i,t=Oe(t=(o=t)===(s=e)?a:o===a?s:o,i,e)):t=Oe(t,e,i),t}function Oe(t,e,i){return\"start\"===t?e:\"end\"===t?i:t}function je(t,e,i,n){return t?0:Math.max(Math.min(e,n),i)}function we(t){const e=_e(t),i=e.right-e.left,o=e.bottom-e.top,s=function(t,e,i){const o=t.options.borderWidth,s=ye(t),a=Object(n.Ab)(o);return{t:je(s.top,a.top,0,i),r:je(s.right,a.right,0,e),b:je(s.bottom,a.bottom,0,i),l:je(s.left,a.left,0,e)}}(t,i/2,o/2),a=function(t,e,i){const{enableBorderRadius:o}=t.getProps([\"enableBorderRadius\"]),s=t.options.borderRadius,a=Object(n.Bb)(s),r=Math.min(e,i),l=ye(t),c=o||Object(n.Sb)(s);return{topLeft:je(!c||l.top||l.left,a.topLeft,0,r),topRight:je(!c||l.top||l.right,a.topRight,0,r),bottomLeft:je(!c||l.bottom||l.left,a.bottomLeft,0,r),bottomRight:je(!c||l.bottom||l.right,a.bottomRight,0,r)}}(t,i/2,o/2);return{outer:{x:e.left,y:e.top,w:i,h:o,radius:a},inner:{x:e.left+s.l,y:e.top+s.t,w:i-s.l-s.r,h:o-s.t-s.b,radius:{topLeft:Math.max(0,a.topLeft-Math.max(s.t,s.l)),topRight:Math.max(0,a.topRight-Math.max(s.t,s.r)),bottomLeft:Math.max(0,a.bottomLeft-Math.max(s.b,s.l)),bottomRight:Math.max(0,a.bottomRight-Math.max(s.b,s.r))}}}}function Me(t,e,i,n){const o=null===e,s=null===i,a=t&&!(o&&s)&&_e(t,n);return a&&(o||e>=a.left&&e<=a.right)&&(s||i>=a.top&&i<=a.bottom)}function ke(t,e){t.rect(e.x,e.y,e.w,e.h)}xe.id=\"point\",xe.defaults={borderWidth:1,hitRadius:1,hoverBorderWidth:1,hoverRadius:4,pointStyle:\"circle\",radius:3,rotation:0},xe.defaultRoutes={backgroundColor:\"backgroundColor\",borderColor:\"borderColor\"};class Se extends mt{constructor(t){super(),this.options=void 0,this.horizontal=void 0,this.base=void 0,this.width=void 0,this.height=void 0,t&&Object.assign(this,t)}draw(t){const e=this.options,{inner:i,outer:o}=we(this),s=(a=o.radius).topLeft||a.topRight||a.bottomLeft||a.bottomRight?n.zb:ke;var a;t.save(),o.w===i.w&&o.h===i.h||(t.beginPath(),s(t,o),t.clip(),s(t,i),t.fillStyle=e.borderColor,t.fill(\"evenodd\")),t.beginPath(),s(t,i),t.fillStyle=e.backgroundColor,t.fill(),t.restore()}inRange(t,e,i){return Me(this,t,e,i)}inXRange(t,e){return Me(this,t,null,e)}inYRange(t,e){return Me(this,null,t,e)}getCenterPoint(t){const{x:e,y:i,base:n,horizontal:o}=this.getProps([\"x\",\"y\",\"base\",\"horizontal\"],t);return{x:o?(e+n)/2:e,y:o?i:(i+n)/2}}getRange(t){return\"x\"===t?this.width/2:this.height/2}}Se.id=\"bar\",Se.defaults={borderSkipped:\"start\",borderWidth:0,borderRadius:0,enableBorderRadius:!0,pointStyle:void 0},Se.defaultRoutes={backgroundColor:\"backgroundColor\",borderColor:\"borderColor\"};var De=Object.freeze({__proto__:null,ArcElement:re,LineElement:be,PointElement:xe,BarElement:Se});function Pe(t){if(t._decimated){const e=t._data;delete t._decimated,delete t._data,Object.defineProperty(t,\"data\",{value:e})}}function Ce(t){t.data.datasets.forEach((t=>{Pe(t)}))}var Ae={id:\"decimation\",defaults:{algorithm:\"min-max\",enabled:!1},beforeElementsUpdate:(t,e,i)=>{if(!i.enabled)return void Ce(t);const o=t.width;t.data.datasets.forEach(((e,s)=>{const{_data:a,indexAxis:r}=e,l=t.getDatasetMeta(s),c=a||e.data;if(\"y\"===Object(n.C)([r,t.options.indexAxis]))return;if(\"line\"!==l.type)return;const h=t.scales[l.xAxisID];if(\"linear\"!==h.type&&\"time\"!==h.type)return;if(t.options.parsing)return;let d,{start:u,count:g}=function(t,e){const i=e.length;let o,s=0;const{iScale:a}=t,{min:r,max:l,minDefined:c,maxDefined:h}=a.getUserBounds();return c&&(s=Object(n.hc)(Object(n.ic)(e,a.axis,r).lo,0,i-1)),o=h?Object(n.hc)(Object(n.ic)(e,a.axis,l).hi+1,s,i)-s:i-s,{start:s,count:o}}(l,c);if(g<=4*o)Pe(e);else{switch(Object(n.Tb)(a)&&(e._data=c,delete e.data,Object.defineProperty(e,\"data\",{configurable:!0,enumerable:!0,get:function(){return this._decimated},set:function(t){this._data=t}})),i.algorithm){case\"lttb\":d=function(t,e,i,n,o){const s=o.samples||n;if(s>=i)return t.slice(e,e+i);const a=[],r=(i-2)/(s-2);let l=0;const c=e+i-1;let h,d,u,g,f,p=e;for(a[l++]=t[p],h=0;h<s-2;h++){let n,o=0,s=0;const c=Math.floor((h+1)*r)+1+e,b=Math.min(Math.floor((h+2)*r)+1,i)+e,m=b-c;for(n=c;n<b;n++)o+=t[n].x,s+=t[n].y;o/=m,s/=m;const x=Math.floor(h*r)+1+e,_=Math.floor((h+1)*r)+1+e,{x:y,y:v}=t[p];for(u=g=-1,n=x;n<_;n++)g=.5*Math.abs((y-o)*(t[n].y-v)-(y-t[n].x)*(s-v)),g>u&&(u=g,d=t[n],f=n);a[l++]=d,p=f}return a[l++]=t[c],a}(c,u,g,o,i);break;case\"min-max\":d=function(t,e,i,o){let s,a,r,l,c,h,d,u,g,f,p=0,b=0;const m=[],x=e+i-1,_=t[e].x,y=t[x].x-_;for(s=e;s<e+i;++s){a=t[s],r=(a.x-_)/y*o,l=a.y;const e=0|r;if(e===c)l<g?(g=l,h=s):l>f&&(f=l,d=s),p=(b*p+a.x)/++b;else{const i=s-1;if(!Object(n.Tb)(h)&&!Object(n.Tb)(d)){const e=Math.min(h,d),n=Math.max(h,d);e!==u&&e!==i&&m.push({...t[e],x:p}),n!==u&&n!==i&&m.push({...t[n],x:p})}s>0&&i!==u&&m.push(t[i]),m.push(a),c=e,b=0,g=f=l,h=d=u=s}}return m}(c,u,g,o);break;default:throw new Error(`Unsupported decimation algorithm '${i.algorithm}'`)}e._decimated=d}}))},destroy(t){Ce(t)}};function Te(t,e,i){const o=function(t){const e=t.options,i=e.fill;let o=Object(n.fc)(i&&i.target,i);return void 0===o&&(o=!!e.backgroundColor),!1!==o&&null!==o&&(!0===o?\"origin\":o)}(t);if(Object(n.Sb)(o))return!isNaN(o.value)&&o;let s=parseFloat(o);return Object(n.Qb)(s)&&Math.floor(s)===s?(\"-\"!==o[0]&&\"+\"!==o[0]||(s=e+s),!(s===e||s<0||s>=i)&&s):[\"origin\",\"start\",\"end\",\"stack\"].indexOf(o)>=0&&o}class Le{constructor(t){this.x=t.x,this.y=t.y,this.radius=t.radius}pathSegment(t,e,i){const{x:o,y:s,radius:a}=this;return e=e||{start:0,end:n.u},t.arc(o,s,a,e.end,e.start,!0),!i.bounds}interpolate(t){const{x:e,y:i,radius:n}=this,o=t.angle;return{x:e+Math.cos(o)*n,y:i+Math.sin(o)*n,angle:o}}}function Ee(t){return(t.scale||{}).getPointPositionForValue?function(t){const{scale:e,fill:i}=t,o=e.options,s=e.getLabels().length,a=[],r=o.reverse?e.max:e.min,l=o.reverse?e.min:e.max;let c,h,d;if(d=\"start\"===i?r:\"end\"===i?l:Object(n.Sb)(i)?i.value:e.getBaseValue(),o.grid.circular)return h=e.getPointPositionForValue(0,r),new Le({x:h.x,y:h.y,radius:e.getDistanceFromCenterForValue(d)});for(c=0;c<s;++c)a.push(e.getPointPositionForValue(c,d));return a}(t):function(t){const{scale:e={},fill:i}=t;let o,s=null;return\"start\"===i?s=e.bottom:\"end\"===i?s=e.top:Object(n.Sb)(i)?s=e.getPixelForValue(i.value):e.getBasePixel&&(s=e.getBasePixel()),Object(n.Qb)(s)?(o=e.isHorizontal(),{x:o?s:null,y:o?null:s}):null}(t)}function ze(t){const{chart:e,scale:i,index:n,line:o}=t,s=[],a=o.segments,r=o.points,l=function(t,e){const i=[],n=t.getSortedVisibleDatasetMetas();for(let o=0;o<n.length;o++){const t=n[o];if(t.index===e)break;Re(t)&&i.unshift(t.dataset)}return i}(e,n);l.push(Ve({x:null,y:i.bottom},o));for(let c=0;c<a.length;c++){const t=a[c];for(let e=t.start;e<=t.end;e++)Ie(s,r[e],l)}return new be({points:s,options:{}})}const Re=t=>\"line\"===t.type&&!t.hidden;function Ie(t,e,i){const n=[];for(let o=0;o<i.length;o++){const s=i[o],{first:a,last:r,point:l}=Fe(s,e,\"x\");if(!(!l||a&&r))if(a)n.unshift(l);else if(t.push(l),!r)break}t.push(...n)}function Fe(t,e,i){const n=t.interpolate(e,i);if(!n)return{};const o=n[i],s=t.segments,a=t.points;let r=!1,l=!1;for(let c=0;c<s.length;c++){const t=s[c],e=a[t.start][i],n=a[t.end][i];if(o>=e&&o<=n){r=o===e,l=o===n;break}}return{first:r,last:l,point:n}}function Ve(t,e){let i=[],o=!1;return Object(n.Lb)(t)?(o=!0,i=t):i=function(t,e){const{x:i=null,y:n=null}=t||{},o=e.points,s=[];return e.segments.forEach((t=>{const e=o[t.start],a=o[t.end];null!==n?(s.push({x:e.x,y:n}),s.push({x:a.x,y:n})):null!==i&&(s.push({x:i,y:e.y}),s.push({x:i,y:a.y}))})),s}(t,e),i.length?new be({points:i,options:{tension:0},_loop:o,_fullLoop:o}):null}function Be(t,e,i){let o=t[e].fill;const s=[e];let a;if(!i)return o;for(;!1!==o&&-1===s.indexOf(o);){if(!Object(n.Qb)(o))return o;if(a=t[o],!a)return!1;if(a.visible)return o;s.push(o),o=a.fill}return!1}function Ne(t,e,i){t.beginPath(),e.path(t),t.lineTo(e.last().x,i),t.lineTo(e.first().x,i),t.closePath(),t.clip()}function We(t,e,i,o){if(o)return;let s=e[t],a=i[t];return\"angle\"===t&&(s=Object(n.Db)(s),a=Object(n.Db)(a)),{property:t,start:s,end:a}}function He(t,e,i,n){return t&&e?n(t[i],e[i]):t?t[i]:e?e[i]:0}function $e(t,e,i){const{top:n,bottom:o}=e.chart.chartArea,{property:s,start:a,end:r}=i||{};\"x\"===s&&(t.beginPath(),t.rect(a,n,r-a,o-n),t.clip())}function Ue(t,e,i,n){const o=e.interpolate(i,n);o&&t.lineTo(o.x,o.y)}function Ye(t,e){const{line:i,target:o,property:s,color:a,scale:r}=e,l=function(t,e,i){const o=t.segments,s=t.points,a=e.points,r=[];for(const l of o){const t=We(i,s[l.start],s[l.end],l.loop);if(!e.segments){r.push({source:l,target:t,start:s[l.start],end:s[l.end]});continue}const o=Object(n.sb)(e,t);for(const e of o){const o=We(i,a[e.start],a[e.end],e.loop),c=Object(n.Cb)(l,s,o);for(const n of c)r.push({source:n,target:e,start:{[i]:He(t,o,\"start\",Math.max)},end:{[i]:He(t,o,\"end\",Math.min)}})}}return r}(i,o,s);for(const{source:n,target:c,start:h,end:d}of l){const{style:{backgroundColor:e=a}={}}=n;t.save(),t.fillStyle=e,$e(t,r,We(s,h,d)),t.beginPath();const l=!!i.pathSegment(t,n);l?t.closePath():Ue(t,o,d,s);const u=!!o.pathSegment(t,c,{move:l,reverse:!0}),g=l&&u;g||Ue(t,o,h,s),t.closePath(),t.fill(g?\"evenodd\":\"nonzero\"),t.restore()}}function Xe(t,e,i){const o=function(t){const{chart:e,fill:i,line:o}=t;if(Object(n.Qb)(i))return function(t,e){const i=t.getDatasetMeta(e);return i&&t.isDatasetVisible(e)?i.dataset:null}(e,i);if(\"stack\"===i)return ze(t);const s=Ee(t);return s instanceof Le?s:Ve(s,o)}(e),{line:s,scale:a,axis:r}=e,l=s.options,c=l.fill,h=l.backgroundColor,{above:d=h,below:u=h}=c||{};o&&s.points.length&&(Object(n.Ub)(t,i),function(t,e){const{line:i,target:n,above:o,below:s,area:a,scale:r}=e,l=i._loop?\"angle\":e.axis;t.save(),\"x\"===l&&s!==o&&(Ne(t,n,a.top),Ye(t,{line:i,target:n,color:o,scale:r,property:l}),t.restore(),t.save(),Ne(t,n,a.bottom)),Ye(t,{line:i,target:n,color:s,scale:r,property:l}),t.restore()}(t,{line:s,target:o,above:d,below:u,area:i,scale:a,axis:r}),Object(n.Wb)(t))}var Ke={id:\"filler\",afterDatasetsUpdate(t,e,i){const n=(t.data.datasets||[]).length,o=[];let s,a,r,l;for(a=0;a<n;++a)s=t.getDatasetMeta(a),r=s.dataset,l=null,r&&r.options&&r instanceof be&&(l={visible:t.isDatasetVisible(a),index:a,fill:Te(r,a,n),chart:t,axis:s.controller.options.indexAxis,scale:s.vScale,line:r}),s.$filler=l,o.push(l);for(a=0;a<n;++a)l=o[a],l&&!1!==l.fill&&(l.fill=Be(o,a,i.propagate))},beforeDraw(t,e,i){const n=\"beforeDraw\"===i.drawTime,o=t.getSortedVisibleDatasetMetas(),s=t.chartArea;for(let a=o.length-1;a>=0;--a){const e=o[a].$filler;e&&(e.line.updateControlPoints(s),n&&Xe(t.ctx,e,s))}},beforeDatasetsDraw(t,e,i){if(\"beforeDatasetsDraw\"!==i.drawTime)return;const n=t.getSortedVisibleDatasetMetas();for(let o=n.length-1;o>=0;--o){const e=n[o].$filler;e&&Xe(t.ctx,e,t.chartArea)}},beforeDatasetDraw(t,e,i){const n=e.meta.$filler;n&&!1!==n.fill&&\"beforeDatasetDraw\"===i.drawTime&&Xe(t.ctx,n,t.chartArea)},defaults:{propagate:!0,drawTime:\"beforeDatasetDraw\"}};const Qe=(t,e)=>{let{boxHeight:i=e,boxWidth:n=e}=t;return t.usePointStyle&&(i=Math.min(i,e),n=Math.min(n,e)),{boxWidth:n,boxHeight:i,itemHeight:Math.max(e,i)}};class qe extends mt{constructor(t){super(),this._added=!1,this.legendHitBoxes=[],this._hoveredItem=null,this.doughnutMode=!1,this.chart=t.chart,this.options=t.options,this.ctx=t.ctx,this.legendItems=void 0,this.columnSizes=void 0,this.lineWidths=void 0,this.maxHeight=void 0,this.maxWidth=void 0,this.top=void 0,this.bottom=void 0,this.left=void 0,this.right=void 0,this.height=void 0,this.width=void 0,this._margins=void 0,this.position=void 0,this.weight=void 0,this.fullSize=void 0}update(t,e,i){const n=this;n.maxWidth=t,n.maxHeight=e,n._margins=i,n.setDimensions(),n.buildLabels(),n.fit()}setDimensions(){const t=this;t.isHorizontal()?(t.width=t.maxWidth,t.left=0,t.right=t.width):(t.height=t.maxHeight,t.top=0,t.bottom=t.height)}buildLabels(){const t=this,e=t.options.labels||{};let i=Object(n.o)(e.generateLabels,[t.chart],t)||[];e.filter&&(i=i.filter((i=>e.filter(i,t.chart.data)))),e.sort&&(i=i.sort(((i,n)=>e.sort(i,n,t.chart.data)))),t.options.reverse&&i.reverse(),t.legendItems=i}fit(){const t=this,{options:e,ctx:i}=t;if(!e.display)return void(t.width=t.height=0);const o=e.labels,s=Object(n.x)(o.font),a=s.size,r=t._computeTitleHeight(),{boxWidth:l,itemHeight:c}=Qe(o,a);let h,d;i.font=s.string,t.isHorizontal()?(h=t.maxWidth,d=t._fitRows(r,a,l,c)+10):(d=t.maxHeight,h=t._fitCols(r,a,l,c)+10),t.width=Math.min(h,e.maxWidth||t.maxWidth),t.height=Math.min(d,e.maxHeight||t.maxHeight)}_fitRows(t,e,i,n){const o=this,{ctx:s,maxWidth:a,options:{labels:{padding:r}}}=o,l=o.legendHitBoxes=[],c=o.lineWidths=[0],h=n+r;let d=t;s.textAlign=\"left\",s.textBaseline=\"middle\";let u=-1,g=-h;return o.legendItems.forEach(((t,o)=>{const f=i+e/2+s.measureText(t.text).width;(0===o||c[c.length-1]+f+2*r>a)&&(d+=h,c[c.length-(o>0?0:1)]=0,g+=h,u++),l[o]={left:0,top:g,row:u,width:f,height:n},c[c.length-1]+=f+r})),d}_fitCols(t,e,i,n){const o=this,{ctx:s,maxHeight:a,options:{labels:{padding:r}}}=o,l=o.legendHitBoxes=[],c=o.columnSizes=[],h=a-t;let d=r,u=0,g=0,f=0,p=0,b=0;return o.legendItems.forEach(((t,o)=>{const a=i+e/2+s.measureText(t.text).width;o>0&&g+e+2*r>h&&(d+=u+r,c.push({width:u,height:g}),f+=u+r,b++,p=0,u=g=0),u=Math.max(u,a),g+=e+r,l[o]={left:f,top:p,col:b,width:a,height:n},p+=n+r})),d+=u,c.push({width:u,height:g}),d}adjustHitBoxes(){const t=this;if(!t.options.display)return;const e=t._computeTitleHeight(),{legendHitBoxes:i,options:{align:o,labels:{padding:s}}}=t;if(this.isHorizontal()){let a=0,r=Object(n.z)(o,t.left+s,t.right-t.lineWidths[a]);for(const l of i)a!==l.row&&(a=l.row,r=Object(n.z)(o,t.left+s,t.right-t.lineWidths[a])),l.top+=t.top+e+s,l.left=r,r+=l.width+s}else{let a=0,r=Object(n.z)(o,t.top+e+s,t.bottom-t.columnSizes[a].height);for(const l of i)l.col!==a&&(a=l.col,r=Object(n.z)(o,t.top+e+s,t.bottom-t.columnSizes[a].height)),l.top=r,l.left+=t.left+s,r+=l.height+s}}isHorizontal(){return\"top\"===this.options.position||\"bottom\"===this.options.position}draw(){const t=this;if(t.options.display){const e=t.ctx;Object(n.Ub)(e,t),t._draw(),Object(n.Wb)(e)}}_draw(){const t=this,{options:e,columnSizes:i,lineWidths:o,ctx:s}=t,{align:a,labels:r}=e,l=n.Nb.color,c=Object(n.Eb)(e.rtl,t.left,t.width),h=Object(n.x)(r.font),{color:d,padding:u}=r,g=h.size,f=g/2;let p;t.drawTitle(),s.textAlign=c.textAlign(\"left\"),s.textBaseline=\"middle\",s.lineWidth=.5,s.font=h.string;const{boxWidth:b,boxHeight:m,itemHeight:x}=Qe(r,g),_=t.isHorizontal(),y=this._computeTitleHeight();p=_?{x:Object(n.z)(a,t.left+u,t.right-o[0]),y:t.top+u+y,line:0}:{x:t.left+u,y:Object(n.z)(a,t.top+y+u,t.bottom-i[0].height),line:0},Object(n.Fb)(t.ctx,e.textDirection);const v=x+u;t.legendItems.forEach(((e,O)=>{s.strokeStyle=e.fontColor||d,s.fillStyle=e.fontColor||d;const j=s.measureText(e.text).width,w=c.textAlign(e.textAlign||(e.textAlign=r.textAlign)),M=b+g/2+j;let k=p.x,S=p.y;c.setWidth(t.width),_?O>0&&k+M+u>t.right&&(S=p.y+=v,p.line++,k=p.x=Object(n.z)(a,t.left+u,t.right-o[p.line])):O>0&&S+v>t.bottom&&(k=p.x=k+i[p.line].width+u,p.line++,S=p.y=Object(n.z)(a,t.top+y+u,t.bottom-i[p.line].height));!function(t,e,i){if(isNaN(b)||b<=0||isNaN(m)||m<0)return;s.save();const o=Object(n.fc)(i.lineWidth,1);if(s.fillStyle=Object(n.fc)(i.fillStyle,l),s.lineCap=Object(n.fc)(i.lineCap,\"butt\"),s.lineDashOffset=Object(n.fc)(i.lineDashOffset,0),s.lineJoin=Object(n.fc)(i.lineJoin,\"miter\"),s.lineWidth=o,s.strokeStyle=Object(n.fc)(i.strokeStyle,l),s.setLineDash(Object(n.fc)(i.lineDash,[])),r.usePointStyle){const a={radius:b*Math.SQRT2/2,pointStyle:i.pointStyle,rotation:i.rotation,borderWidth:o},r=c.xPlus(t,b/2),l=e+f;Object(n.yb)(s,a,r,l)}else{const a=e+Math.max((g-m)/2,0),r=c.leftForLtr(t,b),l=Object(n.Bb)(i.borderRadius);s.beginPath(),Object.values(l).some((t=>0!==t))?Object(n.zb)(s,{x:r,y:a,w:b,h:m,radius:l}):s.rect(r,a,b,m),s.fill(),0!==o&&s.stroke()}s.restore()}(c.x(k),S,e),k=Object(n.Gb)(w,k+b+f,t.right),function(t,e,i){Object(n.w)(s,i.text,t,e+x/2,h,{strikethrough:i.hidden,textAlign:i.textAlign})}(c.x(k),S,e),_?p.x+=M+u:p.y+=v})),Object(n.Hb)(t.ctx,e.textDirection)}drawTitle(){const t=this,e=t.options,i=e.title,o=Object(n.x)(i.font),s=Object(n.d)(i.padding);if(!i.display)return;const a=Object(n.Eb)(e.rtl,t.left,t.width),r=t.ctx,l=i.position,c=o.size/2,h=s.top+c;let d,u=t.left,g=t.width;if(this.isHorizontal())g=Math.max(...t.lineWidths),d=t.top+h,u=Object(n.z)(e.align,u,t.right-g);else{const i=t.columnSizes.reduce(((t,e)=>Math.max(t,e.height)),0);d=h+Object(n.z)(e.align,t.top,t.bottom-i-e.labels.padding-t._computeTitleHeight())}const f=Object(n.z)(l,u,u+g);r.textAlign=a.textAlign(Object(n.y)(l)),r.textBaseline=\"middle\",r.strokeStyle=i.color,r.fillStyle=i.color,r.font=o.string,Object(n.w)(r,i.text,f,d,o)}_computeTitleHeight(){const t=this.options.title,e=Object(n.x)(t.font),i=Object(n.d)(t.padding);return t.display?e.lineHeight+i.height:0}_getLegendItemAt(t,e){const i=this;let n,o,s;if(t>=i.left&&t<=i.right&&e>=i.top&&e<=i.bottom)for(s=i.legendHitBoxes,n=0;n<s.length;++n)if(o=s[n],t>=o.left&&t<=o.left+o.width&&e>=o.top&&e<=o.top+o.height)return i.legendItems[n];return null}handleEvent(t){const e=this,i=e.options;if(!function(t,e){if(\"mousemove\"===t&&(e.onHover||e.onLeave))return!0;if(e.onClick&&(\"click\"===t||\"mouseup\"===t))return!0;return!1}(t.type,i))return;const o=e._getLegendItemAt(t.x,t.y);if(\"mousemove\"===t.type){const r=e._hoveredItem,l=(a=o,null!==(s=r)&&null!==a&&s.datasetIndex===a.datasetIndex&&s.index===a.index);r&&!l&&Object(n.o)(i.onLeave,[t,r,e],e),e._hoveredItem=o,o&&!l&&Object(n.o)(i.onHover,[t,o,e],e)}else o&&Object(n.o)(i.onClick,[t,o,e],e);var s,a}}var Ge={id:\"legend\",_element:qe,start(t,e,i){const n=t.legend=new qe({ctx:t.ctx,options:i,chart:t});et.configure(t,n,i),et.addBox(t,n)},stop(t){et.removeBox(t,t.legend),delete t.legend},beforeUpdate(t,e,i){const n=t.legend;et.configure(t,n,i),n.options=i},afterUpdate(t){const e=t.legend;e.buildLabels(),e.adjustHitBoxes()},afterEvent(t,e){e.replay||t.legend.handleEvent(e.event)},defaults:{display:!0,position:\"top\",align:\"center\",fullSize:!0,reverse:!1,weight:1e3,onClick(t,e,i){const n=e.datasetIndex,o=i.chart;o.isDatasetVisible(n)?(o.hide(n),e.hidden=!0):(o.show(n),e.hidden=!1)},onHover:null,onLeave:null,labels:{color:t=>t.chart.options.color,boxWidth:40,padding:10,generateLabels(t){const e=t.data.datasets,{labels:{usePointStyle:i,pointStyle:o,textAlign:s,color:a}}=t.legend.options;return t._getSortedDatasetMetas().map((t=>{const r=t.controller.getStyle(i?0:void 0),l=Object(n.d)(r.borderWidth);return{text:e[t.index].label,fillStyle:r.backgroundColor,fontColor:a,hidden:!t.visible,lineCap:r.borderCapStyle,lineDash:r.borderDash,lineDashOffset:r.borderDashOffset,lineJoin:r.borderJoinStyle,lineWidth:(l.width+l.height)/4,strokeStyle:r.borderColor,pointStyle:o||r.pointStyle,rotation:r.rotation,textAlign:s||r.textAlign,borderRadius:0,datasetIndex:t.index}}),this)}},title:{color:t=>t.chart.options.color,display:!1,position:\"center\",text:\"\"}},descriptors:{_scriptable:t=>!t.startsWith(\"on\"),labels:{_scriptable:t=>![\"generateLabels\",\"filter\",\"sort\"].includes(t)}}};class Je extends mt{constructor(t){super(),this.chart=t.chart,this.options=t.options,this.ctx=t.ctx,this._padding=void 0,this.top=void 0,this.bottom=void 0,this.left=void 0,this.right=void 0,this.width=void 0,this.height=void 0,this.position=void 0,this.weight=void 0,this.fullSize=void 0}update(t,e){const i=this,o=i.options;if(i.left=0,i.top=0,!o.display)return void(i.width=i.height=i.right=i.bottom=0);i.width=i.right=t,i.height=i.bottom=e;const s=Object(n.Lb)(o.text)?o.text.length:1;i._padding=Object(n.d)(o.padding);const a=s*Object(n.x)(o.font).lineHeight+i._padding.height;i.isHorizontal()?i.height=a:i.width=a}isHorizontal(){const t=this.options.position;return\"top\"===t||\"bottom\"===t}_drawArgs(t){const{top:e,left:i,bottom:o,right:s,options:a}=this,r=a.align;let l,c,h,d=0;return this.isHorizontal()?(c=Object(n.z)(r,i,s),h=e+t,l=s-i):(\"left\"===a.position?(c=i+t,h=Object(n.z)(r,o,e),d=-.5*n.q):(c=s-t,h=Object(n.z)(r,e,o),d=.5*n.q),l=o-e),{titleX:c,titleY:h,maxWidth:l,rotation:d}}draw(){const t=this,e=t.ctx,i=t.options;if(!i.display)return;const o=Object(n.x)(i.font),s=o.lineHeight/2+t._padding.top,{titleX:a,titleY:r,maxWidth:l,rotation:c}=t._drawArgs(s);Object(n.w)(e,i.text,0,0,o,{color:i.color,maxWidth:l,rotation:c,textAlign:Object(n.y)(i.align),textBaseline:\"middle\",translation:[a,r]})}}var Ze={id:\"title\",_element:Je,start(t,e,i){!function(t,e){const i=new Je({ctx:t.ctx,options:e,chart:t});et.configure(t,i,e),et.addBox(t,i),t.titleBlock=i}(t,i)},stop(t){const e=t.titleBlock;et.removeBox(t,e),delete t.titleBlock},beforeUpdate(t,e,i){const n=t.titleBlock;et.configure(t,n,i),n.options=i},defaults:{align:\"center\",display:!1,font:{weight:\"bold\"},fullSize:!0,padding:10,position:\"top\",text:\"\",weight:2e3},defaultRoutes:{color:\"color\"},descriptors:{_scriptable:!0,_indexable:!1}};const ti={average(t){if(!t.length)return!1;let e,i,n=0,o=0,s=0;for(e=0,i=t.length;e<i;++e){const i=t[e].element;if(i&&i.hasValue()){const t=i.tooltipPosition();n+=t.x,o+=t.y,++s}}return{x:n/s,y:o/s}},nearest(t,e){if(!t.length)return!1;let i,o,s,a=e.x,r=e.y,l=Number.POSITIVE_INFINITY;for(i=0,o=t.length;i<o;++i){const o=t[i].element;if(o&&o.hasValue()){const t=o.getCenterPoint(),i=Object(n.Jb)(e,t);i<l&&(l=i,s=o)}}if(s){const t=s.tooltipPosition();a=t.x,r=t.y}return{x:a,y:r}}};function ei(t,e){return e&&(Object(n.Lb)(e)?Array.prototype.push.apply(t,e):t.push(e)),t}function ii(t){return(\"string\"===typeof t||t instanceof String)&&t.indexOf(\"\\n\")>-1?t.split(\"\\n\"):t}function ni(t,e){const{element:i,datasetIndex:n,index:o}=e,s=t.getDatasetMeta(n).controller,{label:a,value:r}=s.getLabelAndValue(o);return{chart:t,label:a,parsed:s.getParsed(o),raw:t.data.datasets[n].data[o],formattedValue:r,dataset:s.getDataset(),dataIndex:o,datasetIndex:n,element:i}}function oi(t,e){const i=t._chart.ctx,{body:o,footer:s,title:a}=t,{boxWidth:r,boxHeight:l}=e,c=Object(n.x)(e.bodyFont),h=Object(n.x)(e.titleFont),d=Object(n.x)(e.footerFont),u=a.length,g=s.length,f=o.length,p=Object(n.d)(e.padding);let b=p.height,m=0,x=o.reduce(((t,e)=>t+e.before.length+e.lines.length+e.after.length),0);if(x+=t.beforeBody.length+t.afterBody.length,u&&(b+=u*h.lineHeight+(u-1)*e.titleSpacing+e.titleMarginBottom),x){b+=f*(e.displayColors?Math.max(l,c.lineHeight):c.lineHeight)+(x-f)*c.lineHeight+(x-1)*e.bodySpacing}g&&(b+=e.footerMarginTop+g*d.lineHeight+(g-1)*e.footerSpacing);let _=0;const y=function(t){m=Math.max(m,i.measureText(t).width+_)};return i.save(),i.font=h.string,Object(n.e)(t.title,y),i.font=c.string,Object(n.e)(t.beforeBody.concat(t.afterBody),y),_=e.displayColors?r+2:0,Object(n.e)(o,(t=>{Object(n.e)(t.before,y),Object(n.e)(t.lines,y),Object(n.e)(t.after,y)})),_=0,i.font=d.string,Object(n.e)(t.footer,y),i.restore(),m+=p.width,{width:m,height:b}}function si(t,e,i,n){const{x:o,width:s}=i,{width:a,chartArea:{left:r,right:l}}=t;let c=\"center\";return\"center\"===n?c=o<=(r+l)/2?\"left\":\"right\":o<=s/2?c=\"left\":o>=a-s/2&&(c=\"right\"),function(t,e,i,n){const{x:o,width:s}=n,a=i.caretSize+i.caretPadding;return\"left\"===t&&o+s+a>e.width||\"right\"===t&&o-s-a<0||void 0}(c,t,e,i)&&(c=\"center\"),c}function ai(t,e,i){const n=e.yAlign||function(t,e){const{y:i,height:n}=e;return i<n/2?\"top\":i>t.height-n/2?\"bottom\":\"center\"}(t,i);return{xAlign:e.xAlign||si(t,e,i,n),yAlign:n}}function ri(t,e,i,o){const{caretSize:s,caretPadding:a,cornerRadius:r}=t,{xAlign:l,yAlign:c}=i,h=s+a,d=r+a;let u=function(t,e){let{x:i,width:n}=t;return\"right\"===e?i-=n:\"center\"===e&&(i-=n/2),i}(e,l);const g=function(t,e,i){let{y:n,height:o}=t;return\"top\"===e?n+=i:n-=\"bottom\"===e?o+i:o/2,n}(e,c,h);return\"center\"===c?\"left\"===l?u+=h:\"right\"===l&&(u-=h):\"left\"===l?u-=d:\"right\"===l&&(u+=d),{x:Object(n.hc)(u,0,o.width-e.width),y:Object(n.hc)(g,0,o.height-e.height)}}function li(t,e,i){const o=Object(n.d)(i.padding);return\"center\"===e?t.x+t.width/2:\"right\"===e?t.x+t.width-o.right:t.x+o.left}function ci(t){return ei([],ii(t))}function hi(t,e){const i=e&&e.dataset&&e.dataset.tooltip&&e.dataset.tooltip.callbacks;return i?t.override(i):t}class di extends mt{constructor(t){super(),this.opacity=0,this._active=[],this._chart=t._chart,this._eventPosition=void 0,this._size=void 0,this._cachedAnimations=void 0,this._tooltipItems=[],this.$animations=void 0,this.$context=void 0,this.options=t.options,this.dataPoints=void 0,this.title=void 0,this.beforeBody=void 0,this.body=void 0,this.afterBody=void 0,this.footer=void 0,this.xAlign=void 0,this.yAlign=void 0,this.x=void 0,this.y=void 0,this.height=void 0,this.width=void 0,this.caretX=void 0,this.caretY=void 0,this.labelColors=void 0,this.labelPointStyles=void 0,this.labelTextColors=void 0}initialize(t){this.options=t,this._cachedAnimations=void 0,this.$context=void 0}_resolveAnimations(){const t=this,e=t._cachedAnimations;if(e)return e;const i=t._chart,n=t.options.setContext(t.getContext()),o=n.enabled&&i.options.animation&&n.animations,s=new c(t._chart,o);return o._cacheable&&(t._cachedAnimations=Object.freeze(s)),s}getContext(){const t=this;return t.$context||(t.$context=(e=t._chart.getContext(),i=t,n=t._tooltipItems,Object.assign(Object.create(e),{tooltip:i,tooltipItems:n,type:\"tooltip\"})));var e,i,n}getTitle(t,e){const i=this,{callbacks:n}=e,o=n.beforeTitle.apply(i,[t]),s=n.title.apply(i,[t]),a=n.afterTitle.apply(i,[t]);let r=[];return r=ei(r,ii(o)),r=ei(r,ii(s)),r=ei(r,ii(a)),r}getBeforeBody(t,e){return ci(e.callbacks.beforeBody.apply(this,[t]))}getBody(t,e){const i=this,{callbacks:o}=e,s=[];return Object(n.e)(t,(t=>{const e={before:[],lines:[],after:[]},n=hi(o,t);ei(e.before,ii(n.beforeLabel.call(i,t))),ei(e.lines,n.label.call(i,t)),ei(e.after,ii(n.afterLabel.call(i,t))),s.push(e)})),s}getAfterBody(t,e){return ci(e.callbacks.afterBody.apply(this,[t]))}getFooter(t,e){const i=this,{callbacks:n}=e,o=n.beforeFooter.apply(i,[t]),s=n.footer.apply(i,[t]),a=n.afterFooter.apply(i,[t]);let r=[];return r=ei(r,ii(o)),r=ei(r,ii(s)),r=ei(r,ii(a)),r}_createItems(t){const e=this,i=e._active,o=e._chart.data,s=[],a=[],r=[];let l,c,h=[];for(l=0,c=i.length;l<c;++l)h.push(ni(e._chart,i[l]));return t.filter&&(h=h.filter(((e,i,n)=>t.filter(e,i,n,o)))),t.itemSort&&(h=h.sort(((e,i)=>t.itemSort(e,i,o)))),Object(n.e)(h,(i=>{const n=hi(t.callbacks,i);s.push(n.labelColor.call(e,i)),a.push(n.labelPointStyle.call(e,i)),r.push(n.labelTextColor.call(e,i))})),e.labelColors=s,e.labelPointStyles=a,e.labelTextColors=r,e.dataPoints=h,h}update(t,e){const i=this,n=i.options.setContext(i.getContext()),o=i._active;let s,a=[];if(o.length){const t=ti[n.position].call(i,o,i._eventPosition);a=i._createItems(n),i.title=i.getTitle(a,n),i.beforeBody=i.getBeforeBody(a,n),i.body=i.getBody(a,n),i.afterBody=i.getAfterBody(a,n),i.footer=i.getFooter(a,n);const e=i._size=oi(i,n),r=Object.assign({},t,e),l=ai(i._chart,n,r),c=ri(n,r,l,i._chart);i.xAlign=l.xAlign,i.yAlign=l.yAlign,s={opacity:1,x:c.x,y:c.y,width:e.width,height:e.height,caretX:t.x,caretY:t.y}}else 0!==i.opacity&&(s={opacity:0});i._tooltipItems=a,i.$context=void 0,s&&i._resolveAnimations().update(i,s),t&&n.external&&n.external.call(i,{chart:i._chart,tooltip:i,replay:e})}drawCaret(t,e,i,n){const o=this.getCaretPosition(t,i,n);e.lineTo(o.x1,o.y1),e.lineTo(o.x2,o.y2),e.lineTo(o.x3,o.y3)}getCaretPosition(t,e,i){const{xAlign:n,yAlign:o}=this,{cornerRadius:s,caretSize:a}=i,{x:r,y:l}=t,{width:c,height:h}=e;let d,u,g,f,p,b;return\"center\"===o?(p=l+h/2,\"left\"===n?(d=r,u=d-a,f=p+a,b=p-a):(d=r+c,u=d+a,f=p-a,b=p+a),g=d):(u=\"left\"===n?r+s+a:\"right\"===n?r+c-s-a:this.caretX,\"top\"===o?(f=l,p=f-a,d=u-a,g=u+a):(f=l+h,p=f+a,d=u+a,g=u-a),b=f),{x1:d,x2:u,x3:g,y1:f,y2:p,y3:b}}drawTitle(t,e,i){const o=this,s=o.title,a=s.length;let r,l,c;if(a){const h=Object(n.Eb)(i.rtl,o.x,o.width);for(t.x=li(o,i.titleAlign,i),e.textAlign=h.textAlign(i.titleAlign),e.textBaseline=\"middle\",r=Object(n.x)(i.titleFont),l=i.titleSpacing,e.fillStyle=i.titleColor,e.font=r.string,c=0;c<a;++c)e.fillText(s[c],h.x(t.x),t.y+r.lineHeight/2),t.y+=r.lineHeight+l,c+1===a&&(t.y+=i.titleMarginBottom-l)}}_drawColorBox(t,e,i,o,s){const a=this,r=a.labelColors[i],l=a.labelPointStyles[i],{boxHeight:c,boxWidth:h}=s,d=Object(n.x)(s.bodyFont),u=li(a,\"left\",s),g=o.x(u),f=c<d.lineHeight?(d.lineHeight-c)/2:0,p=e.y+f;if(s.usePointStyle){const e={radius:Math.min(h,c)/2,pointStyle:l.pointStyle,rotation:l.rotation,borderWidth:1},i=o.leftForLtr(g,h)+h/2,a=p+c/2;t.strokeStyle=s.multiKeyBackground,t.fillStyle=s.multiKeyBackground,Object(n.yb)(t,e,i,a),t.strokeStyle=r.borderColor,t.fillStyle=r.backgroundColor,Object(n.yb)(t,e,i,a)}else{t.lineWidth=r.borderWidth||1,t.strokeStyle=r.borderColor,t.setLineDash(r.borderDash||[]),t.lineDashOffset=r.borderDashOffset||0;const e=o.leftForLtr(g,h),i=o.leftForLtr(o.xPlus(g,1),h-2),a=Object(n.Bb)(r.borderRadius);Object.values(a).some((t=>0!==t))?(t.beginPath(),t.fillStyle=s.multiKeyBackground,Object(n.zb)(t,{x:e,y:p,w:h,h:c,radius:a}),t.fill(),t.stroke(),t.fillStyle=r.backgroundColor,t.beginPath(),Object(n.zb)(t,{x:i,y:p+1,w:h-2,h:c-2,radius:a}),t.fill()):(t.fillStyle=s.multiKeyBackground,t.fillRect(e,p,h,c),t.strokeRect(e,p,h,c),t.fillStyle=r.backgroundColor,t.fillRect(i,p+1,h-2,c-2))}t.fillStyle=a.labelTextColors[i]}drawBody(t,e,i){const o=this,{body:s}=o,{bodySpacing:a,bodyAlign:r,displayColors:l,boxHeight:c,boxWidth:h}=i,d=Object(n.x)(i.bodyFont);let u=d.lineHeight,g=0;const f=Object(n.Eb)(i.rtl,o.x,o.width),p=function(i){e.fillText(i,f.x(t.x+g),t.y+u/2),t.y+=u+a},b=f.textAlign(r);let m,x,_,y,v,O,j;for(e.textAlign=r,e.textBaseline=\"middle\",e.font=d.string,t.x=li(o,b,i),e.fillStyle=i.bodyColor,Object(n.e)(o.beforeBody,p),g=l&&\"right\"!==b?\"center\"===r?h/2+1:h+2:0,y=0,O=s.length;y<O;++y){for(m=s[y],x=o.labelTextColors[y],e.fillStyle=x,Object(n.e)(m.before,p),_=m.lines,l&&_.length&&(o._drawColorBox(e,t,y,f,i),u=Math.max(d.lineHeight,c)),v=0,j=_.length;v<j;++v)p(_[v]),u=d.lineHeight;Object(n.e)(m.after,p)}g=0,u=d.lineHeight,Object(n.e)(o.afterBody,p),t.y-=a}drawFooter(t,e,i){const o=this,s=o.footer,a=s.length;let r,l;if(a){const c=Object(n.Eb)(i.rtl,o.x,o.width);for(t.x=li(o,i.footerAlign,i),t.y+=i.footerMarginTop,e.textAlign=c.textAlign(i.footerAlign),e.textBaseline=\"middle\",r=Object(n.x)(i.footerFont),e.fillStyle=i.footerColor,e.font=r.string,l=0;l<a;++l)e.fillText(s[l],c.x(t.x),t.y+r.lineHeight/2),t.y+=r.lineHeight+i.footerSpacing}}drawBackground(t,e,i,n){const{xAlign:o,yAlign:s}=this,{x:a,y:r}=t,{width:l,height:c}=i,h=n.cornerRadius;e.fillStyle=n.backgroundColor,e.strokeStyle=n.borderColor,e.lineWidth=n.borderWidth,e.beginPath(),e.moveTo(a+h,r),\"top\"===s&&this.drawCaret(t,e,i,n),e.lineTo(a+l-h,r),e.quadraticCurveTo(a+l,r,a+l,r+h),\"center\"===s&&\"right\"===o&&this.drawCaret(t,e,i,n),e.lineTo(a+l,r+c-h),e.quadraticCurveTo(a+l,r+c,a+l-h,r+c),\"bottom\"===s&&this.drawCaret(t,e,i,n),e.lineTo(a+h,r+c),e.quadraticCurveTo(a,r+c,a,r+c-h),\"center\"===s&&\"left\"===o&&this.drawCaret(t,e,i,n),e.lineTo(a,r+h),e.quadraticCurveTo(a,r,a+h,r),e.closePath(),e.fill(),n.borderWidth>0&&e.stroke()}_updateAnimationTarget(t){const e=this,i=e._chart,n=e.$animations,o=n&&n.x,s=n&&n.y;if(o||s){const n=ti[t.position].call(e,e._active,e._eventPosition);if(!n)return;const a=e._size=oi(e,t),r=Object.assign({},n,e._size),l=ai(i,t,r),c=ri(t,r,l,i);o._to===c.x&&s._to===c.y||(e.xAlign=l.xAlign,e.yAlign=l.yAlign,e.width=a.width,e.height=a.height,e.caretX=n.x,e.caretY=n.y,e._resolveAnimations().update(e,c))}}draw(t){const e=this,i=e.options.setContext(e.getContext());let o=e.opacity;if(!o)return;e._updateAnimationTarget(i);const s={width:e.width,height:e.height},a={x:e.x,y:e.y};o=Math.abs(o)<.001?0:o;const r=Object(n.d)(i.padding),l=e.title.length||e.beforeBody.length||e.body.length||e.afterBody.length||e.footer.length;i.enabled&&l&&(t.save(),t.globalAlpha=o,e.drawBackground(a,t,s,i),Object(n.Fb)(t,i.textDirection),a.y+=r.top,e.drawTitle(a,t,i),e.drawBody(a,t,i),e.drawFooter(a,t,i),Object(n.Hb)(t,i.textDirection),t.restore())}getActiveElements(){return this._active||[]}setActiveElements(t,e){const i=this,o=i._active,s=t.map((({datasetIndex:t,index:e})=>{const n=i._chart.getDatasetMeta(t);if(!n)throw new Error(\"Cannot find a dataset at index \"+t);return{datasetIndex:t,element:n.data[e],index:e}})),a=!Object(n.nb)(o,s),r=i._positionChanged(s,e);(a||r)&&(i._active=s,i._eventPosition=e,i.update(!0))}handleEvent(t,e){const i=this,o=i.options,s=i._active||[];let a=!1,r=[];\"mouseout\"!==t.type&&(r=i._chart.getElementsAtEventForMode(t,o.mode,o,e),o.reverse&&r.reverse());const l=i._positionChanged(r,t);return a=e||!Object(n.nb)(r,s)||l,a&&(i._active=r,(o.enabled||o.external)&&(i._eventPosition={x:t.x,y:t.y},i.update(!0,e))),a}_positionChanged(t,e){const{caretX:i,caretY:n,options:o}=this,s=ti[o.position].call(this,t,e);return!1!==s&&(i!==s.x||n!==s.y)}}di.positioners=ti;var ui={id:\"tooltip\",_element:di,positioners:ti,afterInit(t,e,i){i&&(t.tooltip=new di({_chart:t,options:i}))},beforeUpdate(t,e,i){t.tooltip&&t.tooltip.initialize(i)},reset(t,e,i){t.tooltip&&t.tooltip.initialize(i)},afterDraw(t){const e=t.tooltip,i={tooltip:e};!1!==t.notifyPlugins(\"beforeTooltipDraw\",i)&&(e&&e.draw(t.ctx),t.notifyPlugins(\"afterTooltipDraw\",i))},afterEvent(t,e){if(t.tooltip){const i=e.replay;t.tooltip.handleEvent(e.event,i)&&(e.changed=!0)}},defaults:{enabled:!0,external:null,position:\"average\",backgroundColor:\"rgba(0,0,0,0.8)\",titleColor:\"#fff\",titleFont:{weight:\"bold\"},titleSpacing:2,titleMarginBottom:6,titleAlign:\"left\",bodyColor:\"#fff\",bodySpacing:2,bodyFont:{},bodyAlign:\"left\",footerColor:\"#fff\",footerSpacing:2,footerMarginTop:6,footerFont:{weight:\"bold\"},footerAlign:\"left\",padding:6,caretPadding:2,caretSize:5,cornerRadius:6,boxHeight:(t,e)=>e.bodyFont.size,boxWidth:(t,e)=>e.bodyFont.size,multiKeyBackground:\"#fff\",displayColors:!0,borderColor:\"rgba(0,0,0,0)\",borderWidth:0,animation:{duration:400,easing:\"easeOutQuart\"},animations:{numbers:{type:\"number\",properties:[\"x\",\"y\",\"width\",\"height\",\"caretX\",\"caretY\"]},opacity:{easing:\"linear\",duration:200}},callbacks:{beforeTitle:n.Ib,title(t){if(t.length>0){const e=t[0],i=e.chart.data.labels,n=i?i.length:0;if(this&&this.options&&\"dataset\"===this.options.mode)return e.dataset.label||\"\";if(e.label)return e.label;if(n>0&&e.dataIndex<n)return i[e.dataIndex]}return\"\"},afterTitle:n.Ib,beforeBody:n.Ib,beforeLabel:n.Ib,label(t){if(this&&this.options&&\"dataset\"===this.options.mode)return t.label+\": \"+t.formattedValue||t.formattedValue;let e=t.dataset.label||\"\";e&&(e+=\": \");const i=t.formattedValue;return Object(n.Tb)(i)||(e+=i),e},labelColor(t){const e=t.chart.getDatasetMeta(t.datasetIndex).controller.getStyle(t.dataIndex);return{borderColor:e.borderColor,backgroundColor:e.backgroundColor,borderWidth:e.borderWidth,borderDash:e.borderDash,borderDashOffset:e.borderDashOffset,borderRadius:0}},labelTextColor(){return this.options.bodyColor},labelPointStyle(t){const e=t.chart.getDatasetMeta(t.datasetIndex).controller.getStyle(t.dataIndex);return{pointStyle:e.pointStyle,rotation:e.rotation}},afterLabel:n.Ib,afterBody:n.Ib,beforeFooter:n.Ib,footer:n.Ib,afterFooter:n.Ib}},defaultRoutes:{bodyFont:\"font\",footerFont:\"font\",titleFont:\"font\"},descriptors:{_scriptable:t=>\"filter\"!==t&&\"itemSort\"!==t&&\"external\"!==t,_indexable:!1,callbacks:{_scriptable:!1,_indexable:!1},animation:{_fallback:!1},animations:{_fallback:\"animation\"}},additionalOptionScopes:[\"interaction\"]},gi=Object.freeze({__proto__:null,Decimation:Ae,Filler:Ke,Legend:Ge,Title:Ze,Tooltip:ui});function fi(t,e,i){const n=t.indexOf(e);if(-1===n)return((t,e,i)=>\"string\"===typeof e?t.push(e)-1:isNaN(e)?null:i)(t,e,i);return n!==t.lastIndexOf(e)?i:n}class pi extends Dt{constructor(t){super(t),this._startValue=void 0,this._valueRange=0}parse(t,e){if(Object(n.Tb)(t))return null;const i=this.getLabels();return((t,e)=>null===t?null:Object(n.hc)(Math.round(t),0,e))(e=isFinite(e)&&i[e]===t?e:fi(i,t,Object(n.fc)(e,t)),i.length-1)}determineDataLimits(){const t=this,{minDefined:e,maxDefined:i}=t.getUserBounds();let{min:n,max:o}=t.getMinMax(!0);\"ticks\"===t.options.bounds&&(e||(n=0),i||(o=t.getLabels().length-1)),t.min=n,t.max=o}buildTicks(){const t=this,e=t.min,i=t.max,n=t.options.offset,o=[];let s=t.getLabels();s=0===e&&i===s.length-1?s:s.slice(e,i+1),t._valueRange=Math.max(s.length-(n?0:1),1),t._startValue=t.min-(n?.5:0);for(let a=e;a<=i;a++)o.push({value:a});return o}getLabelForValue(t){const e=this.getLabels();return t>=0&&t<e.length?e[t]:t}configure(){const t=this;super.configure(),t.isHorizontal()||(t._reversePixels=!t._reversePixels)}getPixelForValue(t){const e=this;return\"number\"!==typeof t&&(t=e.parse(t)),null===t?NaN:e.getPixelForDecimal((t-e._startValue)/e._valueRange)}getPixelForTick(t){const e=this.ticks;return t<0||t>e.length-1?null:this.getPixelForValue(e[t].value)}getValueForPixel(t){const e=this;return Math.round(e._startValue+e.getDecimalForPixel(t)*e._valueRange)}getBasePixel(){return this.bottom}}pi.id=\"category\",pi.defaults={ticks:{callback:pi.prototype.getLabelForValue}};class bi extends Dt{constructor(t){super(t),this.start=void 0,this.end=void 0,this._startValue=void 0,this._endValue=void 0,this._valueRange=0}parse(t,e){return Object(n.Tb)(t)||(\"number\"===typeof t||t instanceof Number)&&!isFinite(+t)?null:+t}handleTickRangeOptions(){const t=this,{beginAtZero:e,stacked:i}=t.options,{minDefined:o,maxDefined:s}=t.getUserBounds();let{min:a,max:r}=t;const l=t=>a=o?a:t,c=t=>r=s?r:t;if(e||i){const t=Object(n.cc)(a),e=Object(n.cc)(r);t<0&&e<0?c(0):t>0&&e>0&&l(0)}a===r&&(c(r+1),e||l(a-1)),t.min=a,t.max=r}getTickLimit(){const t=this,e=t.options.ticks;let i,{maxTicksLimit:n,stepSize:o}=e;return o?i=Math.ceil(t.max/o)-Math.floor(t.min/o)+1:(i=t.computeTickLimit(),n=n||11),n&&(i=Math.min(n,i)),i}computeTickLimit(){return Number.POSITIVE_INFINITY}buildTicks(){const t=this,e=t.options,i=e.ticks;let o=t.getTickLimit();o=Math.max(2,o);const s=function(t,e){const i=[],{step:o,min:s,max:a,precision:r,count:l,maxTicks:c,maxDigits:h,horizontal:d}=t,u=o||1,g=c-1,{min:f,max:p}=e,b=!Object(n.Tb)(s),m=!Object(n.Tb)(a),x=!Object(n.Tb)(l),_=(p-f)/h;let y,v,O,j,w=Object(n.N)((p-f)/g/u)*u;if(w<1e-14&&!b&&!m)return[{value:f},{value:p}];j=Math.ceil(p/w)-Math.floor(f/w),j>g&&(w=Object(n.N)(j*w/g/u)*u),Object(n.Tb)(r)||(y=Math.pow(10,r),w=Math.ceil(w*y)/y),v=Math.floor(f/w)*w,O=Math.ceil(p/w)*w,b&&m&&o&&Object(n.O)((a-s)/o,w/1e3)?(j=Math.min((a-s)/w,c),w=(a-s)/j,v=s,O=a):x?(v=b?s:v,O=m?a:O,j=l-1,w=(O-v)/j):(j=(O-v)/w,j=Object(n.P)(j,Math.round(j),w/1e3)?Math.round(j):Math.ceil(j)),y=Math.pow(10,Object(n.Tb)(r)?Object(n.Q)(w):r),v=Math.round(v*y)/y,O=Math.round(O*y)/y;let M=0;for(b&&(i.push({value:s}),v<=s&&M++,Object(n.P)(Math.round((v+M*w)*y)/y,s,_*(d?(\"\"+s).length:1))&&M++);M<j;++M)i.push({value:Math.round((v+M*w)*y)/y});return m?Object(n.P)(i[i.length-1].value,a,_*(d?(\"\"+a).length:1))?i[i.length-1].value=a:i.push({value:a}):i.push({value:O}),i}({maxTicks:o,min:e.min,max:e.max,precision:i.precision,step:i.stepSize,count:i.count,maxDigits:t._maxDigits(),horizontal:t.isHorizontal()},t._range||t);return\"ticks\"===e.bounds&&Object(n.Kb)(s,t,\"value\"),e.reverse?(s.reverse(),t.start=t.max,t.end=t.min):(t.start=t.min,t.end=t.max),s}configure(){const t=this,e=t.ticks;let i=t.min,n=t.max;if(super.configure(),t.options.offset&&e.length){const t=(n-i)/Math.max(e.length-1,1)/2;i-=t,n+=t}t._startValue=i,t._endValue=n,t._valueRange=n-i}getLabelForValue(t){return Object(n.Zb)(t,this.chart.options.locale)}}class mi extends bi{determineDataLimits(){const t=this,{min:e,max:i}=t.getMinMax(!0);t.min=Object(n.Qb)(e)?e:0,t.max=Object(n.Qb)(i)?i:1,t.handleTickRangeOptions()}computeTickLimit(){const t=this;if(t.isHorizontal())return Math.ceil(t.width/40);const e=t._resolveTickFontOptions(0);return Math.ceil(t.height/e.lineHeight)}getPixelForValue(t){return null===t?NaN:this.getPixelForDecimal((t-this._startValue)/this._valueRange)}getValueForPixel(t){return this._startValue+this.getDecimalForPixel(t)*this._valueRange}}function xi(t){return 1===t/Math.pow(10,Math.floor(Object(n.l)(t)))}mi.id=\"linear\",mi.defaults={ticks:{callback:_t.formatters.numeric}};class _i extends Dt{constructor(t){super(t),this.start=void 0,this.end=void 0,this._startValue=void 0,this._valueRange=0}parse(t,e){const i=bi.prototype.parse.apply(this,[t,e]);if(0!==i)return Object(n.Qb)(i)&&i>0?i:null;this._zero=!0}determineDataLimits(){const t=this,{min:e,max:i}=t.getMinMax(!0);t.min=Object(n.Qb)(e)?Math.max(0,e):null,t.max=Object(n.Qb)(i)?Math.max(0,i):null,t.options.beginAtZero&&(t._zero=!0),t.handleTickRangeOptions()}handleTickRangeOptions(){const t=this,{minDefined:e,maxDefined:i}=t.getUserBounds();let o=t.min,s=t.max;const a=t=>o=e?o:t,r=t=>s=i?s:t,l=(t,e)=>Math.pow(10,Math.floor(Object(n.l)(t))+e);o===s&&(o<=0?(a(1),r(10)):(a(l(o,-1)),r(l(s,1)))),o<=0&&a(l(s,-1)),s<=0&&r(l(o,1)),t._zero&&t.min!==t._suggestedMin&&o===l(t.min,0)&&a(l(o,-1)),t.min=o,t.max=s}buildTicks(){const t=this,e=t.options,i=function(t,e){const i=Math.floor(Object(n.l)(e.max)),o=Math.ceil(e.max/Math.pow(10,i)),s=[];let a=Object(n.n)(t.min,Math.pow(10,Math.floor(Object(n.l)(e.min)))),r=Math.floor(Object(n.l)(a)),l=Math.floor(a/Math.pow(10,r)),c=r<0?Math.pow(10,Math.abs(r)):1;do{s.push({value:a,major:xi(a)}),++l,10===l&&(l=1,++r,c=r>=0?1:c),a=Math.round(l*Math.pow(10,r)*c)/c}while(r<i||r===i&&l<o);const h=Object(n.n)(t.max,a);return s.push({value:h,major:xi(a)}),s}({min:t._userMin,max:t._userMax},t);return\"ticks\"===e.bounds&&Object(n.Kb)(i,t,\"value\"),e.reverse?(i.reverse(),t.start=t.max,t.end=t.min):(t.start=t.min,t.end=t.max),i}getLabelForValue(t){return void 0===t?\"0\":Object(n.Zb)(t,this.chart.options.locale)}configure(){const t=this,e=t.min;super.configure(),t._startValue=Object(n.l)(e),t._valueRange=Object(n.l)(t.max)-Object(n.l)(e)}getPixelForValue(t){const e=this;return void 0!==t&&0!==t||(t=e.min),null===t||isNaN(t)?NaN:e.getPixelForDecimal(t===e.min?0:(Object(n.l)(t)-e._startValue)/e._valueRange)}getValueForPixel(t){const e=this,i=e.getDecimalForPixel(t);return Math.pow(10,e._startValue+i*e._valueRange)}}function yi(t){const e=t.ticks;if(e.display&&t.display){const t=Object(n.d)(e.backdropPadding);return Object(n.fc)(e.font&&e.font.size,n.Nb.font.size)+t.height}return 0}function vi(t,e,i,n,o){return t===n||t===o?{start:e-i/2,end:e+i/2}:t<n||t>o?{start:e-i,end:e}:{start:e,end:e+i}}function Oi(t){return 0===t||180===t?\"center\":t<180?\"left\":\"right\"}function ji(t,e,i){90===t||270===t?i.y-=e.h/2:(t>270||t<90)&&(i.y-=e.h)}function wi(t,e,i,o){const{ctx:s}=t;if(i)s.arc(t.xCenter,t.yCenter,e,0,n.u);else{let i=t.getPointPosition(0,e);s.moveTo(i.x,i.y);for(let n=1;n<o;n++)i=t.getPointPosition(n,e),s.lineTo(i.x,i.y)}}function Mi(t){return Object(n.gc)(t)?t:0}_i.id=\"logarithmic\",_i.defaults={ticks:{callback:_t.formatters.logarithmic,major:{enabled:!0}}};class ki extends bi{constructor(t){super(t),this.xCenter=void 0,this.yCenter=void 0,this.drawingArea=void 0,this._pointLabels=[],this._pointLabelItems=[]}setDimensions(){const t=this;t.width=t.maxWidth,t.height=t.maxHeight,t.paddingTop=yi(t.options)/2,t.xCenter=Math.floor(t.width/2),t.yCenter=Math.floor((t.height-t.paddingTop)/2),t.drawingArea=Math.min(t.height-t.paddingTop,t.width)/2}determineDataLimits(){const t=this,{min:e,max:i}=t.getMinMax(!1);t.min=Object(n.Qb)(e)&&!isNaN(e)?e:0,t.max=Object(n.Qb)(i)&&!isNaN(i)?i:0,t.handleTickRangeOptions()}computeTickLimit(){return Math.ceil(this.drawingArea/yi(this.options))}generateTickLabels(t){const e=this;bi.prototype.generateTickLabels.call(e,t),e._pointLabels=e.getLabels().map(((t,i)=>{const o=Object(n.o)(e.options.pointLabels.callback,[t,i],e);return o||0===o?o:\"\"}))}fit(){const t=this,e=t.options;e.display&&e.pointLabels.display?function(t){const e={l:0,r:t.width,t:0,b:t.height-t.paddingTop},i={};let o,s,a;const r=[],l=[],c=t.getLabels().length;for(o=0;o<c;o++){const c=t.options.pointLabels.setContext(t.getContext(o));l[o]=c.padding,a=t.getPointPosition(o,t.drawingArea+l[o]);const g=Object(n.x)(c.font);t.ctx.font=g.string,h=t.ctx,d=g.lineHeight,u=t._pointLabels[o],s=Object(n.Lb)(u)?{w:Object(n.R)(h,h.font,u),h:u.length*d}:{w:h.measureText(u).width,h:d},r[o]=s;const f=t.getIndexAngle(o),p=Object(n.r)(f),b=vi(p,a.x,s.w,0,180),m=vi(p,a.y,s.h,90,270);b.start<e.l&&(e.l=b.start,i.l=f),b.end>e.r&&(e.r=b.end,i.r=f),m.start<e.t&&(e.t=m.start,i.t=f),m.end>e.b&&(e.b=m.end,i.b=f)}var h,d,u;t._setReductions(t.drawingArea,e,i),t._pointLabelItems=[];const g=t.options,f=yi(g),p=t.getDistanceFromCenterForValue(g.ticks.reverse?t.min:t.max);for(o=0;o<c;o++){const e=0===o?f/2:0,i=t.getPointPosition(o,p+e+l[o]),s=Object(n.r)(t.getIndexAngle(o)),a=r[o];ji(s,a,i);const c=Oi(s);let h;h=\"left\"===c?i.x:\"center\"===c?i.x-a.w/2:i.x-a.w;const d=h+a.w;t._pointLabelItems[o]={x:i.x,y:i.y,textAlign:c,left:h,top:i.y,right:d,bottom:i.y+a.h}}}(t):t.setCenterPoint(0,0,0,0)}_setReductions(t,e,i){const n=this;let o=e.l/Math.sin(i.l),s=Math.max(e.r-n.width,0)/Math.sin(i.r),a=-e.t/Math.cos(i.t),r=-Math.max(e.b-(n.height-n.paddingTop),0)/Math.cos(i.b);o=Mi(o),s=Mi(s),a=Mi(a),r=Mi(r),n.drawingArea=Math.max(t/2,Math.min(Math.floor(t-(o+s)/2),Math.floor(t-(a+r)/2))),n.setCenterPoint(o,s,a,r)}setCenterPoint(t,e,i,n){const o=this,s=o.width-e-o.drawingArea,a=t+o.drawingArea,r=i+o.drawingArea,l=o.height-o.paddingTop-n-o.drawingArea;o.xCenter=Math.floor((a+s)/2+o.left),o.yCenter=Math.floor((r+l)/2+o.top+o.paddingTop)}getIndexAngle(t){const e=n.u/this.getLabels().length,i=this.options.startAngle||0;return Object(n.Db)(t*e+Object(n.dc)(i))}getDistanceFromCenterForValue(t){const e=this;if(Object(n.Tb)(t))return NaN;const i=e.drawingArea/(e.max-e.min);return e.options.reverse?(e.max-t)*i:(t-e.min)*i}getValueForDistanceFromCenter(t){if(Object(n.Tb)(t))return NaN;const e=this,i=t/(e.drawingArea/(e.max-e.min));return e.options.reverse?e.max-i:e.min+i}getPointPosition(t,e){const i=this,o=i.getIndexAngle(t)-n.i;return{x:Math.cos(o)*e+i.xCenter,y:Math.sin(o)*e+i.yCenter,angle:o}}getPointPositionForValue(t,e){return this.getPointPosition(t,this.getDistanceFromCenterForValue(e))}getBasePosition(t){return this.getPointPositionForValue(t||0,this.getBaseValue())}getPointLabelPosition(t){const{left:e,top:i,right:n,bottom:o}=this._pointLabelItems[t];return{left:e,top:i,right:n,bottom:o}}drawBackground(){const t=this,{backgroundColor:e,grid:{circular:i}}=t.options;if(e){const n=t.ctx;n.save(),n.beginPath(),wi(t,t.getDistanceFromCenterForValue(t._endValue),i,t.getLabels().length),n.closePath(),n.fillStyle=e,n.fill(),n.restore()}}drawGrid(){const t=this,e=t.ctx,i=t.options,{angleLines:o,grid:s}=i,a=t.getLabels().length;let r,l,c;if(i.pointLabels.display&&function(t,e){const{ctx:i,options:{pointLabels:o}}=t;for(let s=e-1;s>=0;s--){const e=o.setContext(t.getContext(s)),a=Object(n.x)(e.font),{x:r,y:l,textAlign:c,left:h,top:d,right:u,bottom:g}=t._pointLabelItems[s],{backdropColor:f}=e;if(!Object(n.Tb)(f)){const t=Object(n.d)(e.backdropPadding);i.fillStyle=f,i.fillRect(h-t.left,d-t.top,u-h+t.width,g-d+t.height)}Object(n.w)(i,t._pointLabels[s],r,l+a.lineHeight/2,a,{color:e.color,textAlign:c,textBaseline:\"middle\"})}}(t,a),s.display&&t.ticks.forEach(((e,i)=>{if(0!==i){l=t.getDistanceFromCenterForValue(e.value);const n=s.setContext(t.getContext(i-1));!function(t,e,i,n){const o=t.ctx,s=e.circular,{color:a,lineWidth:r}=e;!s&&!n||!a||!r||i<0||(o.save(),o.strokeStyle=a,o.lineWidth=r,o.setLineDash(e.borderDash),o.lineDashOffset=e.borderDashOffset,o.beginPath(),wi(t,i,s,n),o.closePath(),o.stroke(),o.restore())}(t,n,l,a)}})),o.display){for(e.save(),r=t.getLabels().length-1;r>=0;r--){const n=o.setContext(t.getContext(r)),{color:s,lineWidth:a}=n;a&&s&&(e.lineWidth=a,e.strokeStyle=s,e.setLineDash(n.borderDash),e.lineDashOffset=n.borderDashOffset,l=t.getDistanceFromCenterForValue(i.ticks.reverse?t.min:t.max),c=t.getPointPosition(r,l),e.beginPath(),e.moveTo(t.xCenter,t.yCenter),e.lineTo(c.x,c.y),e.stroke())}e.restore()}}drawBorder(){}drawLabels(){const t=this,e=t.ctx,i=t.options,o=i.ticks;if(!o.display)return;const s=t.getIndexAngle(0);let a,r;e.save(),e.translate(t.xCenter,t.yCenter),e.rotate(s),e.textAlign=\"center\",e.textBaseline=\"middle\",t.ticks.forEach(((s,l)=>{if(0===l&&!i.reverse)return;const c=o.setContext(t.getContext(l)),h=Object(n.x)(c.font);if(a=t.getDistanceFromCenterForValue(t.ticks[l].value),c.showLabelBackdrop){r=e.measureText(s.label).width,e.fillStyle=c.backdropColor;const t=Object(n.d)(c.backdropPadding);e.fillRect(-r/2-t.left,-a-h.size/2-t.top,r+t.width,h.size+t.height)}Object(n.w)(e,s.label,0,-a,h,{color:c.color})})),e.restore()}drawTitle(){}}ki.id=\"radialLinear\",ki.defaults={display:!0,animate:!0,position:\"chartArea\",angleLines:{display:!0,lineWidth:1,borderDash:[],borderDashOffset:0},grid:{circular:!1},startAngle:0,ticks:{showLabelBackdrop:!0,callback:_t.formatters.numeric},pointLabels:{backdropColor:void 0,backdropPadding:2,display:!0,font:{size:10},callback:t=>t,padding:5}},ki.defaultRoutes={\"angleLines.color\":\"borderColor\",\"pointLabels.color\":\"color\",\"ticks.color\":\"color\"},ki.descriptors={angleLines:{_fallback:\"grid\"}};const Si={millisecond:{common:!0,size:1,steps:1e3},second:{common:!0,size:1e3,steps:60},minute:{common:!0,size:6e4,steps:60},hour:{common:!0,size:36e5,steps:24},day:{common:!0,size:864e5,steps:30},week:{common:!1,size:6048e5,steps:4},month:{common:!0,size:2628e6,steps:12},quarter:{common:!1,size:7884e6,steps:4},year:{common:!0,size:3154e7}},Di=Object.keys(Si);function Pi(t,e){return t-e}function Ci(t,e){if(Object(n.Tb)(e))return null;const i=t._adapter,{parser:o,round:s,isoWeekday:a}=t._parseOpts;let r=e;return\"function\"===typeof o&&(r=o(r)),Object(n.Qb)(r)||(r=\"string\"===typeof o?i.parse(r,o):i.parse(r)),null===r?null:(s&&(r=\"week\"!==s||!Object(n.gc)(a)&&!0!==a?i.startOf(r,s):i.startOf(r,\"isoWeek\",a)),+r)}function Ai(t,e,i,n){const o=Di.length;for(let s=Di.indexOf(t);s<o-1;++s){const t=Si[Di[s]],o=t.steps?t.steps:Number.MAX_SAFE_INTEGER;if(t.common&&Math.ceil((i-e)/(o*t.size))<=n)return Di[s]}return Di[o-1]}function Ti(t,e,i){if(i){if(i.length){const{lo:o,hi:s}=Object(n.T)(i,e);t[i[o]>=e?i[o]:i[s]]=!0}}else t[e]=!0}function Li(t,e,i){const n=[],o={},s=e.length;let a,r;for(a=0;a<s;++a)r=e[a],o[r]=a,n.push({value:r,major:!1});return 0!==s&&i?function(t,e,i,n){const o=t._adapter,s=+o.startOf(e[0].value,n),a=e[e.length-1].value;let r,l;for(r=s;r<=a;r=+o.add(r,1,n))l=i[r],l>=0&&(e[l].major=!0);return e}(t,n,o,i):n}class Ei extends Dt{constructor(t){super(t),this._cache={data:[],labels:[],all:[]},this._unit=\"day\",this._majorUnit=void 0,this._offsets={},this._normalized=!1,this._parseOpts=void 0}init(t,e){const i=t.time||(t.time={}),o=this._adapter=new I._date(t.adapters.date);Object(n.J)(i.displayFormats,o.formats()),this._parseOpts={parser:i.parser,round:i.round,isoWeekday:i.isoWeekday},super.init(t),this._normalized=e.normalized}parse(t,e){return void 0===t?null:Ci(this,t)}beforeLayout(){super.beforeLayout(),this._cache={data:[],labels:[],all:[]}}determineDataLimits(){const t=this,e=t.options,i=t._adapter,o=e.time.unit||\"day\";let{min:s,max:a,minDefined:r,maxDefined:l}=t.getUserBounds();function c(t){r||isNaN(t.min)||(s=Math.min(s,t.min)),l||isNaN(t.max)||(a=Math.max(a,t.max))}r&&l||(c(t._getLabelBounds()),\"ticks\"===e.bounds&&\"labels\"===e.ticks.source||c(t.getMinMax(!1))),s=Object(n.Qb)(s)&&!isNaN(s)?s:+i.startOf(Date.now(),o),a=Object(n.Qb)(a)&&!isNaN(a)?a:+i.endOf(Date.now(),o)+1,t.min=Math.min(s,a-1),t.max=Math.max(s+1,a)}_getLabelBounds(){const t=this.getLabelTimestamps();let e=Number.POSITIVE_INFINITY,i=Number.NEGATIVE_INFINITY;return t.length&&(e=t[0],i=t[t.length-1]),{min:e,max:i}}buildTicks(){const t=this,e=t.options,i=e.time,o=e.ticks,s=\"labels\"===o.source?t.getLabelTimestamps():t._generate();\"ticks\"===e.bounds&&s.length&&(t.min=t._userMin||s[0],t.max=t._userMax||s[s.length-1]);const a=t.min,r=t.max,l=Object(n.S)(s,a,r);return t._unit=i.unit||(o.autoSkip?Ai(i.minUnit,t.min,t.max,t._getLabelCapacity(a)):function(t,e,i,n,o){for(let s=Di.length-1;s>=Di.indexOf(i);s--){const i=Di[s];if(Si[i].common&&t._adapter.diff(o,n,i)>=e-1)return i}return Di[i?Di.indexOf(i):0]}(t,l.length,i.minUnit,t.min,t.max)),t._majorUnit=o.major.enabled&&\"year\"!==t._unit?function(t){for(let e=Di.indexOf(t)+1,i=Di.length;e<i;++e)if(Si[Di[e]].common)return Di[e]}(t._unit):void 0,t.initOffsets(s),e.reverse&&l.reverse(),Li(t,l,t._majorUnit)}initOffsets(t){const e=this;let i,o,s=0,a=0;e.options.offset&&t.length&&(i=e.getDecimalForValue(t[0]),s=1===t.length?1-i:(e.getDecimalForValue(t[1])-i)/2,o=e.getDecimalForValue(t[t.length-1]),a=1===t.length?o:(o-e.getDecimalForValue(t[t.length-2]))/2);const r=t.length<3?.5:.25;s=Object(n.hc)(s,0,r),a=Object(n.hc)(a,0,r),e._offsets={start:s,end:a,factor:1/(s+1+a)}}_generate(){const t=this,e=t._adapter,i=t.min,o=t.max,s=t.options,a=s.time,r=a.unit||Ai(a.minUnit,i,o,t._getLabelCapacity(i)),l=Object(n.fc)(a.stepSize,1),c=\"week\"===r&&a.isoWeekday,h=Object(n.gc)(c)||!0===c,d={};let u,g,f=i;if(h&&(f=+e.startOf(f,\"isoWeek\",c)),f=+e.startOf(f,h?\"day\":r),e.diff(o,i,r)>1e5*l)throw new Error(i+\" and \"+o+\" are too far apart with stepSize of \"+l+\" \"+r);const p=\"data\"===s.ticks.source&&t.getDataTimestamps();for(u=f,g=0;u<o;u=+e.add(u,l,r),g++)Ti(d,u,p);return u!==o&&\"ticks\"!==s.bounds&&1!==g||Ti(d,u,p),Object.keys(d).sort(((t,e)=>t-e)).map((t=>+t))}getLabelForValue(t){const e=this._adapter,i=this.options.time;return i.tooltipFormat?e.format(t,i.tooltipFormat):e.format(t,i.displayFormats.datetime)}_tickFormatFunction(t,e,i,o){const s=this,a=s.options,r=a.time.displayFormats,l=s._unit,c=s._majorUnit,h=l&&r[l],d=c&&r[c],u=i[e],g=c&&d&&u&&u.major,f=s._adapter.format(t,o||(g?d:h)),p=a.ticks.callback;return p?Object(n.o)(p,[f,e,i],s):f}generateTickLabels(t){let e,i,n;for(e=0,i=t.length;e<i;++e)n=t[e],n.label=this._tickFormatFunction(n.value,e,t)}getDecimalForValue(t){const e=this;return null===t?NaN:(t-e.min)/(e.max-e.min)}getPixelForValue(t){const e=this,i=e._offsets,n=e.getDecimalForValue(t);return e.getPixelForDecimal((i.start+n)*i.factor)}getValueForPixel(t){const e=this,i=e._offsets,n=e.getDecimalForPixel(t)/i.factor-i.end;return e.min+n*(e.max-e.min)}_getLabelSize(t){const e=this,i=e.options.ticks,o=e.ctx.measureText(t).width,s=Object(n.dc)(e.isHorizontal()?i.maxRotation:i.minRotation),a=Math.cos(s),r=Math.sin(s),l=e._resolveTickFontOptions(0).size;return{w:o*a+l*r,h:o*r+l*a}}_getLabelCapacity(t){const e=this,i=e.options.time,n=i.displayFormats,o=n[i.unit]||n.millisecond,s=e._tickFormatFunction(t,0,Li(e,[t],e._majorUnit),o),a=e._getLabelSize(s),r=Math.floor(e.isHorizontal()?e.width/a.w:e.height/a.h)-1;return r>0?r:1}getDataTimestamps(){const t=this;let e,i,n=t._cache.data||[];if(n.length)return n;const o=t.getMatchingVisibleMetas();if(t._normalized&&o.length)return t._cache.data=o[0].controller.getAllParsedValues(t);for(e=0,i=o.length;e<i;++e)n=n.concat(o[e].controller.getAllParsedValues(t));return t._cache.data=t.normalize(n)}getLabelTimestamps(){const t=this,e=t._cache.labels||[];let i,n;if(e.length)return e;const o=t.getLabels();for(i=0,n=o.length;i<n;++i)e.push(Ci(t,o[i]));return t._cache.labels=t._normalized?e:t.normalize(e)}normalize(t){return Object(n.B)(t.sort(Pi))}}function zi(t,e,i){let o,s,a,r;if(i)o=Math.floor(e),s=Math.ceil(e),a=t[o],r=t[s];else{const i=Object(n.T)(t,e);a=i.lo,r=i.hi,o=t[a],s=t[r]}const l=s-o;return l?a+(r-a)*(e-o)/l:a}Ei.id=\"time\",Ei.defaults={bounds:\"data\",adapters:{},time:{parser:!1,unit:!1,round:!1,isoWeekday:!1,minUnit:\"millisecond\",displayFormats:{}},ticks:{source:\"auto\",major:{enabled:!1}}};class Ri extends Ei{constructor(t){super(t),this._table=[],this._maxIndex=void 0}initOffsets(){const t=this,e=t._getTimestampsForTable();t._table=t.buildLookupTable(e),t._maxIndex=t._table.length-1,super.initOffsets(e)}buildLookupTable(t){const{min:e,max:i}=this;if(!t.length)return[{time:e,pos:0},{time:i,pos:1}];const n=[e];let o,s,a;for(o=0,s=t.length;o<s;++o)a=t[o],a>e&&a<i&&n.push(a);return n.push(i),n}_getTimestampsForTable(){const t=this;let e=t._cache.all||[];if(e.length)return e;const i=t.getDataTimestamps(),n=t.getLabelTimestamps();return e=i.length&&n.length?t.normalize(i.concat(n)):i.length?i:n,e=t._cache.all=e,e}getPixelForValue(t,e){const i=this,o=i._offsets,s=i._normalized&&i._maxIndex>0&&!Object(n.Tb)(e)?e/i._maxIndex:i.getDecimalForValue(t);return i.getPixelForDecimal((o.start+s)*o.factor)}getDecimalForValue(t){return zi(this._table,t)/this._maxIndex}getValueForPixel(t){const e=this,i=e._offsets,n=e.getDecimalForPixel(t)/i.factor-i.end;return zi(e._table,n*this._maxIndex,!0)}}Ri.id=\"timeseries\",Ri.defaults=Ei.defaults;var Ii=Object.freeze({__proto__:null,CategoryScale:pi,LinearScale:mi,LogarithmicScale:_i,RadialLinearScale:ki,TimeScale:Ei,TimeSeriesScale:Ri});const Fi=[E,De,gi,Ii]}}]);","map":{"version":3,"sources":["static/chunks/36bcf0ca.6d3ce99295ab10576d25.js"],"names":["window","push","m0r1","module","__webpack_exports__","__webpack_require__","r","d","Animation","Animations","ArcElement","BarController","BarElement","BasePlatform","BasicPlatform","BubbleController","CategoryScale","Chart","DatasetController","plugin_decimation","DomPlatform","DoughnutController","Element","plugin_filler","Interaction","plugin_legend","LineController","LineElement","LinearScale","LogarithmicScale","PieController","PointElement","PolarAreaController","RadarController","RadialLinearScale","Scale","ScatterController","Ticks","TimeScale","TimeSeriesScale","plugin_title","plugin_tooltip","adapters","animator","controllers","elements","layouts","plugins","registerables","registry","scales","_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__","[object Object]","this","_request","_charts","Map","_running","_lastDate","undefined","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","me","call","_update","_refresh","Date","now","remaining","running","items","length","item","i","draw","_active","_total","tick","pop","_notify","charts","get","complete","progress","set","event","cb","_getAnims","reduce","acc","cur","max","_duration","cancel","delete","transparent","interpolators","boolean","from","to","factor","c0","Object","c1","valid","mix","hexString","number","cfg","target","prop","currentValue","_fn","_easing","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","elapsed","remain","promises","Promise","res","rej","resolved","method","animationOptions","keys","animation","describe","_fallback","_indexable","_scriptable","name","colors","properties","numbers","active","resize","show","animations","visible","hide","v","config","_chart","_properties","configure","animatedProps","getOwnPropertyNames","key","option","has","values","newOptions","options","$shared","assign","$animations","resolveTargetOptions","_createAnimations","anim","wait","all","awaitAll","then","props","charAt","_animateOptions","value","update","size","add","scaleClip","scale","allowedOverflow","opts","reverse","end","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","isStacked","meta","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","indexScale","valueScale","id","getStackKey","_top","_bottom","getFirstScaleId","filter","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","$context","initialize","linkScales","_stacked","addElements","dataset","getDataset","chooseId","x","y","xid","xAxisID","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","data","datasets","getDatasetMeta","scaleID","adata","Array","convertObjectDataToArray","isExtensible","_dataCheck","datasetElementType","resetNewElements","stackChanged","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","parse","xAxisKey","yAxisKey","range","parsedValue","NaN","canStack","otherScale","_getOtherScale","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","updateRangeFromParsed","getParsed","label","getLabelForValue","_clip","t","b","l","top","right","bottom","left","toClip","clip","defaultClip","getMaxOverflow","area","chartArea","element","resolveDatasetElementOptions","resolveDataElementOptions","context","parent","create","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","dataElementType","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","transition","datasetAnimationScopeKeys","_cacheable","sharedOptions","_animationsDisabled","_resolveAnimations","getStyle","getSharedOptions","_setStyle","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","arguments","computeMinSampleSize","_cache","$bar","metas","concat","getAllParsedValues","sort","a","getAllScaleValues","curr","_length","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","defaults","prototype","iAxisKey","vAxisKey","obj","super","bars","reset","base","getBasePixel","horizontal","isHorizontal","ruler","_getRuler","firstOpts","includeOptions","updateSharedOptions","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","enableBorderRadius","center","height","width","updateElement","last","val","isNaN","indexOf","_getStacks","pixels","barThickness","_startPixel","_endPixel","stackCount","_getStackCount","grouped","ratio","categoryPercentage","barPercentage","baseValue","minBarLength","floating","getDataVisibility","actualBase","halfGrid","getLineWidthForValue","skipNull","maxBarThickness","Infinity","next","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","_getStackIndex","rects","overrides","interaction","_index_","offset","grid","_value_","beginAtZero","points","point","getPixelForDecimal","skip","radius","tooltip","title","innerRadius","outerRadius","offsetX","offsetY","rotation","circumference","isDatasetVisible","_getRotation","_getCircumference","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","_getRotationExtents","ratioX","ratioY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","_circumference","arc","metaData","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","aspectRatio","legend","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","hidden","e","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","slice","line","_dataset","animationsDisabled","pointCount","lo","hi","getStartAndCountOfVisiblePoints","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","scaleRangesChanged","_decimated","showLine","segment","animated","spanGaps","maxGapLength","directUpdate","prevParsed","nullData","stop","border","firstPoint","lastPoint","updateControlPoints","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","_fullLoop","pointPosition","getPointPositionForValue","fill","__proto__","abstract","Error","DateAdapter","format","timestamp","amount","unit","weekday","override","members","_date","getRelativePosition","binarySearch","metaset","intersect","lookupMethod","_reversePixels","el","getRange","optimizedEvaluateItems","position","handler","getSortedVisibleDatasetMetas","j","getIntersectItems","useFinalPosition","_minPadding","inRange","getNearestItems","distanceMetric","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getDistanceMetricForAxis","minDistance","getCenterPoint","distance","getAxisItems","rangeMethod","intersectsItem","jlen","evaluateAllVisibleItems","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","v1","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","params","layout","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","w","heightChanged","h","same","other","getMargins","marginForPositions","positions","margin","fitBoxes","boxes","refitBoxes","refit","fullSize","placeBoxes","userPadding","padding","_layers","z","layoutItem","minPadding","availableWidth","availableHeight","layoutBoxes","wrapBoxes","wrap","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","vBoxMaxWidth","hBoxMaxHeight","setLayoutDims","updatePos","change","handleMaxPadding","canvas","listener","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","passive","removeListener","removeEventListener","createAttachObserver","observer","MutationObserver","entries","addedNodes","added","observe","document","childList","subtree","createDetachObserver","container","removedNodes","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","currentDevicePixelRatio","createResizeObserver","clientWidth","ResizeObserver","contentRect","addEventListener","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","proxy","native","fromNativeEvent","args","node","addListener","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","getProps","final","ret","defaultRoutes","formatters","tickValue","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","numeric","autoSkip","tickOpts","ticksLimit","maxTicksLimit","tickLength","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","majorIndices","major","enabled","result","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","len","diff","getEvenSpacing","factors","calculateSpacing","avgMajorSpacing","round","majorStart","majorEnd","bounds","grace","drawBorder","drawOnChartArea","drawTicks","tickWidth","tickColor","color","borderDash","borderDashOffset","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkipPadding","labelOffset","callback","minor","align","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","offsetFromEdge","edge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","getTickMarkLength","getTitleHeight","fallback","font","lineHeight","titleAlign","reverseAlign","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","getMinMax","xLabels","yLabels","beforeUpdate","margins","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","beforeFit","fit","afterFit","afterUpdate","startPixel","endPixel","reversePixels","_alignToPixels","alignToPixels","notifyPlugins","_callHooks","beforeTickToLabelConversion","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","generateTickLabels","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","string","gc","gcLen","garbageCollect","valueAt","idx","pixel","decimal","getBaseValue","createTickContext","optionTicks","rot","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","strokeColor","strokeWidth","backdrop","labelPadding","translation","save","fillRect","restore","findIndex","_computeGridLineItems","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","lastLineWidth","_computeLabelArea","_computeLabelItems","titleX","titleY","titleArgs","drawBackground","drawGrid","drawTitle","drawLabels","tz","gz","axisID","fontSize","TypedRegistry","scope","isPrototypeOf","proto","getPrototypeOf","parentScope","isIChartComponent","register","itemDefaults","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","routeDefaults","descriptors","registerDefaults","_typedRegistries","_each","_get","typedRegistry","arg","reg","_getRegistryForType","isForType","_exec","itemReg","component","camelMethod","PluginService","_init","hook","_createDescriptors","_descriptors","descriptor","plugin","cancelable","_oldCache","_notifyStateChanges","getPlugin","local","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","toLowerCase","initOptions","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","mainScope","resetCache","keyLists","_cachedScopes","resolver","subPrefixes","getResolver","isScriptable","isIndexable","needContext","subResolver","descriptorDefaults","resolverCache","p","includes","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","isDomSupported","getCanvas","getElementById","instances","getChart","c","initialCanvas","existingChart","chartOptionScopes","platform","_initializePlatform","acquireContext","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","listen","_initialize","console","error","maintainAspectRatio","responsive","bindEvents","OffscreenCanvas","_resizeBeforeDraw","_resize","newSize","getMaximumSize","oldRatio","newRatio","getDevicePixelRatio","onResize","render","scalesOptions","axisOptions","scaleOpts","updated","isRadial","dposition","dtype","scaleType","getScale","init","hasUpdated","addBox","oldIndex","_destroyDatasetMeta","newControllers","_removeUnreferencedMetasets","order","_updateMetasetIndex","updateIndex","ControllerClass","getController","getElement","_updateMetasets","_resetElements","removeBox","animsDisabled","ensureScalesHaveIDs","buildOrUpdateScales","existingEvents","newEvents","events","unbindEvents","invalidate","buildOrUpdateControllers","buildOrUpdateElements","_updateLayout","_updateDatasets","_eventHandler","noArea","_idx","isFunction","_updateDataset","layers","_drawDatasets","_drawDataset","setDatasetVisibility","_updateDatasetVisibility","_destroy","remove","releaseContext","toDataURL","_add","_remove","detached","isAttached","prefix","activeElements","lastActive","_updateHoverStyles","notify","replay","hoverOptions","hover","deactivated","activated","updateHoverStyle","eventFilter","_handleEvent","lastEvent","getElementsAtEventForMode","onHover","onClick","invalidatePlugins","enumerable","clipArc","pixelMargin","angleMargin","closePath","parseBorderRadius$1","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","PI","p8","inner","lineJoin","fullCircles","drawFullCircleBorders","defineProperties","version","unregister","chartX","chartY","halfAngle","halfRadius","translate","drawArc","setStyle","lineCap","borderCapStyle","borderJoinStyle","previous","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","tension","cubicInterpolationMode","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","segments","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","_points","_segments","_pointsUpdated","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","capBezierPoints","mouseX","mouseY","hoverRadius","getBarBounds","bar","half","parseBorderSkipped","borderSkipped","parseEdge","orig","v2","startEnd","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","rect","pointStyle","addRectPath","cleanDecimatedDataset","defineProperty","cleanDecimatedData","algorithm","beforeElementsUpdate","xAxis","decimated","getStartAndCountOfVisiblePointsSimplified","configurable","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","decodeFill","fillOption","parseFillOption","parseFloat","simpleArc","computeBoundary","computeCircularBoundary","computeLinearBoundary","buildStackLine","sourcePoints","linesBelow","below","isLineAndNotInHideAnimation","unshift","getLinesBelow","createBoundaryLine","addPointsBelow","sourcePoint","postponed","findPoint","interpolate","pointValue","linePoints","firstValue","lastValue","boundary","pointsFromSegments","resolveTarget","sources","propagate","visited","clipY","getBounds","_getEdge","clipBounds","interpolatedLineTo","interpolatedPoint","_fill","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","lineLoop","targetLoop","drawfill","getLineByIndex","getTarget","lineOpts","above","doFill","_args","$filler","drawTime","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","generateLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","heightLimit","totalWidth","currentColWidth","currentColHeight","col","hitbox","_draw","defaultColor","rtlHelper","rtl","fontColor","halfFontSize","cursor","textDirection","textWidth","setWidth","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","leftForLtr","drawLegendBox","strikethrough","fillText","titleFont","titlePadding","topPaddingPlusHalfFontSize","hitBox","lh","onLeave","isListened","hoveredItem","_getLegendItemAt","sameItem","_element","adjustHitBoxes","handleEvent","ci","Title","_padding","textSize","fontOpts","_drawArgs","titleBlock","createTitle","positioners","hasValue","tooltipPosition","eventPosition","nearestElement","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","getLabelAndValue","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","lines","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","cornerRadius","paddingAndSize","radiusAndPadding","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","tooltipItems","beforeTitle","afterTitle","bodyItems","scoped","beforeLabel","afterLabel","beforeFooter","afterFooter","itemSort","labelColor","labelPointStyle","labelTextColor","_createItems","getTitle","getBeforeBody","getBody","getAfterBody","getFooter","positionAndSize","backgroundPoint","external","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","_drawColorBox","footerAlign","footerColor","tooltipSize","drawCaret","quadraticCurveTo","animX","animY","_updateAnimationTarget","hasTooltipContent","globalAlpha","drawBody","drawFooter","positionChanged","_positionChanged","labelCount","Decimation","Filler","findOrAddLabel","addIfString","lastIndexOf","_startValue","_valueRange","isFinite","getDecimalForPixel","LinearScaleBase","_endValue","setMin","setMax","minSign","maxSign","maxTicks","stepSize","computeTickLimit","getTickLimit","generationOptions","dataRange","step","precision","maxDigits","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","generateTicks$1","_maxDigits","handleTickRangeOptions","isMajor","tickVal","_zero","exp","m","endExp","endSignificand","significand","lastTick","generateTicks","getTickBackdropHeight","determineLimits","getTextAlignForAngle","adjustPointPositionForLabelHeight","pathRadiusLine","getPointPosition","numberOrZero","param","logarithmic","drawingArea","_pointLabels","_pointLabelItems","furthestLimits","furthestAngles","valueCount","plFont","hLimits","vLimits","_setReductions","tickBackdropHeight","outerDistance","extra","pointLabelPosition","fitWithPointLabels","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","scalingFactor","scaledDistance","distanceFromCenter","drawPointLabels","gridLineOpts","drawRadiusLine","rotate","animate","angleLines.color","pointLabels.color","ticks.color","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","startOf","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","_unit","_majorUnit","_offsets","_normalized","displayFormats","formats","normalized","_applyBounds","_getLabelBounds","endOf","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","getDecimalForValue","limit","hasWeekday","getDataTimestamps","tooltipFormat","datetime","minorFormat","majorFormat","formatter","_tickFormatFunction","offsets","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","_getLabelSize","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","_table","_maxIndex","_getTimestampsForTable","buildLookupTable"],"mappings":"CAACA,OAAyB,iBAAIA,OAAyB,kBAAK,IAAIC,KAAK,CAAC,CAAC,GAAG,CAEpEC,KACA,SAAUC,EAAQC,EAAqBC,GAE7C,aACAA,EAAoBC,EAAEF,GACSC,EAAoBE,EAAEH,EAAqB,aAAa,WAAa,OAAOI,KAC5EH,EAAoBE,EAAEH,EAAqB,cAAc,WAAa,OAAOK,KAC7EJ,EAAoBE,EAAEH,EAAqB,cAAc,WAAa,OAAOM,MAC7EL,EAAoBE,EAAEH,EAAqB,iBAAiB,WAAa,OAAOO,KAChFN,EAAoBE,EAAEH,EAAqB,cAAc,WAAa,OAAOQ,MAC7EP,EAAoBE,EAAEH,EAAqB,gBAAgB,WAAa,OAAOS,MAC/ER,EAAoBE,EAAEH,EAAqB,iBAAiB,WAAa,OAAOU,MAChFT,EAAoBE,EAAEH,EAAqB,oBAAoB,WAAa,OAAOW,KACnFV,EAAoBE,EAAEH,EAAqB,iBAAiB,WAAa,OAAOY,MAChFX,EAAoBE,EAAEH,EAAqB,SAAS,WAAa,OAAOa,MACxEZ,EAAoBE,EAAEH,EAAqB,qBAAqB,WAAa,OAAOc,KACpFb,EAAoBE,EAAEH,EAAqB,cAAc,WAAa,OAAOe,MAC7Ed,EAAoBE,EAAEH,EAAqB,eAAe,WAAa,OAAOgB,MAC9Ef,EAAoBE,EAAEH,EAAqB,sBAAsB,WAAa,OAAOiB,KACrFhB,EAAoBE,EAAEH,EAAqB,WAAW,WAAa,OAAOkB,MAC1EjB,EAAoBE,EAAEH,EAAqB,UAAU,WAAa,OAAOmB,MACzElB,EAAoBE,EAAEH,EAAqB,eAAe,WAAa,OAAOoB,KAC9EnB,EAAoBE,EAAEH,EAAqB,UAAU,WAAa,OAAOqB,MACzEpB,EAAoBE,EAAEH,EAAqB,kBAAkB,WAAa,OAAOsB,KACjFrB,EAAoBE,EAAEH,EAAqB,eAAe,WAAa,OAAOuB,MAC9EtB,EAAoBE,EAAEH,EAAqB,eAAe,WAAa,OAAOwB,MAC9EvB,EAAoBE,EAAEH,EAAqB,oBAAoB,WAAa,OAAOyB,MACnFxB,EAAoBE,EAAEH,EAAqB,iBAAiB,WAAa,OAAO0B,KAChFzB,EAAoBE,EAAEH,EAAqB,gBAAgB,WAAa,OAAO2B,MAC/E1B,EAAoBE,EAAEH,EAAqB,uBAAuB,WAAa,OAAO4B,KACtF3B,EAAoBE,EAAEH,EAAqB,mBAAmB,WAAa,OAAO6B,KAClF5B,EAAoBE,EAAEH,EAAqB,qBAAqB,WAAa,OAAO8B,MACpF7B,EAAoBE,EAAEH,EAAqB,SAAS,WAAa,OAAO+B,MACxE9B,EAAoBE,EAAEH,EAAqB,qBAAqB,WAAa,OAAOgC,KACpF/B,EAAoBE,EAAEH,EAAqB,SAAS,WAAa,OAAOiC,MACxEhC,EAAoBE,EAAEH,EAAqB,aAAa,WAAa,OAAOkC,MAC5EjC,EAAoBE,EAAEH,EAAqB,mBAAmB,WAAa,OAAOmC,MAClFlC,EAAoBE,EAAEH,EAAqB,SAAS,WAAa,OAAOoC,MACxEnC,EAAoBE,EAAEH,EAAqB,WAAW,WAAa,OAAOqC,MAC1EpC,EAAoBE,EAAEH,EAAqB,aAAa,WAAa,OAAOsC,KAC5ErC,EAAoBE,EAAEH,EAAqB,YAAY,WAAa,OAAOuC,KAC3EtC,EAAoBE,EAAEH,EAAqB,eAAe,WAAa,OAAOwC,KAC9EvC,EAAoBE,EAAEH,EAAqB,YAAY,WAAa,OAAOyC,MAC3ExC,EAAoBE,EAAEH,EAAqB,WAAW,WAAa,OAAO0C,MAC1EzC,EAAoBE,EAAEH,EAAqB,WAAW,WAAa,OAAO2C,MAC1E1C,EAAoBE,EAAEH,EAAqB,iBAAiB,WAAa,OAAO4C,MAChF3C,EAAoBE,EAAEH,EAAqB,YAAY,WAAa,OAAO6C,MAC3E5C,EAAoBE,EAAEH,EAAqB,UAAU,WAAa,OAAO8C,MACnF,IAAIC,EAA0D9C,EAAoB,QACzEA,EAAoBE,EAAEH,EAAqB,YAAY,WAAa,OAAO+C,EAA4D,MAoJrK,IAAIR,EAAW,IAzIf,MACES,cACEC,KAAKC,SAAW,KAChBD,KAAKE,QAAU,IAAIC,IACnBH,KAAKI,UAAW,EAChBJ,KAAKK,eAAYC,EAEnBP,QAAQQ,EAAOC,EAAOC,EAAMC,GAC1B,MAAMC,EAAYH,EAAMI,UAAUF,GAC5BG,EAAWL,EAAMM,SACvBH,EAAUI,SAAQC,GAAMA,EAAG,CACzBT,MAAAA,EACAU,QAAST,EAAMS,QACfJ,SAAAA,EACAK,YAAaC,KAAKC,IAAIX,EAAOD,EAAMa,MAAOR,OAG9Cd,WACE,MAAMuB,EAAKtB,KACPsB,EAAGrB,WAGPqB,EAAGlB,UAAW,EACdkB,EAAGrB,SAAWH,EAAoE,GAAEyB,KAAK5E,QAAQ,KAC/F2E,EAAGE,UACHF,EAAGrB,SAAW,KACVqB,EAAGlB,UACLkB,EAAGG,eAIT1B,QAAQU,EAAOiB,KAAKC,OAClB,MAAML,EAAKtB,KACX,IAAI4B,EAAY,EAChBN,EAAGpB,QAAQa,SAAQ,CAACP,EAAOD,KACzB,IAAKC,EAAMqB,UAAYrB,EAAMsB,MAAMC,OACjC,OAEF,MAAMD,EAAQtB,EAAMsB,MACpB,IAEIE,EAFAC,EAAIH,EAAMC,OAAS,EACnBG,GAAO,EAEX,KAAOD,GAAK,IAAKA,EACfD,EAAOF,EAAMG,GACTD,EAAKG,SACHH,EAAKI,OAAS5B,EAAMM,WACtBN,EAAMM,SAAWkB,EAAKI,QAExBJ,EAAKK,KAAK5B,GACVyB,GAAO,IAEPJ,EAAMG,GAAKH,EAAMA,EAAMC,OAAS,GAChCD,EAAMQ,OAGNJ,IACF3B,EAAM2B,OACNZ,EAAGiB,QAAQhC,EAAOC,EAAOC,EAAM,aAE5BqB,EAAMC,SACTvB,EAAMqB,SAAU,EAChBP,EAAGiB,QAAQhC,EAAOC,EAAOC,EAAM,YAC/BD,EAAMS,SAAU,GAElBW,GAAaE,EAAMC,UAErBT,EAAGjB,UAAYI,EACG,IAAdmB,IACFN,EAAGlB,UAAW,GAGlBL,UAAUQ,GACR,MAAMiC,EAASxC,KAAKE,QACpB,IAAIM,EAAQgC,EAAOC,IAAIlC,GAavB,OAZKC,IACHA,EAAQ,CACNqB,SAAS,EACTZ,SAAS,EACTa,MAAO,GACPlB,UAAW,CACT8B,SAAU,GACVC,SAAU,KAGdH,EAAOI,IAAIrC,EAAOC,IAEbA,EAETT,OAAOQ,EAAOsC,EAAOC,GACnB9C,KAAK+C,UAAUxC,GAAOK,UAAUiC,GAAOjG,KAAKkG,GAE9C/C,IAAIQ,EAAOuB,GACJA,GAAUA,EAAMC,QAGrB/B,KAAK+C,UAAUxC,GAAOuB,MAAMlF,QAAQkF,GAEtC/B,IAAIQ,GACF,OAAOP,KAAK+C,UAAUxC,GAAOuB,MAAMC,OAAS,EAE9ChC,MAAMQ,GACJ,MAAMC,EAAQR,KAAKE,QAAQuC,IAAIlC,GAC1BC,IAGLA,EAAMqB,SAAU,EAChBrB,EAAMa,MAAQK,KAAKC,MACnBnB,EAAMM,SAAWN,EAAMsB,MAAMkB,QAAO,CAACC,EAAKC,IAAQ/B,KAAKgC,IAAIF,EAAKC,EAAIE,YAAY,GAChFpD,KAAKyB,YAEP1B,QAAQQ,GACN,IAAKP,KAAKI,SACR,OAAO,EAET,MAAMI,EAAQR,KAAKE,QAAQuC,IAAIlC,GAC/B,SAAKC,GAAUA,EAAMqB,SAAYrB,EAAMsB,MAAMC,QAK/ChC,KAAKQ,GACH,MAAMC,EAAQR,KAAKE,QAAQuC,IAAIlC,GAC/B,IAAKC,IAAUA,EAAMsB,MAAMC,OACzB,OAEF,MAAMD,EAAQtB,EAAMsB,MACpB,IAAIG,EAAIH,EAAMC,OAAS,EACvB,KAAOE,GAAK,IAAKA,EACfH,EAAMG,GAAGoB,SAEX7C,EAAMsB,MAAQ,GACd9B,KAAKuC,QAAQhC,EAAOC,EAAOkB,KAAKC,MAAO,YAEzC5B,OAAOQ,GACL,OAAOP,KAAKE,QAAQoD,OAAO/C,KAK/B,MAAMgD,EAAc,cACdC,EAAgB,CACpBC,QAAO,CAACC,EAAMC,EAAIC,IACTA,EAAS,GAAMD,EAAKD,EAE7B3D,MAAM2D,EAAMC,EAAIC,GACd,MAAMC,EAAKC,OAAOhE,EAAoE,GAA3EgE,CAA8EJ,GAAQH,GAC3FQ,EAAKF,EAAGG,OAASF,OAAOhE,EAAoE,GAA3EgE,CAA8EH,GAAMJ,GAC3G,OAAOQ,GAAMA,EAAGC,MACZD,EAAGE,IAAIJ,EAAID,GAAQM,YACnBP,GAENQ,OAAM,CAACT,EAAMC,EAAIC,IACRF,GAAQC,EAAKD,GAAQE,GAGhC,MAAMzG,EACJ4C,YAAYqE,EAAKC,EAAQC,EAAMX,GAC7B,MAAMY,EAAeF,EAAOC,GAC5BX,EAAKG,OAAOhE,EAAmE,EAA1EgE,CAA6E,CAACM,EAAIT,GAAIA,EAAIY,EAAcH,EAAIV,OACjH,MAAMA,EAAOI,OAAOhE,EAAmE,EAA1EgE,CAA6E,CAACM,EAAIV,KAAMa,EAAcZ,IACnH3D,KAAKmC,SAAU,EACfnC,KAAKwE,IAAMJ,EAAIpD,IAAMwC,EAAcY,EAAI1D,aAAegD,GACtD1D,KAAKyE,QAAU3E,EAAoE,GAAEsE,EAAIM,SAAW5E,EAAoE,GAAE6E,OAC1K3E,KAAK4E,OAASzD,KAAK0D,MAAMnD,KAAKC,OAASyC,EAAIU,OAAS,IACpD9E,KAAKoD,UAAYpD,KAAKoC,OAASjB,KAAK0D,MAAMT,EAAItD,UAC9Cd,KAAK+E,QAAUX,EAAIY,KACnBhF,KAAKiF,QAAUZ,EACfrE,KAAKkF,MAAQZ,EACbtE,KAAKmF,MAAQzB,EACb1D,KAAKoF,IAAMzB,EACX3D,KAAKqF,eAAY/E,EAEnBP,SACE,OAAOC,KAAKmC,QAEdpC,OAAOqE,EAAKT,EAAIlD,GACd,MAAMa,EAAKtB,KACX,GAAIsB,EAAGa,QAAS,CACdb,EAAGiB,SAAQ,GACX,MAAMgC,EAAejD,EAAG2D,QAAQ3D,EAAG4D,OAC7BI,EAAU7E,EAAOa,EAAGsD,OACpBW,EAASjE,EAAG8B,UAAYkC,EAC9BhE,EAAGsD,OAASnE,EACZa,EAAG8B,UAAYjC,KAAK0D,MAAM1D,KAAKgC,IAAIoC,EAAQnB,EAAItD,WAC/CQ,EAAGc,QAAUkD,EACbhE,EAAGyD,QAAUX,EAAIY,KACjB1D,EAAG8D,IAAMtB,OAAOhE,EAAmE,EAA1EgE,CAA6E,CAACM,EAAIT,GAAIA,EAAIY,EAAcH,EAAIV,OACrHpC,EAAG6D,MAAQrB,OAAOhE,EAAmE,EAA1EgE,CAA6E,CAACM,EAAIV,KAAMa,EAAcZ,KAGrH5D,SACE,MAAMuB,EAAKtB,KACPsB,EAAGa,UACLb,EAAGe,KAAKX,KAAKC,OACbL,EAAGa,SAAU,EACbb,EAAGiB,SAAQ,IAGfxC,KAAKU,GACH,MAAMa,EAAKtB,KACLsF,EAAU7E,EAAOa,EAAGsD,OACpB9D,EAAWQ,EAAG8B,UACdkB,EAAOhD,EAAG4D,MACVxB,EAAOpC,EAAG6D,MACVH,EAAO1D,EAAGyD,MACVpB,EAAKrC,EAAG8D,IACd,IAAIxB,EAEJ,GADAtC,EAAGa,QAAUuB,IAASC,IAAOqB,GAASM,EAAUxE,IAC3CQ,EAAGa,QAGN,OAFAb,EAAG2D,QAAQX,GAAQX,OACnBrC,EAAGiB,SAAQ,GAGT+C,EAAU,EACZhE,EAAG2D,QAAQX,GAAQZ,GAGrBE,EAAU0B,EAAUxE,EAAY,EAChC8C,EAASoB,GAAQpB,EAAS,EAAI,EAAIA,EAASA,EAC3CA,EAAStC,EAAGmD,QAAQtD,KAAKC,IAAI,EAAGD,KAAKgC,IAAI,EAAGS,KAC5CtC,EAAG2D,QAAQX,GAAQhD,EAAGkD,IAAId,EAAMC,EAAIC,IAEtC7D,OACE,MAAMyF,EAAWxF,KAAKqF,YAAcrF,KAAKqF,UAAY,IACrD,OAAO,IAAII,SAAQ,CAACC,EAAKC,KACvBH,EAAS5I,KAAK,CAAC8I,IAAAA,EAAKC,IAAAA,OAGxB5F,QAAQ6F,GACN,MAAMC,EAASD,EAAW,MAAQ,MAC5BJ,EAAWxF,KAAKqF,WAAa,GACnC,IAAK,IAAIpD,EAAI,EAAGA,EAAIuD,EAASzD,OAAQE,IACnCuD,EAASvD,GAAG4D,MAOlB/F,EAAoE,GAAE8C,IAAI,YAAa,CACrFkC,WAAOxE,EACPQ,SAAU,IACV4D,OAAQ,eACR1D,QAAIV,EACJoD,UAAMpD,EACN0E,UAAM1E,EACNqD,QAAIrD,EACJI,UAAMJ,IAER,MAAMwF,EAAmBhC,OAAOiC,KAAKjG,EAAoE,GAAEkG,WAC3GlG,EAAoE,GAAEmG,SAAS,YAAa,CAC1FC,WAAW,EACXC,YAAY,EACZC,YAAcC,GAAkB,eAATA,GAAkC,eAATA,GAAkC,OAATA,IAE3EvG,EAAoE,GAAE8C,IAAI,aAAc,CACtF0D,OAAQ,CACN5F,KAAM,QACN6F,WApBW,CAAC,QAAS,cAAe,oBAsBtCC,QAAS,CACP9F,KAAM,SACN6F,WAzBY,CAAC,IAAK,IAAK,cAAe,SAAU,cA4BpDzG,EAAoE,GAAEmG,SAAS,aAAc,CAC3FC,UAAW,cAEbpG,EAAoE,GAAE8C,IAAI,cAAe,CACvF6D,OAAQ,CACNT,UAAW,CACTlF,SAAU,MAGd4F,OAAQ,CACNV,UAAW,CACTlF,SAAU,IAGd6F,KAAM,CACJC,WAAY,CACVN,OAAQ,CACN5C,KAAM,eAERmD,QAAS,CACPnG,KAAM,UACNI,SAAU,KAIhBgG,KAAM,CACJF,WAAY,CACVN,OAAQ,CACN3C,GAAI,eAENkD,QAAS,CACPnG,KAAM,UACNgE,OAAQ,SACR1D,GAAI+F,GAAS,EAAJA,OAKjB,MAAM3J,EACJ2C,YAAYQ,EAAOyG,GACjBhH,KAAKiH,OAAS1G,EACdP,KAAKkH,YAAc,IAAI/G,IACvBH,KAAKmH,UAAUH,GAEjBjH,UAAUiH,GACR,IAAKlD,OAAOhE,EAAoE,GAA3EgE,CAA8EkD,GACjF,OAEF,MAAMI,EAAgBpH,KAAKkH,YAC3BpD,OAAOuD,oBAAoBL,GAAQjG,SAAQuG,IACzC,MAAMlD,EAAM4C,EAAOM,GACnB,IAAKxD,OAAOhE,EAAoE,GAA3EgE,CAA8EM,GACjF,OAEF,MAAMwB,EAAW,GACjB,IAAK,MAAM2B,KAAUzB,EACnBF,EAAS2B,GAAUnD,EAAImD,IAExBzD,OAAOhE,EAAoE,GAA3EgE,CAA8EM,EAAImC,aAAenC,EAAImC,YAAc,CAACe,IAAMvG,SAASuD,IAC9HA,IAASgD,GAAQF,EAAcI,IAAIlD,IACrC8C,EAAcxE,IAAI0B,EAAMsB,SAKhC7F,gBAAgBsE,EAAQoD,GACtB,MAAMC,EAAaD,EAAOE,QACpBA,EAwEV,SAA8BtD,EAAQqD,GACpC,IAAKA,EACH,OAEF,IAAIC,EAAUtD,EAAOsD,QACrB,IAAKA,EAEH,YADAtD,EAAOsD,QAAUD,GAGfC,EAAQC,UACVvD,EAAOsD,QAAUA,EAAU7D,OAAO+D,OAAO,GAAIF,EAAS,CAACC,SAAS,EAAOE,YAAa,MAEtF,OAAOH,EApFWI,CAAqB1D,EAAQqD,GAC7C,IAAKC,EACH,MAAO,GAET,MAAMf,EAAa5G,KAAKgI,kBAAkBL,EAASD,GAOnD,OANIA,EAAWE,SAwDnB,SAAkBhB,EAAYL,GAC5B,MAAM1E,EAAU,GACVkE,EAAOjC,OAAOiC,KAAKQ,GACzB,IAAK,IAAItE,EAAI,EAAGA,EAAI8D,EAAKhE,OAAQE,IAAK,CACpC,MAAMgG,EAAOrB,EAAWb,EAAK9D,IACzBgG,GAAQA,EAAKxB,UACf5E,EAAQjF,KAAKqL,EAAKC,QAGtB,OAAOzC,QAAQ0C,IAAItG,GAhEfuG,CAAS/D,EAAOsD,QAAQG,YAAaJ,GAAYW,MAAK,KACpDhE,EAAOsD,QAAUD,KAChB,SAGEd,EAET7G,kBAAkBsE,EAAQoD,GACxB,MAAML,EAAgBpH,KAAKkH,YACrBN,EAAa,GACb/E,EAAUwC,EAAOyD,cAAgBzD,EAAOyD,YAAc,IACtDQ,EAAQxE,OAAOiC,KAAK0B,GACpBhH,EAAOiB,KAAKC,MAClB,IAAIM,EACJ,IAAKA,EAAIqG,EAAMvG,OAAS,EAAGE,GAAK,IAAKA,EAAG,CACtC,MAAMqC,EAAOgE,EAAMrG,GACnB,GAAuB,MAAnBqC,EAAKiE,OAAO,GACd,SAEF,GAAa,YAATjE,EAAoB,CACtBsC,EAAWhK,QAAQoD,KAAKwI,gBAAgBnE,EAAQoD,IAChD,SAEF,MAAMgB,EAAQhB,EAAOnD,GACrB,IAAI0B,EAAYnE,EAAQyC,GACxB,MAAMF,EAAMgD,EAAc3E,IAAI6B,GAC9B,GAAI0B,EAAW,CACb,GAAI5B,GAAO4B,EAAUS,SAAU,CAC7BT,EAAU0C,OAAOtE,EAAKqE,EAAOhI,GAC7B,SAEAuF,EAAU3C,SAGTe,GAAQA,EAAItD,UAIjBe,EAAQyC,GAAQ0B,EAAY,IAAI7I,EAAUiH,EAAKC,EAAQC,EAAMmE,GAC7D7B,EAAWhK,KAAKoJ,IAJd3B,EAAOC,GAAQmE,EAMnB,OAAO7B,EAET7G,OAAOsE,EAAQoD,GACb,GAA8B,IAA1BzH,KAAKkH,YAAYyB,KAEnB,YADA7E,OAAO+D,OAAOxD,EAAQoD,GAGxB,MAAMb,EAAa5G,KAAKgI,kBAAkB3D,EAAQoD,GAClD,OAAIb,EAAW7E,QACbzC,EAASsJ,IAAI5I,KAAKiH,OAAQL,IACnB,QAFT,GAgCJ,SAASiC,EAAUC,EAAOC,GACxB,MAAMC,EAAOF,GAASA,EAAMnB,SAAW,GACjCsB,EAAUD,EAAKC,QACf7H,OAAmBd,IAAb0I,EAAK5H,IAAoB2H,EAAkB,EACjD5F,OAAmB7C,IAAb0I,EAAK7F,IAAoB4F,EAAkB,EACvD,MAAO,CACL1H,MAAO4H,EAAU9F,EAAM/B,EACvB8H,IAAKD,EAAU7H,EAAM+B,GAiCzB,SAASgG,EAAwB5I,EAAO6I,GACtC,MAAMrD,EAAO,GACPsD,EAAW9I,EAAM+I,uBAAuBF,GAC9C,IAAInH,EAAGsH,EACP,IAAKtH,EAAI,EAAGsH,EAAOF,EAAStH,OAAQE,EAAIsH,IAAQtH,EAC9C8D,EAAKnJ,KAAKyM,EAASpH,GAAGuH,OAExB,OAAOzD,EAET,SAAS0D,EAAWC,EAAOjB,EAAOkB,EAAShC,GACzC,MAAM5B,EAAO2D,EAAM3D,KACb6D,EAA8B,WAAjBjC,EAAQkC,KAC3B,IAAI5H,EAAGsH,EAAMO,EAAcC,EAC3B,GAAc,OAAVtB,EAAJ,CAGA,IAAKxG,EAAI,EAAGsH,EAAOxD,EAAKhE,OAAQE,EAAIsH,IAAQtH,EAAG,CAE7C,GADA6H,GAAgB/D,EAAK9D,GACjB6H,IAAiBH,EAAS,CAC5B,GAAIhC,EAAQQ,IACV,SAEF,MAEF4B,EAAaL,EAAMjC,OAAOqC,GACtBhG,OAAOhE,EAAoE,GAA3EgE,CAA8EiG,KAAgBH,GAAyB,IAAVnB,GAAe3E,OAAOhE,EAAoE,GAA3EgE,CAA8E2E,KAAW3E,OAAOhE,EAAoE,GAA3EgE,CAA8EiG,MACrStB,GAASsB,GAGb,OAAOtB,GAeT,SAASuB,EAAUlB,EAAOmB,GACxB,MAAMC,EAAUpB,GAASA,EAAMnB,QAAQuC,QACvC,OAAOA,QAAwB5J,IAAZ4J,QAAwC5J,IAAf2J,EAAKP,MAYnD,SAASS,EAAiBC,EAAQC,EAAUC,GAC1C,MAAMC,EAAWH,EAAOC,KAAcD,EAAOC,GAAY,IACzD,OAAOE,EAASD,KAAgBC,EAASD,GAAc,IAEzD,SAASE,EAAoBd,EAAOe,EAAQC,GAC1C,IAAK,MAAMT,KAAQQ,EAAOE,wBAAwB,OAAO1B,UAAW,CAClE,MAAMR,EAAQiB,EAAMO,EAAKT,OACzB,GAAKkB,GAAYjC,EAAQ,IAAQiC,GAAYjC,EAAQ,EACnD,OAAOwB,EAAKT,MAGhB,OAAO,KAET,SAASoB,EAAaC,EAAYC,GAChC,MAAMvK,MAACA,EAAOwK,YAAad,GAAQY,EAC7BT,EAAS7J,EAAMyK,UAAYzK,EAAMyK,QAAU,KAC3CC,OAACA,EAAMR,OAAEA,EAAQjB,MAAOM,GAAgBG,EACxCiB,EAAQD,EAAOE,KACfC,EAAQX,EAAOU,KACf7D,EA7BR,SAAqB+D,EAAYC,EAAYrB,GAC3C,MAAO,GAAGoB,EAAWE,MAAMD,EAAWC,MAAMtB,EAAKP,OAASO,EAAKvJ,OA4BnD8K,CAAYP,EAAQR,EAAQR,GAClCV,EAAOuB,EAAO/I,OACpB,IAAI2H,EACJ,IAAK,IAAIzH,EAAI,EAAGA,EAAIsH,IAAQtH,EAAG,CAC7B,MAAMD,EAAO8I,EAAO7I,IACblC,CAACmL,GAAQ1B,EAAOzJ,CAACqL,GAAQ3C,GAASzG,EAEzC0H,GADmB1H,EAAKgJ,UAAYhJ,EAAKgJ,QAAU,KAChCI,GAASjB,EAAiBC,EAAQ9C,EAAKkC,GAC1DE,EAAMI,GAAgBrB,EACtBiB,EAAM+B,KAAOjB,EAAoBd,EAAOe,GAAQ,GAChDf,EAAMgC,QAAUlB,EAAoBd,EAAOe,GAAQ,IAGvD,SAASkB,EAAgBpL,EAAO4K,GAC9B,MAAMtL,EAASU,EAAMV,OACrB,OAAOiE,OAAOiC,KAAKlG,GAAQ+L,QAAOtE,GAAOzH,EAAOyH,GAAK6D,OAASA,IAAMU,QA0BtE,SAASC,EAAY7B,EAAMnI,GACzBA,EAAQA,GAASmI,EAAK8B,QACtB,IAAK,MAAMjB,KAAUhJ,EAAO,CAC1B,MAAMsI,EAASU,EAAOE,QACtB,IAAKZ,QAAqC9J,IAA3B8J,EAAOH,EAAKQ,OAAOc,UAA4DjL,IAAvC8J,EAAOH,EAAKQ,OAAOc,IAAItB,EAAKT,OACjF,cAEKY,EAAOH,EAAKQ,OAAOc,IAAItB,EAAKT,QAGvC,MAAMwC,EAAsBnC,GAAkB,UAATA,GAA6B,SAATA,EACnDoC,EAAmB,CAACC,EAAQC,IAAWA,EAASD,EAASpI,OAAO+D,OAAO,GAAIqE,GACjF,MAAMrO,EACJkC,YAAYQ,EAAOuJ,GACjB9J,KAAKO,MAAQA,EACbP,KAAKoM,KAAO7L,EAAM8L,IAClBrM,KAAKwJ,MAAQM,EACb9J,KAAKsM,gBAAkB,GACvBtM,KAAK+K,YAAc/K,KAAKuM,UACxBvM,KAAKwM,MAAQxM,KAAK+K,YAAYrK,KAC9BV,KAAK2H,aAAUrH,EACfN,KAAKyM,UAAW,EAChBzM,KAAK0M,WAAQpM,EACbN,KAAK2M,iBAAcrM,EACnBN,KAAK4M,oBAAiBtM,EACtBN,KAAK6M,gBAAavM,EAClBN,KAAK8M,gBAAaxM,EAClBN,KAAK+M,qBAAsB,EAC3B/M,KAAKgN,cAAW1M,EAChBN,KAAKiN,aAEPlN,aACE,MAAMuB,EAAKtB,KACLiK,EAAO3I,EAAGyJ,YAChBzJ,EAAG6F,YACH7F,EAAG4L,aACHjD,EAAKkD,SAAWnD,EAAUC,EAAKQ,OAAQR,GACvC3I,EAAG8L,cAELrN,YAAY+J,GACV9J,KAAKwJ,MAAQM,EAEf/J,aACE,MAAMuB,EAAKtB,KACLO,EAAQe,EAAGf,MACX0J,EAAO3I,EAAGyJ,YACVsC,EAAU/L,EAAGgM,aACbC,EAAW,CAACpC,EAAMqC,EAAGC,EAAGxQ,IAAe,MAATkO,EAAeqC,EAAa,MAATrC,EAAelO,EAAIwQ,EACpEC,EAAMzD,EAAK0D,QAAU7J,OAAOhE,EAAoE,GAA3EgE,CAA8EuJ,EAAQM,QAAShC,EAAgBpL,EAAO,MAC3IqN,EAAM3D,EAAK4D,QAAU/J,OAAOhE,EAAoE,GAA3EgE,CAA8EuJ,EAAQQ,QAASlC,EAAgBpL,EAAO,MAC3IuN,EAAM7D,EAAK8D,QAAUjK,OAAOhE,EAAoE,GAA3EgE,CAA8EuJ,EAAQU,QAASpC,EAAgBpL,EAAO,MAC3IyN,EAAY/D,EAAK+D,UACjBC,EAAMhE,EAAKiE,QAAUX,EAASS,EAAWN,EAAKE,EAAKE,GACnDK,EAAMlE,EAAKmE,QAAUb,EAASS,EAAWJ,EAAKF,EAAKI,GACzD7D,EAAKoE,OAAS/M,EAAGgN,cAAcZ,GAC/BzD,EAAKsE,OAASjN,EAAGgN,cAAcV,GAC/B3D,EAAKuE,OAASlN,EAAGgN,cAAcR,GAC/B7D,EAAKgB,OAAS3J,EAAGgN,cAAcL,GAC/BhE,EAAKQ,OAASnJ,EAAGgN,cAAcH,GAEjCpO,aACE,OAAOC,KAAKO,MAAMkO,KAAKC,SAAS1O,KAAKwJ,OAEvCzJ,UACE,OAAOC,KAAKO,MAAMoO,eAAe3O,KAAKwJ,OAExCzJ,cAAc6O,GACZ,OAAO5O,KAAKO,MAAMV,OAAO+O,GAE3B7O,eAAe+I,GACb,MAAMmB,EAAOjK,KAAK+K,YAClB,OAAOjC,IAAUmB,EAAKgB,OAClBhB,EAAKQ,OACLR,EAAKgB,OAEXlL,QACEC,KAAKwB,QAAQ,SAEfzB,WACE,MAAMkK,EAAOjK,KAAK+K,YACd/K,KAAK0M,OACP5I,OAAOhE,EAAoE,GAA3EgE,CAA8E9D,KAAK0M,MAAO1M,MAExFiK,EAAKkD,UACPrB,EAAY7B,GAGhBlK,aACE,MAAMuB,EAAKtB,KACLqN,EAAU/L,EAAGgM,aACbmB,EAAOpB,EAAQoB,OAASpB,EAAQoB,KAAO,IACzC3K,OAAOhE,EAAoE,GAA3EgE,CAA8E2K,GAChFnN,EAAGoL,MAnLT,SAAkC+B,GAChC,MAAM1I,EAAOjC,OAAOiC,KAAK0I,GACnBI,EAAQ,IAAIC,MAAM/I,EAAKhE,QAC7B,IAAIE,EAAGsH,EAAMjC,EACb,IAAKrF,EAAI,EAAGsH,EAAOxD,EAAKhE,OAAQE,EAAIsH,IAAQtH,EAC1CqF,EAAMvB,EAAK9D,GACX4M,EAAM5M,GAAK,CACTuL,EAAGlG,EACHmG,EAAGgB,EAAKnH,IAGZ,OAAOuH,EAwKQE,CAAyBN,GAC3BnN,EAAGoL,QAAU+B,IAClBnN,EAAGoL,QACL5I,OAAOhE,EAAoE,GAA3EgE,CAA8ExC,EAAGoL,MAAOpL,GACxFwK,EAAYxK,EAAGyJ,cAEb0D,GAAQ3K,OAAOkL,aAAaP,IAC9B3K,OAAOhE,EAAoE,GAA3EgE,CAA8E2K,EAAMnN,GAEtFA,EAAGoL,MAAQ+B,GAGf1O,cACE,MAAMuB,EAAKtB,KACLiK,EAAO3I,EAAGyJ,YAChBzJ,EAAG2N,aACC3N,EAAG4N,qBACLjF,EAAKoD,QAAU,IAAI/L,EAAG4N,oBAG1BnP,sBAAsBoP,GACpB,MAAM7N,EAAKtB,KACLiK,EAAO3I,EAAGyJ,YACVsC,EAAU/L,EAAGgM,aACnB,IAAI8B,GAAe,EACnB9N,EAAG2N,aACHhF,EAAKkD,SAAWnD,EAAUC,EAAKQ,OAAQR,GACnCA,EAAKP,QAAU2D,EAAQ3D,QACzB0F,GAAe,EACftD,EAAY7B,GACZA,EAAKP,MAAQ2D,EAAQ3D,OAEvBpI,EAAG+N,gBAAgBF,GACfC,GACFxE,EAAatJ,EAAI2I,EAAK8B,SAG1BhM,YACE,MAAMuB,EAAKtB,KACLgH,EAAS1F,EAAGf,MAAMyG,OAClBsI,EAAYtI,EAAOuI,iBAAiBjO,EAAGkL,OACvCgD,EAASxI,EAAOyI,gBAAgBnO,EAAGgM,aAAcgC,GAAW,GAClEhO,EAAGqG,QAAUX,EAAO0I,eAAeF,EAAQlO,EAAGqO,cAC9CrO,EAAGmL,SAAWnL,EAAGqG,QAAQiI,QAE3B7P,MAAMsB,EAAOwO,GACX,MAAMvO,EAAKtB,MACJ+K,YAAad,EAAMyC,MAAO+B,GAAQnN,GACnC2J,OAACA,EAAMkC,SAAEA,GAAYlD,EACrBiB,EAAQD,EAAOE,KACrB,IAEIlJ,EAAGiB,EAAK4H,EAFRgF,EAAmB,IAAVzO,GAAewO,IAAUpB,EAAK1M,QAAgBkI,EAAK8F,QAC5DC,EAAO3O,EAAQ,GAAK4I,EAAK8B,QAAQ1K,EAAQ,GAE7C,IAAoB,IAAhBC,EAAGmL,SACLxC,EAAK8B,QAAU0C,EACfxE,EAAK8F,SAAU,EACfjF,EAAS2D,MACJ,CAEH3D,EADEhH,OAAOhE,EAAoE,GAA3EgE,CAA8E2K,EAAKpN,IAC5EC,EAAG2O,eAAehG,EAAMwE,EAAMpN,EAAOwO,GACrC/L,OAAOhE,EAAoE,GAA3EgE,CAA8E2K,EAAKpN,IACnFC,EAAG4O,gBAAgBjG,EAAMwE,EAAMpN,EAAOwO,GAEtCvO,EAAG6O,mBAAmBlG,EAAMwE,EAAMpN,EAAOwO,GAEpD,MAAMO,EAA6B,IAAqB,OAAflN,EAAIgI,IAAoB8E,GAAQ9M,EAAIgI,GAAS8E,EAAK9E,GAC3F,IAAKjJ,EAAI,EAAGA,EAAI4N,IAAS5N,EACvBgI,EAAK8B,QAAQ9J,EAAIZ,GAAS6B,EAAM4H,EAAO7I,GACnC6N,IACEM,MACFN,GAAS,GAEXE,EAAO9M,GAGX+G,EAAK8F,QAAUD,EAEb3C,GACFvC,EAAatJ,EAAIwJ,GAGrB/K,mBAAmBkK,EAAMwE,EAAMpN,EAAOwO,GACpC,MAAM5E,OAACA,EAAMR,OAAEA,GAAUR,EACnBiB,EAAQD,EAAOE,KACfC,EAAQX,EAAOU,KACfkF,EAASpF,EAAOqF,YAChBC,EAActF,IAAWR,EACzBK,EAAS,IAAIgE,MAAMe,GACzB,IAAI5N,EAAGsH,EAAMC,EACb,IAAKvH,EAAI,EAAGsH,EAAOsG,EAAO5N,EAAIsH,IAAQtH,EACpCuH,EAAQvH,EAAIZ,EACZyJ,EAAO7I,GAAK,CACVlC,CAACmL,GAAQqF,GAAetF,EAAOuF,MAAMH,EAAO7G,GAAQA,GACpDzJ,CAACqL,GAAQX,EAAO+F,MAAM/B,EAAKjF,GAAQA,IAGvC,OAAOsB,EAET/K,eAAekK,EAAMwE,EAAMpN,EAAOwO,GAChC,MAAMxB,OAACA,EAAME,OAAEA,GAAUtE,EACnBa,EAAS,IAAIgE,MAAMe,GACzB,IAAI5N,EAAGsH,EAAMC,EAAOxH,EACpB,IAAKC,EAAI,EAAGsH,EAAOsG,EAAO5N,EAAIsH,IAAQtH,EACpCuH,EAAQvH,EAAIZ,EACZW,EAAOyM,EAAKjF,GACZsB,EAAO7I,GAAK,CACVuL,EAAGa,EAAOmC,MAAMxO,EAAK,GAAIwH,GACzBiE,EAAGc,EAAOiC,MAAMxO,EAAK,GAAIwH,IAG7B,OAAOsB,EAET/K,gBAAgBkK,EAAMwE,EAAMpN,EAAOwO,GACjC,MAAMxB,OAACA,EAAME,OAAEA,GAAUtE,GACnBwG,SAACA,EAAW,IAAGC,SAAEA,EAAW,KAAO1Q,KAAKyM,SACxC3B,EAAS,IAAIgE,MAAMe,GACzB,IAAI5N,EAAGsH,EAAMC,EAAOxH,EACpB,IAAKC,EAAI,EAAGsH,EAAOsG,EAAO5N,EAAIsH,IAAQtH,EACpCuH,EAAQvH,EAAIZ,EACZW,EAAOyM,EAAKjF,GACZsB,EAAO7I,GAAK,CACVuL,EAAGa,EAAOmC,MAAM1M,OAAOhE,EAAoE,GAA3EgE,CAA8E9B,EAAMyO,GAAWjH,GAC/GiE,EAAGc,EAAOiC,MAAM1M,OAAOhE,EAAoE,GAA3EgE,CAA8E9B,EAAM0O,GAAWlH,IAGnH,OAAOsB,EAET/K,UAAUyJ,GACR,OAAOxJ,KAAK+K,YAAYgB,QAAQvC,GAElCzJ,eAAeyJ,GACb,OAAOxJ,KAAK+K,YAAY0D,KAAKjF,GAE/BzJ,WAAW+I,EAAOgC,EAAQjB,GACxB,MAAMtJ,EAAQP,KAAKO,MACb0J,EAAOjK,KAAK+K,YACZtC,EAAQqC,EAAOhC,EAAMqC,MAK3B,OAAO1B,EAJO,CACZ1D,KAAMoD,EAAwB5I,GAAO,GACrCkH,OAAQqD,EAAOE,QAAQlC,EAAMqC,OAEN1C,EAAOwB,EAAKT,MAAO,CAACK,KAAAA,IAE/C9J,sBAAsB4Q,EAAO7H,EAAOgC,EAAQpB,GAC1C,MAAMkH,EAAc9F,EAAOhC,EAAMqC,MACjC,IAAI1C,EAAwB,OAAhBmI,EAAuBC,IAAMD,EACzC,MAAMnJ,EAASiC,GAASoB,EAAOE,QAAQlC,EAAMqC,MACzCzB,GAASjC,IACXiC,EAAMjC,OAASA,EACfkJ,EAAMvP,IAAMD,KAAKC,IAAIuP,EAAMvP,IAAKqH,GAChCkI,EAAMxN,IAAMhC,KAAKgC,IAAIwN,EAAMxN,IAAKsF,GAChCA,EAAQgB,EAAWC,EAAOkH,EAAa5Q,KAAK+K,YAAYvB,MAAO,CAACrB,KAAK,KAEvEwI,EAAMvP,IAAMD,KAAKC,IAAIuP,EAAMvP,IAAKqH,GAChCkI,EAAMxN,IAAMhC,KAAKgC,IAAIwN,EAAMxN,IAAKsF,GAElC1I,UAAU+I,EAAOgI,GACf,MAAMxP,EAAKtB,KACLiK,EAAO3I,EAAGyJ,YACVgB,EAAU9B,EAAK8B,QACf+D,EAAS7F,EAAK8F,SAAWjH,IAAUmB,EAAKgB,OACxC1B,EAAOwC,EAAQhK,OACfgP,EAAazP,EAAG0P,eAAelI,GAC/BY,EAAQoH,GAAY7G,EAAKkD,UAAY,CAACpH,KAAMoD,EAAwB7H,EAAGf,OAAO,GAAOkH,OAAQ,MAC7FkJ,EAAQ,CAACvP,IAAK6P,OAAOC,kBAAmB/N,IAAK8N,OAAOE,oBACnD/P,IAAKgQ,EAAUjO,IAAKkO,GApU/B,SAAuBvI,GACrB,MAAM1H,IAACA,EAAG+B,IAAEA,EAAGmO,WAAEA,EAAUC,WAAEA,GAAczI,EAAM0I,gBACjD,MAAO,CACLpQ,IAAKkQ,EAAalQ,EAAM6P,OAAOE,kBAC/BhO,IAAKoO,EAAapO,EAAM8N,OAAOC,mBAgUQM,CAAcT,GACrD,IAAI9O,EAAGwG,EAAOqC,EAAQf,EACtB,SAAS0H,IAIP,OAHA3G,EAASiB,EAAQ9J,GACjBwG,EAAQqC,EAAOhC,EAAMqC,MACrBpB,EAAae,EAAOiG,EAAW5F,OACvBrH,OAAOhE,EAAoE,GAA3EgE,CAA8E2E,IAAU2I,EAAWrH,GAAcsH,EAAWtH,EAEtI,IAAK9H,EAAI,EAAGA,EAAIsH,IACVkI,MAGJnQ,EAAGoQ,sBAAsBf,EAAO7H,EAAOgC,EAAQpB,IAC3CoG,MALkB7N,GASxB,GAAI6N,EACF,IAAK7N,EAAIsH,EAAO,EAAGtH,GAAK,IAAKA,EAC3B,IAAIwP,IAAJ,CAGAnQ,EAAGoQ,sBAAsBf,EAAO7H,EAAOgC,EAAQpB,GAC/C,MAGJ,OAAOiH,EAET5Q,mBAAmB+I,GACjB,MAAMgC,EAAS9K,KAAK+K,YAAYgB,QAC1BtE,EAAS,GACf,IAAIxF,EAAGsH,EAAMd,EACb,IAAKxG,EAAI,EAAGsH,EAAOuB,EAAO/I,OAAQE,EAAIsH,IAAQtH,EAC5CwG,EAAQqC,EAAO7I,GAAG6G,EAAMqC,MACpBrH,OAAOhE,EAAoE,GAA3EgE,CAA8E2E,IAChFhB,EAAO7K,KAAK6L,GAGhB,OAAOhB,EAET1H,iBACE,OAAO,EAETA,iBAAiByJ,GACf,MACMS,EADKjK,KACK+K,YACVE,EAAShB,EAAKgB,OACdR,EAASR,EAAKQ,OACdK,EAJK9K,KAIO2R,UAAUnI,GAC5B,MAAO,CACLoI,MAAO3G,EAAS,GAAKA,EAAO4G,iBAAiB/G,EAAOG,EAAOE,OAAS,GACpE1C,MAAOgC,EAAS,GAAKA,EAAOoH,iBAAiB/G,EAAOL,EAAOU,OAAS,IAGxEpL,QAAQ8J,GACN,MAAMvI,EAAKtB,KACLiK,EAAO3I,EAAGyJ,YAChBzJ,EAAG6F,YACH7F,EAAGgL,gBAAkB,GACrBhL,EAAGoH,OAAOmB,GAAQ,WAClBI,EAAK6H,MApcT,SAAgBrJ,GACd,IAAIsJ,EAAG9U,EAAG+U,EAAGC,EASb,OARInO,OAAOhE,EAAoE,GAA3EgE,CAA8E2E,IAChFsJ,EAAItJ,EAAMyJ,IACVjV,EAAIwL,EAAM0J,MACVH,EAAIvJ,EAAM2J,OACVH,EAAIxJ,EAAM4J,MAEVN,EAAI9U,EAAI+U,EAAIC,EAAIxJ,EAEX,CACLyJ,IAAKH,EACLI,MAAOlV,EACPmV,OAAQJ,EACRK,KAAMJ,GAsbOK,CAAOxO,OAAOhE,EAAoE,GAA3EgE,CAA8ExC,EAAGqG,QAAQ4K,KAjdjH,SAAqBlE,EAAQE,EAAQxF,GACnC,IAAwB,IAApBA,EACF,OAAO,EAET,MAAMyE,EAAI3E,EAAUwF,EAAQtF,GACtB0E,EAAI5E,EAAU0F,EAAQxF,GAC5B,MAAO,CACLmJ,IAAKzE,EAAEvE,IACPiJ,MAAO3E,EAAEtE,IACTkJ,OAAQ3E,EAAEpM,MACVgR,KAAM7E,EAAEnM,OAuc2GmR,CAAYvI,EAAKoE,OAAQpE,EAAKsE,OAAQjN,EAAGmR,oBAE9J1S,OAAO8J,IACP9J,OACE,MAAMuB,EAAKtB,KACLqM,EAAM/K,EAAG8K,KACT7L,EAAQe,EAAGf,MACX0J,EAAO3I,EAAGyJ,YACVvL,EAAWyK,EAAKwE,MAAQ,GACxBiE,EAAOnS,EAAMoS,UACblM,EAAS,GACTpF,EAAQC,EAAGuL,YAAc,EACzBgD,EAAQvO,EAAGwL,YAAetN,EAASuC,OAASV,EAClD,IAAIY,EAIJ,IAHIgI,EAAKoD,SACPpD,EAAKoD,QAAQnL,KAAKmK,EAAKqG,EAAMrR,EAAOwO,GAEjC5N,EAAIZ,EAAOY,EAAIZ,EAAQwO,IAAS5N,EAAG,CACtC,MAAM2Q,EAAUpT,EAASyC,GACrB2Q,EAAQnM,OACVA,EAAO7J,KAAKgW,GAEZA,EAAQ1Q,KAAKmK,EAAKqG,GAGtB,IAAKzQ,EAAI,EAAGA,EAAIwE,EAAO1E,SAAUE,EAC/BwE,EAAOxE,GAAGC,KAAKmK,EAAKqG,GAGxB3S,SAASyJ,EAAO/C,GACd,MAAMoD,EAAOpD,EAAS,SAAW,UACjC,YAAiBnG,IAAVkJ,GAAuBxJ,KAAK+K,YAAYsC,QAC3CrN,KAAK6S,6BAA6BhJ,GAClC7J,KAAK8S,0BAA0BtJ,GAAS,EAAGK,GAEjD9J,WAAWyJ,EAAO/C,EAAQoD,GACxB,MAAMvI,EAAKtB,KACLqN,EAAU/L,EAAGgM,aACnB,IAAIyF,EACJ,GAAIvJ,GAAS,GAAKA,EAAQlI,EAAGyJ,YAAY0D,KAAK1M,OAAQ,CACpD,MAAM6Q,EAAUtR,EAAGyJ,YAAY0D,KAAKjF,GACpCuJ,EAAUH,EAAQ5F,WACf4F,EAAQ5F,SAnXjB,SAA2BgG,EAAQxJ,EAAOoJ,GACxC,OAAO9O,OAAO+D,OAAO/D,OAAOmP,OAAOD,GAAS,CAC1CvM,QAAQ,EACRyM,UAAW1J,EACXsB,YAAQxK,EACR6S,SAAK7S,EACLsS,QAAAA,EACApJ,MAAAA,EACAK,KAAM,UACNnJ,KAAM,SA0WkB0S,CAAkB9R,EAAGqO,aAAcnG,EAAOoJ,IAChEG,EAAQjI,OAASxJ,EAAGqQ,UAAUnI,GAC9BuJ,EAAQI,IAAM9F,EAAQoB,KAAKjF,QAE3BuJ,EAAUzR,EAAG0L,WACV1L,EAAG0L,SApYZ,SAA8BgG,EAAQxJ,GACpC,OAAO1F,OAAO+D,OAAO/D,OAAOmP,OAAOD,GACjC,CACEvM,QAAQ,EACR4G,aAAS/M,EACTwJ,aAAcN,EACdA,MAAAA,EACAK,KAAM,UACNnJ,KAAM,YA4XW2S,CAAqB/R,EAAGf,MAAMoP,aAAcrO,EAAGkI,QAChEuJ,EAAQ1F,QAAUA,EAIpB,OAFA0F,EAAQtM,SAAWA,EACnBsM,EAAQlJ,KAAOA,EACRkJ,EAEThT,6BAA6B8J,GAC3B,OAAO7J,KAAKsT,uBAAuBtT,KAAKkP,mBAAmB3D,GAAI1B,GAEjE9J,0BAA0ByJ,EAAOK,GAC/B,OAAO7J,KAAKsT,uBAAuBtT,KAAKuT,gBAAgBhI,GAAI1B,EAAML,GAEpEzJ,uBAAuByT,EAAa3J,EAAO,UAAWL,GACpD,MAAMlI,EAAKtB,KACLyG,EAAkB,WAAToD,EACT4J,EAAQnS,EAAGgL,gBACXoH,EAAWF,EAAc,IAAM3J,EAC/BqC,EAASuH,EAAMC,GACfC,EAAUrS,EAAGyL,qBAAuBjJ,OAAOhE,EAAoE,GAA3EgE,CAA8E0F,GACxH,GAAI0C,EACF,OAAOD,EAAiBC,EAAQyH,GAElC,MAAM3M,EAAS1F,EAAGf,MAAMyG,OAClBsI,EAAYtI,EAAO4M,wBAAwBtS,EAAGkL,MAAOgH,GACrDK,EAAWpN,EAAS,CAAC,GAAG+M,SAAoB,QAASA,EAAa,IAAM,CAACA,EAAa,IACtFhE,EAASxI,EAAOyI,gBAAgBnO,EAAGgM,aAAcgC,GACjDwE,EAAQhQ,OAAOiC,KAAKjG,EAAoE,GAAEN,SAASgU,IAEnG/L,EAAST,EAAO+M,oBAAoBvE,EAAQsE,GADlC,IAAMxS,EAAGqO,WAAWnG,EAAO/C,IACuBoN,GAKlE,OAJIpM,EAAOG,UACTH,EAAOG,QAAU+L,EACjBF,EAAMC,GAAY5P,OAAOkQ,OAAO/H,EAAiBxE,EAAQkM,KAEpDlM,EAET1H,mBAAmByJ,EAAOyK,EAAYxN,GACpC,MAAMnF,EAAKtB,KACLO,EAAQe,EAAGf,MACXkT,EAAQnS,EAAGgL,gBACXoH,EAAW,aAAaO,IACxB/H,EAASuH,EAAMC,GACrB,GAAIxH,EACF,OAAOA,EAET,IAAIvE,EACJ,IAAgC,IAA5BpH,EAAMoH,QAAQ3B,UAAqB,CACrC,MAAMgB,EAAS1F,EAAGf,MAAMyG,OAClBsI,EAAYtI,EAAOkN,0BAA0B5S,EAAGkL,MAAOyH,GACvDzE,EAASxI,EAAOyI,gBAAgBnO,EAAGgM,aAAcgC,GACvD3H,EAAUX,EAAO0I,eAAeF,EAAQlO,EAAGqO,WAAWnG,EAAO/C,EAAQwN,IAEvE,MAAMrN,EAAa,IAAIxJ,EAAWmD,EAAOoH,GAAWA,EAAQf,YAI5D,OAHIe,GAAWA,EAAQwM,aACrBV,EAAMC,GAAY5P,OAAOkQ,OAAOpN,IAE3BA,EAET7G,iBAAiB4H,GACf,GAAKA,EAAQC,QAGb,OAAO5H,KAAK4M,iBAAmB5M,KAAK4M,eAAiB9I,OAAO+D,OAAO,GAAIF,IAEzE5H,eAAe8J,EAAMuK,GACnB,OAAQA,GAAiBpI,EAAmBnC,IAAS7J,KAAKO,MAAM8T,oBAElEtU,cAAc6S,EAASpJ,EAAOjD,EAAYsD,GACpCmC,EAAmBnC,GACrB/F,OAAO+D,OAAO+K,EAASrM,GAEvBvG,KAAKsU,mBAAmB9K,EAAOK,GAAMnB,OAAOkK,EAASrM,GAGzDxG,oBAAoBqU,EAAevK,EAAMnC,GACnC0M,IAAkBpI,EAAmBnC,IACvC7J,KAAKsU,wBAAmBhU,EAAWuJ,GAAMnB,OAAO0L,EAAe1M,GAGnE3H,UAAU6S,EAASpJ,EAAOK,EAAMpD,GAC9BmM,EAAQnM,OAASA,EACjB,MAAMkB,EAAU3H,KAAKuU,SAAS/K,EAAO/C,GACrCzG,KAAKsU,mBAAmB9K,EAAOK,EAAMpD,GAAQiC,OAAOkK,EAAS,CAC3DjL,SAAWlB,GAAUzG,KAAKwU,iBAAiB7M,IAAaA,IAG5D5H,iBAAiB6S,EAAS9I,EAAcN,GACtCxJ,KAAKyU,UAAU7B,EAASpJ,EAAO,UAAU,GAE3CzJ,cAAc6S,EAAS9I,EAAcN,GACnCxJ,KAAKyU,UAAU7B,EAASpJ,EAAO,UAAU,GAE3CzJ,2BACE,MAAM6S,EAAU5S,KAAK+K,YAAYsC,QAC7BuF,GACF5S,KAAKyU,UAAU7B,OAAStS,EAAW,UAAU,GAGjDP,wBACE,MAAM6S,EAAU5S,KAAK+K,YAAYsC,QAC7BuF,GACF5S,KAAKyU,UAAU7B,OAAStS,EAAW,UAAU,GAGjDP,gBAAgBoP,GACd,MAAM7N,EAAKtB,KACL0U,EAAUpT,EAAGyJ,YAAY0D,KAAK1M,OAC9B4S,EAAUrT,EAAGoL,MAAM3K,OACrB4S,EAAUD,EACZpT,EAAGsT,gBAAgBF,EAASC,EAAUD,EAASvF,GACtCwF,EAAUD,GACnBpT,EAAGuT,gBAAgBF,EAASD,EAAUC,GAExC,MAAM9E,EAAQ1O,KAAKC,IAAIuT,EAASD,GAC5B7E,GACFvO,EAAGkP,MAAM,EAAGX,GAGhB9P,gBAAgBsB,EAAOwO,EAAOV,GAAmB,GAC/C,MAAM7N,EAAKtB,KACLiK,EAAO3I,EAAGyJ,YACV0D,EAAOxE,EAAKwE,KACZvF,EAAM7H,EAAQwO,EACpB,IAAI5N,EACJ,MAAM6S,EAAQC,IAEZ,IADAA,EAAIhT,QAAU8N,EACT5N,EAAI8S,EAAIhT,OAAS,EAAGE,GAAKiH,EAAKjH,IACjC8S,EAAI9S,GAAK8S,EAAI9S,EAAI4N,IAIrB,IADAiF,EAAKrG,GACAxM,EAAIZ,EAAOY,EAAIiH,IAAOjH,EACzBwM,EAAKxM,GAAK,IAAIX,EAAGiS,gBAEfjS,EAAGmL,UACLqI,EAAK7K,EAAK8B,SAEZzK,EAAGkP,MAAMnP,EAAOwO,GACZV,GACF7N,EAAG0T,eAAevG,EAAMpN,EAAOwO,EAAO,SAG1C9P,eAAe6S,EAASvR,EAAOwO,EAAOhG,IACtC9J,gBAAgBsB,EAAOwO,GACrB,MACM5F,EADKjK,KACK+K,YAChB,GAFW/K,KAEJyM,SAAU,CACf,MAAMwI,EAAUhL,EAAK8B,QAAQmJ,OAAO7T,EAAOwO,GACvC5F,EAAKkD,UACPrB,EAAY7B,EAAMgL,GAGtBhL,EAAKwE,KAAKyG,OAAO7T,EAAOwO,GAE1B9P,cACE,MAAM8P,EAAQsF,UAAUpT,OACxB/B,KAAK4U,gBAAgB5U,KAAKsN,aAAamB,KAAK1M,OAAS8N,EAAOA,GAE9D9P,aACEC,KAAK6U,gBAAgB7U,KAAK+K,YAAY0D,KAAK1M,OAAS,EAAG,GAEzDhC,eACEC,KAAK6U,gBAAgB,EAAG,GAE1B9U,cAAcsB,EAAOwO,GACnB7P,KAAK6U,gBAAgBxT,EAAOwO,GAC5B7P,KAAK4U,gBAAgBvT,EAAO8T,UAAUpT,OAAS,GAEjDhC,iBACEC,KAAK4U,gBAAgB,EAAGO,UAAUpT,SAkBtC,SAASqT,EAAqBtM,GAC5B,MAAMrB,EAZR,SAA2BqB,GACzB,IAAKA,EAAMuM,OAAOC,KAAM,CACtB,MAAMC,EAAQzM,EAAM6B,wBAAwB,OAC5C,IAAIlD,EAAS,GACb,IAAK,IAAIxF,EAAI,EAAGsH,EAAOgM,EAAMxT,OAAQE,EAAIsH,EAAMtH,IAC7CwF,EAASA,EAAO+N,OAAOD,EAAMtT,GAAG4I,WAAW4K,mBAAmB3M,IAEhEA,EAAMuM,OAAOC,KAAOxR,OAAOhE,EAAmE,EAA1EgE,CAA6E2D,EAAOiO,MAAK,CAACC,EAAG3D,IAAM2D,EAAI3D,KAE7H,OAAOlJ,EAAMuM,OAAOC,KAGLM,CAAkB9M,GACjC,IACI7G,EAAGsH,EAAMsM,EAAM7F,EADf5O,EAAM0H,EAAMgN,QAEhB,MAAMC,EAAmB,KACV,QAATF,IAA4B,QAAVA,IAGlB/R,OAAOhE,EAAoE,GAA3EgE,CAA8EkM,KAChF5O,EAAMD,KAAKC,IAAIA,EAAKD,KAAK6U,IAAIH,EAAO7F,IAAS5O,IAE/C4O,EAAO6F,IAET,IAAK5T,EAAI,EAAGsH,EAAO9B,EAAO1F,OAAQE,EAAIsH,IAAQtH,EAC5C4T,EAAO/M,EAAMmN,iBAAiBxO,EAAOxF,IACrC8T,IAGF,IADA/F,OAAO1P,EACF2B,EAAI,EAAGsH,EAAOT,EAAMoN,MAAMnU,OAAQE,EAAIsH,IAAQtH,EACjD4T,EAAO/M,EAAMqN,gBAAgBlU,GAC7B8T,IAEF,OAAO3U,EA2DT,SAASgV,EAAWC,EAAOrU,EAAMyI,EAAQxI,GAMvC,OALI6B,OAAOhE,EAAoE,GAA3EgE,CAA8EuS,GAtBpF,SAAuBA,EAAOrU,EAAMyI,EAAQxI,GAC1C,MAAMqU,EAAa7L,EAAO+F,MAAM6F,EAAM,GAAIpU,GACpCsU,EAAW9L,EAAO+F,MAAM6F,EAAM,GAAIpU,GAClCb,EAAMD,KAAKC,IAAIkV,EAAYC,GAC3BpT,EAAMhC,KAAKgC,IAAImT,EAAYC,GACjC,IAAIC,EAAWpV,EACXqV,EAAStT,EACThC,KAAK6U,IAAI5U,GAAOD,KAAK6U,IAAI7S,KAC3BqT,EAAWrT,EACXsT,EAASrV,GAEXY,EAAKyI,EAAOU,MAAQsL,EACpBzU,EAAK0U,QAAU,CACbF,SAAAA,EACAC,OAAAA,EACApV,MAAOiV,EACPpN,IAAKqN,EACLnV,IAAAA,EACA+B,IAAAA,GAKAwT,CAAcN,EAAOrU,EAAMyI,EAAQxI,GAEnCD,EAAKyI,EAAOU,MAAQV,EAAO+F,MAAM6F,EAAOpU,GAEnCD,EAET,SAAS4U,EAAsB3M,EAAMwE,EAAMpN,EAAOwO,GAChD,MAAM5E,EAAShB,EAAKgB,OACdR,EAASR,EAAKQ,OACd4F,EAASpF,EAAOqF,YAChBC,EAActF,IAAWR,EACzBK,EAAS,GACf,IAAI7I,EAAGsH,EAAMvH,EAAMqU,EACnB,IAAKpU,EAAIZ,EAAOkI,EAAOlI,EAAQwO,EAAO5N,EAAIsH,IAAQtH,EAChDoU,EAAQ5H,EAAKxM,GACbD,EAAO,GACPA,EAAKiJ,EAAOE,MAAQoF,GAAetF,EAAOuF,MAAMH,EAAOpO,GAAIA,GAC3D6I,EAAOlO,KAAKwZ,EAAWC,EAAOrU,EAAMyI,EAAQxI,IAE9C,OAAO6I,EAET,SAAS+L,EAAWC,GAClB,OAAOA,QAA8BxW,IAApBwW,EAAON,eAA4ClW,IAAlBwW,EAAOL,OAxH3D5Y,EAAkBkZ,SAAW,GAC7BlZ,EAAkBmZ,UAAU9H,mBAAqB,KACjDrR,EAAkBmZ,UAAUzD,gBAAkB,KAwH9C,MAAMjW,UAAsBO,EAC1BkC,mBAAmBkK,EAAMwE,EAAMpN,EAAOwO,GACpC,OAAO+G,EAAsB3M,EAAMwE,EAAMpN,EAAOwO,GAElD9P,eAAekK,EAAMwE,EAAMpN,EAAOwO,GAChC,OAAO+G,EAAsB3M,EAAMwE,EAAMpN,EAAOwO,GAElD9P,gBAAgBkK,EAAMwE,EAAMpN,EAAOwO,GACjC,MAAM5E,OAACA,EAAMR,OAAEA,GAAUR,GACnBwG,SAACA,EAAW,IAAGC,SAAEA,EAAW,KAAO1Q,KAAKyM,SACxCwK,EAA2B,MAAhBhM,EAAOE,KAAesF,EAAWC,EAC5CwG,EAA2B,MAAhBzM,EAAOU,KAAesF,EAAWC,EAC5C5F,EAAS,GACf,IAAI7I,EAAGsH,EAAMvH,EAAMmV,EACnB,IAAKlV,EAAIZ,EAAOkI,EAAOlI,EAAQwO,EAAO5N,EAAIsH,IAAQtH,EAChDkV,EAAM1I,EAAKxM,GACXD,EAAO,GACPA,EAAKiJ,EAAOE,MAAQF,EAAOuF,MAAM1M,OAAOhE,EAAoE,GAA3EgE,CAA8EqT,EAAKF,GAAWhV,GAC/H6I,EAAOlO,KAAKwZ,EAAWtS,OAAOhE,EAAoE,GAA3EgE,CAA8EqT,EAAKD,GAAWlV,EAAMyI,EAAQxI,IAErI,OAAO6I,EAET/K,sBAAsB4Q,EAAO7H,EAAOgC,EAAQpB,GAC1C0N,MAAM1F,sBAAsBf,EAAO7H,EAAOgC,EAAQpB,GAClD,MAAMoN,EAAShM,EAAO4L,QAClBI,GAAUhO,IAAU9I,KAAK+K,YAAYN,SACvCkG,EAAMvP,IAAMD,KAAKC,IAAIuP,EAAMvP,IAAK0V,EAAO1V,KACvCuP,EAAMxN,IAAMhC,KAAKgC,IAAIwN,EAAMxN,IAAK2T,EAAO3T,MAG3CpD,iBAAiByJ,GACf,MACMS,EADKjK,KACK+K,aACVE,OAACA,EAAMR,OAAEA,GAAUR,EACnBa,EAHK9K,KAGO2R,UAAUnI,GACtBsN,EAAShM,EAAO4L,QAChBjO,EAAQoO,EAAWC,GACrB,IAAMA,EAAOzV,MAAQ,KAAOyV,EAAO5N,IAAM,IACzC,GAAKuB,EAAOoH,iBAAiB/G,EAAOL,EAAOU,OAC/C,MAAO,CACLyG,MAAO,GAAK3G,EAAO4G,iBAAiB/G,EAAOG,EAAOE,OAClD1C,MAAAA,GAGJ1I,aACE,MAAMuB,EAAKtB,KACXsB,EAAGyL,qBAAsB,EACzBqK,MAAMnK,aACO3L,EAAGyJ,YACXrB,MAAQpI,EAAGgM,aAAa5D,MAE/B3J,OAAO8J,GACL,MACMI,EADKjK,KACK+K,YADL/K,KAERgV,eAAe/K,EAAKwE,KAAM,EAAGxE,EAAKwE,KAAK1M,OAAQ8H,GAEpD9J,eAAesX,EAAMhW,EAAOwO,EAAOhG,GACjC,MAAMvI,EAAKtB,KACLsX,EAAiB,UAATzN,EACRY,EAASnJ,EAAGyJ,YAAYN,OACxB8M,EAAO9M,EAAO+M,eACdC,EAAahN,EAAOiN,eACpBC,EAAQrW,EAAGsW,YACXC,EAAYvW,EAAGwR,0BAA0BzR,EAAOwI,GAChDuK,EAAgB9S,EAAGkT,iBAAiBqD,GACpCC,EAAiBxW,EAAGwW,eAAejO,EAAMuK,GAC/C9S,EAAGyW,oBAAoB3D,EAAevK,EAAMgO,GAC5C,IAAK,IAAI5V,EAAIZ,EAAOY,EAAIZ,EAAQwO,EAAO5N,IAAK,CAC1C,MAAM6I,EAASxJ,EAAGqQ,UAAU1P,GACtB+V,EAAUV,GAASxT,OAAOhE,EAAoE,GAA3EgE,CAA8EgH,EAAOL,EAAOU,OAAS,CAACoM,KAAAA,EAAMU,KAAMV,GAAQjW,EAAG4W,yBAAyBjW,GACzKkW,EAAU7W,EAAG8W,yBAAyBnW,EAAG0V,GACzCjO,GAASoB,EAAOE,SAAW,IAAIP,EAAOU,MACtC5E,EAAa,CACjBkR,WAAAA,EACAF,KAAMS,EAAQT,KACdc,oBAAqB3O,GAASmN,EAAW/L,EAAO4L,UAAapV,EAAGkI,QAAUE,EAAM+B,MAAQnK,EAAGkI,QAAUE,EAAMgC,QAC3G8B,EAAGiK,EAAaO,EAAQC,KAAOE,EAAQG,OACvC7K,EAAGgK,EAAaU,EAAQG,OAASN,EAAQC,KACzCM,OAAQd,EAAaU,EAAQxP,UAAOrI,EACpCkY,MAAOf,OAAanX,EAAY6X,EAAQxP,MAEtCmP,IACFvR,EAAWoB,QAAUyM,GAAiB9S,EAAGwR,0BAA0B7Q,EAAG4H,IAExEvI,EAAGmX,cAAcpB,EAAKpV,GAAIA,EAAGsE,EAAYsD,IAG7C9J,WAAW2Y,EAAMxF,GACf,MAEMjI,EAFKjL,KACK+K,YACIE,OACd5B,EAAW4B,EAAON,wBAHb3K,KAGwCwM,OAC7CtC,EAAUe,EAAOtD,QAAQuC,QACzBX,EAAOF,EAAStH,OAChBqI,EAAS,GACf,IAAInI,EAAGD,EACP,IAAKC,EAAI,EAAGA,EAAIsH,IAAQtH,EAAG,CAEzB,GADAD,EAAOqH,EAASpH,GACS,qBAAdiR,EAA2B,CACpC,MAAMyF,EAAM3W,EAAK6I,WAAW8G,UAAUuB,GACpClR,EAAK6I,WAAWE,YAAYN,OAAOU,MAErC,GAAIrH,OAAOhE,EAAoE,GAA3EgE,CAA8E6U,IAAQC,MAAMD,GAC9F,SAOJ,KAJgB,IAAZzO,IAAqD,IAAhCE,EAAOyO,QAAQ7W,EAAK0H,aAClCpJ,IAAZ4J,QAAwC5J,IAAf0B,EAAK0H,QAC3BU,EAAOxN,KAAKoF,EAAK0H,OAEf1H,EAAKwH,QAAUkP,EACjB,MAMJ,OAHKtO,EAAOrI,QACVqI,EAAOxN,UAAK0D,GAEP8J,EAETrK,eAAeyJ,GACb,OAAOxJ,KAAK8Y,gBAAWxY,EAAWkJ,GAAOzH,OAE3ChC,eAAe+J,EAAczD,EAAM6M,GACjC,MAAM9I,EAASpK,KAAK8Y,WAAWhP,EAAcoJ,GACvC1J,OAAkBlJ,IAAT+F,EACX+D,EAAOyO,QAAQxS,IACd,EACL,OAAmB,IAAXmD,EACJY,EAAOrI,OAAS,EAChByH,EAENzJ,YACE,MAAMuB,EAAKtB,KACLgJ,EAAO1H,EAAGqG,QACVsC,EAAO3I,EAAGyJ,YACVE,EAAShB,EAAKgB,OACd8N,EAAS,GACf,IAAI9W,EAAGsH,EACP,IAAKtH,EAAI,EAAGsH,EAAOU,EAAKwE,KAAK1M,OAAQE,EAAIsH,IAAQtH,EAC/C8W,EAAOnc,KAAKqO,EAAOgL,iBAAiB3U,EAAGqQ,UAAU1P,GAAGgJ,EAAOE,MAAOlJ,IAEpE,MAAM+W,EAAehQ,EAAKgQ,aAE1B,MAAO,CACL5X,IAFU4X,GAAgB5D,EAAqBnK,GAG/C8N,OAAAA,EACA1X,MAAO4J,EAAOgO,YACd/P,IAAK+B,EAAOiO,UACZC,WAAY7X,EAAG8X,iBACftQ,MAAOmC,EACPoO,QAASrQ,EAAKqQ,QACdC,MAAON,EAAe,EAAIhQ,EAAKuQ,mBAAqBvQ,EAAKwQ,eAG7DzZ,yBAAyByJ,GACvB,MAAMlI,EAAKtB,MACLyK,OAACA,EAAM0C,SAAEA,GAAY7L,EAAGyJ,aACvBwM,KAAMkC,EAASC,aAAEA,GAAgBpY,EAAGqG,QACrCmD,EAASxJ,EAAGqQ,UAAUnI,GACtBsN,EAAShM,EAAO4L,QAChBiD,EAAW9C,EAAWC,GAC5B,IAGImB,EAAMtP,EAHNF,EAAQqC,EAAOL,EAAOU,MACtB9J,EAAQ,EACRU,EAASoL,EAAW7L,EAAGmI,WAAWgB,EAAQK,EAAQqC,GAAY1E,EAE9D1G,IAAW0G,IACbpH,EAAQU,EAAS0G,EACjB1G,EAAS0G,GAEPkR,IACFlR,EAAQqO,EAAON,SACfzU,EAAS+U,EAAOL,OAASK,EAAON,SAClB,IAAV/N,GAAe3E,OAAOhE,EAAoE,GAA3EgE,CAA8E2E,KAAW3E,OAAOhE,EAAoE,GAA3EgE,CAA8EgT,EAAOL,UAC/LpV,EAAQ,GAEVA,GAASoH,GAEX,MAAM6N,EAAcxS,OAAOhE,EAAoE,GAA3EgE,CAA8E2V,IAAeE,EAAuBtY,EAAZoY,EAC5H,IAAIlC,EAAO9M,EAAOwL,iBAAiBK,GAEjC2B,EADEjY,KAAKO,MAAMqZ,kBAAkBpQ,GACxBiB,EAAOwL,iBAAiB5U,EAAQU,GAEhCwV,EAET5O,EAAOsP,EAAOV,OACOjX,IAAjBoZ,GAA8BvY,KAAK6U,IAAIrN,GAAQ+Q,IACjD/Q,EAAOA,EAAO,GAAK+Q,EAAeA,EACpB,IAAVjR,IACF8O,GAAQ5O,EAAO,GAEjBsP,EAAOV,EAAO5O,GAEhB,MAAMkR,EAAaJ,GAAa,EAChC,GAAIlC,IAAS9M,EAAOwL,iBAAiB4D,GAAa,CAChD,MAAMC,EAAWrP,EAAOsP,qBAAqBF,GAAc,EACvDlR,EAAO,GACT4O,GAAQuC,EACRnR,GAAQmR,GACCnR,EAAO,IAChB4O,GAAQuC,EACRnR,GAAQmR,GAGZ,MAAO,CACLnR,KAAAA,EACA4O,KAAAA,EACAU,KAAAA,EACAK,OAAQL,EAAOtP,EAAO,GAG1B5I,yBAAyByJ,EAAOmO,GAC9B,MAAMrW,EAAKtB,KACL8I,EAAQ6O,EAAM7O,MACdnB,EAAUrG,EAAGqG,QACbqS,EAAWrS,EAAQqS,SACnBC,EAAkBnW,OAAOhE,EAAoE,GAA3EgE,CAA8E6D,EAAQsS,gBAAiBC,EAAAA,GAC/H,IAAI5B,EAAQ3P,EACZ,GAAIgP,EAAM0B,QAAS,CACjB,MAAMF,EAAaa,EAAW1Y,EAAG8X,eAAe5P,GAASmO,EAAMwB,WACzDxI,EAAiC,SAAzBhJ,EAAQqR,aA9R5B,SAAmCxP,EAAOmO,EAAOhQ,EAASwR,GACxD,MAAMJ,EAASpB,EAAMoB,OACflD,EAAOkD,EAAOvP,GACpB,IAAIwG,EAAOxG,EAAQ,EAAIuP,EAAOvP,EAAQ,GAAK,KACvC2Q,EAAO3Q,EAAQuP,EAAOhX,OAAS,EAAIgX,EAAOvP,EAAQ,GAAK,KAC3D,MAAM4Q,EAAUzS,EAAQ4R,mBACX,OAATvJ,IACFA,EAAO6F,GAAiB,OAATsE,EAAgBxC,EAAMzO,IAAMyO,EAAMtW,MAAQ8Y,EAAOtE,IAErD,OAATsE,IACFA,EAAOtE,EAAOA,EAAO7F,GAEvB,MAAM3O,EAAQwU,GAAQA,EAAO1U,KAAKC,IAAI4O,EAAMmK,IAAS,EAAIC,EAEzD,MAAO,CACLC,MAFWlZ,KAAK6U,IAAImE,EAAOnK,GAAQ,EAAIoK,EAEzBjB,EACdG,MAAO3R,EAAQ6R,cACfnY,MAAAA,GA8QMiZ,CAA0B9Q,EAAOmO,EAAOhQ,EAASwR,GA/S3D,SAAkC3P,EAAOmO,EAAOhQ,EAASwR,GACvD,MAAMoB,EAAY5S,EAAQqR,aAC1B,IAAIrQ,EAAM2Q,EAQV,OAPIxV,OAAOhE,EAAoE,GAA3EgE,CAA8EyW,IAChF5R,EAAOgP,EAAMvW,IAAMuG,EAAQ4R,mBAC3BD,EAAQ3R,EAAQ6R,gBAEhB7Q,EAAO4R,EAAYpB,EACnBG,EAAQ,GAEH,CACLe,MAAO1R,EAAOwQ,EACdG,MAAAA,EACAjY,MAAOsW,EAAMoB,OAAOvP,GAAUb,EAAO,GAmS/B6R,CAAyBhR,EAAOmO,EAAOhQ,EAASwR,GAC9CsB,EAAanZ,EAAGoZ,eAAepZ,EAAGkI,MAAOlI,EAAGyJ,YAAYrB,MAAOsQ,EAAWxQ,OAAQlJ,GACxFgY,EAAS3H,EAAMtP,MAASsP,EAAM0J,MAAQI,EAAe9J,EAAM0J,MAAQ,EACnE1R,EAAOxH,KAAKC,IAAI6Y,EAAiBtJ,EAAM0J,MAAQ1J,EAAM2I,YAErDhB,EAASxP,EAAMmN,iBAAiB3U,EAAGqQ,UAAUnI,GAAOV,EAAMqC,MAAO3B,GACjEb,EAAOxH,KAAKC,IAAI6Y,EAAiBtC,EAAMvW,IAAMuW,EAAM2B,OAErD,MAAO,CACL/B,KAAMe,EAAS3P,EAAO,EACtBsP,KAAMK,EAAS3P,EAAO,EACtB2P,OAAAA,EACA3P,KAAAA,GAGJ5I,OACE,MAAMuB,EAAKtB,KACLO,EAAQe,EAAGf,MACX0J,EAAO3I,EAAGyJ,YACVN,EAASR,EAAKQ,OACdkQ,EAAQ1Q,EAAKwE,KACblF,EAAOoR,EAAM5Y,OACnB,IAAIE,EAAI,EAER,IADA6B,OAAOhE,EAAoE,GAA3EgE,CAA8EvD,EAAM8L,IAAK9L,EAAMoS,WACxF1Q,EAAIsH,IAAQtH,EACoB,OAAjCX,EAAGqQ,UAAU1P,GAAGwI,EAAOU,OACzBwP,EAAM1Y,GAAGC,KAAKZ,EAAG8K,MAGrBtI,OAAOhE,EAAoE,GAA3EgE,CAA8EvD,EAAM8L,MAGxF/O,EAAciO,GAAK,MACnBjO,EAAcyZ,SAAW,CACvB7H,oBAAoB,EACpBqE,gBAAiB,MACjBgG,mBAAoB,GACpBC,cAAe,GACfH,SAAS,EACTzS,WAAY,CACVJ,QAAS,CACP9F,KAAM,SACN6F,WAAY,CAAC,IAAK,IAAK,OAAQ,QAAS,aAI9CjJ,EAAcsd,UAAY,CACxBC,YAAa,CACXhR,KAAM,SAERhK,OAAQ,CACNib,QAAS,CACPpa,KAAM,WACNqa,QAAQ,EACRC,KAAM,CACJD,QAAQ,IAGZE,QAAS,CACPva,KAAM,SACNwa,aAAa,KAKnB,MAAMxd,UAAyBG,EAC7BkC,aACEC,KAAK+M,qBAAsB,EAC3BqK,MAAMnK,aAERlN,gBAAgBkK,EAAMwE,EAAMpN,EAAOwO,GACjC,MAAMxB,OAACA,EAAME,OAAEA,GAAUtE,GACnBwG,SAACA,EAAW,IAAGC,SAAEA,EAAW,KAAO1Q,KAAKyM,SACxC3B,EAAS,GACf,IAAI7I,EAAGsH,EAAMvH,EACb,IAAKC,EAAIZ,EAAOkI,EAAOlI,EAAQwO,EAAO5N,EAAIsH,IAAQtH,EAChDD,EAAOyM,EAAKxM,GACZ6I,EAAOlO,KAAK,CACV4Q,EAAGa,EAAOmC,MAAM1M,OAAOhE,EAAoE,GAA3EgE,CAA8E9B,EAAMyO,GAAWxO,GAC/GwL,EAAGc,EAAOiC,MAAM1M,OAAOhE,EAAoE,GAA3EgE,CAA8E9B,EAAM0O,GAAWzO,GAC/GyU,QAAS1U,GAAQA,EAAK/E,IAAM+E,EAAK/E,IAGrC,OAAO6N,EAET/K,iBACE,MAAM0O,KAACA,EAAI1C,QAAEA,GAAW/L,KAAK+K,YAC7B,IAAI5H,EAAM,EACV,IAAK,IAAIlB,EAAIwM,EAAK1M,OAAS,EAAGE,GAAK,IAAKA,EACtCkB,EAAMhC,KAAKgC,IAAIA,EAAKsL,EAAKxM,GAAG0G,OAAS,EAAGoD,EAAQ9J,GAAGyU,SAErD,OAAOvT,EAAM,GAAKA,EAEpBpD,iBAAiByJ,GACf,MACMS,EADKjK,KACK+K,aACVsD,OAACA,EAAME,OAAEA,GAAUtE,EACnBa,EAHK9K,KAGO2R,UAAUnI,GACtBgE,EAAIa,EAAOwD,iBAAiB/G,EAAO0C,GACnCC,EAAIc,EAAOsD,iBAAiB/G,EAAO2C,GACnCxQ,EAAI6N,EAAO4L,QACjB,MAAO,CACL9E,MAAO3H,EAAK2H,MACZnJ,MAAO,IAAM+E,EAAI,KAAOC,GAAKxQ,EAAI,KAAOA,EAAI,IAAM,KAGtD8C,OAAO8J,GACL,MACMsR,EADKnb,KACO+K,YAAY0D,KADnBzO,KAERgV,eAAemG,EAAQ,EAAGA,EAAOpZ,OAAQ8H,GAE9C9J,eAAeob,EAAQ9Z,EAAOwO,EAAOhG,GACnC,MAAMvI,EAAKtB,KACLsX,EAAiB,UAATzN,GACRwE,OAACA,EAAME,OAAEA,GAAUjN,EAAGyJ,YACtB8M,EAAYvW,EAAGwR,0BAA0BzR,EAAOwI,GAChDuK,EAAgB9S,EAAGkT,iBAAiBqD,GACpCC,EAAiBxW,EAAGwW,eAAejO,EAAMuK,GAC/C,IAAK,IAAInS,EAAIZ,EAAOY,EAAIZ,EAAQwO,EAAO5N,IAAK,CAC1C,MAAMmZ,EAAQD,EAAOlZ,GACf6I,GAAUwM,GAAShW,EAAGqQ,UAAU1P,GAChCuL,EAAI8J,EAAQjJ,EAAOgN,mBAAmB,IAAOhN,EAAO4H,iBAAiBnL,EAAO0C,GAC5EC,EAAI6J,EAAQ/I,EAAOiJ,eAAiBjJ,EAAO0H,iBAAiBnL,EAAO2C,GACnElH,EAAa,CACjBiH,EAAAA,EACAC,EAAAA,EACA6N,KAAM1C,MAAMpL,IAAMoL,MAAMnL,IAEtBqK,IACFvR,EAAWoB,QAAUrG,EAAGwR,0BAA0B7Q,EAAG4H,GACjDyN,IACF/Q,EAAWoB,QAAQ4T,OAAS,IAGhCja,EAAGmX,cAAc2C,EAAOnZ,EAAGsE,EAAYsD,GAEzCvI,EAAGyW,oBAAoB3D,EAAevK,EAAMgO,GAE9C9X,0BAA0ByJ,EAAOK,GAC/B,MAAMiB,EAAS9K,KAAK2R,UAAUnI,GAC9B,IAAI/B,EAAS2P,MAAMtE,0BAA0BtJ,EAAOK,GAChDpC,EAAOG,UACTH,EAAS3D,OAAO+D,OAAO,GAAIJ,EAAQ,CAACG,SAAS,KAE/C,MAAM2T,EAAS9T,EAAO8T,OAKtB,MAJa,WAAT1R,IACFpC,EAAO8T,OAAS,GAElB9T,EAAO8T,QAAUzX,OAAOhE,EAAoE,GAA3EgE,CAA8EgH,GAAUA,EAAO4L,QAAS6E,GAClH9T,GAGX/J,EAAiB6N,GAAK,SACtB7N,EAAiBqZ,SAAW,CAC1B7H,oBAAoB,EACpBqE,gBAAiB,QACjB3M,WAAY,CACVJ,QAAS,CACP9F,KAAM,SACN6F,WAAY,CAAC,IAAK,IAAK,cAAe,aAI5C7I,EAAiBkd,UAAY,CAC3B/a,OAAQ,CACN2N,EAAG,CACD9M,KAAM,UAER+M,EAAG,CACD/M,KAAM,WAGVhB,QAAS,CACP8b,QAAS,CACP7a,UAAW,CACT8a,MAAK,IACI,OAgCjB,MAAMzd,UAA2BH,EAC/BkC,YAAYQ,EAAOuJ,GACjBsN,MAAM7W,EAAOuJ,GACb9J,KAAK+M,qBAAsB,EAC3B/M,KAAK0b,iBAAcpb,EACnBN,KAAK2b,iBAAcrb,EACnBN,KAAK4b,aAAUtb,EACfN,KAAK6b,aAAUvb,EAEjBP,cACAA,MAAMsB,EAAOwO,GACX,MAAMpB,EAAOzO,KAAKsN,aAAamB,KACzBxE,EAAOjK,KAAK+K,YAClB,IAAI9I,EAAGsH,EACP,IAAKtH,EAAIZ,EAAOkI,EAAOlI,EAAQwO,EAAO5N,EAAIsH,IAAQtH,EAChDgI,EAAK8B,QAAQ9J,IAAMwM,EAAKxM,GAG5BlC,eACE,OAAO+D,OAAOhE,EAAoE,GAA3EgE,CAA8E9D,KAAK2H,QAAQmU,SAAW,IAE/G/b,oBACE,OAAO+D,OAAOhE,EAAoE,GAA3EgE,CAA8E9D,KAAK2H,QAAQoU,eAEpGhc,sBACE,IAAIqB,EAAMtB,EAAmE,EACzEqD,GAAOrD,EAAmE,EAC9E,MAAMwB,EAAKtB,KACX,IAAK,IAAIiC,EAAI,EAAGA,EAAIX,EAAGf,MAAMkO,KAAKC,SAAS3M,SAAUE,EACnD,GAAIX,EAAGf,MAAMyb,iBAAiB/Z,GAAI,CAChC,MAAM4I,EAAavJ,EAAGf,MAAMoO,eAAe1M,GAAG4I,WACxCiR,EAAWjR,EAAWoR,eACtBF,EAAgBlR,EAAWqR,oBACjC9a,EAAMD,KAAKC,IAAIA,EAAK0a,GACpB3Y,EAAMhC,KAAKgC,IAAIA,EAAK2Y,EAAWC,GAGnC,MAAO,CACLD,SAAU1a,EACV2a,cAAe5Y,EAAM/B,GAGzBrB,OAAO8J,GACL,MAAMvI,EAAKtB,KACLO,EAAQe,EAAGf,OACXoS,UAACA,GAAapS,EACd0J,EAAO3I,EAAGyJ,YACVoR,EAAOlS,EAAKwE,KACZ2N,EAAU9a,EAAG+a,oBAAsB/a,EAAGgb,aAAaH,GACnDI,EAAUpb,KAAKgC,KAAKhC,KAAKC,IAAIuR,EAAU6F,MAAO7F,EAAU4F,QAAU6D,GAAW,EAAG,GAChFI,EAASrb,KAAKC,IAAI0C,OAAOhE,EAAoE,GAA3EgE,CAA8ExC,EAAGqG,QAAQ6U,OAAQD,GAAU,GAC7HE,EAAcnb,EAAGob,eAAepb,EAAGkI,QACnCuS,cAACA,EAAaD,SAAEA,GAAYxa,EAAGqb,uBAC/BC,OAACA,EAAMC,OAAEA,EAAMjB,QAAEA,EAAOC,QAAEA,GA9EpC,SAA2BC,EAAUC,EAAeS,GAClD,IAAII,EAAS,EACTC,EAAS,EACTjB,EAAU,EACVC,EAAU,EACd,GAAIE,EAAgBjc,EAAmE,EAAG,CACxF,MAAMgd,EAAahB,EACbiB,EAAWD,EAAaf,EACxBiB,EAAS7b,KAAK8b,IAAIH,GAClBI,EAAS/b,KAAKgc,IAAIL,GAClBM,EAAOjc,KAAK8b,IAAIF,GAChBM,EAAOlc,KAAKgc,IAAIJ,GAChBO,EAAU,CAACC,EAAO5H,EAAG3D,IAAMlO,OAAOhE,EAAoE,GAA3EgE,CAA8EyZ,EAAOT,EAAYC,GAAY,EAAI5b,KAAKgC,IAAIwS,EAAGA,EAAI6G,EAAQxK,EAAGA,EAAIwK,GAC3KgB,EAAU,CAACD,EAAO5H,EAAG3D,IAAMlO,OAAOhE,EAAoE,GAA3EgE,CAA8EyZ,EAAOT,EAAYC,IAAa,EAAI5b,KAAKC,IAAIuU,EAAGA,EAAI6G,EAAQxK,EAAGA,EAAIwK,GAC5KiB,EAAOH,EAAQ,EAAGN,EAAQI,GAC1BM,EAAOJ,EAAQxd,EAAmE,EAAGod,EAAQG,GAC7FM,EAAOH,EAAQ1d,EAAmE,EAAGkd,EAAQI,GAC7FQ,EAAOJ,EAAQ1d,EAAmE,EAAIA,EAAmE,EAAGod,EAAQG,GAC1KT,GAAUa,EAAOE,GAAQ,EACzBd,GAAUa,EAAOE,GAAQ,EACzBhC,IAAY6B,EAAOE,GAAQ,EAC3B9B,IAAY6B,EAAOE,GAAQ,EAE7B,MAAO,CAAChB,OAAAA,EAAQC,OAAAA,EAAQjB,QAAAA,EAASC,QAAAA,GAuDYgC,CAAkB/B,EAAUC,EAAeS,GAChFsB,GAAYnL,EAAU6F,MAAQ4D,GAAWQ,EACzCmB,GAAapL,EAAU4F,OAAS6D,GAAWS,EAC3CmB,EAAY7c,KAAKgC,IAAIhC,KAAKC,IAAI0c,EAAUC,GAAa,EAAG,GACxDpC,EAAc7X,OAAOhE,EAAoE,GAA3EgE,CAA8ExC,EAAGqG,QAAQ4T,OAAQyC,GAE/GC,GAAgBtC,EADFxa,KAAKgC,IAAIwY,EAAca,EAAQ,IACAlb,EAAG4c,gCACtD5c,EAAGsa,QAAUA,EAAUD,EACvBra,EAAGua,QAAUA,EAAUF,EACvB1R,EAAKkU,MAAQ7c,EAAG8c,iBAChB9c,EAAGqa,YAAcA,EAAcsC,EAAe3c,EAAG+c,qBAAqB/c,EAAGkI,OACzElI,EAAGoa,YAAcva,KAAKgC,IAAI7B,EAAGqa,YAAcsC,EAAexB,EAAa,GACvEnb,EAAG0T,eAAemH,EAAM,EAAGA,EAAKpa,OAAQ8H,GAE1C9J,eAAekC,EAAGqV,GAChB,MAAMhW,EAAKtB,KACLgJ,EAAO1H,EAAGqG,QACVsC,EAAO3I,EAAGyJ,YACVgR,EAAgBza,EAAG4a,oBACzB,OAAK5E,GAAStO,EAAKhD,UAAUsY,gBAAmBte,KAAKO,MAAMqZ,kBAAkB3X,IAA0B,OAApBgI,EAAK8B,QAAQ9J,GACvF,EAEFX,EAAGid,uBAAuBtU,EAAK8B,QAAQ9J,GAAK8Z,EAAgBjc,EAAmE,GAExIC,eAAeoc,EAAM9a,EAAOwO,EAAOhG,GACjC,MAAMvI,EAAKtB,KACLsX,EAAiB,UAATzN,EACRtJ,EAAQe,EAAGf,MACXoS,EAAYpS,EAAMoS,UAElB6L,EADOje,EAAMoH,QACQ3B,UACrByY,GAAW9L,EAAUN,KAAOM,EAAUR,OAAS,EAC/CuM,GAAW/L,EAAUT,IAAMS,EAAUP,QAAU,EAC/CuM,EAAerH,GAASkH,EAAcG,aACtCjD,EAAciD,EAAe,EAAIrd,EAAGoa,YACpCC,EAAcgD,EAAe,EAAIrd,EAAGqa,YACpC9D,EAAYvW,EAAGwR,0BAA0BzR,EAAOwI,GAChDuK,EAAgB9S,EAAGkT,iBAAiBqD,GACpCC,EAAiBxW,EAAGwW,eAAejO,EAAMuK,GAC/C,IACInS,EADA6a,EAAaxb,EAAG2a,eAEpB,IAAKha,EAAI,EAAGA,EAAIZ,IAASY,EACvB6a,GAAcxb,EAAGsd,eAAe3c,EAAGqV,GAErC,IAAKrV,EAAIZ,EAAOY,EAAIZ,EAAQwO,IAAS5N,EAAG,CACtC,MAAM8Z,EAAgBza,EAAGsd,eAAe3c,EAAGqV,GACrCuH,EAAM1C,EAAKla,GACXsE,EAAa,CACjBiH,EAAGiR,EAAUnd,EAAGsa,QAChBnO,EAAGiR,EAAUpd,EAAGua,QAChBiB,WAAAA,EACAC,SAAUD,EAAaf,EACvBA,cAAAA,EACAJ,YAAAA,EACAD,YAAAA,GAEE5D,IACFvR,EAAWoB,QAAUyM,GAAiB9S,EAAGwR,0BAA0B7Q,EAAG4H,IAExEiT,GAAcf,EACdza,EAAGmX,cAAcoG,EAAK5c,EAAGsE,EAAYsD,GAEvCvI,EAAGyW,oBAAoB3D,EAAevK,EAAMgO,GAE9C9X,iBACE,MAAMkK,EAAOjK,KAAK+K,YACZ+T,EAAW7U,EAAKwE,KACtB,IACIxM,EADAkc,EAAQ,EAEZ,IAAKlc,EAAI,EAAGA,EAAI6c,EAAS/c,OAAQE,IAAK,CACpC,MAAMwG,EAAQwB,EAAK8B,QAAQ9J,GACb,OAAVwG,IAAmBmQ,MAAMnQ,IAAUzI,KAAKO,MAAMqZ,kBAAkB3X,KAClEkc,GAAShd,KAAK6U,IAAIvN,IAGtB,OAAO0V,EAETpe,uBAAuB0I,GACrB,MAAM0V,EAAQne,KAAK+K,YAAYoT,MAC/B,OAAIA,EAAQ,IAAMvF,MAAMnQ,GACf3I,EAAmE,GAAKqB,KAAK6U,IAAIvN,GAAS0V,GAE5F,EAETpe,iBAAiByJ,GACf,MACMS,EADKjK,KACK+K,YACVxK,EAFKP,KAEMO,MACX8P,EAAS9P,EAAMkO,KAAK4B,QAAU,GAC9B5H,EAAQ3E,OAAOhE,EAAoE,GAA3EgE,CAA8EmG,EAAK8B,QAAQvC,GAAQjJ,EAAMoH,QAAQoX,QAC/H,MAAO,CACLnN,MAAOvB,EAAO7G,IAAU,GACxBf,MAAAA,GAGJ1I,kBAAkBoc,GAChB,MAAM7a,EAAKtB,KACX,IAAImD,EAAM,EACV,MAAM5C,EAAQe,EAAGf,MACjB,IAAI0B,EAAGsH,EAAMU,EAAMY,EAAYlD,EAC/B,IAAKwU,EACH,IAAKla,EAAI,EAAGsH,EAAOhJ,EAAMkO,KAAKC,SAAS3M,OAAQE,EAAIsH,IAAQtH,EACzD,GAAI1B,EAAMyb,iBAAiB/Z,GAAI,CAC7BgI,EAAO1J,EAAMoO,eAAe1M,GAC5Bka,EAAOlS,EAAKwE,KACZ5D,EAAaZ,EAAKY,WACdA,IAAevJ,GACjBuJ,EAAW1D,YAEb,MAIN,IAAKgV,EACH,OAAO,EAET,IAAKla,EAAI,EAAGsH,EAAO4S,EAAKpa,OAAQE,EAAIsH,IAAQtH,EAC1C0F,EAAUkD,EAAWiI,0BAA0B7Q,GACnB,UAAxB0F,EAAQqX,cACV7b,EAAMhC,KAAKgC,IAAIA,EAAKwE,EAAQsX,aAAe,EAAGtX,EAAQuX,kBAAoB,IAG9E,OAAO/b,EAETpD,aAAaoc,GACX,IAAIhZ,EAAM,EACV,IAAK,IAAIlB,EAAI,EAAGsH,EAAO4S,EAAKpa,OAAQE,EAAIsH,IAAQtH,EAAG,CACjD,MAAM0F,EAAU3H,KAAK8S,0BAA0B7Q,GAC/CkB,EAAMhC,KAAKgC,IAAIA,EAAKwE,EAAQoT,QAAU,EAAGpT,EAAQwX,aAAe,GAElE,OAAOhc,EAETpD,qBAAqB+J,GACnB,IAAIsV,EAAmB,EACvB,IAAK,IAAInd,EAAI,EAAGA,EAAI6H,IAAgB7H,EAC9BjC,KAAKO,MAAMyb,iBAAiB/Z,KAC9Bmd,GAAoBpf,KAAK0c,eAAeza,IAG5C,OAAOmd,EAETrf,eAAe+J,GACb,OAAO3I,KAAKgC,IAAIW,OAAOhE,EAAoE,GAA3EgE,CAA8E9D,KAAKO,MAAMkO,KAAKC,SAAS5E,GAAcuV,OAAQ,GAAI,GAEnJtf,gCACE,OAAOC,KAAKqe,qBAAqBre,KAAKO,MAAMkO,KAAKC,SAAS3M,SAAW,GAGzE/D,EAAmBuN,GAAK,WACxBvN,EAAmB+Y,SAAW,CAC5B7H,oBAAoB,EACpBqE,gBAAiB,MACjBvN,UAAW,CACTsY,eAAe,EACfK,cAAc,GAEhB/X,WAAY,CACVJ,QAAS,CACP9F,KAAM,SACN6F,WAAY,CAAC,gBAAiB,WAAY,cAAe,cAAe,aAAc,IAAK,IAAK,SAAU,iBAG9GiW,OAAQ,MACRV,SAAU,EACVC,cAAe,IACfR,OAAQ,OACRvN,UAAW,KAEbhQ,EAAmB4c,UAAY,CAC7B0E,YAAa,EACb5f,QAAS,CACP6f,OAAQ,CACNlP,OAAQ,CACNtQ,eAAeQ,GACb,MAAMkO,EAAOlO,EAAMkO,KACnB,OAAIA,EAAK4B,OAAOtO,QAAU0M,EAAKC,SAAS3M,OAC/B0M,EAAK4B,OAAOmP,KAAI,CAAC5N,EAAO3P,KAC7B,MACMwd,EADOlf,EAAMoO,eAAe,GACf9D,WAAW0J,SAAStS,GACvC,MAAO,CACLyd,KAAM9N,EACN+N,UAAWF,EAAMG,gBACjBC,YAAaJ,EAAMK,YACnBC,UAAWN,EAAMR,YACjBe,QAASzf,EAAMqZ,kBAAkB3X,GACjCuH,MAAOvH,MAIN,KAGXlC,QAAQkgB,EAAGC,EAAYX,GACrBA,EAAOhf,MAAM4f,qBAAqBD,EAAW1W,OAC7C+V,EAAOhf,MAAMmI,WAGjB8S,QAAS,CACP7a,UAAW,CACT8a,MAAK,IACI,GAET1b,MAAMqgB,GACJ,IAAIC,EAAYD,EAAYxO,MAC5B,MAAMnJ,EAAQ,KAAO2X,EAAYE,eAOjC,OANIxc,OAAOhE,EAAoE,GAA3EgE,CAA8Euc,IAChFA,EAAYA,EAAUE,QACtBF,EAAU,IAAM5X,GAEhB4X,GAAa5X,EAER4X,OAOjB,MAAMhiB,UAAuBR,EAC3BkC,aACEC,KAAK+M,qBAAsB,EAC3BqK,MAAMnK,aAERlN,OAAO8J,GACL,MAAMvI,EAAKtB,KACLiK,EAAO3I,EAAGyJ,aACTsC,QAASmT,EAAM/R,KAAM0M,EAAS,GAAEsF,SAAEA,GAAYxW,EAC/CyW,EAAqBpf,EAAGf,MAAM8T,oBACpC,IAAIhT,MAACA,EAAKwO,MAAEA,GAsFhB,SAAyC5F,EAAMkR,EAAQuF,GACrD,MAAMC,EAAaxF,EAAOpZ,OAC1B,IAAIV,EAAQ,EACRwO,EAAQ8Q,EACZ,GAAI1W,EAAK8F,QAAS,CAChB,MAAM9E,OAACA,EAAMc,QAAEA,GAAW9B,EACpBkB,EAAOF,EAAOE,MACd/J,IAACA,EAAG+B,IAAEA,EAAGmO,WAAEA,EAAUC,WAAEA,GAActG,EAAOuG,gBAC9CF,IACFjQ,EAAQyC,OAAOhE,EAAoE,GAA3EgE,CAA8E3C,KAAKC,IACzF0C,OAAOhE,EAAoE,GAA3EgE,CAA8EiI,EAASd,EAAOE,KAAM/J,GAAKwf,GACzGF,EAAqBC,EAAa7c,OAAOhE,EAAoE,GAA3EgE,CAA8EqX,EAAQhQ,EAAMF,EAAOgL,iBAAiB7U,IAAMwf,IAC9J,EAAGD,EAAa,IAGhB9Q,EADE0B,EACMzN,OAAOhE,EAAoE,GAA3EgE,CAA8E3C,KAAKgC,IACzFW,OAAOhE,EAAoE,GAA3EgE,CAA8EiI,EAASd,EAAOE,KAAMhI,GAAK0d,GAAK,EAC9GH,EAAqB,EAAI5c,OAAOhE,EAAoE,GAA3EgE,CAA8EqX,EAAQhQ,EAAMF,EAAOgL,iBAAiB9S,IAAM0d,GAAK,GAC1Jxf,EAAOsf,GAActf,EAEbsf,EAAatf,EAGzB,MAAO,CAACA,MAAAA,EAAOwO,MAAAA,GA7GQiR,CAAgC7W,EAAMkR,EAAQuF,GACnEpf,EAAGuL,WAAaxL,EAChBC,EAAGwL,WAAa+C,EA6GpB,SAA4B5F,GAC1B,MAAMoE,OAACA,EAAME,OAAEA,EAAMwS,aAAEA,GAAgB9W,EACjC+W,EAAY,CAChBC,KAAM5S,EAAOjN,IACb8f,KAAM7S,EAAOlL,IACbge,KAAM5S,EAAOnN,IACbggB,KAAM7S,EAAOpL,KAEf,IAAK4d,EAEH,OADA9W,EAAK8W,aAAeC,GACb,EAET,MAAMK,EAAUN,EAAaE,OAAS5S,EAAOjN,KAC1C2f,EAAaG,OAAS7S,EAAOlL,KAC7B4d,EAAaI,OAAS5S,EAAOnN,KAC7B2f,EAAaK,OAAS7S,EAAOpL,IAEhC,OADAW,OAAO+D,OAAOkZ,EAAcC,GACrBK,EA7HDC,CAAmBrX,KACrB5I,EAAQ,EACRwO,EAAQsL,EAAOpZ,QAEjBye,EAAKe,aAAed,EAASc,WAC7Bf,EAAKrF,OAASA,EACd,MAAMxT,EAAUrG,EAAGuR,6BAA6BhJ,GAC3CvI,EAAGqG,QAAQ6Z,WACd7Z,EAAQsX,YAAc,GAExBtX,EAAQ8Z,QAAUngB,EAAGqG,QAAQ8Z,QAC7BngB,EAAGmX,cAAc+H,OAAMlgB,EAAW,CAChCohB,UAAWhB,EACX/Y,QAAAA,GACCkC,GACHvI,EAAG0T,eAAemG,EAAQ9Z,EAAOwO,EAAOhG,GAE1C9J,eAAeob,EAAQ9Z,EAAOwO,EAAOhG,GACnC,MAAMvI,EAAKtB,KACLsX,EAAiB,UAATzN,GACRwE,OAACA,EAAME,OAAEA,EAAMpB,SAAEA,GAAY7L,EAAGyJ,YAChC8M,EAAYvW,EAAGwR,0BAA0BzR,EAAOwI,GAChDuK,EAAgB9S,EAAGkT,iBAAiBqD,GACpCC,EAAiBxW,EAAGwW,eAAejO,EAAMuK,GACzCuN,EAAWrgB,EAAGqG,QAAQga,SACtBC,EAAe9d,OAAOhE,EAAoE,GAA3EgE,CAA8E6d,GAAYA,EAAW1Q,OAAOC,kBAC3H2Q,EAAevgB,EAAGf,MAAM8T,qBAAuBiD,GAAkB,SAATzN,EAC9D,IAAIiY,EAAazgB,EAAQ,GAAKC,EAAGqQ,UAAUtQ,EAAQ,GACnD,IAAK,IAAIY,EAAIZ,EAAOY,EAAIZ,EAAQwO,IAAS5N,EAAG,CAC1C,MAAMmZ,EAAQD,EAAOlZ,GACf6I,EAASxJ,EAAGqQ,UAAU1P,GACtBsE,EAAasb,EAAezG,EAAQ,GACpC2G,EAAWje,OAAOhE,EAAoE,GAA3EgE,CAA8EgH,EAAO2C,GAChGD,EAAIjH,EAAWiH,EAAIa,EAAO4H,iBAAiBnL,EAAO0C,EAAGvL,GACrDwL,EAAIlH,EAAWkH,EAAI6J,GAASyK,EAAWxT,EAAOiJ,eAAiBjJ,EAAO0H,iBAAiB9I,EAAW7L,EAAGmI,WAAW8E,EAAQzD,EAAQqC,GAAYrC,EAAO2C,EAAGxL,GAC5JsE,EAAW+U,KAAO1C,MAAMpL,IAAMoL,MAAMnL,IAAMsU,EAC1Cxb,EAAWyb,KAAO/f,EAAI,GAAM6I,EAAO0C,EAAIsU,EAAWtU,EAAKoU,EACvDrb,EAAWuE,OAASA,EAChBgN,IACFvR,EAAWoB,QAAUyM,GAAiB9S,EAAGwR,0BAA0B7Q,EAAG4H,IAEnEgY,GACHvgB,EAAGmX,cAAc2C,EAAOnZ,EAAGsE,EAAYsD,GAEzCiY,EAAahX,EAEfxJ,EAAGyW,oBAAoB3D,EAAevK,EAAMgO,GAE9C9X,iBACE,MAAMuB,EAAKtB,KACLiK,EAAO3I,EAAGyJ,YACVsC,EAAUpD,EAAKoD,QACf4U,EAAS5U,EAAQ1F,SAAW0F,EAAQ1F,QAAQsX,aAAe,EAC3DxQ,EAAOxE,EAAKwE,MAAQ,GAC1B,IAAKA,EAAK1M,OACR,OAAOkgB,EAET,MAAMC,EAAazT,EAAK,GAAG9F,KAAKrH,EAAGwR,0BAA0B,IACvDqP,EAAY1T,EAAKA,EAAK1M,OAAS,GAAG4G,KAAKrH,EAAGwR,0BAA0BrE,EAAK1M,OAAS,IACxF,OAAOZ,KAAKgC,IAAI8e,EAAQC,EAAYC,GAAa,EAEnDpiB,OACEC,KAAK+K,YAAYsC,QAAQ+U,oBAAoBpiB,KAAKO,MAAMoS,WACxDyE,MAAMlV,QAGV7D,EAAekN,GAAK,OACpBlN,EAAe0Y,SAAW,CACxB7H,mBAAoB,OACpBqE,gBAAiB,QACjBiO,UAAU,EACVG,UAAU,GAEZtjB,EAAeuc,UAAY,CACzB/a,OAAQ,CACNib,QAAS,CACPpa,KAAM,YAERua,QAAS,CACPva,KAAM,YAiDZ,MAAM/B,UAA4Bd,EAChCkC,YAAYQ,EAAOuJ,GACjBsN,MAAM7W,EAAOuJ,GACb9J,KAAK0b,iBAAcpb,EACnBN,KAAK2b,iBAAcrb,EAErBP,OAAO8J,GACL,MAAMsS,EAAOnc,KAAK+K,YAAY0D,KAC9BzO,KAAKqiB,gBACLriB,KAAKgV,eAAemH,EAAM,EAAGA,EAAKpa,OAAQ8H,GAE5C9J,gBACE,MAAMuB,EAAKtB,KACLO,EAAQe,EAAGf,MACXoS,EAAYpS,EAAMoS,UAClB3J,EAAOzI,EAAMoH,QACb2a,EAAUnhB,KAAKC,IAAIuR,EAAUR,MAAQQ,EAAUN,KAAMM,EAAUP,OAASO,EAAUT,KAClFyJ,EAAcxa,KAAKgC,IAAImf,EAAU,EAAG,GAEpCrE,GAAgBtC,EADFxa,KAAKgC,IAAI6F,EAAKuZ,iBAAoB5G,EAAc,IAAQ3S,EAAqB,iBAAI,EAAG,IACrDzI,EAAMiiB,yBACzDlhB,EAAGqa,YAAcA,EAAesC,EAAe3c,EAAGkI,MAClDlI,EAAGoa,YAAcpa,EAAGqa,YAAcsC,EAEpCle,eAAeoc,EAAM9a,EAAOwO,EAAOhG,GACjC,MAAMvI,EAAKtB,KACLsX,EAAiB,UAATzN,EACRtJ,EAAQe,EAAGf,MACX8M,EAAU/L,EAAGgM,aAEbkR,EADOje,EAAMoH,QACQ3B,UACrB8C,EAAQxH,EAAGyJ,YAAYyD,OACvBiQ,EAAU3V,EAAM2Z,QAChB/D,EAAU5V,EAAM4Z,QAChBC,EAAoB7Z,EAAM8Z,cAAc,GAAK,GAAM9iB,EAAmE,EAC5H,IACImC,EADAsb,EAAQoF,EAEZ,MAAME,EAAe,IAAMvhB,EAAGwhB,uBAC9B,IAAK7gB,EAAI,EAAGA,EAAIZ,IAASY,EACvBsb,GAASjc,EAAGyhB,cAAc9gB,EAAG4H,EAAMgZ,GAErC,IAAK5gB,EAAIZ,EAAOY,EAAIZ,EAAQwO,EAAO5N,IAAK,CACtC,MAAM4c,EAAM1C,EAAKla,GACjB,IAAI6a,EAAaS,EACbR,EAAWQ,EAAQjc,EAAGyhB,cAAc9gB,EAAG4H,EAAMgZ,GAC7ClH,EAAcpb,EAAMqZ,kBAAkB3X,GAAK6G,EAAMka,8BAA8B3V,EAAQoB,KAAKxM,IAAM,EACtGsb,EAAQR,EACJzF,IACEkH,EAAcG,eAChBhD,EAAc,GAEZ6C,EAAcF,gBAChBxB,EAAaC,EAAW4F,IAG5B,MAAMpc,EAAa,CACjBiH,EAAGiR,EACHhR,EAAGiR,EACHhD,YAAa,EACbC,YAAAA,EACAmB,WAAAA,EACAC,SAAAA,EACApV,QAASrG,EAAGwR,0BAA0B7Q,EAAG4H,IAE3CvI,EAAGmX,cAAcoG,EAAK5c,EAAGsE,EAAYsD,IAGzC9J,uBACE,MAAMsN,EAAUrN,KAAKsN,aACfrD,EAAOjK,KAAK+K,YAClB,IAAI8E,EAAQ,EAMZ,OALA5F,EAAKwE,KAAK1N,SAAQ,CAAC6R,EAASpJ,MACrBoP,MAAMvL,EAAQoB,KAAKjF,KAAWxJ,KAAKO,MAAMqZ,kBAAkBpQ,IAC9DqG,OAGGA,EAET9P,cAAcyJ,EAAOK,EAAMgZ,GACzB,OAAO7iB,KAAKO,MAAMqZ,kBAAkBpQ,GAChC1F,OAAOhE,EAAoE,GAA3EgE,CAA8E9D,KAAK8S,0BAA0BtJ,EAAOK,GAAM0T,OAASsF,GACnI,GAGRlkB,EAAoB4M,GAAK,YACzB5M,EAAoBoY,SAAW,CAC7BxD,gBAAiB,MACjBvN,UAAW,CACTsY,eAAe,EACfK,cAAc,GAEhB/X,WAAY,CACVJ,QAAS,CACP9F,KAAM,SACN6F,WAAY,CAAC,IAAK,IAAK,aAAc,WAAY,cAAe,iBAGpEyH,UAAW,IACX8O,WAAY,GAEdne,EAAoBic,UAAY,CAC9B0E,YAAa,EACb5f,QAAS,CACP6f,OAAQ,CACNlP,OAAQ,CACNtQ,eAAeQ,GACb,MAAMkO,EAAOlO,EAAMkO,KACnB,OAAIA,EAAK4B,OAAOtO,QAAU0M,EAAKC,SAAS3M,OAC/B0M,EAAK4B,OAAOmP,KAAI,CAAC5N,EAAO3P,KAC7B,MACMwd,EADOlf,EAAMoO,eAAe,GACf9D,WAAW0J,SAAStS,GACvC,MAAO,CACLyd,KAAM9N,EACN+N,UAAWF,EAAMG,gBACjBC,YAAaJ,EAAMK,YACnBC,UAAWN,EAAMR,YACjBe,QAASzf,EAAMqZ,kBAAkB3X,GACjCuH,MAAOvH,MAIN,KAGXlC,QAAQkgB,EAAGC,EAAYX,GACrBA,EAAOhf,MAAM4f,qBAAqBD,EAAW1W,OAC7C+V,EAAOhf,MAAMmI,WAGjB8S,QAAS,CACP7a,UAAW,CACT8a,MAAK,IACI,GAET7J,MAAMmB,GACGA,EAAQxS,MAAMkO,KAAK4B,OAAO0C,EAAQG,WAAa,KAAOH,EAAQuN,kBAK7EzgB,OAAQ,CACN5C,EAAG,CACDyD,KAAM,eACNuiB,WAAY,CACVC,SAAS,GAEXhI,aAAa,EACbF,KAAM,CACJmI,UAAU,GAEZC,YAAa,CACXF,SAAS,GAEXpG,WAAY,KAKlB,MAAMre,UAAsBT,GAE5BS,EAAc8M,GAAK,MACnB9M,EAAcsY,SAAW,CACvByF,OAAQ,EACRV,SAAU,EACVC,cAAe,IACfR,OAAQ,QAGV,MAAM3c,UAAwBf,EAC5BkC,iBAAiByJ,GACf,MACMiB,EADKzK,KACO+K,YAAYN,OACxBK,EAFK9K,KAEO2R,UAAUnI,GAC5B,MAAO,CACLoI,MAAOnH,EAAO6F,YAAY9G,GAC1Bf,MAAO,GAAKgC,EAAOoH,iBAAiB/G,EAAOL,EAAOU,QAGtDpL,OAAO8J,GACL,MAAMvI,EAAKtB,KACLiK,EAAO3I,EAAGyJ,YACVyV,EAAOvW,EAAKoD,QACZ8N,EAASlR,EAAKwE,MAAQ,GACtB4B,EAASpG,EAAKgB,OAAOqF,YAE3B,GADAkQ,EAAKrF,OAASA,EACD,WAATtR,EAAmB,CACrB,MAAMlC,EAAUrG,EAAGuR,6BAA6BhJ,GAC3CvI,EAAGqG,QAAQ6Z,WACd7Z,EAAQsX,YAAc,GAExB,MAAM1Y,EAAa,CACjBxB,OAAO,EACPse,UAAWhT,EAAOtO,SAAWoZ,EAAOpZ,OACpC4F,QAAAA,GAEFrG,EAAGmX,cAAc+H,OAAMlgB,EAAWiG,EAAYsD,GAEhDvI,EAAG0T,eAAemG,EAAQ,EAAGA,EAAOpZ,OAAQ8H,GAE9C9J,eAAeob,EAAQ9Z,EAAOwO,EAAOhG,GACnC,MAAMvI,EAAKtB,KACLqN,EAAU/L,EAAGgM,aACbxE,EAAQxH,EAAGyJ,YAAYyD,OACvB8I,EAAiB,UAATzN,EACd,IAAK,IAAI5H,EAAIZ,EAAOY,EAAIZ,EAAQwO,EAAO5N,IAAK,CAC1C,MAAMmZ,EAAQD,EAAOlZ,GACf0F,EAAUrG,EAAGwR,0BAA0B7Q,EAAG4H,GAC1CyZ,EAAgBxa,EAAMya,yBAAyBthB,EAAGoL,EAAQoB,KAAKxM,IAC/DuL,EAAI8J,EAAQxO,EAAM2Z,QAAUa,EAAc9V,EAC1CC,EAAI6J,EAAQxO,EAAM4Z,QAAUY,EAAc7V,EAC1ClH,EAAa,CACjBiH,EAAAA,EACAC,EAAAA,EACA8P,MAAO+F,EAAc/F,MACrBjC,KAAM1C,MAAMpL,IAAMoL,MAAMnL,GACxB9F,QAAAA,GAEFrG,EAAGmX,cAAc2C,EAAOnZ,EAAGsE,EAAYsD,KAI7CjL,EAAgB2M,GAAK,QACrB3M,EAAgBmY,SAAW,CACzB7H,mBAAoB,OACpBqE,gBAAiB,QACjBvF,UAAW,IACXwT,UAAU,EACVhiB,SAAU,CACRghB,KAAM,CACJgD,KAAM,WAIZ5kB,EAAgBgc,UAAY,CAC1B0E,YAAa,EACbzf,OAAQ,CACN5C,EAAG,CACDyD,KAAM,kBAKZ,MAAM3B,UAA0BV,GAEhCU,EAAkBwM,GAAK,UACvBxM,EAAkBgY,SAAW,CAC3ByK,UAAU,EACVgC,MAAM,GAERzkB,EAAkB6b,UAAY,CAC5BC,YAAa,CACXhR,KAAM,SAERnK,QAAS,CACP8b,QAAS,CACP7a,UAAW,CACT8a,MAAK,IACI,GAET7J,MAAM5P,GACG,IAAMA,EAAK4P,MAAQ,KAAO5P,EAAKse,eAAiB,OAK/DzgB,OAAQ,CACN2N,EAAG,CACD9M,KAAM,UAER+M,EAAG,CACD/M,KAAM,YAKZ,IAAInB,EAA2BuE,OAAOkQ,OAAO,CAC7CyP,UAAW,KACXnmB,cAAeA,EACfI,iBAAkBA,EAClBM,mBAAoBA,EACpBK,eAAgBA,EAChBM,oBAAqBA,EACrBF,cAAeA,EACfG,gBAAiBA,EACjBG,kBAAmBA,IAGnB,SAAS2kB,IACP,MAAM,IAAIC,MAAM,6GAElB,MAAMC,EACJ7jB,YAAY4H,GACV3H,KAAK2H,QAAUA,GAAW,GAE5B5H,UACE,OAAO2jB,IAET3jB,MAAM0I,EAAOob,GACX,OAAOH,IAET3jB,OAAO+jB,EAAWD,GAChB,OAAOH,IAET3jB,IAAI+jB,EAAWC,EAAQC,GACrB,OAAON,IAET3jB,KAAK4V,EAAG3D,EAAGgS,GACT,OAAON,IAET3jB,QAAQ+jB,EAAWE,EAAMC,GACvB,OAAOP,IAET3jB,MAAM+jB,EAAWE,GACf,OAAON,KAGXE,EAAYM,SAAW,SAASC,GAC9BrgB,OAAO+D,OAAO+b,EAAY5M,UAAWmN,IAEvC,IAAI9kB,EAAW,CACb+kB,MAAOR,GAGT,SAASS,EAAoBpE,EAAG1f,GAC9B,MAAI,WAAY0f,EACP,CACLzS,EAAGyS,EAAEzS,EACLC,EAAGwS,EAAExS,GAGF3J,OAAOhE,EAAoE,GAA3EgE,CAA8Emc,EAAG1f,GAe1F,SAAS+jB,EAAaC,EAASpZ,EAAM1C,EAAO+b,GAC1C,MAAM3Z,WAACA,EAAU4D,KAAEA,EAAIsB,QAAEA,GAAWwU,EAC9BtZ,EAASJ,EAAWE,YAAYE,OACtC,GAAIA,GAAUE,IAASF,EAAOE,MAAQ4E,GAAWtB,EAAK1M,OAAQ,CAC5D,MAAM0iB,EAAexZ,EAAOyZ,eAAiB5kB,EAAmE,EAAIA,EAAoE,GACxL,IAAK0kB,EACH,OAAOC,EAAahW,EAAMtD,EAAM1C,GAC3B,GAAIoC,EAAW+B,eAAgB,CACpC,MAAM+X,EAAKlW,EAAK,GACVkC,EAA+B,oBAAhBgU,EAAGC,UAA2BD,EAAGC,SAASzZ,GAC/D,GAAIwF,EAAO,CACT,MAAMtP,EAAQojB,EAAahW,EAAMtD,EAAM1C,EAAQkI,GACzCzH,EAAMub,EAAahW,EAAMtD,EAAM1C,EAAQkI,GAC7C,MAAO,CAACiQ,GAAIvf,EAAMuf,GAAIC,GAAI3X,EAAI2X,MAIpC,MAAO,CAACD,GAAI,EAAGC,GAAIpS,EAAK1M,OAAS,GAEnC,SAAS8iB,EAAuBtkB,EAAO4K,EAAM2Z,EAAUC,EAASP,GAC9D,MAAMnb,EAAW9I,EAAMykB,+BACjBvc,EAAQqc,EAAS3Z,GACvB,IAAK,IAAIlJ,EAAI,EAAGsH,EAAOF,EAAStH,OAAQE,EAAIsH,IAAQtH,EAAG,CACrD,MAAMuH,MAACA,EAAKiF,KAAEA,GAAQpF,EAASpH,IACzB2e,GAACA,EAAEC,GAAEA,GAAMyD,EAAajb,EAASpH,GAAIkJ,EAAM1C,EAAO+b,GACxD,IAAK,IAAIS,EAAIrE,EAAIqE,GAAKpE,IAAMoE,EAAG,CAC7B,MAAMrS,EAAUnE,EAAKwW,GAChBrS,EAAQ0I,MACXyJ,EAAQnS,EAASpJ,EAAOyb,KAchC,SAASC,EAAkB3kB,EAAOukB,EAAU3Z,EAAMga,GAChD,MAAMrjB,EAAQ,GACd,IAAKgC,OAAOhE,EAAmE,EAA1EgE,CAA6EghB,EAAUvkB,EAAMoS,UAAWpS,EAAM6kB,aACjH,OAAOtjB,EAQT,OADA+iB,EAAuBtkB,EAAO4K,EAAM2Z,GALb,SAASlS,EAAS9I,EAAcN,GACjDoJ,EAAQyS,QAAQP,EAAStX,EAAGsX,EAASrX,EAAG0X,IAC1CrjB,EAAMlF,KAAK,CAACgW,QAAAA,EAAS9I,aAAAA,EAAcN,MAAAA,OAGuB,GACvD1H,EAET,SAASwjB,EAAgB/kB,EAAOukB,EAAU3Z,EAAMqZ,EAAWW,GACzD,MAAMI,EAvBR,SAAkCpa,GAChC,MAAMqa,GAA8B,IAAvBra,EAAK0N,QAAQ,KACpB4M,GAA8B,IAAvBta,EAAK0N,QAAQ,KAC1B,OAAO,SAAS6M,EAAKC,GACnB,MAAMC,EAASJ,EAAOrkB,KAAK6U,IAAI0P,EAAIlY,EAAImY,EAAInY,GAAK,EAC1CqY,EAASJ,EAAOtkB,KAAK6U,IAAI0P,EAAIjY,EAAIkY,EAAIlY,GAAK,EAChD,OAAOtM,KAAK2kB,KAAK3kB,KAAK4kB,IAAIH,EAAQ,GAAKzkB,KAAK4kB,IAAIF,EAAQ,KAiBnCG,CAAyB7a,GAChD,IAAI8a,EAAchV,OAAOC,kBACrBpP,EAAQ,GACZ,IAAKgC,OAAOhE,EAAmE,EAA1EgE,CAA6EghB,EAAUvkB,EAAMoS,UAAWpS,EAAM6kB,aACjH,OAAOtjB,EAgBT,OADA+iB,EAAuBtkB,EAAO4K,EAAM2Z,GAbb,SAASlS,EAAS9I,EAAcN,GACrD,GAAIgb,IAAc5R,EAAQyS,QAAQP,EAAStX,EAAGsX,EAASrX,EAAG0X,GACxD,OAEF,MAAM7M,EAAS1F,EAAQsT,eAAef,GAChCgB,EAAWZ,EAAeT,EAAUxM,GACtC6N,EAAWF,GACbnkB,EAAQ,CAAC,CAAC8Q,QAAAA,EAAS9I,aAAAA,EAAcN,MAAAA,IACjCyc,EAAcE,GACLA,IAAaF,GACtBnkB,EAAMlF,KAAK,CAACgW,QAAAA,EAAS9I,aAAAA,EAAcN,MAAAA,OAIhC1H,EAET,SAASskB,EAAa7lB,EAAO0f,EAAGtY,EAASwd,GACvC,MAAML,EAAWT,EAAoBpE,EAAG1f,GAClCuB,EAAQ,GACRqJ,EAAOxD,EAAQwD,KACfkb,EAAuB,MAATlb,EAAe,WAAa,WAChD,IAAImb,GAAiB,EASrB,OAzGF,SAAiC/lB,EAAOwkB,GACtC,MAAM1b,EAAW9I,EAAMykB,+BACvB,IAAIxb,EAAOiF,EAAMmE,EACjB,IAAK,IAAI3Q,EAAI,EAAGsH,EAAOF,EAAStH,OAAQE,EAAIsH,IAAQtH,EAAG,GACnDuH,MAAAA,EAAOiF,KAAAA,GAAQpF,EAASpH,IAC1B,IAAK,IAAIgjB,EAAI,EAAGsB,EAAO9X,EAAK1M,OAAQkjB,EAAIsB,IAAQtB,EAC9CrS,EAAUnE,EAAKwW,GACVrS,EAAQ0I,MACXyJ,EAAQnS,EAASpJ,EAAOyb,IAyF9BuB,CAAwBjmB,GAAO,CAACqS,EAAS9I,EAAcN,KACjDoJ,EAAQyT,GAAavB,EAAS3Z,GAAOga,IACvCrjB,EAAMlF,KAAK,CAACgW,QAAAA,EAAS9I,aAAAA,EAAcN,MAAAA,IAEjCoJ,EAAQyS,QAAQP,EAAStX,EAAGsX,EAASrX,EAAG0X,KAC1CmB,GAAiB,MAGjB3e,EAAQ6c,YAAc8B,EACjB,GAEFxkB,EAET,IAAI3D,EAAc,CAChBsoB,MAAO,CACL1mB,MAAMQ,EAAO0f,EAAGtY,EAASwd,GACvB,MAAML,EAAWT,EAAoBpE,EAAG1f,GAClC4K,EAAOxD,EAAQwD,MAAQ,IACvBrJ,EAAQ6F,EAAQ6c,UAClBU,EAAkB3kB,EAAOukB,EAAU3Z,EAAMga,GACzCG,EAAgB/kB,EAAOukB,EAAU3Z,GAAM,EAAOga,GAC5C3lB,EAAW,GACjB,OAAKsC,EAAMC,QAGXxB,EAAMykB,+BAA+BjkB,SAASkJ,IAC5C,MAAMT,EAAQ1H,EAAM,GAAG0H,MACjBoJ,EAAU3I,EAAKwE,KAAKjF,GACtBoJ,IAAYA,EAAQ0I,MACtB9b,EAAS5C,KAAK,CAACgW,QAAAA,EAAS9I,aAAcG,EAAKT,MAAOA,MAAAA,OAG/ChK,GATE,IAWXO,QAAQQ,EAAO0f,EAAGtY,EAASwd,GACzB,MAAML,EAAWT,EAAoBpE,EAAG1f,GAClC4K,EAAOxD,EAAQwD,MAAQ,KAC7B,IAAIrJ,EAAQ6F,EAAQ6c,UAChBU,EAAkB3kB,EAAOukB,EAAU3Z,EAAMga,GAC3CG,EAAgB/kB,EAAOukB,EAAU3Z,GAAM,EAAOga,GAChD,GAAIrjB,EAAMC,OAAS,EAAG,CACpB,MAAM+H,EAAehI,EAAM,GAAGgI,aACxB2E,EAAOlO,EAAMoO,eAAe7E,GAAc2E,KAChD3M,EAAQ,GACR,IAAK,IAAIG,EAAI,EAAGA,EAAIwM,EAAK1M,SAAUE,EACjCH,EAAMlF,KAAK,CAACgW,QAASnE,EAAKxM,GAAI6H,aAAAA,EAAcN,MAAOvH,IAGvD,OAAOH,GAETsZ,MAAK,CAAC7a,EAAO0f,EAAGtY,EAASwd,IAGhBD,EAAkB3kB,EAFR8jB,EAAoBpE,EAAG1f,GAC3BoH,EAAQwD,MAAQ,KACmBga,GAElDuB,QAAO,CAACnmB,EAAO0f,EAAGtY,EAASwd,IAGlBG,EAAgB/kB,EAFN8jB,EAAoBpE,EAAG1f,GAC3BoH,EAAQwD,MAAQ,KACiBxD,EAAQ6c,UAAWW,GAEnE3X,EAAC,CAACjN,EAAO0f,EAAGtY,EAASwd,KACnBxd,EAAQwD,KAAO,IACRib,EAAa7lB,EAAO0f,EAAGtY,EAASwd,IAEzC1X,EAAC,CAAClN,EAAO0f,EAAGtY,EAASwd,KACnBxd,EAAQwD,KAAO,IACRib,EAAa7lB,EAAO0f,EAAGtY,EAASwd,MAK7C,MAAMwB,EAAmB,CAAC,OAAQ,MAAO,QAAS,UAClD,SAASC,EAAiBC,EAAO/B,GAC/B,OAAO+B,EAAMjb,QAAO7E,GAAKA,EAAE+f,MAAQhC,IAErC,SAASiC,EAA4BF,EAAO1b,GAC1C,OAAO0b,EAAMjb,QAAO7E,IAA0C,IAArC4f,EAAiB9N,QAAQ9R,EAAE+f,MAAe/f,EAAEigB,IAAI7b,OAASA,IAEpF,SAAS8b,EAAaJ,EAAO5d,GAC3B,OAAO4d,EAAMnR,MAAK,CAACC,EAAG3D,KACpB,MAAMkV,EAAKje,EAAU+I,EAAI2D,EACnBwR,EAAKle,EAAU0M,EAAI3D,EACzB,OAAOkV,EAAG7H,SAAW8H,EAAG9H,OACtB6H,EAAG1d,MAAQ2d,EAAG3d,MACd0d,EAAG7H,OAAS8H,EAAG9H,UAiDrB,SAAS+H,EAAeC,EAAY1U,EAAWgD,EAAG3D,GAChD,OAAO7Q,KAAKgC,IAAIkkB,EAAW1R,GAAIhD,EAAUgD,IAAMxU,KAAKgC,IAAIkkB,EAAWrV,GAAIW,EAAUX,IAEnF,SAASsV,EAAiBD,EAAYE,GACpCF,EAAWnV,IAAM/Q,KAAKgC,IAAIkkB,EAAWnV,IAAKqV,EAAWrV,KACrDmV,EAAWhV,KAAOlR,KAAKgC,IAAIkkB,EAAWhV,KAAMkV,EAAWlV,MACvDgV,EAAWjV,OAASjR,KAAKgC,IAAIkkB,EAAWjV,OAAQmV,EAAWnV,QAC3DiV,EAAWlV,MAAQhR,KAAKgC,IAAIkkB,EAAWlV,MAAOoV,EAAWpV,OAE3D,SAASqV,EAAW7U,EAAW8U,EAAQC,GACrC,MAAMV,EAAMU,EAAOV,IACbK,EAAa1U,EAAU0U,WACxBvjB,OAAOhE,EAAoE,GAA3EgE,CAA8E4jB,EAAOZ,OACpFY,EAAO/e,OACTgK,EAAU+U,EAAOZ,MAAQY,EAAO/e,MAElC+e,EAAO/e,KAAO+e,EAAOjQ,WAAauP,EAAIzO,OAASyO,EAAIxO,MACnD7F,EAAU+U,EAAOZ,MAAQY,EAAO/e,MAE9Bqe,EAAIW,YACNL,EAAiBD,EAAYL,EAAIW,cAEnC,MAAMC,EAAWzmB,KAAKgC,IAAI,EAAGskB,EAAOI,WAAaT,EAAeC,EAAY1U,EAAW,OAAQ,UACzFmV,EAAY3mB,KAAKgC,IAAI,EAAGskB,EAAOM,YAAcX,EAAeC,EAAY1U,EAAW,MAAO,WAC1FqV,EAAeJ,IAAajV,EAAUsV,EACtCC,EAAgBJ,IAAcnV,EAAUwV,EAG9C,OAFAxV,EAAUsV,EAAIL,EACdjV,EAAUwV,EAAIL,EACPJ,EAAOjQ,WACV,CAAC2Q,KAAMJ,EAAcK,MAAOH,GAC5B,CAACE,KAAMF,EAAeG,MAAOL,GAcnC,SAASM,EAAW7Q,EAAY9E,GAC9B,MAAM0U,EAAa1U,EAAU0U,WAC7B,SAASkB,EAAmBC,GAC1B,MAAMC,EAAS,CAACpW,KAAM,EAAGH,IAAK,EAAGC,MAAO,EAAGC,OAAQ,GAInD,OAHAoW,EAAUznB,SAAS+lB,IACjB2B,EAAO3B,GAAO3lB,KAAKgC,IAAIwP,EAAUmU,GAAMO,EAAWP,OAE7C2B,EAET,OACIF,EADG9Q,EACgB,CAAC,OAAQ,SACT,CAAC,MAAO,WAEjC,SAASiR,EAASC,EAAOhW,EAAW8U,GAClC,MAAMmB,EAAa,GACnB,IAAI3mB,EAAGsH,EAAMme,EAAQV,EAAK6B,EAAOxH,EACjC,IAAKpf,EAAI,EAAGsH,EAAOof,EAAM5mB,OAAQ8mB,EAAQ,EAAG5mB,EAAIsH,IAAQtH,EAAG,CACzDylB,EAASiB,EAAM1mB,GACf+kB,EAAMU,EAAOV,IACbA,EAAIte,OACFgf,EAAOlP,OAAS7F,EAAUsV,EAC1BP,EAAOnP,QAAU5F,EAAUwV,EAC3BG,EAAWZ,EAAOjQ,WAAY9E,IAEhC,MAAMyV,KAACA,EAAIC,MAAEA,GAASb,EAAW7U,EAAW8U,EAAQC,GACpDmB,GAAST,GAAQQ,EAAW7mB,OAC5Bsf,EAAUA,GAAWgH,EAChBrB,EAAI8B,UACPF,EAAWhsB,KAAK8qB,GAGpB,OAAOmB,GAASH,EAASE,EAAYjW,EAAW8U,IAAWpG,EAE7D,SAAS0H,GAAWJ,EAAOhW,EAAW8U,GACpC,MAAMuB,EAAcvB,EAAOwB,QAC3B,IAEIhnB,EAAGsH,EAAMme,EAAQV,EAFjBxZ,EAAImF,EAAUnF,EACdC,EAAIkF,EAAUlF,EAElB,IAAKxL,EAAI,EAAGsH,EAAOof,EAAM5mB,OAAQE,EAAIsH,IAAQtH,EAC3CylB,EAASiB,EAAM1mB,GACf+kB,EAAMU,EAAOV,IACTU,EAAOjQ,YACTuP,EAAI3U,KAAO2U,EAAI8B,SAAWE,EAAY3W,KAAOM,EAAUN,KACvD2U,EAAI7U,MAAQ6U,EAAI8B,SAAWrB,EAAOI,WAAamB,EAAY7W,MAAQQ,EAAUN,KAAOM,EAAUsV,EAC9FjB,EAAI9U,IAAMzE,EACVuZ,EAAI5U,OAAS3E,EAAIuZ,EAAIzO,OACrByO,EAAIxO,MAAQwO,EAAI7U,MAAQ6U,EAAI3U,KAC5B5E,EAAIuZ,EAAI5U,SAER4U,EAAI3U,KAAO7E,EACXwZ,EAAI7U,MAAQ3E,EAAIwZ,EAAIxO,MACpBwO,EAAI9U,IAAM8U,EAAI8B,SAAWE,EAAY9W,IAAMS,EAAUT,IACrD8U,EAAI5U,OAAS4U,EAAI8B,SAAWrB,EAAOM,YAAciB,EAAY7W,MAAQQ,EAAUT,IAAMS,EAAUwV,EAC/FnB,EAAIzO,OAASyO,EAAI5U,OAAS4U,EAAI9U,IAC9B1E,EAAIwZ,EAAI7U,OAGZQ,EAAUnF,EAAIA,EACdmF,EAAUlF,EAAIA,EAEhB3N,EAAoE,GAAE8C,IAAI,SAAU,CAClFqmB,QAAS,CACP/W,IAAK,EACLC,MAAO,EACPC,OAAQ,EACRC,KAAM,KAGV,IAAI5S,GAAU,CACZM,OAAOQ,EAAOyB,GACPzB,EAAMooB,QACTpoB,EAAMooB,MAAQ,IAEhB3mB,EAAK8mB,SAAW9mB,EAAK8mB,WAAY,EACjC9mB,EAAK8iB,SAAW9iB,EAAK8iB,UAAY,MACjC9iB,EAAKqd,OAASrd,EAAKqd,QAAU,EAC7Brd,EAAKknB,QAAUlnB,EAAKknB,SAAW,WAC7B,MAAO,CAAC,CACNC,EAAG,EACHppB,KAAK4S,GACH3Q,EAAKE,KAAKyQ,OAIhBpS,EAAMooB,MAAM/rB,KAAKoF,IAEnBjC,UAAUQ,EAAO6oB,GACf,MAAM5f,EAAQjJ,EAAMooB,MAAQpoB,EAAMooB,MAAM9P,QAAQuQ,IAAe,GAChD,IAAX5f,GACFjJ,EAAMooB,MAAMzT,OAAO1L,EAAO,IAG9BzJ,UAAUQ,EAAOyB,EAAM2F,GACrB3F,EAAK8mB,SAAWnhB,EAAQmhB,SACxB9mB,EAAK8iB,SAAWnd,EAAQmd,SACxB9iB,EAAKqd,OAAS1X,EAAQ0X,QAExBtf,OAAOQ,EAAOiY,EAAOD,EAAQ8Q,GAC3B,IAAK9oB,EACH,OAEF,MAAM0oB,EAAUnlB,OAAOhE,EAAmE,EAA1EgE,CAA6EvD,EAAMoH,QAAQ+f,OAAOuB,SAC5GK,EAAiB9Q,EAAQyQ,EAAQzQ,MACjC+Q,EAAkBhR,EAAS0Q,EAAQ1Q,OACnCoQ,EAtKV,SAA0BA,GACxB,MAAMa,EA7BR,SAAmBb,GACjB,MAAMa,EAAc,GACpB,IAAIvnB,EAAGsH,EAAMyd,EACb,IAAK/kB,EAAI,EAAGsH,GAAQof,GAAS,IAAI5mB,OAAQE,EAAIsH,IAAQtH,EACnD+kB,EAAM2B,EAAM1mB,GACZunB,EAAY5sB,KAAK,CACf4M,MAAOvH,EACP+kB,IAAAA,EACAF,IAAKE,EAAIlC,SACTrN,WAAYuP,EAAItP,eAChB2H,OAAQ2H,EAAI3H,SAGhB,OAAOmK,EAgBaC,CAAUd,GACxBG,EAAW7B,EAAauC,EAAY5d,QAAO8d,GAAQA,EAAK1C,IAAI8B,YAAW,GACvEzW,EAAO4U,EAAaL,EAAiB4C,EAAa,SAAS,GAC3DrX,EAAQ8U,EAAaL,EAAiB4C,EAAa,UACnDtX,EAAM+U,EAAaL,EAAiB4C,EAAa,QAAQ,GACzDpX,EAAS6U,EAAaL,EAAiB4C,EAAa,WACpDG,EAAmB5C,EAA4ByC,EAAa,KAC5DI,EAAiB7C,EAA4ByC,EAAa,KAChE,MAAO,CACLV,SAAAA,EACAe,WAAYxX,EAAKmD,OAAOtD,GACxB4X,eAAgB3X,EAAMqD,OAAOoU,GAAgBpU,OAAOpD,GAAQoD,OAAOmU,GACnEhX,UAAWiU,EAAiB4C,EAAa,aACzCO,SAAU1X,EAAKmD,OAAOrD,GAAOqD,OAAOoU,GACpCnS,WAAYvF,EAAIsD,OAAOpD,GAAQoD,OAAOmU,IAuJxBK,CAAiBzpB,EAAMooB,OAC/BsB,EAAgBtB,EAAMoB,SACtBG,EAAkBvB,EAAMlR,WAC9B3T,OAAOhE,EAAmE,EAA1EgE,CAA6EvD,EAAMooB,OAAO3B,IACxD,oBAArBA,EAAImD,cACbnD,EAAImD,kBAGR,MAAMC,EAA0BH,EAAcjnB,QAAO,CAACmb,EAAOuL,IAC3DA,EAAK1C,IAAIrf,UAAwC,IAA7B+hB,EAAK1C,IAAIrf,QAAQub,QAAoB/E,EAAQA,EAAQ,GAAG,IAAM,EAC9EsJ,EAAS3jB,OAAOkQ,OAAO,CAC3B6T,WAAYrP,EACZuP,YAAaxP,EACb0Q,QAAAA,EACAK,eAAAA,EACAC,gBAAAA,EACAc,aAAcf,EAAiB,EAAIc,EACnCE,cAAef,EAAkB,IAE7BlC,EAAavjB,OAAO+D,OAAO,GAAIohB,GACrC3B,EAAiBD,EAAYvjB,OAAOhE,EAAmE,EAA1EgE,CAA6EulB,IAC1G,MAAM1W,EAAY7O,OAAO+D,OAAO,CAC9Bwf,WAAAA,EACAY,EAAGqB,EACHnB,EAAGoB,EACH/b,EAAGyb,EAAQ5W,KACX5E,EAAGwb,EAAQ/W,KACV+W,IA9MP,SAAuBxpB,EAASgoB,GAC9B,IAAIxlB,EAAGsH,EAAMme,EACb,IAAKzlB,EAAI,EAAGsH,EAAO9J,EAAQsC,OAAQE,EAAIsH,IAAQtH,EAC7CylB,EAASjoB,EAAQwC,GACbylB,EAAOjQ,YACTiQ,EAAOlP,MAAQkP,EAAOV,IAAI8B,UAAYrB,EAAO6B,eAC7C5B,EAAOnP,OAASkP,EAAO6C,gBAEvB5C,EAAOlP,MAAQiP,EAAO4C,aACtB3C,EAAOnP,OAASmP,EAAOV,IAAI8B,UAAYrB,EAAO8B,iBAsMhDgB,CAAcN,EAAczU,OAAO0U,GAAkBzC,GACrDiB,EAASC,EAAMG,SAAUnW,EAAW8U,GACpCiB,EAASuB,EAAetX,EAAW8U,GAC/BiB,EAASwB,EAAiBvX,EAAW8U,IACvCiB,EAASuB,EAAetX,EAAW8U,GApJzC,SAA0B9U,GACxB,MAAM0U,EAAa1U,EAAU0U,WAC7B,SAASmD,EAAU1D,GACjB,MAAM2D,EAAStpB,KAAKgC,IAAIkkB,EAAWP,GAAOnU,EAAUmU,GAAM,GAE1D,OADAnU,EAAUmU,IAAQ2D,EACXA,EAET9X,EAAUlF,GAAK+c,EAAU,OACzB7X,EAAUnF,GAAKgd,EAAU,QACzBA,EAAU,SACVA,EAAU,UA4IRE,CAAiB/X,GACjBoW,GAAWJ,EAAMkB,WAAYlX,EAAW8U,GACxC9U,EAAUnF,GAAKmF,EAAUsV,EACzBtV,EAAUlF,GAAKkF,EAAUwV,EACzBY,GAAWJ,EAAMmB,eAAgBnX,EAAW8U,GAC5ClnB,EAAMoS,UAAY,CAChBN,KAAMM,EAAUN,KAChBH,IAAKS,EAAUT,IACfC,MAAOQ,EAAUN,KAAOM,EAAUsV,EAClC7V,OAAQO,EAAUT,IAAMS,EAAUwV,EAClC5P,OAAQ5F,EAAUwV,EAClB3P,MAAO7F,EAAUsV,GAEnBnkB,OAAOhE,EAAmE,EAA1EgE,CAA6E6kB,EAAMhW,WAAY+U,IAC7F,MAAMV,EAAMU,EAAOV,IACnBljB,OAAO+D,OAAOmf,EAAKzmB,EAAMoS,WACzBqU,EAAIte,OAAOiK,EAAUsV,EAAGtV,EAAUwV,QAKxC,MAAM3qB,GACJuC,eAAe4qB,EAAQrL,IACvBvf,eAAegT,GACb,OAAO,EAEThT,iBAAiBQ,EAAOG,EAAMkqB,IAC9B7qB,oBAAoBQ,EAAOG,EAAMkqB,IACjC7qB,sBACE,OAAO,EAETA,eAAe6S,EAAS4F,EAAOD,EAAQ+G,GAGrC,OAFA9G,EAAQrX,KAAKgC,IAAI,EAAGqV,GAAS5F,EAAQ4F,OACrCD,EAASA,GAAU3F,EAAQ2F,OACpB,CACLC,MAAAA,EACAD,OAAQpX,KAAKgC,IAAI,EAAGmc,EAAcne,KAAK0D,MAAM2T,EAAQ8G,GAAe/G,IAGxExY,WAAW4qB,GACT,OAAO,GAIX,MAAMltB,WAAsBD,GAC1BuC,eAAeiC,GACb,OAAOA,GAAQA,EAAK2N,YAAc3N,EAAK2N,WAAW,OAAS,MAI/D,MACMkb,GAAc,CAClBC,WAAY,YACZC,UAAW,YACXC,SAAU,UACVC,aAAc,aACdC,YAAa,YACbC,YAAa,YACbC,UAAW,UACXC,aAAc,WACdC,WAAY,YAERC,GAAgB9iB,GAAmB,OAAVA,GAA4B,KAAVA,EAoCjD,MAAM+iB,KAAuB1rB,EAAmE,GAAI,CAAC2rB,SAAS,GAI9G,SAASC,GAAenrB,EAAOG,EAAMkqB,GACnCrqB,EAAMoqB,OAAOgB,oBAAoBjrB,EAAMkqB,EAAUY,IAanD,SAASI,GAAqBrrB,EAAOG,EAAMkqB,GACzC,MAAMD,EAASpqB,EAAMoqB,OAEf/X,EADY+X,GAAU7mB,OAAOhE,EAAmE,EAA1EgE,CAA6E6mB,IAC5EA,EACvBkB,EAAW,IAAIC,kBAAiBC,IACpC,MAAM/Y,EAASlP,OAAOhE,EAAmE,EAA1EgE,CAA6E8O,GAC5FmZ,EAAQhrB,SAAQsV,IACd,IAAK,IAAIpU,EAAI,EAAGA,EAAIoU,EAAM2V,WAAWjqB,OAAQE,IAAK,CAChD,MAAMgqB,EAAQ5V,EAAM2V,WAAW/pB,GAC3BgqB,IAAUrZ,GAAWqZ,IAAUjZ,GACjC4X,EAASvU,EAAMhS,eAMvB,OADAwnB,EAASK,QAAQC,SAAU,CAACC,WAAW,EAAMC,SAAS,IAC/CR,EAET,SAASS,GAAqB/rB,EAAOG,EAAMkqB,GACzC,MAAMD,EAASpqB,EAAMoqB,OACf4B,EAAY5B,GAAU7mB,OAAOhE,EAAmE,EAA1EgE,CAA6E6mB,GACzG,IAAK4B,EACH,OAEF,MAAMV,EAAW,IAAIC,kBAAiBC,IACpCA,EAAQhrB,SAAQsV,IACd,IAAK,IAAIpU,EAAI,EAAGA,EAAIoU,EAAMmW,aAAazqB,OAAQE,IAC7C,GAAIoU,EAAMmW,aAAavqB,KAAO0oB,EAAQ,CACpCC,IACA,aAMR,OADAiB,EAASK,QAAQK,EAAW,CAACH,WAAW,IACjCP,EAET,MAAMY,GAAqB,IAAItsB,IAC/B,IAAIusB,GAAsB,EAC1B,SAASC,KACP,MAAMC,EAAMjwB,OAAOkwB,iBACfD,IAAQF,KAGZA,GAAsBE,EACtBH,GAAmB1rB,SAAQ,CAAC2F,EAAQnG,KAC9BA,EAAMusB,0BAA4BF,GACpClmB,QAgBN,SAASqmB,GAAqBxsB,EAAOG,EAAMkqB,GACzC,MAAMD,EAASpqB,EAAMoqB,OACf4B,EAAY5B,GAAU7mB,OAAOhE,EAAmE,EAA1EgE,CAA6E6mB,GACzG,IAAK4B,EACH,OAEF,MAAM7lB,EAAS5C,OAAOhE,EAAmE,EAA1EgE,EAA6E,CAAC0U,EAAOD,KAClG,MAAM0P,EAAIsE,EAAUS,YACpBpC,EAASpS,EAAOD,GACZ0P,EAAIsE,EAAUS,aAChBpC,MAEDjuB,QACGkvB,EAAW,IAAIoB,gBAAelB,IAClC,MAAM1V,EAAQ0V,EAAQ,GAChBvT,EAAQnC,EAAM6W,YAAY1U,MAC1BD,EAASlC,EAAM6W,YAAY3U,OACnB,IAAVC,GAA0B,IAAXD,GAGnB7R,EAAO8R,EAAOD,MAIhB,OAFAsT,EAASK,QAAQK,GAlCnB,SAAuChsB,EAAOmG,GACvC+lB,GAAmB9jB,MACtBhM,OAAOwwB,iBAAiB,SAAUR,IAEpCF,GAAmB7pB,IAAIrC,EAAOmG,GA+B9B0mB,CAA8B7sB,EAAOmG,GAC9BmlB,EAET,SAASwB,GAAgB9sB,EAAOG,EAAMmrB,GAChCA,GACFA,EAASyB,aAEE,WAAT5sB,GApCN,SAAyCH,GACvCksB,GAAmBnpB,OAAO/C,GACrBksB,GAAmB9jB,MACtBhM,OAAOgvB,oBAAoB,SAAUgB,IAkCrCY,CAAgChtB,GAGpC,SAASitB,GAAqBjtB,EAAOG,EAAMkqB,GACzC,MAAMD,EAASpqB,EAAMoqB,OACf8C,EAAQ3pB,OAAOhE,EAAmE,EAA1EgE,EAA8EjB,IACxE,OAAdtC,EAAM8L,KACRue,EAhHN,SAAyB/nB,EAAOtC,GAC9B,MAAMG,EAAOmqB,GAAYhoB,EAAMnC,OAASmC,EAAMnC,MACxC8M,EAACA,EAACC,EAAEA,GAAK3J,OAAOhE,EAAoE,GAA3EgE,CAA8EjB,EAAOtC,GACpG,MAAO,CACLG,KAAAA,EACAH,MAAAA,EACAmtB,OAAQ7qB,EACR2K,OAASlN,IAANkN,EAAkBA,EAAI,KACzBC,OAASnN,IAANmN,EAAkBA,EAAI,MAwGdkgB,CAAgB9qB,EAAOtC,MAEjCA,GAAQqtB,IACT,MAAM/qB,EAAQ+qB,EAAK,GACnB,MAAO,CAAC/qB,EAAOA,EAAM+Y,QAAS/Y,EAAMgZ,YAGtC,OA7HF,SAAqBgS,EAAMntB,EAAMkqB,GAC/BiD,EAAKV,iBAAiBzsB,EAAMkqB,EAAUY,IA2HtCsC,CAAYnD,EAAQjqB,EAAM+sB,GACnBA,EAET,MAAM1vB,WAAoBP,GACxBuC,eAAe4qB,EAAQrL,GACrB,MAAMvM,EAAU4X,GAAUA,EAAOhb,YAAcgb,EAAOhb,WAAW,MACjE,OAAIoD,GAAWA,EAAQ4X,SAAWA,GAtKtC,SAAoBA,EAAQrL,GAC1B,MAAMG,EAAQkL,EAAOlL,MACfsO,EAAepD,EAAOqD,aAAa,UACnCC,EAActD,EAAOqD,aAAa,SAcxC,GAbArD,EAAkB,SAAI,CACpB1pB,QAAS,CACPsX,OAAQwV,EACRvV,MAAOyV,EACPxO,MAAO,CACLyD,QAASzD,EAAMyD,QACf3K,OAAQkH,EAAMlH,OACdC,MAAOiH,EAAMjH,SAInBiH,EAAMyD,QAAUzD,EAAMyD,SAAW,QACjCzD,EAAMyO,UAAYzO,EAAMyO,WAAa,aACjC3C,GAAc0C,GAAc,CAC9B,MAAME,EAAerqB,OAAOhE,EAAmE,EAA1EgE,CAA6E6mB,EAAQ,cACrFrqB,IAAjB6tB,IACFxD,EAAOnS,MAAQ2V,GAGnB,GAAI5C,GAAcwC,GAChB,GAA4B,KAAxBpD,EAAOlL,MAAMlH,OACfoS,EAAOpS,OAASoS,EAAOnS,OAAS8G,GAAe,OAC1C,CACL,MAAM8O,EAAgBtqB,OAAOhE,EAAmE,EAA1EgE,CAA6E6mB,EAAQ,eACrFrqB,IAAlB8tB,IACFzD,EAAOpS,OAAS6V,IA0IlBC,CAAW1D,EAAQrL,GACZvM,GAEF,KAEThT,eAAegT,GACb,MAAM4X,EAAS5X,EAAQ4X,OACvB,IAAKA,EAAkB,SACrB,OAAO,EAET,MAAM1pB,EAAU0pB,EAAkB,SAAE1pB,QACpC,CAAC,SAAU,SAASF,SAASuD,IAC3B,MAAMmE,EAAQxH,EAAQqD,GAClBR,OAAOhE,EAAoE,GAA3EgE,CAA8E2E,GAChFkiB,EAAO2D,gBAAgBhqB,GAEvBqmB,EAAO4D,aAAajqB,EAAMmE,MAG9B,MAAMgX,EAAQxe,EAAQwe,OAAS,GAM/B,OALA3b,OAAOiC,KAAK0Z,GAAO1e,SAASuG,IAC1BqjB,EAAOlL,MAAMnY,GAAOmY,EAAMnY,MAE5BqjB,EAAOnS,MAAQmS,EAAOnS,aACfmS,EAAkB,UAClB,EAET5qB,iBAAiBQ,EAAOG,EAAMkqB,GAC5B5qB,KAAK2rB,oBAAoBprB,EAAOG,GAChC,MAAM8tB,EAAUjuB,EAAMkuB,WAAaluB,EAAMkuB,SAAW,IAM9C1J,EALW,CACf2J,OAAQ9C,GACR+C,OAAQrC,GACR5lB,OAAQqmB,IAEersB,IAAS8sB,GAClCgB,EAAQ9tB,GAAQqkB,EAAQxkB,EAAOG,EAAMkqB,GAEvC7qB,oBAAoBQ,EAAOG,GACzB,MAAM8tB,EAAUjuB,EAAMkuB,WAAaluB,EAAMkuB,SAAW,IAC9ChB,EAAQe,EAAQ9tB,GACtB,IAAK+sB,EACH,QAEe,CACfiB,OAAQrB,GACRsB,OAAQtB,GACR3mB,OAAQ2mB,IAEe3sB,IAASgrB,IAC1BnrB,EAAOG,EAAM+sB,GACrBe,EAAQ9tB,QAAQJ,EAElBP,sBACE,OAAOpD,OAAOkwB,iBAEhB9sB,eAAe4qB,EAAQnS,EAAOD,EAAQ+G,GACpC,OAAOxb,OAAOhE,EAAmE,EAA1EgE,CAA6E6mB,EAAQnS,EAAOD,EAAQ+G,GAE7Gvf,WAAW4qB,GACT,MAAM4B,EAAYzoB,OAAOhE,EAAmE,EAA1EgE,CAA6E6mB,GAC/F,SAAU4B,IAAazoB,OAAOhE,EAAmE,EAA1EgE,CAA6EyoB,KAIxG,MAAMtuB,GACJ8B,cACEC,KAAKwN,OAAIlN,EACTN,KAAKyN,OAAInN,EACTN,KAAKyG,QAAS,EACdzG,KAAK2H,aAAUrH,EACfN,KAAK8H,iBAAcxH,EAErBP,gBAAgBolB,GACd,MAAM3X,EAACA,EAACC,EAAEA,GAAKzN,KAAK4uB,SAAS,CAAC,IAAK,KAAMzJ,GACzC,MAAO,CAAC3X,EAAAA,EAAGC,EAAAA,GAEb1N,WACE,OAAO+D,OAAOhE,EAAoE,GAA3EgE,CAA8E9D,KAAKwN,IAAM1J,OAAOhE,EAAoE,GAA3EgE,CAA8E9D,KAAKyN,GAErL1N,SAASuI,EAAOumB,GACd,MAAMvtB,EAAKtB,KACLQ,EAAQR,KAAK8H,YACnB,IAAK+mB,IAAUruB,EACb,OAAOc,EAET,MAAMwtB,EAAM,GAIZ,OAHAxmB,EAAMvH,SAAQuD,IACZwqB,EAAIxqB,GAAQ9D,EAAM8D,IAAS9D,EAAM8D,GAAMmC,SAAWjG,EAAM8D,GAAMc,IAAM9D,EAAGgD,MAElEwqB,GAGX7wB,GAAQ8Y,SAAW,GACnB9Y,GAAQ8wB,mBAAgBzuB,EAExB,MAAM0uB,GAAa,CACjBvnB,OAAOgB,GACE3E,OAAOhE,EAAoE,GAA3EgE,CAA8E2E,GAASA,EAAQ,GAAKA,EAE7G1I,QAAQkvB,EAAWzlB,EAAO0M,GACxB,GAAkB,IAAd+Y,EACF,MAAO,IAET,MAAMlQ,EAAS/e,KAAKO,MAAMoH,QAAQoX,OAClC,IAAImQ,EACAC,EAAQF,EACZ,GAAI/Y,EAAMnU,OAAS,EAAG,CACpB,MAAMqtB,EAAUjuB,KAAKgC,IAAIhC,KAAK6U,IAAIE,EAAM,GAAGzN,OAAQtH,KAAK6U,IAAIE,EAAMA,EAAMnU,OAAS,GAAG0G,SAChF2mB,EAAU,MAAQA,EAAU,QAC9BF,EAAW,cAEbC,EAmBN,SAAwBF,EAAW/Y,GACjC,IAAIiZ,EAAQjZ,EAAMnU,OAAS,EAAImU,EAAM,GAAGzN,MAAQyN,EAAM,GAAGzN,MAAQyN,EAAM,GAAGzN,MAAQyN,EAAM,GAAGzN,MACvFtH,KAAK6U,IAAImZ,GAAS,GAAKF,IAAc9tB,KAAK0D,MAAMoqB,KAClDE,EAAQF,EAAY9tB,KAAK0D,MAAMoqB,IAEjC,OAAOE,EAxBKE,CAAeJ,EAAW/Y,GAEpC,MAAMoZ,EAAWxrB,OAAOhE,EAAmE,EAA1EgE,CAA6E3C,KAAK6U,IAAImZ,IACjGI,EAAapuB,KAAKgC,IAAIhC,KAAKC,KAAK,EAAID,KAAK0D,MAAMyqB,GAAW,IAAK,GAC/D3nB,EAAU,CAACunB,SAAAA,EAAUM,sBAAuBD,EAAYE,sBAAuBF,GAErF,OADAzrB,OAAO+D,OAAOF,EAAS3H,KAAK2H,QAAQuO,MAAM2N,QACnC/f,OAAOhE,EAAoE,GAA3EgE,CAA8EmrB,EAAWlQ,EAAQpX,IAE1G5H,YAAYkvB,EAAWzlB,EAAO0M,GAC5B,GAAkB,IAAd+Y,EACF,MAAO,IAET,MAAM1pB,EAAS0pB,EAAa9tB,KAAK4kB,IAAI,GAAI5kB,KAAK0D,MAAMf,OAAOhE,EAAmE,EAA1EgE,CAA6EmrB,KACjI,OAAe,IAAX1pB,GAA2B,IAAXA,GAA2B,IAAXA,EAC3BypB,GAAWU,QAAQnuB,KAAKvB,KAAMivB,EAAWzlB,EAAO0M,GAElD,KAUX,IAAIlX,GAAQ,CAACgwB,WAAAA,IAiEb,SAASW,GAAS7mB,EAAOoN,GACvB,MAAM0Z,EAAW9mB,EAAMnB,QAAQuO,MACzB2Z,EAAaD,EAASE,eAwB9B,SAA2BhnB,GACzB,MAAMiS,EAASjS,EAAMnB,QAAQoT,OACvBgV,EAAajnB,EAAMknB,YACnBC,EAAWnnB,EAAMgN,QAAUia,GAAchV,EAAS,EAAI,GACtDmV,EAAWpnB,EAAMqnB,WAAaJ,EACpC,OAAO5uB,KAAK0D,MAAM1D,KAAKC,IAAI6uB,EAAUC,IA7BQE,CAAkBtnB,GACzDunB,EAAeT,EAASU,MAAMC,QA6CtC,SAAyBra,GACvB,MAAMsa,EAAS,GACf,IAAIvuB,EAAGsH,EACP,IAAKtH,EAAI,EAAGsH,EAAO2M,EAAMnU,OAAQE,EAAIsH,EAAMtH,IACrCiU,EAAMjU,GAAGquB,OACXE,EAAO5zB,KAAKqF,GAGhB,OAAOuuB,EArDuCC,CAAgBva,GAAS,GACjEwa,EAAkBL,EAAatuB,OAC/B4uB,EAAQN,EAAa,GACrB3X,EAAO2X,EAAaK,EAAkB,GACtCE,EAAW,GACjB,GAAIF,EAAkBb,EAEpB,OAgDJ,SAAoB3Z,EAAO0a,EAAUP,EAAcjU,GACjD,IAEIna,EAFA4N,EAAQ,EACRsK,EAAOkW,EAAa,GAGxB,IADAjU,EAAUjb,KAAK0vB,KAAKzU,GACfna,EAAI,EAAGA,EAAIiU,EAAMnU,OAAQE,IACxBA,IAAMkY,IACRyW,EAASh0B,KAAKsZ,EAAMjU,IACpB4N,IACAsK,EAAOkW,EAAaxgB,EAAQuM,IA1D9B0U,CAAW5a,EAAO0a,EAAUP,EAAcK,EAAkBb,GACrDe,EAET,MAAMxU,EAqBR,SAA0BiU,EAAcna,EAAO2Z,GAC7C,MAAMkB,EA4DR,SAAwBhc,GACtB,MAAMic,EAAMjc,EAAIhT,OAChB,IAAIE,EAAGgvB,EACP,GAAID,EAAM,EACR,OAAO,EAET,IAAKC,EAAOlc,EAAI,GAAI9S,EAAI,EAAGA,EAAI+uB,IAAO/uB,EACpC,GAAI8S,EAAI9S,GAAK8S,EAAI9S,EAAI,KAAOgvB,EAC1B,OAAO,EAGX,OAAOA,EAvEkBC,CAAeb,GAClCjU,EAAUlG,EAAMnU,OAAS8tB,EAC/B,IAAKkB,EACH,OAAO5vB,KAAKgC,IAAIiZ,EAAS,GAE3B,MAAM+U,EAAUrtB,OAAOhE,EAAmE,EAA1EgE,CAA6EitB,GAC7F,IAAK,IAAI9uB,EAAI,EAAGsH,EAAO4nB,EAAQpvB,OAAS,EAAGE,EAAIsH,EAAMtH,IAAK,CACxD,MAAM2B,EAASutB,EAAQlvB,GACvB,GAAI2B,EAASwY,EACX,OAAOxY,EAGX,OAAOzC,KAAKgC,IAAIiZ,EAAS,GAlCTgV,CAAiBf,EAAcna,EAAO2Z,GACtD,GAAIa,EAAkB,EAAG,CACvB,IAAIzuB,EAAGsH,EACP,MAAM8nB,EAAkBX,EAAkB,EAAIvvB,KAAKmwB,OAAO5Y,EAAOiY,IAAUD,EAAkB,IAAM,KAEnG,IADApV,GAAKpF,EAAO0a,EAAUxU,EAAStY,OAAOhE,EAAoE,GAA3EgE,CAA8EutB,GAAmB,EAAIV,EAAQU,EAAiBV,GACxJ1uB,EAAI,EAAGsH,EAAOmnB,EAAkB,EAAGzuB,EAAIsH,EAAMtH,IAChDqZ,GAAKpF,EAAO0a,EAAUxU,EAASiU,EAAapuB,GAAIouB,EAAapuB,EAAI,IAGnE,OADAqZ,GAAKpF,EAAO0a,EAAUxU,EAAS1D,EAAM5U,OAAOhE,EAAoE,GAA3EgE,CAA8EutB,GAAmBnb,EAAMnU,OAAS2W,EAAO2Y,GACrJT,EAGT,OADAtV,GAAKpF,EAAO0a,EAAUxU,GACfwU,EA+CT,SAAStV,GAAKpF,EAAO0a,EAAUxU,EAASmV,EAAYC,GAClD,MAAMnwB,EAAQyC,OAAOhE,EAAoE,GAA3EgE,CAA8EytB,EAAY,GAClGroB,EAAM/H,KAAKC,IAAI0C,OAAOhE,EAAoE,GAA3EgE,CAA8E0tB,EAAUtb,EAAMnU,QAASmU,EAAMnU,QAClI,IACIA,EAAQE,EAAGkY,EADXtK,EAAQ,EAQZ,IANAuM,EAAUjb,KAAK0vB,KAAKzU,GAChBoV,IACFzvB,EAASyvB,EAAWD,EACpBnV,EAAUra,EAASZ,KAAK0D,MAAM9C,EAASqa,IAEzCjC,EAAO9Y,EACA8Y,EAAO,GACZtK,IACAsK,EAAOhZ,KAAKmwB,MAAMjwB,EAAQwO,EAAQuM,GAEpC,IAAKna,EAAId,KAAKgC,IAAI9B,EAAO,GAAIY,EAAIiH,EAAKjH,IAChCA,IAAMkY,IACRyW,EAASh0B,KAAKsZ,EAAMjU,IACpB4N,IACAsK,EAAOhZ,KAAKmwB,MAAMjwB,EAAQwO,EAAQuM,IAzJxCtc,EAAoE,GAAE8C,IAAI,QAAS,CACjFsgB,SAAS,EACTnI,QAAQ,EACR9R,SAAS,EACTiS,aAAa,EACbuW,OAAQ,QACRC,MAAO,EACP1W,KAAM,CACJkI,SAAS,EACTnD,UAAW,EACX4R,YAAY,EACZC,iBAAiB,EACjBC,WAAW,EACX9B,WAAY,EACZ+B,UAAW,CAAC1lB,EAAMzE,IAAYA,EAAQoY,UACtCgS,UAAW,CAAC3lB,EAAMzE,IAAYA,EAAQqqB,MACtCjX,QAAQ,EACRkX,WAAY,GACZC,iBAAkB,EAClBjT,YAAa,GAEfxD,MAAO,CACLyH,SAAS,EACTxD,KAAM,GACNuJ,QAAS,CACP/W,IAAK,EACLE,OAAQ,IAGZ8D,MAAO,CACLic,YAAa,EACbC,YAAa,GACbC,QAAQ,EACRC,gBAAiB,EACjBC,gBAAiB,GACjBtJ,QAAS,EACT/F,SAAS,EACTyM,UAAU,EACV6C,gBAAiB,EACjBC,YAAa,EACbC,SAAU1zB,GAAMgwB,WAAWvnB,OAC3BkrB,MAAO,GACPrC,MAAO,GACPsC,MAAO,SACPC,WAAY,OACZC,mBAAmB,EACnBC,cAAe,4BACfC,gBAAiB,KAGrBlzB,EAAoE,GAAEmzB,MAAM,cAAe,QAAS,GAAI,SACxGnzB,EAAoE,GAAEmzB,MAAM,aAAc,QAAS,GAAI,eACvGnzB,EAAoE,GAAEmzB,MAAM,aAAc,cAAe,GAAI,eAC7GnzB,EAAoE,GAAEmzB,MAAM,cAAe,QAAS,GAAI,SACxGnzB,EAAoE,GAAEmG,SAAS,QAAS,CACtFC,WAAW,EACXE,YAAcC,IAAUA,EAAK6sB,WAAW,YAAc7sB,EAAK6sB,WAAW,UAAqB,aAAT7sB,GAAgC,WAATA,EACzGF,WAAaE,GAAkB,eAATA,GAAkC,mBAATA,IAEjDvG,EAAoE,GAAEmG,SAAS,SAAU,CACvFC,UAAW,UA+Gb,MACMitB,GAAiB,CAACrqB,EAAOsqB,EAAMrY,IAAoB,QAATqY,GAA2B,SAATA,EAAkBtqB,EAAMsqB,GAAQrY,EAASjS,EAAMsqB,GAAQrY,EACzH,SAASsY,GAAOte,EAAKue,GACnB,MAAM9C,EAAS,GACT+C,EAAYxe,EAAIhT,OAASuxB,EACzBtC,EAAMjc,EAAIhT,OAChB,IAAIE,EAAI,EACR,KAAOA,EAAI+uB,EAAK/uB,GAAKsxB,EACnB/C,EAAO5zB,KAAKmY,EAAI5T,KAAK0D,MAAM5C,KAE7B,OAAOuuB,EAET,SAASgD,GAAoB1qB,EAAOU,EAAOiqB,GACzC,MAAM1xB,EAAS+G,EAAMoN,MAAMnU,OACrB2xB,EAAavyB,KAAKC,IAAIoI,EAAOzH,EAAS,GACtCV,EAAQyH,EAAMmQ,YACd/P,EAAMJ,EAAMoQ,UACZya,EAAU,KAChB,IACI5Y,EADA6Y,EAAY9qB,EAAMqN,gBAAgBud,GAEtC,KAAID,IAEA1Y,EADa,IAAXhZ,EACOZ,KAAKgC,IAAIywB,EAAYvyB,EAAO6H,EAAM0qB,GACxB,IAAVpqB,GACCV,EAAMqN,gBAAgB,GAAKyd,GAAa,GAExCA,EAAY9qB,EAAMqN,gBAAgBud,EAAa,IAAM,EAEjEE,GAAaF,EAAalqB,EAAQuR,GAAUA,EACxC6Y,EAAYvyB,EAAQsyB,GAAWC,EAAY1qB,EAAMyqB,IAIvD,OAAOC,EAeT,SAASC,GAAkBlsB,GACzB,OAAOA,EAAQkqB,UAAYlqB,EAAQooB,WAAa,EAElD,SAAS+D,GAAensB,EAASosB,GAC/B,IAAKpsB,EAAQub,QACX,OAAO,EAET,MAAM8Q,EAAOlwB,OAAOhE,EAAmE,EAA1EgE,CAA6E6D,EAAQqsB,KAAMD,GAClG9K,EAAUnlB,OAAOhE,EAAmE,EAA1EgE,CAA6E6D,EAAQshB,SAErG,OADcnlB,OAAOhE,EAAoE,GAA3EgE,CAA8E6D,EAAQ+X,MAAQ/X,EAAQ+X,KAAK3d,OAAS,GAClHiyB,EAAKC,WAAchL,EAAQ1Q,OAe7C,SAAS2b,GAAWtB,EAAO9N,EAAU7b,GACnC,IAAI6lB,EAAMhrB,OAAOhE,EAAmE,EAA1EgE,CAA6E8uB,GAIvF,OAHK3pB,GAAwB,UAAb6b,IAA2B7b,GAAwB,UAAb6b,KACpDgK,EA5EiB,CAAC8D,GAAoB,SAAVA,EAAmB,QAAoB,UAAVA,EAAoB,OAASA,EA4EhFuB,CAAarF,IAEdA,EAiBT,MAAMhwB,WAAcb,GAClB8B,YAAYqE,GACVgT,QACApX,KAAKuL,GAAKnH,EAAImH,GACdvL,KAAKU,KAAO0D,EAAI1D,KAChBV,KAAK2H,aAAUrH,EACfN,KAAKqM,IAAMjI,EAAIiI,IACfrM,KAAKO,MAAQ6D,EAAI7D,MACjBP,KAAKkS,SAAM5R,EACXN,KAAKoS,YAAS9R,EACdN,KAAKqS,UAAO/R,EACZN,KAAKmS,WAAQ7R,EACbN,KAAKwY,WAAQlY,EACbN,KAAKuY,YAASjY,EACdN,KAAKo0B,SAAW,CACd/hB,KAAM,EACNF,MAAO,EACPD,IAAK,EACLE,OAAQ,GAEVpS,KAAK8d,cAAWxd,EAChBN,KAAK+d,eAAYzd,EACjBN,KAAKq0B,gBAAa/zB,EAClBN,KAAKs0B,mBAAgBh0B,EACrBN,KAAKu0B,iBAAcj0B,EACnBN,KAAKw0B,kBAAel0B,EACpBN,KAAKmL,UAAO7K,EACZN,KAAKy0B,mBAAgBn0B,EACrBN,KAAKoB,SAAMd,EACXN,KAAKmD,SAAM7C,EACXN,KAAK00B,YAASp0B,EACdN,KAAKkW,MAAQ,GACblW,KAAK20B,eAAiB,KACtB30B,KAAK40B,YAAc,KACnB50B,KAAK60B,YAAc,KACnB70B,KAAK8V,QAAU,EACf9V,KAAKmwB,WAAa,EAClBnwB,KAAK80B,kBAAoB,GACzB90B,KAAKiZ,iBAAc3Y,EACnBN,KAAKkZ,eAAY5Y,EACjBN,KAAK0kB,gBAAiB,EACtB1kB,KAAK+0B,cAAWz0B,EAChBN,KAAKg1B,cAAW10B,EAChBN,KAAKi1B,mBAAgB30B,EACrBN,KAAKk1B,mBAAgB50B,EACrBN,KAAKm1B,aAAe,EACpBn1B,KAAKo1B,aAAe,EACpBp1B,KAAKqV,OAAS,GACdrV,KAAKq1B,mBAAoB,EACzBr1B,KAAKgN,cAAW1M,EAElBP,KAAK4H,GACH,MAAMrG,EAAKtB,KACXsB,EAAGqG,QAAUA,EAAQ2tB,WAAWh0B,EAAGqO,cACnCrO,EAAG6J,KAAOxD,EAAQwD,KAClB7J,EAAG0zB,SAAW1zB,EAAGkP,MAAM7I,EAAQvG,KAC/BE,EAAGyzB,SAAWzzB,EAAGkP,MAAM7I,EAAQxE,KAC/B7B,EAAG4zB,cAAgB5zB,EAAGkP,MAAM7I,EAAQ4tB,cACpCj0B,EAAG2zB,cAAgB3zB,EAAGkP,MAAM7I,EAAQ6tB,cAEtCz1B,MAAMoT,EAAK3J,GACT,OAAO2J,EAETpT,gBACE,IAAIi1B,SAACA,EAAQD,SAAEA,EAAQG,cAAEA,EAAaD,cAAEA,GAAiBj1B,KAKzD,OAJAg1B,EAAWlxB,OAAOhE,EAAmE,EAA1EgE,CAA6EkxB,EAAU/jB,OAAOC,mBACzG6jB,EAAWjxB,OAAOhE,EAAmE,EAA1EgE,CAA6EixB,EAAU9jB,OAAOE,mBACzG+jB,EAAgBpxB,OAAOhE,EAAmE,EAA1EgE,CAA6EoxB,EAAejkB,OAAOC,mBACnH+jB,EAAgBnxB,OAAOhE,EAAmE,EAA1EgE,CAA6EmxB,EAAehkB,OAAOE,mBAC5G,CACL/P,IAAK0C,OAAOhE,EAAmE,EAA1EgE,CAA6EkxB,EAAUE,GAC5F/xB,IAAKW,OAAOhE,EAAmE,EAA1EgE,CAA6EixB,EAAUE,GAC5F3jB,WAAYxN,OAAOhE,EAAoE,GAA3EgE,CAA8EkxB,GAC1FzjB,WAAYzN,OAAOhE,EAAoE,GAA3EgE,CAA8EixB,IAG9Fh1B,UAAU+Q,GACR,MAAMxP,EAAKtB,KACX,IACI2Q,GADAvP,IAACA,EAAG+B,IAAEA,EAAGmO,WAAEA,EAAUC,WAAEA,GAAcjQ,EAAGkQ,gBAE5C,GAAIF,GAAcC,EAChB,MAAO,CAACnQ,IAAAA,EAAK+B,IAAAA,GAEf,MAAMoS,EAAQjU,EAAGqJ,0BACjB,IAAK,IAAI1I,EAAI,EAAGsH,EAAOgM,EAAMxT,OAAQE,EAAIsH,IAAQtH,EAC/C0O,EAAQ4E,EAAMtT,GAAG4I,WAAW4qB,UAAUn0B,EAAIwP,GACrCQ,IACHlQ,EAAMD,KAAKC,IAAIA,EAAKuP,EAAMvP,MAEvBmQ,IACHpO,EAAMhC,KAAKgC,IAAIA,EAAKwN,EAAMxN,MAG9B,MAAO,CACL/B,IAAK0C,OAAOhE,EAAmE,EAA1EgE,CAA6E1C,EAAK0C,OAAOhE,EAAmE,EAA1EgE,CAA6EX,EAAK/B,IACzK+B,IAAKW,OAAOhE,EAAmE,EAA1EgE,CAA6EX,EAAKW,OAAOhE,EAAmE,EAA1EgE,CAA6E1C,EAAK+B,KAG7KpD,aACE,MAAMuB,EAAKtB,KACX,MAAO,CACLqS,KAAM/Q,EAAGizB,aAAe,EACxBriB,IAAK5Q,EAAG+yB,YAAc,EACtBliB,MAAO7Q,EAAGkzB,cAAgB,EAC1BpiB,OAAQ9Q,EAAGgzB,eAAiB,GAGhCv0B,WACE,OAAOC,KAAKkW,MAEdnW,YACE,MAAM0O,EAAOzO,KAAKO,MAAMkO,KACxB,OAAOzO,KAAK2H,QAAQ0I,SAAWrQ,KAAK0X,eAAiBjJ,EAAKinB,QAAUjnB,EAAKknB,UAAYlnB,EAAK4B,QAAU,GAEtGtQ,eACEC,KAAKqV,OAAS,GACdrV,KAAKq1B,mBAAoB,EAE3Bt1B,eACE+D,OAAOhE,EAAmE,EAA1EgE,CAA6E9D,KAAK2H,QAAQiuB,aAAc,CAAC51B,OAE3GD,OAAO+d,EAAUC,EAAW8X,GAC1B,MAAMv0B,EAAKtB,KACL4vB,EAAWtuB,EAAGqG,QAAQuO,MACtB4f,EAAalG,EAASkG,WAC5Bx0B,EAAGs0B,eACHt0B,EAAGwc,SAAWA,EACdxc,EAAGyc,UAAYA,EACfzc,EAAG8yB,SAAWyB,EAAU/xB,OAAO+D,OAAO,CACpCwK,KAAM,EACNF,MAAO,EACPD,IAAK,EACLE,OAAQ,GACPyjB,GACHv0B,EAAG4U,MAAQ,KACX5U,EAAGuzB,YAAc,KACjBvzB,EAAGqzB,eAAiB,KACpBrzB,EAAGszB,YAAc,KACjBtzB,EAAGy0B,sBACHz0B,EAAG00B,gBACH10B,EAAG20B,qBACH30B,EAAG6uB,WAAa7uB,EAAGoW,eACfpW,EAAGkX,MAAQqd,EAAQxjB,KAAOwjB,EAAQ1jB,MAClC7Q,EAAGiX,OAASsd,EAAQ3jB,IAAM2jB,EAAQzjB,OACjC9Q,EAAG+zB,oBACN/zB,EAAG40B,mBACH50B,EAAG60B,sBACH70B,EAAG80B,kBACH90B,EAAGozB,OAAS5wB,OAAOhE,EAAmE,EAA1EgE,CAA6ExC,EAAIA,EAAGqG,QAAQ+pB,OACxGpwB,EAAG+zB,mBAAoB,GAEzB/zB,EAAG+0B,mBACH/0B,EAAG4U,MAAQ5U,EAAGg1B,cAAgB,GAC9Bh1B,EAAGi1B,kBACH,MAAMC,EAAkBV,EAAax0B,EAAG4U,MAAMnU,OAC9CT,EAAGm1B,sBAAsBD,EAAkBnD,GAAO/xB,EAAG4U,MAAO4f,GAAcx0B,EAAG4U,OAC7E5U,EAAG6F,YACH7F,EAAGo1B,+BACHp1B,EAAGq1B,yBACHr1B,EAAGs1B,8BACChH,EAAS1M,UAAY0M,EAASD,UAAgC,SAApBC,EAASiH,UACrDv1B,EAAG4U,MAAQyZ,GAASruB,EAAIA,EAAG4U,OAC3B5U,EAAGuzB,YAAc,MAEf2B,GACFl1B,EAAGm1B,sBAAsBn1B,EAAG4U,OAE9B5U,EAAGw1B,YACHx1B,EAAGy1B,MACHz1B,EAAG01B,WACH11B,EAAG21B,cAELl3B,YACE,MAAMuB,EAAKtB,KACX,IACIk3B,EAAYC,EADZC,EAAgB91B,EAAGqG,QAAQsB,QAE3B3H,EAAGoW,gBACLwf,EAAa51B,EAAG+Q,KAChB8kB,EAAW71B,EAAG6Q,QAEd+kB,EAAa51B,EAAG4Q,IAChBilB,EAAW71B,EAAG8Q,OACdglB,GAAiBA,GAEnB91B,EAAG2X,YAAcie,EACjB51B,EAAG4X,UAAYie,EACf71B,EAAGojB,eAAiB0S,EACpB91B,EAAGwU,QAAUqhB,EAAWD,EACxB51B,EAAG+1B,eAAiB/1B,EAAGqG,QAAQ2vB,cAEjCv3B,cACE+D,OAAOhE,EAAmE,EAA1EgE,CAA6E9D,KAAK2H,QAAQsvB,YAAa,CAACj3B,OAE1GD,sBACE+D,OAAOhE,EAAmE,EAA1EgE,CAA6E9D,KAAK2H,QAAQouB,oBAAqB,CAAC/1B,OAElHD,gBACE,MAAMuB,EAAKtB,KACPsB,EAAGoW,gBACLpW,EAAGkX,MAAQlX,EAAGwc,SACdxc,EAAG+Q,KAAO,EACV/Q,EAAG6Q,MAAQ7Q,EAAGkX,QAEdlX,EAAGiX,OAASjX,EAAGyc,UACfzc,EAAG4Q,IAAM,EACT5Q,EAAG8Q,OAAS9Q,EAAGiX,QAEjBjX,EAAGizB,YAAc,EACjBjzB,EAAG+yB,WAAa,EAChB/yB,EAAGkzB,aAAe,EAClBlzB,EAAGgzB,cAAgB,EAErBv0B,qBACE+D,OAAOhE,EAAmE,EAA1EgE,CAA6E9D,KAAK2H,QAAQsuB,mBAAoB,CAACj2B,OAEjHD,WAAWsG,GACT,MAAM/E,EAAKtB,KACXsB,EAAGf,MAAMg3B,cAAclxB,EAAM/E,EAAGqO,cAChC7L,OAAOhE,EAAmE,EAA1EgE,CAA6ExC,EAAGqG,QAAQtB,GAAO,CAAC/E,IAElGvB,mBACEC,KAAKw3B,WAAW,oBAElBz3B,uBACAA,kBACEC,KAAKw3B,WAAW,mBAElBz3B,mBACEC,KAAKw3B,WAAW,oBAElBz3B,aACE,MAAO,GAETA,kBACEC,KAAKw3B,WAAW,mBAElBz3B,8BACE+D,OAAOhE,EAAmE,EAA1EgE,CAA6E9D,KAAK2H,QAAQ8vB,4BAA6B,CAACz3B,OAE1HD,mBAAmBmW,GACjB,MAAM5U,EAAKtB,KACL4vB,EAAWtuB,EAAGqG,QAAQuO,MAC5B,IAAIjU,EAAGsH,EAAMlH,EACb,IAAKJ,EAAI,EAAGsH,EAAO2M,EAAMnU,OAAQE,EAAIsH,EAAMtH,IACzCI,EAAO6T,EAAMjU,GACbI,EAAKuP,MAAQ9N,OAAOhE,EAAmE,EAA1EgE,CAA6E8rB,EAAS8C,SAAU,CAACrwB,EAAKoG,MAAOxG,EAAGiU,GAAQ5U,GAEvI,IAAKW,EAAI,EAAGA,EAAIsH,EAAMtH,IAChB6B,OAAOhE,EAAoE,GAA3EgE,CAA8EoS,EAAMjU,GAAG2P,SACzFsE,EAAMhB,OAAOjT,EAAG,GAChBsH,IACAtH,KAINlC,6BACE+D,OAAOhE,EAAmE,EAA1EgE,CAA6E9D,KAAK2H,QAAQ+vB,2BAA4B,CAAC13B,OAEzHD,+BACE+D,OAAOhE,EAAmE,EAA1EgE,CAA6E9D,KAAK2H,QAAQ+uB,6BAA8B,CAAC12B,OAE3HD,yBACE,MAAMuB,EAAKtB,KACL2H,EAAUrG,EAAGqG,QACbioB,EAAWjoB,EAAQuO,MACnByhB,EAAWr2B,EAAG4U,MAAMnU,OACpBowB,EAAcvC,EAASuC,aAAe,EACtCC,EAAcxC,EAASwC,YAC7B,IACIN,EAAW/T,EAAW6Z,EADtBnD,EAAgBtC,EAEpB,IAAK7wB,EAAGu2B,eAAiBjI,EAAS1M,SAAWiP,GAAeC,GAAeuF,GAAY,IAAMr2B,EAAGoW,eAE9F,YADApW,EAAGmzB,cAAgBtC,GAGrB,MAAM2F,EAAax2B,EAAGy2B,iBAChBC,EAAgBF,EAAWG,OAAOzf,MAClC0f,EAAiBJ,EAAWK,QAAQ5f,OACpCuF,EAAWha,OAAOhE,EAAoE,GAA3EgE,CAA8ExC,EAAGf,MAAMiY,MAAQwf,EAAe,EAAG12B,EAAGwc,UACrIgU,EAAYnqB,EAAQoT,OAASzZ,EAAGwc,SAAW6Z,EAAW7Z,GAAY6Z,EAAW,GACzEK,EAAgB,EAAIlG,IACtBA,EAAYhU,GAAY6Z,GAAYhwB,EAAQoT,OAAS,GAAM,IAC3DgD,EAAYzc,EAAGyc,UAAY8V,GAAkBlsB,EAAQqT,MACrD4U,EAAS3G,QAAU6K,GAAensB,EAAQ8T,MAAOna,EAAGf,MAAMoH,QAAQqsB,MAClE4D,EAAmBz2B,KAAK2kB,KAAKkS,EAAgBA,EAAgBE,EAAiBA,GAC9EzD,EAAgB3wB,OAAOhE,EAAmE,EAA1EgE,CAA6E3C,KAAKC,IAChGD,KAAKi3B,KAAKj3B,KAAKC,KAAK02B,EAAWK,QAAQ5f,OAAS,GAAKuZ,EAAW,IAChE3wB,KAAKi3B,KAAKj3B,KAAKC,IAAI2c,EAAY6Z,EAAkB,IAAMz2B,KAAKi3B,KAAKF,EAAiBN,KAEpFnD,EAAgBtzB,KAAKgC,IAAIgvB,EAAahxB,KAAKC,IAAIgxB,EAAaqC,KAE9DnzB,EAAGmzB,cAAgBA,EAErB10B,8BACE+D,OAAOhE,EAAmE,EAA1EgE,CAA6E9D,KAAK2H,QAAQivB,4BAA6B,CAAC52B,OAE1HD,YACE+D,OAAOhE,EAAmE,EAA1EgE,CAA6E9D,KAAK2H,QAAQmvB,UAAW,CAAC92B,OAExGD,MACE,MAAMuB,EAAKtB,KACLsiB,EAAU,CACd9J,MAAO,EACPD,OAAQ,IAEJhY,MAACA,EAAOoH,SAAUuO,MAAO0Z,EAAUnU,MAAO4c,EAAWrd,KAAMsd,IAAah3B,EACxE4hB,EAAU5hB,EAAGu2B,aACbngB,EAAepW,EAAGoW,eACxB,GAAIwL,EAAS,CACX,MAAMqV,EAAczE,GAAeuE,EAAW93B,EAAMoH,QAAQqsB,MAQ5D,GAPItc,GACF4K,EAAQ9J,MAAQlX,EAAGwc,SACnBwE,EAAQ/J,OAASsb,GAAkByE,GAAYC,IAE/CjW,EAAQ/J,OAASjX,EAAGyc,UACpBuE,EAAQ9J,MAAQqb,GAAkByE,GAAYC,GAE5C3I,EAAS1M,SAAW5hB,EAAG4U,MAAMnU,OAAQ,CACvC,MAAM4uB,MAACA,EAAKjY,KAAEA,EAAIuf,OAAEA,EAAME,QAAEA,GAAW72B,EAAGy2B,iBACpCS,EAAiC,EAAnB5I,EAAS3G,QACvBwP,EAAe30B,OAAOhE,EAAoE,GAA3EgE,CAA8ExC,EAAGmzB,eAChGxX,EAAM9b,KAAK8b,IAAIwb,GACftb,EAAMhc,KAAKgc,IAAIsb,GACrB,GAAI/gB,EAAc,CAChB,MAAMghB,EAAc9I,EAASyC,OAAS,EAAIlV,EAAM8a,EAAOzf,MAAQyE,EAAMkb,EAAQ5f,OAC7E+J,EAAQ/J,OAASpX,KAAKC,IAAIE,EAAGyc,UAAWuE,EAAQ/J,OAASmgB,EAAcF,OAClE,CACL,MAAMG,EAAa/I,EAASyC,OAAS,EAAIpV,EAAMgb,EAAOzf,MAAQ2E,EAAMgb,EAAQ5f,OAC5E+J,EAAQ9J,MAAQrX,KAAKC,IAAIE,EAAGwc,SAAUwE,EAAQ9J,MAAQmgB,EAAaH,GAErEl3B,EAAGs3B,kBAAkBjI,EAAOjY,EAAMyE,EAAKF,IAG3C3b,EAAGu3B,iBACCnhB,GACFpW,EAAGkX,MAAQlX,EAAGwU,QAAUvV,EAAMiY,MAAQlX,EAAG8yB,SAAS/hB,KAAO/Q,EAAG8yB,SAASjiB,MACrE7Q,EAAGiX,OAAS+J,EAAQ/J,SAEpBjX,EAAGkX,MAAQ8J,EAAQ9J,MACnBlX,EAAGiX,OAASjX,EAAGwU,QAAUvV,EAAMgY,OAASjX,EAAG8yB,SAASliB,IAAM5Q,EAAG8yB,SAAShiB,QAG1ErS,kBAAkB4wB,EAAOjY,EAAMyE,EAAKF,GAClC,MAAM3b,EAAKtB,MACJkW,OAAO0c,MAACA,EAAK3J,QAAEA,GAAQnE,SAAEA,GAAYxjB,EAAGqG,QACzCmxB,EAAiC,IAArBx3B,EAAGmzB,cACfsE,EAAgC,QAAbjU,GAAkC,MAAZxjB,EAAG6J,KAClD,GAAI7J,EAAGoW,eAAgB,CACrB,MAAMshB,EAAa13B,EAAG6U,gBAAgB,GAAK7U,EAAG+Q,KACxC4mB,EAAc33B,EAAG6Q,MAAQ7Q,EAAG6U,gBAAgB7U,EAAG4U,MAAMnU,OAAS,GACpE,IAAIwyB,EAAc,EACdC,EAAe,EACfsE,EACEC,GACFxE,EAActX,EAAM0T,EAAMnY,MAC1Bgc,EAAerX,EAAMzE,EAAKH,SAE1Bgc,EAAcpX,EAAMwT,EAAMpY,OAC1Bic,EAAevX,EAAMvE,EAAKF,OAET,UAAVoa,EACT4B,EAAe9b,EAAKF,MACD,QAAVoa,EACT2B,EAAc5D,EAAMnY,OAEpB+b,EAAc5D,EAAMnY,MAAQ,EAC5Bgc,EAAe9b,EAAKF,MAAQ,GAE9BlX,EAAGizB,YAAcpzB,KAAKgC,KAAKoxB,EAAcyE,EAAa/P,GAAW3nB,EAAGkX,OAASlX,EAAGkX,MAAQwgB,GAAa,GACrG13B,EAAGkzB,aAAerzB,KAAKgC,KAAKqxB,EAAeyE,EAAchQ,GAAW3nB,EAAGkX,OAASlX,EAAGkX,MAAQygB,GAAc,OACpG,CACL,IAAI5E,EAAa3b,EAAKH,OAAS,EAC3B+b,EAAgB3D,EAAMpY,OAAS,EACrB,UAAVqa,GACFyB,EAAa,EACbC,EAAgB3D,EAAMpY,QACH,QAAVqa,IACTyB,EAAa3b,EAAKH,OAClB+b,EAAgB,GAElBhzB,EAAG+yB,WAAaA,EAAapL,EAC7B3nB,EAAGgzB,cAAgBA,EAAgBrL,GAGvClpB,iBACE,MAAMuB,EAAKtB,KACPsB,EAAG8yB,WACL9yB,EAAG8yB,SAAS/hB,KAAOlR,KAAKgC,IAAI7B,EAAGizB,YAAajzB,EAAG8yB,SAAS/hB,MACxD/Q,EAAG8yB,SAASliB,IAAM/Q,KAAKgC,IAAI7B,EAAG+yB,WAAY/yB,EAAG8yB,SAASliB,KACtD5Q,EAAG8yB,SAASjiB,MAAQhR,KAAKgC,IAAI7B,EAAGkzB,aAAclzB,EAAG8yB,SAASjiB,OAC1D7Q,EAAG8yB,SAAShiB,OAASjR,KAAKgC,IAAI7B,EAAGgzB,cAAehzB,EAAG8yB,SAAShiB,SAGhErS,WACE+D,OAAOhE,EAAmE,EAA1EgE,CAA6E9D,KAAK2H,QAAQqvB,SAAU,CAACh3B,OAEvGD,eACE,MAAMoL,KAACA,EAAI2Z,SAAEA,GAAY9kB,KAAK2H,QAC9B,MAAoB,QAAbmd,GAAmC,WAAbA,GAAkC,MAAT3Z,EAExDpL,aACE,OAAOC,KAAK2H,QAAQmhB,SAEtB/oB,sBAAsBmW,GACpB,MAAM5U,EAAKtB,KACXsB,EAAGm2B,8BACHn2B,EAAG43B,mBAAmBhjB,GACtB5U,EAAGo2B,6BAEL33B,iBACE,MAAMuB,EAAKtB,KACX,IAAI83B,EAAax2B,EAAGuzB,YACpB,IAAKiD,EAAY,CACf,MAAMhC,EAAax0B,EAAGqG,QAAQuO,MAAM4f,WACpC,IAAI5f,EAAQ5U,EAAG4U,MACX4f,EAAa5f,EAAMnU,SACrBmU,EAAQmd,GAAOnd,EAAO4f,IAExBx0B,EAAGuzB,YAAciD,EAAax2B,EAAG63B,mBAAmBjjB,EAAOA,EAAMnU,QAEnE,OAAO+1B,EAET/3B,mBAAmBmW,EAAOnU,GACxB,MAAMsK,IAACA,EAAKyoB,kBAAmBsE,GAAUp5B,KACnCq5B,EAAS,GACTC,EAAU,GAChB,IAEIr3B,EAAGgjB,EAAGsB,EAAM3U,EAAO2nB,EAAUC,EAAY/lB,EAAOwgB,EAAYzb,EAAOD,EAAQkhB,EAF3EC,EAAkB,EAClBC,EAAmB,EAEvB,IAAK13B,EAAI,EAAGA,EAAIF,IAAUE,EAAG,CAO3B,GANA2P,EAAQsE,EAAMjU,GAAG2P,MACjB2nB,EAAWv5B,KAAK45B,wBAAwB33B,GACxCoK,EAAI2nB,KAAOwF,EAAaD,EAASM,OACjCpmB,EAAQ2lB,EAAOI,GAAcJ,EAAOI,IAAe,CAAC/qB,KAAM,GAAIqrB,GAAI,IAClE7F,EAAasF,EAAStF,WACtBzb,EAAQD,EAAS,EACZzU,OAAOhE,EAAoE,GAA3EgE,CAA8E8N,IAAW9N,OAAOhE,EAAoE,GAA3EgE,CAA8E8N,IAGrK,GAAI9N,OAAOhE,EAAoE,GAA3EgE,CAA8E8N,GACvF,IAAKqT,EAAI,EAAGsB,EAAO3U,EAAM7P,OAAQkjB,EAAIsB,IAAQtB,EAC3CwU,EAAc7nB,EAAMqT,GACfnhB,OAAOhE,EAAoE,GAA3EgE,CAA8E21B,IAAiB31B,OAAOhE,EAAoE,GAA3EgE,CAA8E21B,KAChLjhB,EAAQ1U,OAAOhE,EAAmE,EAA1EgE,CAA6EuI,EAAKoH,EAAMhF,KAAMgF,EAAMqmB,GAAIthB,EAAOihB,GACvHlhB,GAAU0b,QAPdzb,EAAQ1U,OAAOhE,EAAmE,EAA1EgE,CAA6EuI,EAAKoH,EAAMhF,KAAMgF,EAAMqmB,GAAIthB,EAAO5G,GACvH2G,EAAS0b,EAUXoF,EAAOz8B,KAAK4b,GACZ8gB,EAAQ18B,KAAK2b,GACbmhB,EAAkBv4B,KAAKgC,IAAIqV,EAAOkhB,GAClCC,EAAmBx4B,KAAKgC,IAAIoV,EAAQohB,IA9f1C,SAAwBP,EAAQr3B,GAC9B+B,OAAOhE,EAAmE,EAA1EgE,CAA6Es1B,GAAS3lB,IACpF,MAAMqmB,EAAKrmB,EAAMqmB,GACXC,EAAQD,EAAG/3B,OAAS,EAC1B,IAAIE,EACJ,GAAI83B,EAAQh4B,EAAQ,CAClB,IAAKE,EAAI,EAAGA,EAAI83B,IAAS93B,SAChBwR,EAAMhF,KAAKqrB,EAAG73B,IAEvB63B,EAAG5kB,OAAO,EAAG6kB,OAuffC,CAAeZ,EAAQr3B,GACvB,MAAMk2B,EAASoB,EAAOxgB,QAAQ6gB,GACxBvB,EAAUmB,EAAQzgB,QAAQ8gB,GAC1BM,EAAWC,IAAQ,CAAE1hB,MAAO6gB,EAAOa,IAAQ,EAAG3hB,OAAQ+gB,EAAQY,IAAQ,IAC5E,MAAO,CACLvJ,MAAOsJ,EAAQ,GACfvhB,KAAMuhB,EAAQl4B,EAAS,GACvBk2B,OAAQgC,EAAQhC,GAChBE,QAAS8B,EAAQ9B,GACjBkB,OAAAA,EACAC,QAAAA,GAGJv5B,iBAAiB0I,GACf,OAAOA,EAET1I,iBAAiB0I,EAAOe,GACtB,OAAOqH,IAET9Q,iBAAiBo6B,IACjBp6B,gBAAgByJ,GACd,MAAM0M,EAAQlW,KAAKkW,MACnB,OAAI1M,EAAQ,GAAKA,EAAQ0M,EAAMnU,OAAS,EAC/B,KAEF/B,KAAKiW,iBAAiBC,EAAM1M,GAAOf,OAE5C1I,mBAAmBq6B,GACjB,MAAM94B,EAAKtB,KACPsB,EAAGojB,iBACL0V,EAAU,EAAIA,GAEhB,MAAMD,EAAQ74B,EAAG2X,YAAcmhB,EAAU94B,EAAGwU,QAC5C,OAAOhS,OAAOhE,EAAmE,EAA1EgE,CAA6ExC,EAAG+1B,eAAiBvzB,OAAOhE,EAAmE,EAA1EgE,CAA6ExC,EAAGf,MAAO45B,EAAO,GAAKA,GAE7Mp6B,mBAAmBo6B,GACjB,MAAMC,GAAWD,EAAQn6B,KAAKiZ,aAAejZ,KAAK8V,QAClD,OAAO9V,KAAK0kB,eAAiB,EAAI0V,EAAUA,EAE7Cr6B,eACE,OAAOC,KAAKiW,iBAAiBjW,KAAKq6B,gBAEpCt6B,eACE,MAAMqB,IAACA,EAAG+B,IAAEA,GAAOnD,KACnB,OAAOoB,EAAM,GAAK+B,EAAM,EAAIA,EAC1B/B,EAAM,GAAK+B,EAAM,EAAI/B,EACrB,EAEJrB,WAAWyJ,GACT,MAAMlI,EAAKtB,KACLkW,EAAQ5U,EAAG4U,OAAS,GAC1B,GAAI1M,GAAS,GAAKA,EAAQ0M,EAAMnU,OAAQ,CACtC,MAAMM,EAAO6T,EAAM1M,GACnB,OAAOnH,EAAK2K,WACb3K,EAAK2K,SAvhBV,SAA2BgG,EAAQxJ,EAAOnH,GACxC,OAAOyB,OAAO+D,OAAO/D,OAAOmP,OAAOD,GAAS,CAC1C3Q,KAAAA,EACAmH,MAAAA,EACA9I,KAAM,SAmhBW45B,CAAkBh5B,EAAGqO,aAAcnG,EAAOnH,IAE3D,OAAOf,EAAG0L,WACV1L,EAAG0L,UAhiBqBgG,EAgiBS1R,EAAGf,MAAMoP,aAhiBV7G,EAgiBwBxH,EA/hBnDwC,OAAO+D,OAAO/D,OAAOmP,OAAOD,GAAS,CAC1ClK,MAAAA,EACApI,KAAM,YAHV,IAA4BsS,EAAQlK,EAkiBlC/I,YACE,MAAMuB,EAAKtB,KACLu6B,EAAcj5B,EAAGqG,QAAQuO,MACzBskB,EAAM12B,OAAOhE,EAAoE,GAA3EgE,CAA8ExC,EAAGmzB,eACvFxX,EAAM9b,KAAK6U,IAAI7U,KAAK8b,IAAIud,IACxBrd,EAAMhc,KAAK6U,IAAI7U,KAAKgc,IAAIqd,IACxB1C,EAAax2B,EAAGy2B,iBAChB9O,EAAUsR,EAAY/H,iBAAmB,EACzCvK,EAAI6P,EAAaA,EAAWG,OAAOzf,MAAQyQ,EAAU,EACrDd,EAAI2P,EAAaA,EAAWK,QAAQ5f,OAAS0Q,EAAU,EAC7D,OAAO3nB,EAAGoW,eACNyQ,EAAIlL,EAAMgL,EAAI9K,EAAM8K,EAAIhL,EAAMkL,EAAIhL,EAClCgL,EAAIhL,EAAM8K,EAAIhL,EAAMkL,EAAIlL,EAAMgL,EAAI9K,EAExCpd,aACE,MAAMmjB,EAAUljB,KAAK2H,QAAQub,QAC7B,MAAgB,SAAZA,IACOA,EAEJljB,KAAK2K,0BAA0B5I,OAAS,EAEjDhC,sBAAsB4S,GACpB,MAAMrR,EAAKtB,KACLmL,EAAO7J,EAAG6J,KACV5K,EAAQe,EAAGf,MACXoH,EAAUrG,EAAGqG,SACbqT,KAACA,EAAI8J,SAAEA,GAAYnd,EACnBoT,EAASC,EAAKD,OACdrD,EAAepW,EAAGoW,eAElB+iB,EADQn5B,EAAG4U,MACSnU,QAAUgZ,EAAS,EAAI,GAC3C2f,EAAK7G,GAAkB7Y,GACvBlZ,EAAQ,GACR64B,EAAa3f,EAAKsa,WAAWh0B,EAAGqO,cAChCirB,EAAYD,EAAWhJ,WAAagJ,EAAW1b,YAAc,EAC7D4b,EAAgBD,EAAY,EAC5BE,EAAmB,SAASX,GAChC,OAAOr2B,OAAOhE,EAAmE,EAA1EgE,CAA6EvD,EAAO45B,EAAOS,IAEpG,IAAIG,EAAa94B,EAAG2xB,EAAWoH,EAC3BC,EAAKC,EAAKC,EAAKC,EAAKC,EAAIC,EAAIC,EAAIC,EACpC,GAAiB,QAAb1W,EACFiW,EAAcD,EAAiBx5B,EAAG8Q,QAClC8oB,EAAM55B,EAAG8Q,OAASsoB,EAClBU,EAAML,EAAcF,EACpBS,EAAKR,EAAiBnoB,EAAUT,KAAO2oB,EACvCW,EAAK7oB,EAAUP,YACV,GAAiB,WAAb0S,EACTiW,EAAcD,EAAiBx5B,EAAG4Q,KAClCopB,EAAK3oB,EAAUT,IACfspB,EAAKV,EAAiBnoB,EAAUP,QAAUyoB,EAC1CK,EAAMH,EAAcF,EACpBO,EAAM95B,EAAG4Q,IAAMwoB,OACV,GAAiB,SAAb5V,EACTiW,EAAcD,EAAiBx5B,EAAG6Q,OAClC8oB,EAAM35B,EAAG6Q,MAAQuoB,EACjBS,EAAMJ,EAAcF,EACpBQ,EAAKP,EAAiBnoB,EAAUN,MAAQwoB,EACxCU,EAAK5oB,EAAUR,WACV,GAAiB,UAAb2S,EACTiW,EAAcD,EAAiBx5B,EAAG+Q,MAClCgpB,EAAK1oB,EAAUN,KACfkpB,EAAKT,EAAiBnoB,EAAUR,OAAS0oB,EACzCI,EAAMF,EAAcF,EACpBM,EAAM75B,EAAG+Q,KAAOqoB,OACX,GAAa,MAATvvB,EAAc,CACvB,GAAiB,WAAb2Z,EACFiW,EAAcD,GAAkBnoB,EAAUT,IAAMS,EAAUP,QAAU,EAAI,SACnE,GAAItO,OAAOhE,EAAoE,GAA3EgE,CAA8EghB,GAAW,CAClG,MAAM2W,EAAiB33B,OAAOiC,KAAK+e,GAAU,GACvCrc,EAAQqc,EAAS2W,GACvBV,EAAcD,EAAiBx5B,EAAGf,MAAMV,OAAO47B,GAAgBxlB,iBAAiBxN,IAElF6yB,EAAK3oB,EAAUT,IACfspB,EAAK7oB,EAAUP,OACf8oB,EAAMH,EAAcF,EACpBO,EAAMF,EAAMR,OACP,GAAa,MAATvvB,EAAc,CACvB,GAAiB,WAAb2Z,EACFiW,EAAcD,GAAkBnoB,EAAUN,KAAOM,EAAUR,OAAS,QAC/D,GAAIrO,OAAOhE,EAAoE,GAA3EgE,CAA8EghB,GAAW,CAClG,MAAM2W,EAAiB33B,OAAOiC,KAAK+e,GAAU,GACvCrc,EAAQqc,EAAS2W,GACvBV,EAAcD,EAAiBx5B,EAAGf,MAAMV,OAAO47B,GAAgBxlB,iBAAiBxN,IAElFwyB,EAAMF,EAAcF,EACpBM,EAAMF,EAAMP,EACZW,EAAK1oB,EAAUN,KACfkpB,EAAK5oB,EAAUR,MAEjB,IAAKlQ,EAAI,EAAGA,EAAIw4B,IAAex4B,EAAG,CAChC,MAAMy5B,EAAc1gB,EAAKsa,WAAWh0B,EAAGqO,WAAW1N,IAC5C8d,EAAY2b,EAAY3b,UACxB4b,EAAYD,EAAY1J,MACxBC,EAAajX,EAAKiX,YAAc,GAChCC,EAAmBwJ,EAAYxJ,iBAC/BJ,EAAY4J,EAAY5J,UACxBC,EAAY2J,EAAY3J,UACxB6J,EAAiBF,EAAYE,gBAAkB,GAC/CC,EAAuBH,EAAYG,qBACzCjI,EAAYJ,GAAoBlyB,EAAIW,EAAG8Y,QACrBza,IAAdszB,IAGJoH,EAAmBl3B,OAAOhE,EAAmE,EAA1EgE,CAA6EvD,EAAOqzB,EAAW7T,GAC9GrI,EACFujB,EAAME,EAAME,EAAKE,EAAKP,EAEtBE,EAAME,EAAME,EAAKE,EAAKR,EAExBl5B,EAAMlF,KAAK,CACTq+B,IAAAA,EACAC,IAAAA,EACAC,IAAAA,EACAC,IAAAA,EACAC,GAAAA,EACAC,GAAAA,EACAC,GAAAA,EACAC,GAAAA,EACAhjB,MAAOuH,EACPiS,MAAO2J,EACP1J,WAAAA,EACAC,iBAAAA,EACAJ,UAAAA,EACAC,UAAAA,EACA6J,eAAAA,EACAC,qBAAAA,KAKJ,OAFAv6B,EAAG6zB,aAAesF,EAClBn5B,EAAG8zB,aAAe2F,EACXj5B,EAET/B,mBAAmB4S,GACjB,MAAMrR,EAAKtB,KACLmL,EAAO7J,EAAG6J,KACVxD,EAAUrG,EAAGqG,SACbmd,SAACA,EAAU5O,MAAOqkB,GAAe5yB,EACjC+P,EAAepW,EAAGoW,eAClBxB,EAAQ5U,EAAG4U,OACX0c,MAACA,EAAKC,WAAEA,EAAU5J,QAAEA,EAAOoJ,OAAEA,GAAUkI,EACvCG,EAAK7G,GAAkBlsB,EAAQqT,MAC/B8gB,EAAiBpB,EAAKzR,EACtB8S,EAAkB1J,GAAUpJ,EAAU6S,EACtChgB,GAAYhY,OAAOhE,EAAoE,GAA3EgE,CAA8ExC,EAAGmzB,eAC7F3yB,EAAQ,GACd,IAAIG,EAAGsH,EAAMlH,EAAMuP,EAAOpE,EAAGC,EAAGuuB,EAAW7B,EAAOnG,EAAMC,EAAYgI,EAAWC,EAC3EC,EAAe,SACnB,GAAiB,QAAbrX,EACFrX,EAAInM,EAAG8Q,OAAS2pB,EAChBC,EAAY16B,EAAG86B,+BACV,GAAiB,WAAbtX,EACTrX,EAAInM,EAAG4Q,IAAM6pB,EACbC,EAAY16B,EAAG86B,+BACV,GAAiB,SAAbtX,EAAqB,CAC9B,MAAMgK,EAAMxtB,EAAG+6B,wBAAwB3B,GACvCsB,EAAYlN,EAAIkN,UAChBxuB,EAAIshB,EAAIthB,OACH,GAAiB,UAAbsX,EAAsB,CAC/B,MAAMgK,EAAMxtB,EAAG+6B,wBAAwB3B,GACvCsB,EAAYlN,EAAIkN,UAChBxuB,EAAIshB,EAAIthB,OACH,GAAa,MAATrC,EAAc,CACvB,GAAiB,WAAb2Z,EACFrX,GAAMkF,EAAUT,IAAMS,EAAUP,QAAU,EAAK0pB,OAC1C,GAAIh4B,OAAOhE,EAAoE,GAA3EgE,CAA8EghB,GAAW,CAClG,MAAM2W,EAAiB33B,OAAOiC,KAAK+e,GAAU,GACvCrc,EAAQqc,EAAS2W,GACvBhuB,EAAInM,EAAGf,MAAMV,OAAO47B,GAAgBxlB,iBAAiBxN,GAASqzB,EAEhEE,EAAY16B,EAAG86B,+BACV,GAAa,MAATjxB,EAAc,CACvB,GAAiB,WAAb2Z,EACFtX,GAAMmF,EAAUN,KAAOM,EAAUR,OAAS,EAAK2pB,OAC1C,GAAIh4B,OAAOhE,EAAoE,GAA3EgE,CAA8EghB,GAAW,CAClG,MAAM2W,EAAiB33B,OAAOiC,KAAK+e,GAAU,GACvCrc,EAAQqc,EAAS2W,GACvBjuB,EAAIlM,EAAGf,MAAMV,OAAO47B,GAAgBxlB,iBAAiBxN,GAEvDuzB,EAAY16B,EAAG+6B,wBAAwB3B,GAAIsB,UAEhC,MAAT7wB,IACY,UAAVynB,EACFuJ,EAAe,MACI,QAAVvJ,IACTuJ,EAAe,WAGnB,MAAMrE,EAAax2B,EAAGy2B,iBACtB,IAAK91B,EAAI,EAAGsH,EAAO2M,EAAMnU,OAAQE,EAAIsH,IAAQtH,EAAG,CAC9CI,EAAO6T,EAAMjU,GACb2P,EAAQvP,EAAKuP,MACb,MAAM8pB,EAAcnB,EAAYjF,WAAWh0B,EAAGqO,WAAW1N,IACzDk4B,EAAQ74B,EAAG6U,gBAAgBlU,GAAKs4B,EAAY9H,YAC5CuB,EAAO1yB,EAAGs4B,wBAAwB33B,GAClCgyB,EAAaD,EAAKC,WAClBgI,EAAYn4B,OAAOhE,EAAoE,GAA3EgE,CAA8E8N,GAASA,EAAM7P,OAAS,EAClH,MAAMu6B,EAAYL,EAAY,EACxBjK,EAAQ0J,EAAY1J,MACpBuK,EAAcb,EAAYnJ,gBAC1BiK,EAAcd,EAAYpJ,gBA2BhC,IAAImK,EACJ,GA3BI/kB,GACFlK,EAAI2sB,EAGA+B,EAFa,QAAbpX,EACiB,SAAf+N,GAAsC,IAAb/W,GACbmgB,EAAYhI,EAAaA,EAAa,EAC5B,WAAfpB,GACKiF,EAAWK,QAAQ5f,OAAS,EAAI+jB,EAAYrI,EAAaA,GAEzD6D,EAAWK,QAAQ5f,OAAS0b,EAAa,EAGtC,SAAfpB,GAAsC,IAAb/W,EACdmY,EAAa,EACF,WAAfpB,EACIiF,EAAWK,QAAQ5f,OAAS,EAAI+jB,EAAYrI,EAE5C6D,EAAWK,QAAQ5f,OAAS0jB,EAAYhI,EAGrD5B,IACF6J,IAAe,KAGjBzuB,EAAI0sB,EACJ+B,GAAc,EAAID,GAAahI,EAAa,GAG1CyH,EAAY5I,kBAAmB,CACjC,MAAM4J,EAAe54B,OAAOhE,EAAmE,EAA1EgE,CAA6E43B,EAAY1I,iBACxGza,EAASuf,EAAWwB,QAAQr3B,GAC5BuW,EAAQsf,EAAWuB,OAAOp3B,GAChC,IAAIiQ,EAAMzE,EAAIyuB,EAAaQ,EAAaxqB,IACpCG,EAAO7E,EAAIkvB,EAAarqB,KAC5B,OAAQ8pB,GACR,IAAK,SACHjqB,GAAOqG,EAAS,EAChB,MACF,IAAK,SACHrG,GAAOqG,EAGT,OAAQyjB,GACR,IAAK,SACH3pB,GAAQmG,EAAQ,EAChB,MACF,IAAK,QACHnG,GAAQmG,EAGVikB,EAAW,CACTpqB,KAAAA,EACAH,IAAAA,EACAsG,MAAOA,EAAQkkB,EAAalkB,MAC5BD,OAAQA,EAASmkB,EAAankB,OAC9ByZ,MAAO0J,EAAY3I,eAGvBjxB,EAAMlF,KAAK,CACTkf,SAAAA,EACAlK,MAAAA,EACAoiB,KAAAA,EACAhC,MAAAA,EACAuK,YAAAA,EACAC,YAAAA,EACAN,WAAAA,EACAF,UAAAA,EACAG,aAAAA,EACAQ,YAAa,CAACnvB,EAAGC,GACjBgvB,SAAAA,IAGJ,OAAO36B,EAET/B,0BACE,MACM+kB,SAACA,EAAQ5O,MAAEA,GADNlW,KACkB2H,QAE7B,IADkB7D,OAAOhE,EAAoE,GAA3EgE,CAFP9D,KAEwFy0B,eAEjG,MAAoB,QAAb3P,EAAqB,OAAS,QAEvC,IAAI8N,EAAQ,SAMZ,MALoB,UAAhB1c,EAAM0c,MACRA,EAAQ,OACiB,QAAhB1c,EAAM0c,QACfA,EAAQ,SAEHA,EAET7yB,wBAAwB26B,GACtB,MAAMp5B,EAAKtB,MACL8kB,SAACA,EAAU5O,OAAO2c,WAACA,EAAUR,OAAEA,EAAMpJ,QAAEA,IAAY3nB,EAAGqG,QAEtDm0B,EAAiBpB,EAAKzR,EACtBgP,EAFa32B,EAAGy2B,iBAEIE,OAAOzf,MACjC,IAAIwjB,EACAxuB,EAoCJ,MAnCiB,SAAbsX,EACEuN,GACF2J,EAAY,OACZxuB,EAAIlM,EAAG6Q,MAAQ8W,IAEfzb,EAAIlM,EAAG6Q,MAAQ2pB,EACI,SAAfjJ,EACFmJ,EAAY,QACY,WAAfnJ,GACTmJ,EAAY,SACZxuB,GAAMyqB,EAAS,IAEf+D,EAAY,OACZxuB,EAAIlM,EAAG+Q,OAGW,UAAbyS,EACLuN,GACF2J,EAAY,QACZxuB,EAAIlM,EAAG+Q,KAAO4W,IAEdzb,EAAIlM,EAAG+Q,KAAOypB,EACK,SAAfjJ,EACFmJ,EAAY,OACY,WAAfnJ,GACTmJ,EAAY,SACZxuB,GAAKyqB,EAAS,IAEd+D,EAAY,QACZxuB,EAAIlM,EAAG6Q,QAIX6pB,EAAY,QAEP,CAACA,UAAAA,EAAWxuB,EAAAA,GAErBzN,oBACE,MAAMuB,EAAKtB,KACX,GAAIsB,EAAGqG,QAAQuO,MAAMmc,OACnB,OAEF,MAAM9xB,EAAQe,EAAGf,MACXukB,EAAWxjB,EAAGqG,QAAQmd,SAC5B,MAAiB,SAAbA,GAAoC,UAAbA,EAClB,CAAC5S,IAAK,EAAGG,KAAM/Q,EAAG+Q,KAAMD,OAAQ7R,EAAMgY,OAAQpG,MAAO7Q,EAAG6Q,OAC9C,QAAb2S,GAAmC,WAAbA,EACnB,CAAC5S,IAAK5Q,EAAG4Q,IAAKG,KAAM,EAAGD,OAAQ9Q,EAAG8Q,OAAQD,MAAO5R,EAAMiY,YAD9D,EAIJzY,iBACE,MAAMsM,IAACA,EAAK1E,SAASiY,gBAACA,GAAgBvN,KAAEA,EAAIH,IAAEA,EAAGsG,MAAEA,EAAKD,OAAEA,GAAUvY,KAChE4f,IACFvT,EAAIuwB,OACJvwB,EAAIsT,UAAYC,EAChBvT,EAAIwwB,SAASxqB,EAAMH,EAAKsG,EAAOD,GAC/BlM,EAAIywB,WAGR/8B,qBAAqB0I,GACnB,MAAMnH,EAAKtB,KACLgb,EAAO1Z,EAAGqG,QAAQqT,KACxB,IAAK1Z,EAAGu2B,eAAiB7c,EAAKkI,QAC5B,OAAO,EAET,MACM1Z,EADQlI,EAAG4U,MACG6mB,WAAUhrB,GAAKA,EAAEtJ,QAAUA,IAC/C,GAAIe,GAAS,EAAG,CAEd,OADawR,EAAKsa,WAAWh0B,EAAGqO,WAAWnG,IAC/BuW,UAEd,OAAO,EAEThgB,SAAS4S,GACP,MAAMrR,EAAKtB,KACLgb,EAAO1Z,EAAGqG,QAAQqT,KAClB3O,EAAM/K,EAAG+K,IACTvK,EAAQR,EAAGqzB,iBAAmBrzB,EAAGqzB,eAAiBrzB,EAAG07B,sBAAsBrqB,IACjF,IAAI1Q,EAAGsH,EACP,MAAM0zB,EAAW,CAACC,EAAIC,EAAI1d,KACnBA,EAAMjH,OAAUiH,EAAMuS,QAG3B3lB,EAAIuwB,OACJvwB,EAAI0T,UAAYN,EAAMjH,MACtBnM,EAAIwT,YAAcJ,EAAMuS,MACxB3lB,EAAI+wB,YAAY3d,EAAMwS,YAAc,IACpC5lB,EAAIgxB,eAAiB5d,EAAMyS,iBAC3B7lB,EAAIixB,YACJjxB,EAAIkxB,OAAOL,EAAG1vB,EAAG0vB,EAAGzvB,GACpBpB,EAAImxB,OAAOL,EAAG3vB,EAAG2vB,EAAG1vB,GACpBpB,EAAIoxB,SACJpxB,EAAIywB,YAEN,GAAI9hB,EAAKkI,QACP,IAAKjhB,EAAI,EAAGsH,EAAOzH,EAAMC,OAAQE,EAAIsH,IAAQtH,EAAG,CAC9C,MAAMD,EAAOF,EAAMG,GACf+Y,EAAK4W,iBACPqL,EACE,CAACzvB,EAAGxL,EAAKq5B,GAAI5tB,EAAGzL,EAAKs5B,IACrB,CAAC9tB,EAAGxL,EAAKu5B,GAAI9tB,EAAGzL,EAAKw5B,IACrBx5B,GAGAgZ,EAAK6W,WACPoL,EACE,CAACzvB,EAAGxL,EAAKi5B,IAAKxtB,EAAGzL,EAAKk5B,KACtB,CAAC1tB,EAAGxL,EAAKm5B,IAAK1tB,EAAGzL,EAAKo5B,KACtB,CACEpJ,MAAOhwB,EAAK+vB,UACZvZ,MAAOxW,EAAK8vB,UACZG,WAAYjwB,EAAK45B,eACjB1J,iBAAkBlwB,EAAK65B,wBAOnC97B,aACE,MAAMuB,EAAKtB,MACLO,MAACA,EAAK8L,IAAEA,EAAK1E,SAASqT,KAACA,IAAS1Z,EAChCq5B,EAAa3f,EAAKsa,WAAWh0B,EAAGqO,cAChCirB,EAAY5f,EAAK2W,WAAagJ,EAAW1b,YAAc,EAC7D,IAAK2b,EACH,OAEF,MAAM8C,EAAgB1iB,EAAKsa,WAAWh0B,EAAGqO,WAAW,IAAIoQ,UAClDgb,EAAcz5B,EAAG8zB,aACvB,IAAIiG,EAAIE,EAAID,EAAIE,EACZl6B,EAAGoW,gBACL2jB,EAAKv3B,OAAOhE,EAAmE,EAA1EgE,CAA6EvD,EAAOe,EAAG+Q,KAAMuoB,GAAaA,EAAY,EAC3HW,EAAKz3B,OAAOhE,EAAmE,EAA1EgE,CAA6EvD,EAAOe,EAAG6Q,MAAOurB,GAAiBA,EAAgB,EACpIpC,EAAKE,EAAKT,IAEVO,EAAKx3B,OAAOhE,EAAmE,EAA1EgE,CAA6EvD,EAAOe,EAAG4Q,IAAK0oB,GAAaA,EAAY,EAC1HY,EAAK13B,OAAOhE,EAAmE,EAA1EgE,CAA6EvD,EAAOe,EAAG8Q,OAAQsrB,GAAiBA,EAAgB,EACrIrC,EAAKE,EAAKR,GAEZ1uB,EAAIuwB,OACJvwB,EAAI0T,UAAY4a,EAAW1b,YAC3B5S,EAAIwT,YAAc8a,EAAW7a,YAC7BzT,EAAIixB,YACJjxB,EAAIkxB,OAAOlC,EAAIC,GACfjvB,EAAImxB,OAAOjC,EAAIC,GACfnvB,EAAIoxB,SACJpxB,EAAIywB,UAEN/8B,WAAW4S,GACT,MAAMrR,EAAKtB,KAEX,IADoBsB,EAAGqG,QAAQuO,MACdgN,QACf,OAEF,MAAM7W,EAAM/K,EAAG+K,IACTqG,EAAOpR,EAAGq8B,oBACZjrB,GACF5O,OAAOhE,EAAoE,GAA3EgE,CAA8EuI,EAAKqG,GAErF,MAAM5Q,EAAQR,EAAGszB,cAAgBtzB,EAAGszB,YAActzB,EAAGs8B,mBAAmBjrB,IACxE,IAAI1Q,EAAGsH,EACP,IAAKtH,EAAI,EAAGsH,EAAOzH,EAAMC,OAAQE,EAAIsH,IAAQtH,EAAG,CAC9C,MAAMD,EAAOF,EAAMG,GACbs3B,EAAWv3B,EAAKgyB,KAChBpiB,EAAQ5P,EAAK4P,MACf5P,EAAKy6B,WACPpwB,EAAIsT,UAAY3d,EAAKy6B,SAASzK,MAC9B3lB,EAAIwwB,SAAS76B,EAAKy6B,SAASpqB,KAAMrQ,EAAKy6B,SAASvqB,IAAKlQ,EAAKy6B,SAASjkB,MAAOxW,EAAKy6B,SAASlkB,SAEzF,IAAI9K,EAAIzL,EAAKk6B,WACbp4B,OAAOhE,EAAmE,EAA1EgE,CAA6EuI,EAAKuF,EAAO,EAAGnE,EAAG8rB,EAAUv3B,GAEvG0Q,GACF5O,OAAOhE,EAAoE,GAA3EgE,CAA8EuI,GAGlFtM,YACE,MAAMsM,IAACA,EAAK1E,SAASmd,SAACA,EAAQrJ,MAAEA,EAAKxS,QAAEA,IAAYjJ,KACnD,IAAKyb,EAAMyH,QACT,OAEF,MAAM8Q,EAAOlwB,OAAOhE,EAAmE,EAA1EgE,CAA6E2X,EAAMuY,MAC1F/K,EAAUnlB,OAAOhE,EAAmE,EAA1EgE,CAA6E2X,EAAMwN,SAC7F2J,EAAQnX,EAAMmX,MACpB,IAAI7X,EAASiZ,EAAKC,WAAa,EACd,WAAbnP,GACF/J,GAAUkO,EAAQ7W,OACdtO,OAAOhE,EAAoE,GAA3EgE,CAA8E2X,EAAMiE,QACtF3E,GAAUiZ,EAAKC,YAAcxY,EAAMiE,KAAK3d,OAAS,KAGnDgZ,GAAUkO,EAAQ/W,IAEpB,MAAM2rB,OAACA,EAAMC,OAAEA,EAAMhgB,SAAEA,EAAQhC,SAAEA,GAx/BrC,SAAmBhT,EAAOiS,EAAQ+J,EAAU8N,GAC1C,MAAM1gB,IAACA,EAAGG,KAAEA,EAAID,OAAEA,EAAMD,MAAEA,GAASrJ,EACnC,IACIgV,EAAU+f,EAAQC,EADlBhiB,EAAW,EAWf,OATIhT,EAAM4O,gBACRmmB,EAAS/5B,OAAOhE,EAAmE,EAA1EgE,CAA6E8uB,EAAOvgB,EAAMF,GACnG2rB,EAAS3K,GAAerqB,EAAOgc,EAAU/J,GACzC+C,EAAW3L,EAAQE,IAEnBwrB,EAAS1K,GAAerqB,EAAOgc,EAAU/J,GACzC+iB,EAASh6B,OAAOhE,EAAmE,EAA1EgE,CAA6E8uB,EAAOxgB,EAAQF,GACrG4J,EAAwB,SAAbgJ,GAAuBhlB,EAAmE,EAAIA,EAAmE,GAEvK,CAAC+9B,OAAAA,EAAQC,OAAAA,EAAQhgB,SAAAA,EAAUhC,SAAAA,GA2+BaiiB,CAAU/9B,KAAM+a,EAAQ+J,EAAU8N,GAC/E9uB,OAAOhE,EAAmE,EAA1EgE,CAA6EuI,EAAKoP,EAAMiE,KAAM,EAAG,EAAGsU,EAAM,CACxGhC,MAAOvW,EAAMuW,MACblU,SAAAA,EACAhC,SAAAA,EACAkgB,UAAW9H,GAAWtB,EAAO9N,EAAU7b,GACvCkzB,aAAc,SACdQ,YAAa,CAACkB,EAAQC,KAG1B/9B,KAAK4S,GACH,MAAMrR,EAAKtB,KACNsB,EAAGu2B,eAGRv2B,EAAG08B,iBACH18B,EAAG28B,SAAStrB,GACZrR,EAAGqwB,aACHrwB,EAAG48B,YACH58B,EAAG68B,WAAWxrB,IAEhB5S,UACE,MAAMuB,EAAKtB,KACLgJ,EAAO1H,EAAGqG,QACVy2B,EAAKp1B,EAAKkN,OAASlN,EAAKkN,MAAMiT,GAAK,EACnCkV,EAAKr1B,EAAKgS,MAAQhS,EAAKgS,KAAKmO,GAAK,EACvC,OAAK7nB,EAAGu2B,cAAgBv2B,EAAGY,OAASpD,GAAMkY,UAAU9U,KAQ7C,CAAC,CACNinB,EAAGkV,EACHt+B,KAAK4S,GACHrR,EAAG08B,iBACH18B,EAAG28B,SAAStrB,GACZrR,EAAG48B,cAEJ,CACD/U,EAAGkV,EAAK,EACRt+B,OACEuB,EAAGqwB,eAEJ,CACDxI,EAAGiV,EACHr+B,KAAK4S,GACHrR,EAAG68B,WAAWxrB,MAtBT,CAAC,CACNwW,EAAGiV,EACHr+B,KAAK4S,GACHrR,EAAGY,KAAKyQ,MAuBhB5S,wBAAwBW,GACtB,MAAMY,EAAKtB,KACLuV,EAAQjU,EAAGf,MAAMykB,+BACjBsZ,EAASh9B,EAAG6J,KAAO,SACnBqlB,EAAS,GACf,IAAIvuB,EAAGsH,EACP,IAAKtH,EAAI,EAAGsH,EAAOgM,EAAMxT,OAAQE,EAAIsH,IAAQtH,EAAG,CAC9C,MAAMgI,EAAOsL,EAAMtT,GACfgI,EAAKq0B,KAAYh9B,EAAGiK,IAAQ7K,GAAQuJ,EAAKvJ,OAASA,GACpD8vB,EAAO5zB,KAAKqN,GAGhB,OAAOumB,EAETzwB,wBAAwByJ,GACtB,MAAMR,EAAOhJ,KAAK2H,QAAQuO,MAAMof,WAAWt1B,KAAK2P,WAAWnG,IAC3D,OAAO1F,OAAOhE,EAAmE,EAA1EgE,CAA6EkF,EAAKgrB,MAE3Fj0B,aACE,MAAMuB,EAAKtB,KACLu+B,EAAWj9B,EAAGs4B,wBAAwB,GAAG3F,WAC/C,OAAO3yB,EAAGoW,eAAiBpW,EAAGkX,MAAQ+lB,EAAW,GAAMj9B,EAAGiX,OAASgmB,GAIvE,MAAMC,GACJz+B,YAAYW,EAAM+9B,EAAOva,GACvBlkB,KAAKU,KAAOA,EACZV,KAAKy+B,MAAQA,EACbz+B,KAAKkkB,SAAWA,EAChBlkB,KAAK8B,MAAQgC,OAAOmP,OAAO,MAE7BlT,UAAUW,GACR,OAAOoD,OAAOkT,UAAU0nB,cAAcn9B,KAAKvB,KAAKU,KAAKsW,UAAWtW,EAAKsW,WAEvEjX,SAASiC,GACP,MAAMV,EAAKtB,KACL2+B,EAAQ76B,OAAO86B,eAAe58B,GACpC,IAAI68B,GA+DR,SAA2BF,GACzB,MAAO,OAAQA,GAAS,aAAcA,GA/DhCG,CAAkBH,KACpBE,EAAcv9B,EAAGy9B,SAASJ,IAE5B,MAAM78B,EAAQR,EAAGQ,MACXyJ,EAAKvJ,EAAKuJ,GACVkzB,EAAQn9B,EAAGm9B,MAAQ,IAAMlzB,EAC/B,IAAKA,EACH,MAAM,IAAIoY,MAAM,2BAA6B3hB,GAE/C,OAAIuJ,KAAMzJ,IAGVA,EAAMyJ,GAAMvJ,EAyBhB,SAA0BA,EAAMy8B,EAAOI,GACrC,MAAMG,EAAel7B,OAAOhE,EAAmE,EAA1EgE,CAA6EA,OAAOmP,OAAO,MAAO,CACrH4rB,EAAc/+B,EAAoE,GAAE2C,IAAIo8B,GAAe,GACvG/+B,EAAoE,GAAE2C,IAAIg8B,GAC1Ez8B,EAAK+U,WAEPjX,EAAoE,GAAE8C,IAAI67B,EAAOO,GAC7Eh9B,EAAK+sB,eAOX,SAAuB0P,EAAOQ,GAC5Bn7B,OAAOiC,KAAKk5B,GAAQl+B,SAAQm+B,IAC1B,MAAMC,EAAgBD,EAASE,MAAM,KAC/BC,EAAaF,EAAc78B,MAC3Bg9B,EAAc,CAACb,GAAOjpB,OAAO2pB,GAAeI,KAAK,KACjDC,EAAQP,EAAOC,GAAUE,MAAM,KAC/BK,EAAaD,EAAMl9B,MACnBo9B,EAAcF,EAAMD,KAAK,KAC/Bz/B,EAAoE,GAAEmzB,MAAMqM,EAAaD,EAAYK,EAAaD,MAdlHE,CAAclB,EAAOz8B,EAAK+sB,eAExB/sB,EAAK49B,aACP9/B,EAAoE,GAAEmG,SAASw4B,EAAOz8B,EAAK49B,aAnC3FC,CAAiB79B,EAAMy8B,EAAOI,GAC1Bv9B,EAAG4iB,UACLpkB,EAAoE,GAAEokB,SAASliB,EAAKuJ,GAAIvJ,EAAK4Y,YALtF6jB,EASX1+B,IAAIwL,GACF,OAAOvL,KAAK8B,MAAMyJ,GAEpBxL,WAAWiC,GACT,MAAMF,EAAQ9B,KAAK8B,MACbyJ,EAAKvJ,EAAKuJ,GACVkzB,EAAQz+B,KAAKy+B,MACflzB,KAAMzJ,UACDA,EAAMyJ,GAEXkzB,GAASlzB,KAAMzL,EAAoE,GAAE2+B,YAChF3+B,EAAoE,GAAE2+B,GAAOlzB,GAChFvL,KAAKkkB,iBACApkB,EAAmE,EAAEyL,KAyHpF,IAAI3L,GAAW,IAvFf,MACEG,cACEC,KAAKT,YAAc,IAAIi/B,GAAc3gC,EAAmB,YAAY,GACpEmC,KAAKR,SAAW,IAAIg/B,GAAcvgC,GAAS,YAC3C+B,KAAKN,QAAU,IAAI8+B,GAAc16B,OAAQ,WACzC9D,KAAKH,OAAS,IAAI2+B,GAAc1/B,GAAO,UACvCkB,KAAK8/B,iBAAmB,CAAC9/B,KAAKT,YAAaS,KAAKH,OAAQG,KAAKR,UAE/DO,OAAO6tB,GACL5tB,KAAK+/B,MAAM,WAAYnS,GAEzB7tB,UAAU6tB,GACR5tB,KAAK+/B,MAAM,aAAcnS,GAE3B7tB,kBAAkB6tB,GAChB5tB,KAAK+/B,MAAM,WAAYnS,EAAM5tB,KAAKT,aAEpCQ,eAAe6tB,GACb5tB,KAAK+/B,MAAM,WAAYnS,EAAM5tB,KAAKR,UAEpCO,cAAc6tB,GACZ5tB,KAAK+/B,MAAM,WAAYnS,EAAM5tB,KAAKN,SAEpCK,aAAa6tB,GACX5tB,KAAK+/B,MAAM,WAAYnS,EAAM5tB,KAAKH,QAEpCE,cAAcwL,GACZ,OAAOvL,KAAKggC,KAAKz0B,EAAIvL,KAAKT,YAAa,cAEzCQ,WAAWwL,GACT,OAAOvL,KAAKggC,KAAKz0B,EAAIvL,KAAKR,SAAU,WAEtCO,UAAUwL,GACR,OAAOvL,KAAKggC,KAAKz0B,EAAIvL,KAAKN,QAAS,UAErCK,SAASwL,GACP,OAAOvL,KAAKggC,KAAKz0B,EAAIvL,KAAKH,OAAQ,SAEpCE,qBAAqB6tB,GACnB5tB,KAAK+/B,MAAM,aAAcnS,EAAM5tB,KAAKT,aAEtCQ,kBAAkB6tB,GAChB5tB,KAAK+/B,MAAM,aAAcnS,EAAM5tB,KAAKR,UAEtCO,iBAAiB6tB,GACf5tB,KAAK+/B,MAAM,aAAcnS,EAAM5tB,KAAKN,SAEtCK,gBAAgB6tB,GACd5tB,KAAK+/B,MAAM,aAAcnS,EAAM5tB,KAAKH,QAEtCE,MAAM8F,EAAQ+nB,EAAMqS,GAClB,MAAM3+B,EAAKtB,KACX,IAAI4tB,GAAM7sB,SAAQm/B,IAChB,MAAMC,EAAMF,GAAiB3+B,EAAG8+B,oBAAoBF,GAChDD,GAAiBE,EAAIE,UAAUH,IAASC,IAAQ7+B,EAAG5B,SAAWwgC,EAAI30B,GACpEjK,EAAGg/B,MAAMz6B,EAAQs6B,EAAKD,GAEtBp8B,OAAOhE,EAAmE,EAA1EgE,CAA6Eo8B,GAAKl+B,IAChF,MAAMu+B,EAAUN,GAAiB3+B,EAAG8+B,oBAAoBp+B,GACxDV,EAAGg/B,MAAMz6B,EAAQ06B,EAASv+B,SAKlCjC,MAAM8F,EAAQjG,EAAU4gC,GACtB,MAAMC,EAAc38B,OAAOhE,EAAoE,EAA3EgE,CAA8E+B,GAClG/B,OAAOhE,EAAmE,EAA1EgE,CAA6E08B,EAAU,SAAWC,GAAc,GAAID,GACpH5gC,EAASiG,GAAQ26B,GACjB18B,OAAOhE,EAAmE,EAA1EgE,CAA6E08B,EAAU,QAAUC,GAAc,GAAID,GAErHzgC,oBAAoBW,GAClB,IAAK,IAAIuB,EAAI,EAAGA,EAAIjC,KAAK8/B,iBAAiB/9B,OAAQE,IAAK,CACrD,MAAMk+B,EAAMngC,KAAK8/B,iBAAiB79B,GAClC,GAAIk+B,EAAIE,UAAU3/B,GAChB,OAAOy/B,EAGX,OAAOngC,KAAKN,QAEdK,KAAKwL,EAAI00B,EAAev/B,GACtB,MAAMsB,EAAOi+B,EAAcx9B,IAAI8I,GAC/B,QAAajL,IAAT0B,EACF,MAAM,IAAI2hB,MAAM,IAAMpY,EAAK,yBAA2B7K,EAAO,KAE/D,OAAOsB,IAKX,MAAM0+B,GACJ3gC,cACEC,KAAK2gC,MAAQ,GAEf5gC,OAAOQ,EAAOqgC,EAAMhT,EAAMhiB,GACxB,MAAMtK,EAAKtB,KACE,eAAT4gC,IACFt/B,EAAGq/B,MAAQr/B,EAAGu/B,mBAAmBtgC,GAAO,GACxCe,EAAGiB,QAAQjB,EAAGq/B,MAAOpgC,EAAO,YAE9B,MAAMq/B,EAAch0B,EAAStK,EAAGw/B,aAAavgC,GAAOqL,OAAOA,GAAUtK,EAAGw/B,aAAavgC,GAC/EiwB,EAASlvB,EAAGiB,QAAQq9B,EAAar/B,EAAOqgC,EAAMhT,GAKpD,MAJa,YAATgT,IACFt/B,EAAGiB,QAAQq9B,EAAar/B,EAAO,QAC/Be,EAAGiB,QAAQjB,EAAGq/B,MAAOpgC,EAAO,cAEvBiwB,EAETzwB,QAAQ6/B,EAAar/B,EAAOqgC,EAAMhT,GAChCA,EAAOA,GAAQ,GACf,IAAK,MAAMmT,KAAcnB,EAAa,CACpC,MAAMoB,EAASD,EAAWC,OACpBn7B,EAASm7B,EAAOJ,GAChBnZ,EAAS,CAAClnB,EAAOqtB,EAAMmT,EAAWp5B,SACxC,IAA6G,IAAzG7D,OAAOhE,EAAmE,EAA1EgE,CAA6E+B,EAAQ4hB,EAAQuZ,IAAqBpT,EAAKqT,WACzH,OAAO,EAGX,OAAO,EAETlhC,aACO+D,OAAOhE,EAAoE,GAA3EgE,CAA8E9D,KAAKqV,UACtFrV,KAAKkhC,UAAYlhC,KAAKqV,OACtBrV,KAAKqV,YAAS/U,GAGlBP,aAAaQ,GACX,GAAIP,KAAKqV,OACP,OAAOrV,KAAKqV,OAEd,MAAMuqB,EAAc5/B,KAAKqV,OAASrV,KAAK6gC,mBAAmBtgC,GAE1D,OADAP,KAAKmhC,oBAAoB5gC,GAClBq/B,EAET7/B,mBAAmBQ,EAAO4H,GACxB,MAAMnB,EAASzG,GAASA,EAAMyG,OACxBW,EAAU7D,OAAOhE,EAAoE,GAA3EgE,CAA8EkD,EAAOW,SAAWX,EAAOW,QAAQjI,QAAS,IAClIA,EAWV,SAAoBsH,GAClB,MAAMtH,EAAU,GACVqG,EAAOjC,OAAOiC,KAAKnG,GAASF,QAAQoC,OAC1C,IAAK,IAAIG,EAAI,EAAGA,EAAI8D,EAAKhE,OAAQE,IAC/BvC,EAAQ9C,KAAKgD,GAASwhC,UAAUr7B,EAAK9D,KAEvC,MAAMo/B,EAAQr6B,EAAOtH,SAAW,GAChC,IAAK,IAAIuC,EAAI,EAAGA,EAAIo/B,EAAMt/B,OAAQE,IAAK,CACrC,MAAM++B,EAASK,EAAMp/B,IACY,IAA7BvC,EAAQmZ,QAAQmoB,IAClBthC,EAAQ9C,KAAKokC,GAGjB,OAAOthC,EAxBW4hC,CAAWt6B,GAC3B,OAAmB,IAAZW,GAAsBQ,EAkCjC,SAA2B5H,EAAOb,EAASiI,EAASQ,GAClD,MAAMqoB,EAAS,GACTzd,EAAUxS,EAAMoP,aACtB,IAAK,IAAI1N,EAAI,EAAGA,EAAIvC,EAAQqC,OAAQE,IAAK,CACvC,MAAM++B,EAASthC,EAAQuC,GAEjB+G,EAAOu4B,GAAQ55B,EADVq5B,EAAOz1B,IACgBpD,GACrB,OAATa,GAGJwnB,EAAO5zB,KAAK,CACVokC,OAAAA,EACAr5B,QAAS65B,GAAWjhC,EAAMyG,OAAQg6B,EAAQh4B,EAAM+J,KAGpD,OAAOyd,EAjDmCiR,CAAkBlhC,EAAOb,EAASiI,EAASQ,GAAhD,GAErCpI,oBAAoBQ,GAClB,MAAMmhC,EAAsB1hC,KAAKkhC,WAAa,GACxCtB,EAAc5/B,KAAKqV,OACnB4b,EAAO,CAACtb,EAAG3D,IAAM2D,EAAE/J,QAAO4B,IAAMwE,EAAE2vB,MAAKl0B,GAAKD,EAAEwzB,OAAOz1B,KAAOkC,EAAEuzB,OAAOz1B,OAC3EvL,KAAKuC,QAAQ0uB,EAAKyQ,EAAqB9B,GAAcr/B,EAAO,QAC5DP,KAAKuC,QAAQ0uB,EAAK2O,EAAa8B,GAAsBnhC,EAAO,UAkBhE,SAASghC,GAAQ55B,EAASQ,GACxB,OAAKA,IAAmB,IAAZR,GAGI,IAAZA,EACK,GAEFA,EALE,KAwBX,SAAS65B,GAAWx6B,EAAQg6B,EAAQh4B,EAAM+J,GACxC,MAAMhN,EAAOiB,EAAO46B,gBAAgBZ,GAC9BxxB,EAASxI,EAAOyI,gBAAgBzG,EAAMjD,GAC5C,OAAOiB,EAAO0I,eAAeF,EAAQuD,EAAS,CAAC,IAAK,CAAC8uB,YAAY,EAAOC,WAAW,EAAOC,SAAS,IAGrG,SAASC,GAAathC,EAAMiH,GAC1B,MAAMs6B,EAAkBniC,EAAoE,GAAE4O,SAAShO,IAAS,GAEhH,QADwBiH,EAAQ+G,UAAY,IAAIhO,IAAS,IACnCsN,WAAarG,EAAQqG,WAAai0B,EAAgBj0B,WAAa,IAsBvF,SAASk0B,GAAc32B,EAAI42B,GACzB,MAAW,MAAP52B,GAAqB,MAAPA,EACTA,EAEF42B,EAAah3B,OAXH,SADO2Z,EAYqBqd,EAAard,WAXnB,WAAbA,EACjB,IAEQ,SAAbA,GAAoC,UAAbA,EAClB,SADT,IAQuEvZ,EAAGhD,OAAO,GAAG65B,cAZtF,IAA0Btd,EA8C1B,SAASud,GAAYr7B,GACnB,MAAMW,EAAUX,EAAOW,UAAYX,EAAOW,QAAU,IACpDA,EAAQjI,QAAUoE,OAAOhE,EAAoE,GAA3EgE,CAA8E6D,EAAQjI,QAAS,IACjHiI,EAAQ9H,OAnCV,SAA0BmH,EAAQW,GAChC,MAAM26B,EAAgBxiC,EAAmE,EAAEkH,EAAOtG,OAAS,CAACb,OAAQ,IAC9G0iC,EAAe56B,EAAQ9H,QAAU,GACjC2iC,EAAiBR,GAAah7B,EAAOtG,KAAMiH,GAC3C86B,EAAW3+B,OAAOmP,OAAO,MACzBpT,EAASiE,OAAOmP,OAAO,MAyB7B,OAxBAnP,OAAOiC,KAAKw8B,GAAcxhC,SAAQwK,IAChC,MAAMm3B,EAAYH,EAAah3B,GACzBJ,EAAO+2B,GAAc32B,EAAIm3B,GACzBC,EA1BV,SAAmCx3B,EAAM6C,GACvC,OAAO7C,IAAS6C,EAAY,UAAY,UAyBpB40B,CAA0Bz3B,EAAMq3B,GAC5CK,EAAsBP,EAAcziC,QAAU,GACpD4iC,EAASt3B,GAAQs3B,EAASt3B,IAASI,EACnC1L,EAAO0L,GAAMzH,OAAOhE,EAAoE,EAA3EgE,CAA8EA,OAAOmP,OAAO,MAAO,CAAC,CAAC9H,KAAAA,GAAOu3B,EAAWG,EAAoB13B,GAAO03B,EAAoBF,QAErL37B,EAAOyH,KAAKC,SAAS3N,SAAQsM,IAC3B,MAAM3M,EAAO2M,EAAQ3M,MAAQsG,EAAOtG,KAC9BsN,EAAYX,EAAQW,WAAag0B,GAAathC,EAAMiH,GAEpDk7B,GADkB/iC,EAAmE,EAAEY,IAAS,IAC1Db,QAAU,GACtDiE,OAAOiC,KAAK88B,GAAqB9hC,SAAQ+hC,IACvC,MAAM33B,EA9CZ,SAAmCI,EAAIyC,GACrC,IAAI7C,EAAOI,EAMX,MALW,YAAPA,EACFJ,EAAO6C,EACS,YAAPzC,IACTJ,EAAqB,MAAd6C,EAAoB,IAAM,KAE5B7C,EAuCU43B,CAA0BD,EAAW90B,GAC5CzC,EAAK8B,EAAQlC,EAAO,WAAas3B,EAASt3B,IAASA,EACzDtL,EAAO0L,GAAM1L,EAAO0L,IAAOzH,OAAOmP,OAAO,MACzCnP,OAAOhE,EAAoE,EAA3EgE,CAA8EjE,EAAO0L,GAAK,CAAC,CAACJ,KAAAA,GAAOo3B,EAAah3B,GAAKs3B,EAAoBC,WAG7Ih/B,OAAOiC,KAAKlG,GAAQkB,SAAQuG,IAC1B,MAAMwB,EAAQjJ,EAAOyH,GACrBxD,OAAOhE,EAAoE,EAA3EgE,CAA8EgF,EAAO,CAAChJ,EAAoE,GAAED,OAAOiJ,EAAMpI,MAAOZ,EAAoE,GAAEgJ,WAEjPjJ,EAKUmjC,CAAiBh8B,EAAQW,GAE5C,SAASs7B,GAASx0B,GAIhB,OAHAA,EAAOA,GAAQ,IACVC,SAAWD,EAAKC,UAAY,GACjCD,EAAK4B,OAAS5B,EAAK4B,QAAU,GACtB5B,EAQT,MAAMy0B,GAAW,IAAI/iC,IACfgjC,GAAa,IAAIC,IACvB,SAASC,GAAW3vB,EAAU4vB,GAC5B,IAAIv9B,EAAOm9B,GAASzgC,IAAIiR,GAMxB,OALK3N,IACHA,EAAOu9B,IACPJ,GAAStgC,IAAI8Q,EAAU3N,GACvBo9B,GAAWv6B,IAAI7C,IAEVA,EAET,MAAMw9B,GAAa,CAAC3gC,EAAKuU,EAAK7P,KAC5B,MAAM0B,EAAOlF,OAAOhE,EAAoE,GAA3EgE,CAA8EqT,EAAK7P,QACnFhH,IAAT0I,GACFpG,EAAIgG,IAAII,IAGZ,MAAMw6B,GACJzjC,YAAYiH,GACVhH,KAAKyjC,QAzBT,SAAoBz8B,GAIlB,OAHAA,EAASA,GAAU,IACZyH,KAAOw0B,GAASj8B,EAAOyH,MAC9B4zB,GAAYr7B,GACLA,EAqBU08B,CAAW18B,GAC1BhH,KAAK2jC,YAAc,IAAIxjC,IACvBH,KAAK4jC,eAAiB,IAAIzjC,IAE5BO,WACE,OAAOV,KAAKyjC,QAAQ/iC,KAEtBA,SAASA,GACPV,KAAKyjC,QAAQ/iC,KAAOA,EAEtB+N,WACE,OAAOzO,KAAKyjC,QAAQh1B,KAEtBA,SAASA,GACPzO,KAAKyjC,QAAQh1B,KAAOw0B,GAASx0B,GAE/B9G,cACE,OAAO3H,KAAKyjC,QAAQ97B,QAEtBA,YAAYA,GACV3H,KAAKyjC,QAAQ97B,QAAUA,EAEzBjI,cACE,OAAOM,KAAKyjC,QAAQ/jC,QAEtBK,SACE,MAAMiH,EAAShH,KAAKyjC,QACpBzjC,KAAK6jC,aACLxB,GAAYr7B,GAEdjH,aACEC,KAAK2jC,YAAYG,QACjB9jC,KAAK4jC,eAAeE,QAEtB/jC,iBAAiBgkC,GACf,OAAOV,GAAWU,GAChB,IAAM,CAAC,CACL,YAAYA,IACZ,OAGNhkC,0BAA0BgkC,EAAa9vB,GACrC,OAAOovB,GAAW,GAAGU,gBAA0B9vB,KAC7C,IAAM,CACJ,CACE,YAAY8vB,iBAA2B9vB,IACvC,eAAeA,KAEjB,CACE,YAAY8vB,IACZ,OAIRhkC,wBAAwBgkC,EAAavwB,GACnC,OAAO6vB,GAAW,GAAGU,KAAevwB,KAClC,IAAM,CAAC,CACL,YAAYuwB,cAAwBvwB,IACpC,YAAYuwB,IACZ,YAAYvwB,IACZ,OAGNzT,gBAAgBihC,GACd,MAAMz1B,EAAKy1B,EAAOz1B,GAElB,OAAO83B,GAAW,GADLrjC,KAAKU,eACkB6K,KAClC,IAAM,CAAC,CACL,WAAWA,OACRy1B,EAAOgD,wBAA0B,OAG1CjkC,cAAckkC,EAAWC,GACvB,MAAMP,EAAc3jC,KAAK2jC,YACzB,IAAIlwB,EAAQkwB,EAAYlhC,IAAIwhC,GAK5B,OAJKxwB,IAASywB,IACZzwB,EAAQ,IAAItT,IACZwjC,EAAY/gC,IAAIqhC,EAAWxwB,IAEtBA,EAET1T,gBAAgBkkC,EAAWE,EAAUD,GACnC,MAAMv8B,QAACA,EAAOjH,KAAEA,GAAQV,KAClByT,EAAQzT,KAAKokC,cAAcH,EAAWC,GACtCh4B,EAASuH,EAAMhR,IAAI0hC,GACzB,GAAIj4B,EACF,OAAOA,EAET,MAAMsD,EAAS,IAAI4zB,IACnBe,EAASpjC,SAAQgF,IACXk+B,IACFz0B,EAAO5G,IAAIq7B,GACXl+B,EAAKhF,SAAQuG,GAAOi8B,GAAW/zB,EAAQy0B,EAAW38B,MAEpDvB,EAAKhF,SAAQuG,GAAOi8B,GAAW/zB,EAAQ7H,EAASL,KAChDvB,EAAKhF,SAAQuG,GAAOi8B,GAAW/zB,EAAQ1P,EAAmE,EAAEY,IAAS,GAAI4G,KACzHvB,EAAKhF,SAAQuG,GAAOi8B,GAAW/zB,EAAQ1P,EAAoE,GAAGwH,KAC9GvB,EAAKhF,SAAQuG,GAAOi8B,GAAW/zB,EAAQ1P,EAAoE,EAAGwH,QAEhH,MAAMuf,EAAQ,IAAIrX,GAIlB,OAHI2zB,GAAW37B,IAAI28B,IACjB1wB,EAAM7Q,IAAIuhC,EAAUtd,GAEfA,EAET9mB,oBACE,MAAM4H,QAACA,EAAOjH,KAAEA,GAAQV,KACxB,MAAO,CACL2H,EACA7H,EAAmE,EAAEY,IAAS,GAC9EZ,EAAoE,GAAE4O,SAAShO,IAAS,GACxF,CAACA,KAAAA,GACDZ,EAAoE,GACpEA,EAAoE,GAGxEC,oBAAoByP,EAAQsE,EAAOf,EAASc,EAAW,CAAC,KACtD,MAAM2c,EAAS,CAAC5oB,SAAS,IACnBy8B,SAACA,EAAQC,YAAEA,GAAeC,GAAYvkC,KAAK4jC,eAAgBp0B,EAAQqE,GACzE,IAAIlM,EAAU08B,EACd,GAoCJ,SAAqB5W,EAAO3Z,GAC1B,MAAM0wB,aAACA,EAAYC,YAAEA,GAAe3gC,OAAOhE,EAAoE,EAA3EgE,CAA8E2pB,GAClH,IAAK,MAAMnpB,KAAQwP,EACjB,GAAK0wB,EAAalgC,IAASR,OAAOhE,EAAoE,EAA3EgE,CAA8E2pB,EAAMnpB,KACzGmgC,EAAYngC,IAASR,OAAOhE,EAAoE,GAA3EgE,CAA8E2pB,EAAMnpB,IAC7G,OAAO,EAGX,OAAO,EA5CDogC,CAAYL,EAAUvwB,GAAQ,CAChC0c,EAAO5oB,SAAU,EACjBmL,EAAUjP,OAAOhE,EAAoE,EAA3EgE,CAA8EiP,GAAWA,IAAYA,EAC/G,MAAM4xB,EAAc3kC,KAAK0P,eAAeF,EAAQuD,EAASuxB,GACzD38B,EAAU7D,OAAOhE,EAAoE,EAA3EgE,CAA8EugC,EAAUtxB,EAAS4xB,GAE7G,IAAK,MAAMrgC,KAAQwP,EACjB0c,EAAOlsB,GAAQqD,EAAQrD,GAEzB,OAAOksB,EAETzwB,eAAeyP,EAAQuD,EAASc,EAAW,CAAC,IAAK+wB,GAC/C,MAAMP,SAACA,GAAYE,GAAYvkC,KAAK4jC,eAAgBp0B,EAAQqE,GAC5D,OAAO/P,OAAOhE,EAAoE,GAA3EgE,CAA8EiP,GACjFjP,OAAOhE,EAAoE,EAA3EgE,CAA8EugC,EAAUtxB,OAASzS,EAAWskC,GAC5GP,GAGR,SAASE,GAAYM,EAAer1B,EAAQqE,GAC1C,IAAIJ,EAAQoxB,EAAcpiC,IAAI+M,GACzBiE,IACHA,EAAQ,IAAItT,IACZ0kC,EAAcjiC,IAAI4M,EAAQiE,IAE5B,MAAMC,EAAWG,EAAS0rB,OAC1B,IAAIrzB,EAASuH,EAAMhR,IAAIiR,GACvB,IAAKxH,EAAQ,CAEXA,EAAS,CACPm4B,SAFevgC,OAAOhE,EAAoE,EAA3EgE,CAA8E0L,EAAQqE,GAGrGywB,YAAazwB,EAASjI,QAAOk5B,IAAMA,EAAE1C,cAAc2C,SAAS,YAE9DtxB,EAAM7Q,IAAI8Q,EAAUxH,GAEtB,OAAOA,EAeT,MAAM84B,GAAkB,CAAC,MAAO,SAAU,OAAQ,QAAS,aAC3D,SAASC,GAAqBngB,EAAU3Z,GACtC,MAAoB,QAAb2Z,GAAmC,WAAbA,IAAiE,IAAvCkgB,GAAgBnsB,QAAQiM,IAA6B,MAAT3Z,EAErG,SAAS+5B,GAAcC,EAAIC,GACzB,OAAO,SAASzvB,EAAG3D,GACjB,OAAO2D,EAAEwvB,KAAQnzB,EAAEmzB,GACfxvB,EAAEyvB,GAAMpzB,EAAEozB,GACVzvB,EAAEwvB,GAAMnzB,EAAEmzB,IAGlB,SAASE,GAAqBtyB,GAC5B,MAAMxS,EAAQwS,EAAQxS,MAChBuF,EAAmBvF,EAAMoH,QAAQ3B,UACvCzF,EAAMg3B,cAAc,eACpBzzB,OAAOhE,EAAmE,EAA1EgE,CAA6EgC,GAAoBA,EAAiBw/B,WAAY,CAACvyB,GAAUxS,GAE3I,SAASglC,GAAoBxyB,GAC3B,MAAMxS,EAAQwS,EAAQxS,MAChBuF,EAAmBvF,EAAMoH,QAAQ3B,UACvClC,OAAOhE,EAAmE,EAA1EgE,CAA6EgC,GAAoBA,EAAiB0/B,WAAY,CAACzyB,GAAUxS,GAE3I,SAASklC,KACP,MAAyB,qBAAX9oC,QAA8C,qBAAbwvB,SAEjD,SAASuZ,GAAU1jC,GASjB,OARIyjC,MAAoC,kBAATzjC,EAC7BA,EAAOmqB,SAASwZ,eAAe3jC,GACtBA,GAAQA,EAAKD,SACtBC,EAAOA,EAAK,IAEVA,GAAQA,EAAK2oB,SACf3oB,EAAOA,EAAK2oB,QAEP3oB,EAET,MAAM4jC,GAAY,GACZC,GAAYv+B,IAChB,MAAMqjB,EAAS+a,GAAUp+B,GACzB,OAAOxD,OAAO2D,OAAOm+B,IAAWh6B,QAAQk6B,GAAMA,EAAEnb,SAAWA,IAAQroB,OAErE,MAAM1E,GACJmC,YAAYiC,EAAMgF,GAChB,MAAM1F,EAAKtB,KACXA,KAAKgH,OAASA,EAAS,IAAIw8B,GAAOx8B,GAClC,MAAM++B,EAAgBL,GAAU1jC,GAC1BgkC,EAAgBH,GAASE,GAC/B,GAAIC,EACF,MAAM,IAAIriB,MACR,4CAA+CqiB,EAAcz6B,GAA7D,wDAIJ,MAAM5D,EAAUX,EAAO0I,eAAe1I,EAAOi/B,oBAAqB3kC,EAAGqO,cACrE3P,KAAKkmC,SAAW5kC,EAAG6kC,oBAAoBJ,EAAe/+B,GACtD,MAAM+L,EAAUzR,EAAG4kC,SAASE,eAAeL,EAAep+B,EAAQ2X,aAC5DqL,EAAS5X,GAAWA,EAAQ4X,OAC5BpS,EAASoS,GAAUA,EAAOpS,OAC1BC,EAAQmS,GAAUA,EAAOnS,MAC/BxY,KAAKuL,GAAKzH,OAAOhE,EAAoE,EAA3EgE,GACV9D,KAAKqM,IAAM0G,EACX/S,KAAK2qB,OAASA,EACd3qB,KAAKwY,MAAQA,EACbxY,KAAKuY,OAASA,EACdvY,KAAKqmC,SAAW1+B,EAChB3H,KAAKsmC,aAAetmC,KAAKsf,YACzBtf,KAAKkpB,QAAU,GACflpB,KAAKumC,UAAY,GACjBvmC,KAAKgL,aAAU1K,EACfN,KAAK2oB,MAAQ,GACb3oB,KAAK8sB,6BAA0BxsB,EAC/BN,KAAK2S,eAAYrS,EACjBN,KAAKmC,QAAU,GACfnC,KAAKwmC,gBAAalmC,EAClBN,KAAKymC,WAAa,GAClBzmC,KAAK0mC,gBAAkB,GACvB1mC,KAAKH,OAAS,GACdG,KAAK8I,WAAQxI,EACbN,KAAK2mC,SAAW,IAAIjG,GACpB1gC,KAAKyuB,SAAW,GAChBzuB,KAAK4mC,eAAiB,GACtB5mC,KAAK6mC,UAAW,EAChB7mC,KAAKqU,yBAAsB/T,EAC3BN,KAAKgN,cAAW1M,EAChBN,KAAK8mC,UAAYhjC,OAAOhE,EAAoE,EAA3EgE,EAA8E,IAAM9D,KAAK0I,OAAO,WAAWf,EAAQo/B,aAAe,GACnJnB,GAAUtkC,EAAGiK,IAAMjK,EACdyR,GAAY4X,GAIjBrrB,EAAS0nC,OAAO1lC,EAAI,WAAY+jC,IAChC/lC,EAAS0nC,OAAO1lC,EAAI,WAAYikC,IAChCjkC,EAAG2lC,cACC3lC,EAAGulC,UACLvlC,EAAGoH,UAPHw+B,QAAQC,MAAM,qEAUlB7nB,kBACE,MAAO3X,SAAS2X,YAACA,EAAW8nB,oBAAEA,GAAoB5uB,MAAEA,EAAKD,OAAEA,EAAM+tB,aAAEA,GAAgBtmC,KACnF,OAAK8D,OAAOhE,EAAoE,GAA3EgE,CAA8Ewb,GAG/E8nB,GAAuBd,EAClBA,EAEF/tB,EAASC,EAAQD,EAAS,KALxB+G,EAOX7Q,WACE,OAAOzO,KAAKgH,OAAOyH,KAErBA,SAASA,GACPzO,KAAKgH,OAAOyH,KAAOA,EAErB9G,cACE,OAAO3H,KAAKqmC,SAEd1+B,YAAYA,GACV3H,KAAKgH,OAAOW,QAAUA,EAExB5H,cACE,MAAMuB,EAAKtB,KASX,OARAsB,EAAGi2B,cAAc,cACbj2B,EAAGqG,QAAQ0/B,WACb/lC,EAAGoF,SAEH5C,OAAOhE,EAAoE,EAA3EgE,CAA8ExC,EAAIA,EAAGqG,QAAQklB,kBAE/FvrB,EAAGgmC,aACHhmC,EAAGi2B,cAAc,aACVj2B,EAETvB,oBAAoB4qB,EAAQ3jB,GAC1B,OAAIA,EAAOk/B,SACF,IAAIl/B,EAAOk/B,UACRT,MAAgD,qBAApB8B,iBAAmC5c,aAAkB4c,gBACpF,IAAI9pC,GAEN,IAAIM,GAEbgC,QAEE,OADA+D,OAAOhE,EAAqE,GAA5EgE,CAA+E9D,KAAK2qB,OAAQ3qB,KAAKqM,KAC1FrM,KAETD,OAEE,OADAT,EAAS0iB,KAAKhiB,MACPA,KAETD,OAAOyY,EAAOD,GACPjZ,EAASuC,QAAQ7B,MAGpBA,KAAKwnC,kBAAoB,CAAChvB,MAAAA,EAAOD,OAAAA,GAFjCvY,KAAKynC,QAAQjvB,EAAOD,GAKxBxY,QAAQyY,EAAOD,GACb,MAAMjX,EAAKtB,KACL2H,EAAUrG,EAAGqG,QACbgjB,EAASrpB,EAAGqpB,OACZrL,EAAc3X,EAAQy/B,qBAAuB9lC,EAAGge,YAChDooB,EAAUpmC,EAAG4kC,SAASyB,eAAehd,EAAQnS,EAAOD,EAAQ+G,GAC5DsoB,EAAWtmC,EAAGwrB,wBACd+a,EAAWlgC,EAAQklB,kBAAoBvrB,EAAG4kC,SAAS4B,sBACrDxmC,EAAGkX,QAAUkvB,EAAQlvB,OAASlX,EAAGiX,SAAWmvB,EAAQnvB,QAAUqvB,IAAaC,IAG/EvmC,EAAGkX,MAAQkvB,EAAQlvB,MACnBlX,EAAGiX,OAASmvB,EAAQnvB,OACpBjX,EAAGglC,aAAehlC,EAAGge,YACrBxb,OAAOhE,EAAoE,EAA3EgE,CAA8ExC,EAAIumC,GAAU,GAC5FvmC,EAAGi2B,cAAc,SAAU,CAAC5uB,KAAM++B,IAClC5jC,OAAOhE,EAAmE,EAA1EgE,CAA6E6D,EAAQogC,SAAU,CAACzmC,EAAIomC,GAAUpmC,GAC1GA,EAAGulC,UACDvlC,EAAGwlC,aACLxlC,EAAG0mC,UAITjoC,sBACE,MACMkoC,EADUjoC,KAAK2H,QACS9H,QAAU,GACxCiE,OAAOhE,EAAmE,EAA1EgE,CAA6EmkC,GAAe,CAACC,EAAa5J,KACxG4J,EAAY38B,GAAK+yB,KAGrBv+B,sBACE,MAAMuB,EAAKtB,KACL2H,EAAUrG,EAAGqG,QACbwgC,EAAYxgC,EAAQ9H,OACpBA,EAASyB,EAAGzB,OACZuoC,EAAUtkC,OAAOiC,KAAKlG,GAAQmD,QAAO,CAACmU,EAAK5L,KAC/C4L,EAAI5L,IAAM,EACH4L,IACN,IACH,IAAIrV,EAAQ,GACRqmC,IACFrmC,EAAQA,EAAM0T,OACZ1R,OAAOiC,KAAKoiC,GAAW3oB,KAAKjU,IAC1B,MAAM42B,EAAegG,EAAU58B,GACzBJ,EAAO+2B,GAAc32B,EAAI42B,GACzBkG,EAAoB,MAATl9B,EACXuM,EAAwB,MAATvM,EACrB,MAAO,CACLxD,QAASw6B,EACTmG,UAAWD,EAAW,YAAc3wB,EAAe,SAAW,OAC9D6wB,MAAOF,EAAW,eAAiB3wB,EAAe,WAAa,eAKvE5T,OAAOhE,EAAmE,EAA1EgE,CAA6EhC,GAAQE,IACnF,MAAMmgC,EAAengC,EAAK2F,QACpB4D,EAAK42B,EAAa52B,GAClBJ,EAAO+2B,GAAc32B,EAAI42B,GACzBqG,EAAY1kC,OAAOhE,EAAoE,GAA3EgE,CAA8Eq+B,EAAazhC,KAAMsB,EAAKumC,YAC1FjoC,IAA1B6hC,EAAard,UAA0BmgB,GAAqB9C,EAAard,SAAU3Z,KAAU85B,GAAqBjjC,EAAKsmC,aACzHnG,EAAard,SAAW9iB,EAAKsmC,WAE/BF,EAAQ78B,IAAM,EACd,IAAIzC,EAAQ,KACZ,GAAIyC,KAAM1L,GAAUA,EAAO0L,GAAI7K,OAAS8nC,EACtC1/B,EAAQjJ,EAAO0L,OACV,CAELzC,EAAQ,IADWlJ,GAAS6oC,SAASD,GAC7B,CAAe,CACrBj9B,GAAAA,EACA7K,KAAM8nC,EACNn8B,IAAK/K,EAAG+K,IACR9L,MAAOe,IAETzB,EAAOiJ,EAAMyC,IAAMzC,EAErBA,EAAM4/B,KAAKvG,EAAcx6B,MAE3B7D,OAAOhE,EAAmE,EAA1EgE,CAA6EskC,GAAS,CAACO,EAAYp9B,KAC5Fo9B,UACI9oC,EAAO0L,MAGlBzH,OAAOhE,EAAmE,EAA1EgE,CAA6EjE,GAASiJ,IACpFrJ,GAAQ0H,UAAU7F,EAAIwH,EAAOA,EAAMnB,SACnClI,GAAQmpC,OAAOtnC,EAAIwH,MAGvB/I,oBAAoBkK,EAAMT,GACxB,MAAMH,EAAWrJ,KAAKumC,UAChBsC,EAAW5+B,EAAKT,MAClBq/B,IAAar/B,IACfH,EAASw/B,GAAYx/B,EAASG,GAC9BH,EAASG,GAASS,EAClBA,EAAKT,MAAQA,GAGjBzJ,kBACE,MAAMuB,EAAKtB,KACLqJ,EAAW/H,EAAGilC,UACd5xB,EAAUrT,EAAGmN,KAAKC,SAAS3M,OAC3B2S,EAAUrL,EAAStH,OACzB,GAAI2S,EAAUC,EAAS,CACrB,IAAK,IAAI1S,EAAI0S,EAAS1S,EAAIyS,IAAWzS,EACnCX,EAAGwnC,oBAAoB7mC,GAEzBoH,EAAS6L,OAAOP,EAASD,EAAUC,GAErCrT,EAAGolC,gBAAkBr9B,EAASkX,MAAM,GAAG7K,KAAKwvB,GAAc,QAAS,UAErEnlC,8BACE,MAAMuB,EAAKtB,MACJumC,UAAWl9B,EAAUoF,MAAMC,SAACA,IAAapN,EAC5C+H,EAAStH,OAAS2M,EAAS3M,eACtBT,EAAG0J,QAEZ3B,EAAStI,SAAQ,CAACkJ,EAAMT,KACmC,IAArDkF,EAAS9C,QAAO4B,GAAKA,IAAMvD,EAAKwW,WAAU1e,QAC5CT,EAAGwnC,oBAAoBt/B,MAI7BzJ,2BACE,MAAMuB,EAAKtB,KACL+oC,EAAiB,GACjBr6B,EAAWpN,EAAGmN,KAAKC,SACzB,IAAIzM,EAAGsH,EAEP,IADAjI,EAAG0nC,8BACE/mC,EAAI,EAAGsH,EAAOmF,EAAS3M,OAAQE,EAAIsH,EAAMtH,IAAK,CACjD,MAAMoL,EAAUqB,EAASzM,GACzB,IAAIgI,EAAO3I,EAAGqN,eAAe1M,GAC7B,MAAMvB,EAAO2M,EAAQ3M,MAAQY,EAAG0F,OAAOtG,KAWvC,GAVIuJ,EAAKvJ,MAAQuJ,EAAKvJ,OAASA,IAC7BY,EAAGwnC,oBAAoB7mC,GACvBgI,EAAO3I,EAAGqN,eAAe1M,IAE3BgI,EAAKvJ,KAAOA,EACZuJ,EAAK+D,UAAYX,EAAQW,WAAag0B,GAAathC,EAAMY,EAAGqG,SAC5DsC,EAAKg/B,MAAQ57B,EAAQ47B,OAAS,EAC9B3nC,EAAG4nC,oBAAoBj/B,EAAMhI,GAC7BgI,EAAK2H,MAAQ,GAAKvE,EAAQuE,MAC1B3H,EAAKpD,QAAUvF,EAAG0a,iBAAiB/Z,GAC/BgI,EAAKY,WACPZ,EAAKY,WAAWs+B,YAAYlnC,GAC5BgI,EAAKY,WAAWqC,iBACX,CACL,MAAMk8B,EAAkBxpC,GAASypC,cAAc3oC,IACzCwO,mBAACA,EAAkBqE,gBAAEA,GAAmBzT,EAAoE,GAAE4O,SAAShO,GAC7HoD,OAAO+D,OAAOuhC,EAAgBpyB,UAAW,CACvCzD,gBAAiB3T,GAAS0pC,WAAW/1B,GACrCrE,mBAAoBA,GAAsBtP,GAAS0pC,WAAWp6B,KAEhEjF,EAAKY,WAAa,IAAIu+B,EAAgB9nC,EAAIW,GAC1C8mC,EAAensC,KAAKqN,EAAKY,aAI7B,OADAvJ,EAAGioC,kBACIR,EAEThpC,iBACE,MAAMuB,EAAKtB,KACX8D,OAAOhE,EAAmE,EAA1EgE,CAA6ExC,EAAGmN,KAAKC,UAAU,CAACrB,EAASvD,KACvGxI,EAAGqN,eAAe7E,GAAce,WAAWyM,UAC1ChW,GAELvB,QACEC,KAAKwpC,iBACLxpC,KAAKu3B,cAAc,SAErBx3B,OAAO8J,GACL,MAAMvI,EAAKtB,KACLgH,EAAS1F,EAAG0F,OAClBA,EAAO0B,SACPpH,EAAG+kC,SAAWr/B,EAAO0I,eAAe1I,EAAOi/B,oBAAqB3kC,EAAGqO,cACnE7L,OAAOhE,EAAmE,EAA1EgE,CAA6ExC,EAAGzB,QAASiJ,IACvFrJ,GAAQgqC,UAAUnoC,EAAIwH,MAExB,MAAM4gC,EAAgBpoC,EAAG+S,qBAAuB/S,EAAGqG,QAAQ3B,UAC3D1E,EAAGqoC,sBACHroC,EAAGsoC,sBACH,MAAMC,EAAiB,IAAIzG,IAAIt/B,OAAOiC,KAAKzE,EAAGmlC,aACxCqD,EAAY,IAAI1G,IAAI9hC,EAAGqG,QAAQoiC,QAMrC,GALKjmC,OAAOhE,EAAqE,GAA5EgE,CAA+E+lC,EAAgBC,KAClGxoC,EAAG0oC,eACH1oC,EAAGgmC,cAELhmC,EAAGqlC,SAASsD,cACuD,IAA/D3oC,EAAGi2B,cAAc,eAAgB,CAAC1tB,KAAAA,EAAMo3B,YAAY,IACtD,OAEF,MAAM8H,EAAiBznC,EAAG4oC,2BAC1B5oC,EAAGi2B,cAAc,wBACjB,IAAIlO,EAAa,EACjB,IAAK,IAAIpnB,EAAI,EAAGsH,EAAOjI,EAAGmN,KAAKC,SAAS3M,OAAQE,EAAIsH,EAAMtH,IAAK,CAC7D,MAAM4I,WAACA,GAAcvJ,EAAGqN,eAAe1M,GACjCqV,GAASoyB,IAAyD,IAAxCX,EAAelwB,QAAQhO,GACvDA,EAAWs/B,sBAAsB7yB,GACjC+R,EAAaloB,KAAKgC,KAAK0H,EAAW4H,iBAAkB4W,GAEtD/nB,EAAG8jB,YAAciE,EACjB/nB,EAAG8oC,cAAc/gB,GACZqgB,GACH5lC,OAAOhE,EAAmE,EAA1EgE,CAA6EilC,GAAiBl+B,IAC5FA,EAAWyM,WAGfhW,EAAG+oC,gBAAgBxgC,GACnBvI,EAAGi2B,cAAc,cAAe,CAAC1tB,KAAAA,IACjCvI,EAAG4nB,QAAQxT,KAAKwvB,GAAc,IAAK,SAC/B5jC,EAAGklC,YACLllC,EAAGgpC,cAAchpC,EAAGklC,YAAY,GAElCllC,EAAG0mC,SAELjoC,cAAcspB,GACZ,MAAM/nB,EAAKtB,KACX,IAA6D,IAAzDsB,EAAGi2B,cAAc,eAAgB,CAAC0J,YAAY,IAChD,OAEFxhC,GAAQiJ,OAAOpH,EAAIA,EAAGkX,MAAOlX,EAAGiX,OAAQ8Q,GACxC,MAAM3W,EAAOpR,EAAGqR,UACV43B,EAAS73B,EAAK8F,OAAS,GAAK9F,EAAK6F,QAAU,EACjDjX,EAAG4nB,QAAU,GACbplB,OAAOhE,EAAmE,EAA1EgE,CAA6ExC,EAAGqnB,OAAQ3B,IAClFujB,GAA2B,cAAjBvjB,EAAIlC,WAGdkC,EAAI7f,WACN6f,EAAI7f,YAEN7F,EAAG4nB,QAAQtsB,QAAQoqB,EAAIkC,cACtB5nB,GACHA,EAAG4nB,QAAQnoB,SAAQ,CAACiB,EAAMwH,KACxBxH,EAAKwoC,KAAOhhC,KAEdlI,EAAGi2B,cAAc,eAEnBx3B,gBAAgB8J,GACd,MAAMvI,EAAKtB,KACLyqC,EAA6B,oBAAT5gC,EAC1B,IAA2E,IAAvEvI,EAAGi2B,cAAc,uBAAwB,CAAC1tB,KAAAA,EAAMo3B,YAAY,IAAhE,CAGA,IAAK,IAAIh/B,EAAI,EAAGsH,EAAOjI,EAAGmN,KAAKC,SAAS3M,OAAQE,EAAIsH,IAAQtH,EAC1DX,EAAGopC,eAAezoC,EAAGwoC,EAAa5gC,EAAK,CAACC,aAAc7H,IAAM4H,GAE9DvI,EAAGi2B,cAAc,sBAAuB,CAAC1tB,KAAAA,KAE3C9J,eAAeyJ,EAAOK,GACpB,MAAMvI,EAAKtB,KACLiK,EAAO3I,EAAGqN,eAAenF,GACzBokB,EAAO,CAAC3jB,KAAAA,EAAMT,MAAAA,EAAOK,KAAAA,EAAMo3B,YAAY,IACS,IAAlD3/B,EAAGi2B,cAAc,sBAAuB3J,KAG5C3jB,EAAKY,WAAWrJ,QAAQqI,GACxB+jB,EAAKqT,YAAa,EAClB3/B,EAAGi2B,cAAc,qBAAsB3J,IAEzC7tB,SACE,MAAMuB,EAAKtB,MACkD,IAAzDsB,EAAGi2B,cAAc,eAAgB,CAAC0J,YAAY,MAG9C3hC,EAASkI,IAAIlG,GACXA,EAAGulC,WAAavnC,EAASuC,QAAQP,IACnChC,EAAS+B,MAAMC,IAGjBA,EAAGY,OACHmjC,GAAqB,CAAC9kC,MAAOe,MAGjCvB,OACE,MAAMuB,EAAKtB,KACX,IAAIiC,EACJ,GAAIX,EAAGkmC,kBAAmB,CACxB,MAAMhvB,MAACA,EAAKD,OAAEA,GAAUjX,EAAGkmC,kBAC3BlmC,EAAGmmC,QAAQjvB,EAAOD,GAClBjX,EAAGkmC,kBAAoB,KAGzB,GADAlmC,EAAGwiC,QACCxiC,EAAGkX,OAAS,GAAKlX,EAAGiX,QAAU,EAChC,OAEF,IAA2D,IAAvDjX,EAAGi2B,cAAc,aAAc,CAAC0J,YAAY,IAC9C,OAEF,MAAM0J,EAASrpC,EAAG4nB,QAClB,IAAKjnB,EAAI,EAAGA,EAAI0oC,EAAO5oC,QAAU4oC,EAAO1oC,GAAGknB,GAAK,IAAKlnB,EACnD0oC,EAAO1oC,GAAGC,KAAKZ,EAAGqR,WAGpB,IADArR,EAAGspC,gBACI3oC,EAAI0oC,EAAO5oC,SAAUE,EAC1B0oC,EAAO1oC,GAAGC,KAAKZ,EAAGqR,WAEpBrR,EAAGi2B,cAAc,aAEnBx3B,uBAAuBqJ,GACrB,MACMC,EADKrJ,KACS0mC,gBACdlW,EAAS,GACf,IAAIvuB,EAAGsH,EACP,IAAKtH,EAAI,EAAGsH,EAAOF,EAAStH,OAAQE,EAAIsH,IAAQtH,EAAG,CACjD,MAAMgI,EAAOZ,EAASpH,GACjBmH,IAAiBa,EAAKpD,SACzB2pB,EAAO5zB,KAAKqN,GAGhB,OAAOumB,EAETzwB,+BACE,OAAOC,KAAKsJ,wBAAuB,GAErCvJ,gBACE,MAAMuB,EAAKtB,KACX,IAAmE,IAA/DsB,EAAGi2B,cAAc,qBAAsB,CAAC0J,YAAY,IACtD,OAEF,MAAM53B,EAAW/H,EAAG0jB,+BACpB,IAAK,IAAI/iB,EAAIoH,EAAStH,OAAS,EAAGE,GAAK,IAAKA,EAC1CX,EAAGupC,aAAaxhC,EAASpH,IAE3BX,EAAGi2B,cAAc,qBAEnBx3B,aAAakK,GACX,MAAM3I,EAAKtB,KACLqM,EAAM/K,EAAG+K,IACTkG,EAAOtI,EAAK6H,MACZY,EAAOpR,EAAGqR,UACVib,EAAO,CACX3jB,KAAAA,EACAT,MAAOS,EAAKT,MACZy3B,YAAY,IAEsC,IAAhD3/B,EAAGi2B,cAAc,oBAAqB3J,KAG1C9pB,OAAOhE,EAAoE,GAA3EgE,CAA8EuI,EAAK,CACjFgG,MAAoB,IAAdE,EAAKF,KAAiB,EAAIK,EAAKL,KAAOE,EAAKF,KACjDF,OAAsB,IAAfI,EAAKJ,MAAkB7Q,EAAGkX,MAAQ9F,EAAKP,MAAQI,EAAKJ,MAC3DD,KAAkB,IAAbK,EAAKL,IAAgB,EAAIQ,EAAKR,IAAMK,EAAKL,IAC9CE,QAAwB,IAAhBG,EAAKH,OAAmB9Q,EAAGiX,OAAS7F,EAAKN,OAASG,EAAKH,SAEjEnI,EAAKY,WAAW3I,OAChB4B,OAAOhE,EAAoE,GAA3EgE,CAA8EuI,GAC9EuhB,EAAKqT,YAAa,EAClB3/B,EAAGi2B,cAAc,mBAAoB3J,IAEvC7tB,0BAA0BkgB,EAAGpW,EAAMlC,EAASwd,GAC1C,MAAMtf,EAAS1H,EAAYsoB,MAAM5c,GACjC,MAAsB,oBAAXhE,EACFA,EAAO7F,KAAMigB,EAAGtY,EAASwd,GAE3B,GAETplB,eAAe+J,GACb,MACMuD,EADKrN,KACQyO,KAAKC,SAAS5E,GAC3BT,EAFKrJ,KAESumC,UACpB,IAAIt8B,EAAOZ,EAASuC,QAAO4B,GAAKA,GAAKA,EAAEiT,WAAapT,IAAS/K,MAiB7D,OAhBK2H,IACHA,EAAOZ,EAASS,GAAgB,CAC9BpJ,KAAM,KACN+N,KAAM,GACNpB,QAAS,KACTxC,WAAY,KACZmV,OAAQ,KACRrS,QAAS,KACTE,QAAS,KACTo7B,MAAO57B,GAAWA,EAAQ47B,OAAS,EACnCz/B,MAAOM,EACP2W,SAAUpT,EACVtB,QAAS,GACTgE,SAAS,IAGN9F,EAETlK,aACE,OAAOC,KAAKgN,WAAahN,KAAKgN,SAAW,CAACzM,MAAOP,KAAMU,KAAM,UAE/DX,yBACE,OAAOC,KAAKglB,+BAA+BjjB,OAE7ChC,iBAAiB+J,GACf,MAAMuD,EAAUrN,KAAKyO,KAAKC,SAAS5E,GACnC,IAAKuD,EACH,OAAO,EAET,MAAMpD,EAAOjK,KAAK2O,eAAe7E,GACjC,MAA8B,mBAAhBG,EAAK+V,QAAwB/V,EAAK+V,QAAU3S,EAAQ2S,OAEpEjgB,qBAAqB+J,EAAcjD,GACpB7G,KAAK2O,eAAe7E,GAC5BkW,QAAUnZ,EAEjB9G,qBAAqByJ,GACnBxJ,KAAK4mC,eAAep9B,IAAUxJ,KAAK4mC,eAAep9B,GAEpDzJ,kBAAkByJ,GAChB,OAAQxJ,KAAK4mC,eAAep9B,GAE9BzJ,yBAAyB+J,EAAcjD,GACrC,MAAMvF,EAAKtB,KACL6J,EAAOhD,EAAU,OAAS,OAC1BoD,EAAO3I,EAAGqN,eAAe7E,GACzBtJ,EAAQyJ,EAAKY,WAAWyJ,wBAAmBhU,EAAWuJ,GAC5DvI,EAAGwpC,qBAAqBhhC,EAAcjD,GACtCrG,EAAMkI,OAAOuB,EAAM,CAACpD,QAAAA,IACpBvF,EAAGoH,QAAQ2D,GAAQA,EAAIvC,eAAiBA,EAAeD,OAAOvJ,IAEhEP,KAAK+J,GACH9J,KAAK+qC,yBAAyBjhC,GAAc,GAE9C/J,KAAK+J,GACH9J,KAAK+qC,yBAAyBjhC,GAAc,GAE9C/J,oBAAoB+J,GAClB,MAAMxI,EAAKtB,KACLiK,EAAO3I,EAAGilC,WAAajlC,EAAGilC,UAAUz8B,GACtCG,GAAQA,EAAKY,aACfZ,EAAKY,WAAWmgC,kBACT1pC,EAAGilC,UAAUz8B,IAGxB/J,UACE,MAAMuB,EAAKtB,MACL2qB,OAACA,EAAMte,IAAEA,GAAO/K,EACtB,IAAIW,EAAGsH,EAGP,IAFAjI,EAAG0gB,OACH1iB,EAAS2rC,OAAO3pC,GACXW,EAAI,EAAGsH,EAAOjI,EAAGmN,KAAKC,SAAS3M,OAAQE,EAAIsH,IAAQtH,EACtDX,EAAGwnC,oBAAoB7mC,GAEzBX,EAAG0F,OAAO68B,aACNlZ,IACFrpB,EAAG0oC,eACHlmC,OAAOhE,EAAqE,GAA5EgE,CAA+E6mB,EAAQte,GACvF/K,EAAG4kC,SAASgF,eAAe7+B,GAC3B/K,EAAGqpB,OAAS,KACZrpB,EAAG+K,IAAM,MAEX/K,EAAGi2B,cAAc,kBACVqO,GAAUtkC,EAAGiK,IAEtBxL,iBAAiB6tB,GACf,OAAO5tB,KAAK2qB,OAAOwgB,aAAavd,GAElC7tB,aACE,MAAMuB,EAAKtB,KACLY,EAAYU,EAAGmlC,WACfP,EAAW5kC,EAAG4kC,SACdkF,EAAO,CAAC1qC,EAAMkqB,KAClBsb,EAAS/Y,iBAAiB7rB,EAAIZ,EAAMkqB,GACpChqB,EAAUF,GAAQkqB,GAEdygB,EAAU,CAAC3qC,EAAMkqB,KACjBhqB,EAAUF,KACZwlC,EAASva,oBAAoBrqB,EAAIZ,EAAMkqB,UAChChqB,EAAUF,KAGrB,IAAIkqB,EAAW,SAAS3K,EAAGzS,EAAGC,GAC5BwS,EAAErE,QAAUpO,EACZyS,EAAEpE,QAAUpO,EACZnM,EAAGgpC,cAAcrqB,IAGnB,GADAnc,OAAOhE,EAAmE,EAA1EgE,CAA6ExC,EAAGqG,QAAQoiC,QAASrpC,GAAS0qC,EAAK1qC,EAAMkqB,KACjHtpB,EAAGqG,QAAQ0/B,WAAY,CAMzB,IAAIiE,EALJ1gB,EAAW,CAACpS,EAAOD,KACbjX,EAAGqpB,QACLrpB,EAAGoF,OAAO8R,EAAOD,IAIrB,MAAMsuB,EAAW,KACfwE,EAAQ,SAAUxE,GAClBvlC,EAAGulC,UAAW,EACdvlC,EAAGoF,SACH0kC,EAAK,SAAUxgB,GACfwgB,EAAK,SAAUE,IAEjBA,EAAW,KACThqC,EAAGulC,UAAW,EACdwE,EAAQ,SAAUzgB,GAClBwgB,EAAK,SAAUvE,IAEbX,EAASqF,WAAWjqC,EAAGqpB,QACzBkc,IAEAyE,SAGFhqC,EAAGulC,UAAW,EAGlB9mC,eACE,MAAMuB,EAAKtB,KACLY,EAAYU,EAAGmlC,WAChB7lC,IAGLU,EAAGmlC,WAAa,GAChB3iC,OAAOhE,EAAmE,EAA1EgE,CAA6ElD,GAAW,CAACgqB,EAAUlqB,KACjGY,EAAG4kC,SAASva,oBAAoBrqB,EAAIZ,EAAMkqB,OAG9C7qB,iBAAiB+B,EAAO+H,EAAM0mB,GAC5B,MAAMib,EAASjb,EAAU,MAAQ,SACjC,IAAItmB,EAAMjI,EAAMC,EAAGsH,EAKnB,IAJa,YAATM,IACFI,EAAOjK,KAAK2O,eAAe7M,EAAM,GAAGgI,cACpCG,EAAKY,WAAW,IAAM2gC,EAAS,wBAE5BvpC,EAAI,EAAGsH,EAAOzH,EAAMC,OAAQE,EAAIsH,IAAQtH,EAAG,CAC9CD,EAAOF,EAAMG,GACb,MAAM4I,EAAa7I,GAAQhC,KAAK2O,eAAe3M,EAAK8H,cAAce,WAC9DA,GACFA,EAAW2gC,EAAS,cAAcxpC,EAAK4Q,QAAS5Q,EAAK8H,aAAc9H,EAAKwH,QAI9EzJ,oBACE,OAAOC,KAAKmC,SAAW,GAEzBpC,kBAAkB0rC,GAChB,MAAMnqC,EAAKtB,KACL0rC,EAAapqC,EAAGa,SAAW,GAC3BsE,EAASglC,EAAejsB,KAAI,EAAE1V,aAAAA,EAAcN,MAAAA,MAChD,MAAMS,EAAO3I,EAAGqN,eAAe7E,GAC/B,IAAKG,EACH,MAAM,IAAI0Z,MAAM,6BAA+B7Z,GAEjD,MAAO,CACLA,aAAAA,EACA8I,QAAS3I,EAAKwE,KAAKjF,GACnBA,MAAAA,OAGa1F,OAAOhE,EAAqE,GAA5EgE,CAA+E2C,EAAQilC,KAEtGpqC,EAAGa,QAAUsE,EACbnF,EAAGqqC,mBAAmBllC,EAAQilC,IAGlC3rC,cAAc6gC,EAAMhT,EAAMhiB,GACxB,OAAO5L,KAAK2mC,SAASiF,OAAO5rC,KAAM4gC,EAAMhT,EAAMhiB,GAEhD7L,mBAAmB0G,EAAQilC,EAAYG,GACrC,MAAMvqC,EAAKtB,KACL8rC,EAAexqC,EAAGqG,QAAQokC,MAC1B9a,EAAO,CAACtb,EAAG3D,IAAM2D,EAAE/J,QAAO4B,IAAMwE,EAAE2vB,MAAKl0B,GAAKD,EAAE1D,eAAiB2D,EAAE3D,cAAgB0D,EAAEhE,QAAUiE,EAAEjE,UAC/FwiC,EAAc/a,EAAKya,EAAYjlC,GAC/BwlC,EAAYJ,EAASplC,EAASwqB,EAAKxqB,EAAQilC,GAC7CM,EAAYjqC,QACdT,EAAG4qC,iBAAiBF,EAAaF,EAAajiC,MAAM,GAElDoiC,EAAUlqC,QAAU+pC,EAAajiC,MACnCvI,EAAG4qC,iBAAiBD,EAAWH,EAAajiC,MAAM,GAGtD9J,cAAckgB,EAAG4rB,GACf,MAAMvqC,EAAKtB,KACL4tB,EAAO,CAAC/qB,MAAOod,EAAG4rB,OAAAA,EAAQ5K,YAAY,GACtCkL,EAAenL,IAAYA,EAAOr5B,QAAQoiC,QAAU/pC,KAAK2H,QAAQoiC,QAAQhF,SAAS9kB,EAAEvf,MAC1F,IAA2D,IAAvDY,EAAGi2B,cAAc,cAAe3J,EAAMue,GACxC,OAEF,MAAM9qB,EAAU/f,EAAG8qC,aAAansB,EAAG4rB,GAMnC,OALAje,EAAKqT,YAAa,EAClB3/B,EAAGi2B,cAAc,aAAc3J,EAAMue,IACjC9qB,GAAWuM,EAAKvM,UAClB/f,EAAG0mC,SAEE1mC,EAETvB,aAAakgB,EAAG4rB,GACd,MAAMvqC,EAAKtB,MACJmC,QAASupC,EAAa,GAAE/jC,QAAEA,GAAWrG,EACtCwqC,EAAenkC,EAAQokC,MACvB5mB,EAAmB0mB,EACzB,IAAIplC,EAAS,GACT4a,GAAU,EACVgrB,EAAY,KAkBhB,MAjBe,aAAXpsB,EAAEvf,OACJ+F,EAASnF,EAAGgrC,0BAA0BrsB,EAAG6rB,EAAajiC,KAAMiiC,EAAc3mB,GAC1EknB,EAAuB,UAAXpsB,EAAEvf,KAAmBY,EAAGklC,WAAavmB,GAEnD3e,EAAGklC,WAAa,KACZ1iC,OAAOhE,EAAmE,EAA1EgE,CAA6Emc,EAAG3e,EAAGqR,UAAWrR,EAAG8jB,eACnGthB,OAAOhE,EAAmE,EAA1EgE,CAA6E6D,EAAQ4kC,QAAS,CAACtsB,EAAGxZ,EAAQnF,GAAKA,GAChG,YAAX2e,EAAEvf,MAAiC,UAAXuf,EAAEvf,MAA+B,gBAAXuf,EAAEvf,MAClDoD,OAAOhE,EAAmE,EAA1EgE,CAA6E6D,EAAQ6kC,QAAS,CAACvsB,EAAGxZ,EAAQnF,GAAKA,IAGnH+f,GAAWvd,OAAOhE,EAAqE,GAA5EgE,CAA+E2C,EAAQilC,IAC9FrqB,GAAWwqB,KACbvqC,EAAGa,QAAUsE,EACbnF,EAAGqqC,mBAAmBllC,EAAQilC,EAAYG,IAE5CvqC,EAAGklC,WAAa6F,EACThrB,GAGX,MAAMorB,GAAoB,IAAM3oC,OAAOhE,EAAmE,EAA1EgE,CAA6ElG,GAAMgoC,WAAYrlC,GAAUA,EAAMomC,SAASsD,eAClJyC,IAAa,EA0CnB,SAASC,GAAQtgC,EAAKuG,GACpB,MAAMkK,WAACA,EAAUC,SAAEA,EAAQ6vB,YAAEA,EAAWp/B,EAAEA,EAACC,EAAEA,EAACkO,YAAEA,EAAWD,YAAEA,GAAe9I,EAC5E,IAAIi6B,EAAcD,EAAcjxB,EAChCtP,EAAIixB,YACJjxB,EAAIwS,IAAIrR,EAAGC,EAAGkO,EAAamB,EAAa+vB,EAAa9vB,EAAW8vB,GAC5DnxB,EAAckxB,GAChBC,EAAcD,EAAclxB,EAC5BrP,EAAIwS,IAAIrR,EAAGC,EAAGiO,EAAaqB,EAAW8vB,EAAa/vB,EAAa+vB,GAAa,IAE7ExgC,EAAIwS,IAAIrR,EAAGC,EAAGm/B,EAAa7vB,EAAWjd,EAAmE,EAAGgd,EAAahd,EAAmE,GAE9LuM,EAAIygC,YACJzgC,EAAIkG,OAKN,SAASw6B,GAAoBluB,EAAKnD,EAAaC,EAAaqxB,GAC1D,MAAMC,GAJiBxkC,EAIGoW,EAAIlX,QAAQulC,aAH/BppC,OAAOhE,EAAqE,GAA5EgE,CAA+E2E,EAAO,CAAC,aAAc,WAAY,aAAc,cADxI,IAAyBA,EAKvB,MAAM0kC,GAAiBxxB,EAAcD,GAAe,EAC9C0xB,EAAajsC,KAAKC,IAAI+rC,EAAeH,EAAatxB,EAAc,GAChE2xB,EAAqB10B,IACzB,MAAM20B,GAAiB3xB,EAAcxa,KAAKC,IAAI+rC,EAAex0B,IAAQq0B,EAAa,EAClF,OAAOlpC,OAAOhE,EAAoE,GAA3EgE,CAA8E6U,EAAK,EAAGxX,KAAKC,IAAI+rC,EAAeG,KAEvH,MAAO,CACLC,WAAYF,EAAkBJ,EAAEM,YAChCC,SAAUH,EAAkBJ,EAAEO,UAC9BC,WAAY3pC,OAAOhE,EAAoE,GAA3EgE,CAA8EmpC,EAAEQ,WAAY,EAAGL,GAC3GM,SAAU5pC,OAAOhE,EAAoE,GAA3EgE,CAA8EmpC,EAAES,SAAU,EAAGN,IAG3G,SAASO,GAAW1wC,EAAG2wC,EAAOpgC,EAAGC,GAC/B,MAAO,CACLD,EAAGA,EAAIvQ,EAAIkE,KAAK8b,IAAI2wB,GACpBngC,EAAGA,EAAIxQ,EAAIkE,KAAKgc,IAAIywB,IAGxB,SAASC,GAAQxhC,EAAKuG,GACpB,MAAMpF,EAACA,EAACC,EAAEA,EAACqP,WAAEA,EAAUC,SAAEA,EAAQ6vB,YAAEA,GAAeh6B,EAC5C+I,EAAcxa,KAAKgC,IAAIyP,EAAQ+I,YAAcixB,EAAa,GAC1DlxB,EAAc9I,EAAQ8I,YAAckxB,GACpCW,WAACA,EAAUC,SAAEA,EAAQC,WAAEA,EAAUC,SAAEA,GAAYX,GAAoBn6B,EAAS8I,EAAaC,EAAaoB,EAAWD,GACjHgxB,EAA2BnyB,EAAc4xB,EACzCQ,EAAyBpyB,EAAc6xB,EACvCQ,EAA0BlxB,EAAaywB,EAAaO,EACpDG,EAAwBlxB,EAAWywB,EAAWO,EAC9CG,EAA2BxyB,EAAc+xB,EACzCU,EAAyBzyB,EAAcgyB,EACvCU,EAA0BtxB,EAAa2wB,EAAaS,EACpDG,EAAwBtxB,EAAW2wB,EAAWS,EAGpD,GAFA9hC,EAAIixB,YACJjxB,EAAIwS,IAAIrR,EAAGC,EAAGkO,EAAaqyB,EAAyBC,GAChDT,EAAW,EAAG,CAChB,MAAMc,EAAUX,GAAWI,EAAwBE,EAAuBzgC,EAAGC,GAC7EpB,EAAIwS,IAAIyvB,EAAQ9gC,EAAG8gC,EAAQ7gC,EAAG+/B,EAAUS,EAAuBlxB,EAAWjd,EAAmE,GAE/I,MAAMyuC,EAAKZ,GAAWQ,EAAwBpxB,EAAUvP,EAAGC,GAE3D,GADApB,EAAImxB,OAAO+Q,EAAG/gC,EAAG+gC,EAAG9gC,GAChBigC,EAAW,EAAG,CAChB,MAAMY,EAAUX,GAAWQ,EAAwBE,EAAuB7gC,EAAGC,GAC7EpB,EAAIwS,IAAIyvB,EAAQ9gC,EAAG8gC,EAAQ7gC,EAAGigC,EAAU3wB,EAAWjd,EAAmE,EAAGuuC,EAAwBltC,KAAKqtC,IAGxJ,GADAniC,EAAIwS,IAAIrR,EAAGC,EAAGiO,EAAaqB,EAAY2wB,EAAWhyB,EAAcoB,EAAc2wB,EAAa/xB,GAAc,GACrG+xB,EAAa,EAAG,CAClB,MAAMa,EAAUX,GAAWO,EAA0BE,EAAyB5gC,EAAGC,GACjFpB,EAAIwS,IAAIyvB,EAAQ9gC,EAAG8gC,EAAQ7gC,EAAGggC,EAAYW,EAA0BjtC,KAAKqtC,GAAI1xB,EAAahd,EAAmE,GAE/J,MAAM2uC,EAAKd,GAAWG,EAA0BhxB,EAAYtP,EAAGC,GAE/D,GADApB,EAAImxB,OAAOiR,EAAGjhC,EAAGihC,EAAGhhC,GAChB8/B,EAAa,EAAG,CAClB,MAAMe,EAAUX,GAAWG,EAA0BE,EAAyBxgC,EAAGC,GACjFpB,EAAIwS,IAAIyvB,EAAQ9gC,EAAG8gC,EAAQ7gC,EAAG8/B,EAAYzwB,EAAahd,EAAmE,EAAGkuC,GAE/H3hC,EAAIygC,YAyCN,SAASnb,GAAWtlB,EAAKuG,GACvB,MAAMjL,QAACA,GAAWiL,EACZ87B,EAAgC,UAAxB/mC,EAAQqX,YACjBrX,EAAQsX,cAGTyvB,GACFriC,EAAI0T,UAAkC,EAAtBpY,EAAQsX,YACxB5S,EAAIsiC,SAAW,UAEftiC,EAAI0T,UAAYpY,EAAQsX,YACxB5S,EAAIsiC,SAAW,SAEb/7B,EAAQg8B,aAtCd,SAA+BviC,EAAKuG,EAAS87B,GAC3C,MAAMlhC,EAACA,EAACC,EAAEA,EAACqP,WAAEA,EAAUC,SAAEA,EAAQ6vB,YAAEA,GAAeh6B,EAC5C+I,EAAcxa,KAAKgC,IAAIyP,EAAQ+I,YAAcixB,EAAa,GAC1DlxB,EAAc9I,EAAQ8I,YAAckxB,EAC1C,IAAI3qC,EAYJ,IAXIysC,IACF97B,EAAQmK,SAAWnK,EAAQkK,WAAahd,EAAmE,EAC3G6sC,GAAQtgC,EAAKuG,GACbA,EAAQmK,SAAWA,EACfnK,EAAQmK,WAAanK,EAAQkK,aAC/BlK,EAAQmK,UAAYjd,EAAmE,EACvF8S,EAAQg8B,gBAGZviC,EAAIixB,YACJjxB,EAAIwS,IAAIrR,EAAGC,EAAGiO,EAAaoB,EAAahd,EAAmE,EAAGgd,GAAY,GACrH7a,EAAI,EAAGA,EAAI2Q,EAAQg8B,cAAe3sC,EACrCoK,EAAIoxB,SAIN,IAFApxB,EAAIixB,YACJjxB,EAAIwS,IAAIrR,EAAGC,EAAGkO,EAAamB,EAAYA,EAAahd,EAAmE,GAClHmC,EAAI,EAAGA,EAAI2Q,EAAQg8B,cAAe3sC,EACrCoK,EAAIoxB,SAiBJoR,CAAsBxiC,EAAKuG,EAAS87B,GAElCA,GACF/B,GAAQtgC,EAAKuG,GAEfi7B,GAAQxhC,EAAKuG,GACbvG,EAAIoxB,UAhLN35B,OAAOgrC,iBAAiBlxC,GAAO,CAC7BmZ,SAAU,CACR21B,WAAAA,GACAjkC,MAAO3I,EAAoE,IAE7E8lC,UAAW,CACT8G,WAAAA,GACAjkC,MAAOm9B,IAEThrB,UAAW,CACT8xB,WAAAA,GACAjkC,MAAO3I,EAAmE,GAE5EF,SAAU,CACR8sC,WAAAA,GACAjkC,MAAO7I,IAETmvC,QAAS,CACPrC,WAAAA,GACAjkC,MA/wBU,SAixBZo9B,SAAU,CACR6G,WAAAA,GACAjkC,MAAOo9B,IAET9G,SAAU,CACR2N,WAAAA,GACAjkC,MAAO,IAAI3G,KACTlC,GAASgJ,OAAO9G,GAChB2qC,OAGJuC,WAAY,CACVtC,WAAAA,GACAjkC,MAAO,IAAI3G,KACTlC,GAASqrC,UAAUnpC,GACnB2qC,SA8IN,MAAMpvC,WAAmBY,GACvB8B,YAAYqE,GACVgT,QACApX,KAAK2H,aAAUrH,EACfN,KAAK+b,mBAAgBzb,EACrBN,KAAK8c,gBAAaxc,EAClBN,KAAK+c,cAAWzc,EAChBN,KAAK0b,iBAAcpb,EACnBN,KAAK2b,iBAAcrb,EACnBN,KAAK4sC,YAAc,EACnB5sC,KAAK4uC,YAAc,EACfxqC,GACFN,OAAO+D,OAAO7H,KAAMoE,GAGxBrE,QAAQkvC,EAAQC,EAAQ/pB,GACtB,MAAM/J,EAAQpb,KAAK4uB,SAAS,CAAC,IAAK,KAAMzJ,IAClC5H,MAACA,EAAK4I,SAAEA,GAAYriB,OAAOhE,EAAqE,GAA5EgE,CAA+EsX,EAAO,CAAC5N,EAAGyhC,EAAQxhC,EAAGyhC,KACzHpyB,WAACA,EAAUC,SAAEA,EAAQrB,YAAEA,EAAWC,YAAEA,EAAWI,cAAEA,GAAiB/b,KAAK4uB,SAAS,CACpF,aACA,WACA,cACA,cACA,iBACCzJ,GAGH,OAFsBpJ,GAAiBjc,EAAmE,GAAKgE,OAAOhE,EAAoE,GAA3EgE,CAA8EyZ,EAAOT,EAAYC,MAC1LoJ,GAAYzK,GAAeyK,GAAYxK,GAG/D5b,eAAeolB,GACb,MAAM3X,EAACA,EAACC,EAAEA,EAACqP,WAAEA,EAAUC,SAAEA,EAAQrB,YAAEA,EAAWC,YAAEA,GAAe3b,KAAK4uB,SAAS,CAC3E,IACA,IACA,aACA,WACA,cACA,eACCzJ,GACGgqB,GAAaryB,EAAaC,GAAY,EACtCqyB,GAAc1zB,EAAcC,GAAe,EACjD,MAAO,CACLnO,EAAGA,EAAIrM,KAAK8b,IAAIkyB,GAAaC,EAC7B3hC,EAAGA,EAAItM,KAAKgc,IAAIgyB,GAAaC,GAGjCrvC,gBAAgBolB,GACd,OAAOnlB,KAAKkmB,eAAef,GAE7BplB,KAAKsM,GACH,MAAM/K,EAAKtB,KACL2H,EAAUrG,EAAGqG,QACboT,EAASpT,EAAQoT,QAAU,EAGjC,GAFAzZ,EAAGsrC,YAAuC,UAAxBjlC,EAAQqX,YAA2B,IAAO,EAC5D1d,EAAGstC,YAAcztC,KAAK0D,MAAMvD,EAAGya,cAAgBjc,EAAmE,KACzF,IAArBwB,EAAGya,eAAuBza,EAAGoa,YAAc,GAAKpa,EAAGqa,YAAc,GAArE,CAIA,GADAtP,EAAIuwB,OACA7hB,GAAUzZ,EAAGya,cAAgBjc,EAAmE,EAAG,CACrG,MAAMqvC,GAAa7tC,EAAGwb,WAAaxb,EAAGyb,UAAY,EAClD1Q,EAAIgjC,UAAUluC,KAAK8b,IAAIkyB,GAAap0B,EAAQ5Z,KAAKgc,IAAIgyB,GAAap0B,GAEpE1O,EAAIsT,UAAYhY,EAAQiY,gBACxBvT,EAAIwT,YAAclY,EAAQmY,YA5H9B,SAAiBzT,EAAKuG,GACpB,GAAIA,EAAQg8B,YAAa,CACvBh8B,EAAQmK,SAAWnK,EAAQkK,WAAahd,EAAmE,EAC3G+tC,GAAQxhC,EAAKuG,GACb,IAAK,IAAI3Q,EAAI,EAAGA,EAAI2Q,EAAQg8B,cAAe3sC,EACzCoK,EAAImX,OAGH5K,MAAMhG,EAAQmJ,iBACjBnJ,EAAQmK,SAAWnK,EAAQkK,WAAalK,EAAQmJ,cAAgBjc,EAAmE,GAErI+tC,GAAQxhC,EAAKuG,GACbvG,EAAImX,OAiHF8rB,CAAQjjC,EAAK/K,GACbqwB,GAAWtlB,EAAK/K,GAChB+K,EAAIywB,YAgBR,SAASyS,GAASljC,EAAK1E,EAAS8X,EAAQ9X,GACtC0E,EAAImjC,QAAU1rC,OAAOhE,EAAoE,GAA3EgE,CAA8E2b,EAAMgwB,eAAgB9nC,EAAQ8nC,gBAC1HpjC,EAAI+wB,YAAYt5B,OAAOhE,EAAoE,GAA3EgE,CAA8E2b,EAAMwS,WAAYtqB,EAAQsqB,aACxH5lB,EAAIgxB,eAAiBv5B,OAAOhE,EAAoE,GAA3EgE,CAA8E2b,EAAMyS,iBAAkBvqB,EAAQuqB,kBACnI7lB,EAAIsiC,SAAW7qC,OAAOhE,EAAoE,GAA3EgE,CAA8E2b,EAAMiwB,gBAAiB/nC,EAAQ+nC,iBAC5HrjC,EAAI0T,UAAYjc,OAAOhE,EAAoE,GAA3EgE,CAA8E2b,EAAMR,YAAatX,EAAQsX,aACzH5S,EAAIwT,YAAc/b,OAAOhE,EAAoE,GAA3EgE,CAA8E2b,EAAMK,YAAanY,EAAQmY,aAE7H,SAAS0d,GAAOnxB,EAAKsjC,EAAUtrC,GAC7BgI,EAAImxB,OAAOn5B,EAAOmJ,EAAGnJ,EAAOoJ,GAW9B,SAASmiC,GAASz0B,EAAQsG,EAASgG,EAAS,IAC1C,MAAM5X,EAAQsL,EAAOpZ,QACdV,MAAOwuC,EAAc,EAAG3mC,IAAK4mC,EAAYjgC,EAAQ,GAAK4X,GACtDpmB,MAAO0uC,EAAc7mC,IAAK8mC,GAAcvuB,EACzCpgB,EAAQF,KAAKgC,IAAI0sC,EAAaE,GAC9B7mC,EAAM/H,KAAKC,IAAI0uC,EAAWE,GAC1BC,EAAUJ,EAAcE,GAAgBD,EAAYC,GAAgBF,EAAcG,GAAcF,EAAYE,EAClH,MAAO,CACLngC,MAAAA,EACAxO,MAAAA,EACA2D,KAAMyc,EAAQzc,KACduE,KAAML,EAAM7H,IAAU4uC,EAAUpgC,EAAQ3G,EAAM7H,EAAQ6H,EAAM7H,GAGhE,SAAS6uC,GAAY7jC,EAAKmU,EAAMiB,EAASgG,GACvC,MAAMtM,OAACA,EAAMxT,QAAEA,GAAW6Y,GACpB3Q,MAACA,EAAKxO,MAAEA,EAAK2D,KAAEA,EAAIuE,KAAEA,GAAQqmC,GAASz0B,EAAQsG,EAASgG,GACvD0oB,EA1BR,SAAuBxoC,GACrB,OAAIA,EAAQyoC,QACHtwC,EAAqE,GAE1E6H,EAAQ0oC,SAA8C,aAAnC1oC,EAAQ2oC,uBACtBxwC,EAAqE,GAEvE09B,GAmBY+S,CAAc5oC,GACjC,IACI1F,EAAGmZ,EAAOpL,GADV8E,KAACA,GAAO,EAAI7L,QAAEA,GAAWwe,GAAU,GAEvC,IAAKxlB,EAAI,EAAGA,GAAKsH,IAAQtH,EACvBmZ,EAAQD,GAAQ9Z,GAAS4H,EAAUM,EAAOtH,EAAIA,IAAM4N,GAChDuL,EAAME,OAECxG,GACTzI,EAAIkxB,OAAOniB,EAAM5N,EAAG4N,EAAM3N,GAC1BqH,GAAO,GAEPq7B,EAAW9jC,EAAK2D,EAAMoL,EAAOnS,EAAStB,EAAQyoC,SAEhDpgC,EAAOoL,GAMT,OAJIpW,IACFoW,EAAQD,GAAQ9Z,GAAS4H,EAAUM,EAAO,IAAMsG,GAChDsgC,EAAW9jC,EAAK2D,EAAMoL,EAAOnS,EAAStB,EAAQyoC,YAEvCprC,EAEX,SAASwrC,GAAgBnkC,EAAKmU,EAAMiB,EAASgG,GAC3C,MAAMtM,EAASqF,EAAKrF,QACdtL,MAACA,EAAKxO,MAAEA,EAAKkI,KAAEA,GAAQqmC,GAASz0B,EAAQsG,EAASgG,IACjD3S,KAACA,GAAO,EAAI7L,QAAEA,GAAWwe,GAAU,GACzC,IAEIxlB,EAAGmZ,EAAOq1B,EAAO7yB,EAAMF,EAAMgzB,EAF7BC,EAAO,EACPC,EAAS,EAEb,MAAMC,EAAcrnC,IAAWnI,GAAS4H,EAAUM,EAAOC,EAAQA,IAAUqG,EACrEihC,EAAQ,KACRlzB,IAASF,IACXrR,EAAImxB,OAAOmT,EAAMjzB,GACjBrR,EAAImxB,OAAOmT,EAAM/yB,GACjBvR,EAAImxB,OAAOmT,EAAMD,KAOrB,IAJI57B,IACFsG,EAAQD,EAAO01B,EAAW,IAC1BxkC,EAAIkxB,OAAOniB,EAAM5N,EAAG4N,EAAM3N,IAEvBxL,EAAI,EAAGA,GAAKsH,IAAQtH,EAAG,CAE1B,GADAmZ,EAAQD,EAAO01B,EAAW5uC,IACtBmZ,EAAME,KACR,SAEF,MAAM9N,EAAI4N,EAAM5N,EACVC,EAAI2N,EAAM3N,EACVsjC,EAAa,EAAJvjC,EACXujC,IAAWN,GACThjC,EAAImQ,EACNA,EAAOnQ,EACEA,EAAIiQ,IACbA,EAAOjQ,GAETkjC,GAAQC,EAASD,EAAOnjC,KAAOojC,IAE/BE,IACAzkC,EAAImxB,OAAOhwB,EAAGC,GACdgjC,EAAQM,EACRH,EAAS,EACThzB,EAAOF,EAAOjQ,GAEhBijC,EAAQjjC,EAEVqjC,IAEF,SAASE,GAAkBxwB,GACzB,MAAMxX,EAAOwX,EAAK7Y,QACZsqB,EAAajpB,EAAKipB,YAAcjpB,EAAKipB,WAAWlwB,OAEtD,OADqBye,EAAKe,aAAef,EAAKzb,QAAUiE,EAAKqnC,SAA2C,aAAhCrnC,EAAKsnC,yBAA0CtnC,EAAKonC,UAAYne,EACnHue,GAAkBN,GAxHzC7yC,GAAWkO,GAAK,MAChBlO,GAAW0Z,SAAW,CACpBiI,YAAa,SACbc,YAAa,OACbotB,aAAc,EACdjuB,YAAa,EACblE,OAAQ,EACRwC,WAAOjd,GAETjD,GAAW0xB,cAAgB,CACzBnP,gBAAiB,mBAgJnB,MAAMqxB,GAA8B,oBAAXC,OACzB,SAAShvC,GAAKmK,EAAKmU,EAAMnf,EAAOwO,GAC1BohC,IAAsC,IAAzBzwB,EAAK2wB,SAASpvC,OAzBjC,SAA6BsK,EAAKmU,EAAMnf,EAAOwO,GAC7C,IAAIuhC,EAAO5wB,EAAK6wB,MACXD,IACHA,EAAO5wB,EAAK6wB,MAAQ,IAAIH,OACpB1wB,EAAK4wB,KAAKA,EAAM/vC,EAAOwO,IACzBuhC,EAAKtE,aAGTyC,GAASljC,EAAKmU,EAAK7Y,SACnB0E,EAAIoxB,OAAO2T,GAiBTE,CAAoBjlC,EAAKmU,EAAMnf,EAAOwO,GAf1C,SAA0BxD,EAAKmU,EAAMnf,EAAOwO,GAC1C,MAAMshC,SAACA,EAAQxpC,QAAEA,GAAW6Y,EACtB+wB,EAAgBP,GAAkBxwB,GACxC,IAAK,MAAMiB,KAAW0vB,EACpB5B,GAASljC,EAAK1E,EAAS8Z,EAAQhC,OAC/BpT,EAAIixB,YACAiU,EAAcllC,EAAKmU,EAAMiB,EAAS,CAACpgB,MAAAA,EAAO6H,IAAK7H,EAAQwO,EAAQ,KACjExD,EAAIygC,YAENzgC,EAAIoxB,SAQJ+T,CAAiBnlC,EAAKmU,EAAMnf,EAAOwO,GAGvC,MAAMvR,WAAoBL,GACxB8B,YAAYqE,GACVgT,QACApX,KAAK0hB,UAAW,EAChB1hB,KAAK2H,aAAUrH,EACfN,KAAK+E,WAAQzE,EACbN,KAAKqjB,eAAY/iB,EACjBN,KAAKqxC,WAAQ/wC,EACbN,KAAKyxC,aAAUnxC,EACfN,KAAK0xC,eAAYpxC,EACjBN,KAAKuhB,YAAa,EAClBvhB,KAAK2xC,gBAAiB,EAClBvtC,GACFN,OAAO+D,OAAO7H,KAAMoE,GAGxBrE,oBAAoB4S,GAClB,MAAMrR,EAAKtB,KACL2H,EAAUrG,EAAGqG,QACnB,IAAKA,EAAQ0oC,SAA8C,aAAnC1oC,EAAQ2oC,0BAA2C3oC,EAAQyoC,UAAY9uC,EAAGqwC,eAAgB,CAChH,MAAM3sC,EAAO2C,EAAQga,SAAWrgB,EAAGyD,MAAQzD,EAAG+hB,UAC9Cvf,OAAOhE,EAAqE,GAA5EgE,CAA+ExC,EAAGmwC,QAAS9pC,EAASgL,EAAW3N,GAC/G1D,EAAGqwC,gBAAiB,GAGxBx2B,WAAWA,GACT,MAAM7Z,EAAKtB,KACXsB,EAAGmwC,QAAUt2B,SACN7Z,EAAGowC,iBACHpwC,EAAG+vC,MACV/vC,EAAGqwC,gBAAiB,EAEtBx2B,aACE,OAAOnb,KAAKyxC,QAEdN,eACE,OAAOnxC,KAAK0xC,YAAc1xC,KAAK0xC,UAAY5tC,OAAOhE,EAAqE,GAA5EgE,CAA+E9D,KAAMA,KAAK2H,QAAQ8Z,UAE/I1hB,QACE,MAAMoxC,EAAWnxC,KAAKmxC,SAChBh2B,EAASnb,KAAKmb,OACpB,OAAOg2B,EAASpvC,QAAUoZ,EAAOg2B,EAAS,GAAG9vC,OAE/CtB,OACE,MAAMoxC,EAAWnxC,KAAKmxC,SAChBh2B,EAASnb,KAAKmb,OACdtL,EAAQshC,EAASpvC,OACvB,OAAO8N,GAASsL,EAAOg2B,EAASthC,EAAQ,GAAG3G,KAE7CnJ,YAAYqb,EAAO8jB,GACjB,MAAM59B,EAAKtB,KACL2H,EAAUrG,EAAGqG,QACbc,EAAQ2S,EAAM8jB,GACd/jB,EAAS7Z,EAAG6Z,OACZg2B,EAAWrtC,OAAOhE,EAAqE,GAA5EgE,CAA+ExC,EAAI,CAAC49B,SAAAA,EAAU79B,MAAOoH,EAAOS,IAAKT,IAClI,IAAK0oC,EAASpvC,OACZ,OAEF,MAAMyuB,EAAS,GACTohB,EAnGV,SAAiCjqC,GAC/B,OAAIA,EAAQyoC,QACHtwC,EAAqE,GAE1E6H,EAAQ0oC,SAA8C,aAAnC1oC,EAAQ2oC,uBACtBxwC,EAAqE,GAEvEA,EAAqE,GA4FrD+xC,CAAwBlqC,GAC7C,IAAI1F,EAAGsH,EACP,IAAKtH,EAAI,EAAGsH,EAAO4nC,EAASpvC,OAAQE,EAAIsH,IAAQtH,EAAG,CACjD,MAAMZ,MAACA,EAAK6H,IAAEA,GAAOioC,EAASlvC,GACxBi7B,EAAK/hB,EAAO9Z,GACZ87B,EAAKhiB,EAAOjS,GAClB,GAAIg0B,IAAOC,EAAI,CACb3M,EAAO5zB,KAAKsgC,GACZ,SAEF,MACM4U,EAAeF,EAAa1U,EAAIC,EAD5Bh8B,KAAK6U,KAAKvN,EAAQy0B,EAAGgC,KAAc/B,EAAG+B,GAAYhC,EAAGgC,KAClBv3B,EAAQyoC,SACrD0B,EAAa5S,GAAY9jB,EAAM8jB,GAC/B1O,EAAO5zB,KAAKk1C,GAEd,OAAyB,IAAlBthB,EAAOzuB,OAAeyuB,EAAO,GAAKA,EAE3CzwB,YAAYsM,EAAKoV,EAASgG,GAExB,OADsBupB,GAAkBhxC,KACjCuxC,CAAcllC,EAAKrM,KAAMyhB,EAASgG,GAE3C1nB,KAAKsM,EAAKhL,EAAOwO,GACf,MAAMvO,EAAKtB,KACLmxC,EAAW7vC,EAAG6vC,SACdI,EAAgBP,GAAkB1vC,GACxC,IAAI0D,EAAO1D,EAAGyD,MACd1D,EAAQA,GAAS,EACjBwO,EAAQA,GAAUvO,EAAG6Z,OAAOpZ,OAASV,EACrC,IAAK,MAAMogB,KAAW0vB,EACpBnsC,GAAQusC,EAAcllC,EAAK/K,EAAImgB,EAAS,CAACpgB,MAAAA,EAAO6H,IAAK7H,EAAQwO,EAAQ,IAEvE,QAAS7K,EAEXjF,KAAKsM,EAAKsG,EAAWtR,EAAOwO,GAC1B,MAAMvO,EAAKtB,KACL2H,EAAUrG,EAAGqG,SAAW,IACfrG,EAAG6Z,QAAU,IAChBpZ,QAAW4F,EAAQsX,cAG/B5S,EAAIuwB,OACJ16B,GAAKmK,EAAK/K,EAAID,EAAOwO,GACrBxD,EAAIywB,UACAx7B,EAAGogB,WACLpgB,EAAGqwC,gBAAiB,EACpBrwC,EAAG+vC,WAAQ/wC,KA2BjB,SAASyxC,GAAUptB,EAAImC,EAAK3b,EAAMga,GAChC,MAAMxd,EAAUgd,EAAGhd,SACZ5H,CAACoL,GAAO1C,GAASkc,EAAGiK,SAAS,CAACzjB,GAAOga,GAC5C,OAAQhkB,KAAK6U,IAAI8Q,EAAMre,GAASd,EAAQ4T,OAAS5T,EAAQqqC,UA1B3D1zC,GAAYiN,GAAK,OACjBjN,GAAYyY,SAAW,CACrB04B,eAAgB,OAChBxd,WAAY,GACZC,iBAAkB,EAClBwd,gBAAiB,QACjBzwB,YAAa,EACbgzB,iBAAiB,EACjB3B,uBAAwB,UACxB9sB,MAAM,EACN7B,UAAU,EACVyuB,SAAS,EACTC,QAAS,GAEX/xC,GAAYywB,cAAgB,CAC1BnP,gBAAiB,kBACjBE,YAAa,eAEfxhB,GAAYshC,YAAc,CACxBx5B,aAAa,EACbD,WAAaE,GAAkB,eAATA,GAAkC,SAATA,GAQjD,MAAM3H,WAAqBT,GACzB8B,YAAYqE,GACVgT,QACApX,KAAK2H,aAAUrH,EACfN,KAAK8K,YAASxK,EACdN,KAAKsb,UAAOhb,EACZN,KAAKgiB,UAAO1hB,EACR8D,GACFN,OAAO+D,OAAO7H,KAAMoE,GAGxBrE,QAAQmyC,EAAQC,EAAQhtB,GACtB,MAAMxd,EAAU3H,KAAK2H,SACf6F,EAACA,EAACC,EAAEA,GAAKzN,KAAK4uB,SAAS,CAAC,IAAK,KAAMzJ,GACzC,OAAShkB,KAAK4kB,IAAImsB,EAAS1kC,EAAG,GAAKrM,KAAK4kB,IAAIosB,EAAS1kC,EAAG,GAAMtM,KAAK4kB,IAAIpe,EAAQqqC,UAAYrqC,EAAQ4T,OAAQ,GAE7Gxb,SAASmyC,EAAQ/sB,GACf,OAAO4sB,GAAU/xC,KAAMkyC,EAAQ,IAAK/sB,GAEtCplB,SAASoyC,EAAQhtB,GACf,OAAO4sB,GAAU/xC,KAAMmyC,EAAQ,IAAKhtB,GAEtCplB,eAAeolB,GACb,MAAM3X,EAACA,EAACC,EAAEA,GAAKzN,KAAK4uB,SAAS,CAAC,IAAK,KAAMzJ,GACzC,MAAO,CAAC3X,EAAAA,EAAGC,EAAAA,GAEb1N,KAAK4H,GAEH,IAAI4T,GADJ5T,EAAUA,GAAW3H,KAAK2H,SAAW,IAChB4T,QAAU,EAC/BA,EAASpa,KAAKgC,IAAIoY,EAAQA,GAAU5T,EAAQyqC,aAAe,GAE3D,OAAgC,GAAxB72B,GADYA,GAAU5T,EAAQsX,aAAe,IAGvDlf,KAAKsM,GACH,MAAM/K,EAAKtB,KACL2H,EAAUrG,EAAGqG,QACfrG,EAAGga,MAAQ3T,EAAQ4T,OAAS,KAGhClP,EAAIwT,YAAclY,EAAQmY,YAC1BzT,EAAI0T,UAAYpY,EAAQsX,YACxB5S,EAAIsT,UAAYhY,EAAQiY,gBACxB9b,OAAOhE,EAAqE,GAA5EgE,CAA+EuI,EAAK1E,EAASrG,EAAGkM,EAAGlM,EAAGmM,IAExG1N,WACE,MAAM4H,EAAU3H,KAAK2H,SAAW,GAChC,OAAOA,EAAQ4T,OAAS5T,EAAQqqC,WAkBpC,SAASK,GAAaC,EAAKntB,GACzB,MAAM3X,EAACA,EAACC,EAAEA,EAAC8J,KAAEA,EAAIiB,MAAEA,EAAKD,OAAEA,GAAU+5B,EAAI1jB,SAAS,CAAC,IAAK,IAAK,OAAQ,QAAS,UAAWzJ,GACxF,IAAI9S,EAAMF,EAAOD,EAAKE,EAAQmgC,EAc9B,OAbID,EAAI76B,YACN86B,EAAOh6B,EAAS,EAChBlG,EAAOlR,KAAKC,IAAIoM,EAAG+J,GACnBpF,EAAQhR,KAAKgC,IAAIqK,EAAG+J,GACpBrF,EAAMzE,EAAI8kC,EACVngC,EAAS3E,EAAI8kC,IAEbA,EAAO/5B,EAAQ,EACfnG,EAAO7E,EAAI+kC,EACXpgC,EAAQ3E,EAAI+kC,EACZrgC,EAAM/Q,KAAKC,IAAIqM,EAAG8J,GAClBnF,EAASjR,KAAKgC,IAAIsK,EAAG8J,IAEhB,CAAClF,KAAAA,EAAMH,IAAAA,EAAKC,MAAAA,EAAOC,OAAAA,GAE5B,SAASogC,GAAmBF,GAC1B,IAAIlf,EAAOkf,EAAI3qC,QAAQ8qC,cACvB,MAAM/sC,EAAM,GACZ,OAAK0tB,GAGLA,EAAOkf,EAAI76B,WACPi7B,GAAUtf,EAAM,OAAQ,QAASkf,EAAI/6B,KAAO+6B,EAAI9kC,GAChDklC,GAAUtf,EAAM,SAAU,MAAOkf,EAAI/6B,KAAO+6B,EAAI7kC,GACpD/H,EAAI0tB,IAAQ,EACL1tB,GANEA,EAQX,SAASgtC,GAAUtf,EAAMzd,EAAG3D,EAAG/I,GAS/B,IAAc0pC,EAAMxrB,EAAIyrB,EAFtB,OANI3pC,GAQkB2pC,EAPC5gC,EACrBohB,EAAOyf,GADPzf,GAOUuf,EAPEvf,MAOIjM,EAPExR,GAQCi9B,EAAKD,IAASC,EAAKzrB,EAAKwrB,EAPrB3gC,EAAG2D,IAEzByd,EAAOyf,GAASzf,EAAMzd,EAAG3D,GAEpBohB,EAKT,SAASyf,GAAS9rC,EAAG1F,EAAO6H,GAC1B,MAAa,UAANnC,EAAgB1F,EAAc,QAAN0F,EAAcmC,EAAMnC,EAErD,SAAS+rC,GAAYx3B,EAAM7S,EAAOrH,EAAK+B,GACrC,OAAOmY,EAAO,EAAIna,KAAKgC,IAAIhC,KAAKC,IAAIqH,EAAOtF,GAAM/B,GA2BnD,SAAS2xC,GAAcT,GACrB,MAAM7gB,EAAS4gB,GAAaC,GACtB95B,EAAQiZ,EAAOtf,MAAQsf,EAAOpf,KAC9BkG,EAASkZ,EAAOrf,OAASqf,EAAOvf,IAChC+P,EA7BR,SAA0BqwB,EAAKU,EAAMC,GACnC,MAAMxqC,EAAQ6pC,EAAI3qC,QAAQsX,YACpB3D,EAAOk3B,GAAmBF,GAC1BrF,EAAInpC,OAAOhE,EAAqE,GAA5EgE,CAA+E2E,GACzF,MAAO,CACLsJ,EAAG+gC,GAAYx3B,EAAKpJ,IAAK+6B,EAAE/6B,IAAK,EAAG+gC,GACnCh2C,EAAG61C,GAAYx3B,EAAKnJ,MAAO86B,EAAE96B,MAAO,EAAG6gC,GACvChhC,EAAG8gC,GAAYx3B,EAAKlJ,OAAQ66B,EAAE76B,OAAQ,EAAG6gC,GACzChhC,EAAG6gC,GAAYx3B,EAAKjJ,KAAM46B,EAAE56B,KAAM,EAAG2gC,IAqBxBE,CAAiBZ,EAAK95B,EAAQ,EAAGD,EAAS,GACnDgD,EAnBR,SAA2B+2B,EAAKU,EAAMC,GACpC,MAAM56B,mBAACA,GAAsBi6B,EAAI1jB,SAAS,CAAC,uBACrCnmB,EAAQ6pC,EAAI3qC,QAAQulC,aACpBD,EAAInpC,OAAOhE,EAAqE,GAA5EgE,CAA+E2E,GACnF0qC,EAAOhyC,KAAKC,IAAI4xC,EAAMC,GACtB33B,EAAOk3B,GAAmBF,GAC1Bc,EAAe/6B,GAAsBvU,OAAOhE,EAAoE,GAA3EgE,CAA8E2E,GACzH,MAAO,CACL4qC,QAASP,IAAaM,GAAgB93B,EAAKpJ,KAAOoJ,EAAKjJ,KAAM46B,EAAEoG,QAAS,EAAGF,GAC3EG,SAAUR,IAAaM,GAAgB93B,EAAKpJ,KAAOoJ,EAAKnJ,MAAO86B,EAAEqG,SAAU,EAAGH,GAC9EI,WAAYT,IAAaM,GAAgB93B,EAAKlJ,QAAUkJ,EAAKjJ,KAAM46B,EAAEsG,WAAY,EAAGJ,GACpFK,YAAaV,IAAaM,GAAgB93B,EAAKlJ,QAAUkJ,EAAKnJ,MAAO86B,EAAEuG,YAAa,EAAGL,IAQ1EM,CAAkBnB,EAAK95B,EAAQ,EAAGD,EAAS,GAC1D,MAAO,CACLm7B,MAAO,CACLlmC,EAAGikB,EAAOpf,KACV5E,EAAGgkB,EAAOvf,IACV+V,EAAGzP,EACH2P,EAAG5P,EACHgD,OAAAA,GAEFmzB,MAAO,CACLlhC,EAAGikB,EAAOpf,KAAO4P,EAAOhQ,EACxBxE,EAAGgkB,EAAOvf,IAAM+P,EAAOlQ,EACvBkW,EAAGzP,EAAQyJ,EAAOhQ,EAAIgQ,EAAOhlB,EAC7BkrB,EAAG5P,EAAS0J,EAAOlQ,EAAIkQ,EAAOjQ,EAC9BuJ,OAAQ,CACN83B,QAASlyC,KAAKgC,IAAI,EAAGoY,EAAO83B,QAAUlyC,KAAKgC,IAAI8e,EAAOlQ,EAAGkQ,EAAOhQ,IAChEqhC,SAAUnyC,KAAKgC,IAAI,EAAGoY,EAAO+3B,SAAWnyC,KAAKgC,IAAI8e,EAAOlQ,EAAGkQ,EAAOhlB,IAClEs2C,WAAYpyC,KAAKgC,IAAI,EAAGoY,EAAOg4B,WAAapyC,KAAKgC,IAAI8e,EAAOjQ,EAAGiQ,EAAOhQ,IACtEuhC,YAAaryC,KAAKgC,IAAI,EAAGoY,EAAOi4B,YAAcryC,KAAKgC,IAAI8e,EAAOjQ,EAAGiQ,EAAOhlB,OAKhF,SAASooB,GAAQitB,EAAK9kC,EAAGC,EAAG0X,GAC1B,MAAMwuB,EAAc,OAANnmC,EACRomC,EAAc,OAANnmC,EAERgkB,EAAS6gB,KADEqB,GAASC,IACSvB,GAAaC,EAAKntB,GACrD,OAAOsM,IACHkiB,GAASnmC,GAAKikB,EAAOpf,MAAQ7E,GAAKikB,EAAOtf,SACzCyhC,GAASnmC,GAAKgkB,EAAOvf,KAAOzE,GAAKgkB,EAAOrf,QAK9C,SAASyhC,GAAkBxnC,EAAKynC,GAC9BznC,EAAIynC,KAAKA,EAAKtmC,EAAGsmC,EAAKrmC,EAAGqmC,EAAK7rB,EAAG6rB,EAAK3rB,GAjIxCzpB,GAAa6M,GAAK,QAClB7M,GAAaqY,SAAW,CACtBkI,YAAa,EACb+yB,UAAW,EACX9yB,iBAAkB,EAClBkzB,YAAa,EACb2B,WAAY,SACZx4B,OAAQ,EACRO,SAAU,GAEZpd,GAAaqwB,cAAgB,CAC3BnP,gBAAiB,kBACjBE,YAAa,eAuHf,MAAMviB,WAAmBU,GACvB8B,YAAYqE,GACVgT,QACApX,KAAK2H,aAAUrH,EACfN,KAAKyX,gBAAanX,EAClBN,KAAKuX,UAAOjX,EACZN,KAAKwY,WAAQlY,EACbN,KAAKuY,YAASjY,EACV8D,GACFN,OAAO+D,OAAO7H,KAAMoE,GAGxBrE,KAAKsM,GACH,MAAM1E,EAAU3H,KAAK2H,SACf+mC,MAACA,EAAKgF,MAAEA,GAASX,GAAc/yC,MAC/Bg0C,GArBSz4B,EAqBem4B,EAAMn4B,QApBxB83B,SAAW93B,EAAO+3B,UAAY/3B,EAAOg4B,YAAch4B,EAAOi4B,YAoBxB1zC,EAAqE,GAAI+zC,GArB3H,IAAmBt4B,EAsBflP,EAAIuwB,OACA8W,EAAMzrB,IAAMymB,EAAMzmB,GAAKyrB,EAAMvrB,IAAMumB,EAAMvmB,IAC3C9b,EAAIixB,YACJ0W,EAAY3nC,EAAKqnC,GACjBrnC,EAAIkG,OACJyhC,EAAY3nC,EAAKqiC,GACjBriC,EAAIsT,UAAYhY,EAAQmY,YACxBzT,EAAImX,KAAK,YAEXnX,EAAIixB,YACJ0W,EAAY3nC,EAAKqiC,GACjBriC,EAAIsT,UAAYhY,EAAQiY,gBACxBvT,EAAImX,OACJnX,EAAIywB,UAEN/8B,QAAQmyC,EAAQC,EAAQhtB,GACtB,OAAOE,GAAQrlB,KAAMkyC,EAAQC,EAAQhtB,GAEvCplB,SAASmyC,EAAQ/sB,GACf,OAAOE,GAAQrlB,KAAMkyC,EAAQ,KAAM/sB,GAErCplB,SAASoyC,EAAQhtB,GACf,OAAOE,GAAQrlB,KAAM,KAAMmyC,EAAQhtB,GAErCplB,eAAeolB,GACb,MAAM3X,EAACA,EAACC,EAAEA,EAAC8J,KAAEA,EAAIE,WAAEA,GAAczX,KAAK4uB,SAAS,CAAC,IAAK,IAAK,OAAQ,cAAezJ,GACjF,MAAO,CACL3X,EAAGiK,GAAcjK,EAAI+J,GAAQ,EAAI/J,EACjCC,EAAGgK,EAAahK,GAAKA,EAAI8J,GAAQ,GAGrCxX,SAASoL,GACP,MAAgB,MAATA,EAAenL,KAAKwY,MAAQ,EAAIxY,KAAKuY,OAAS,GAGzDhb,GAAWgO,GAAK,MAChBhO,GAAWwZ,SAAW,CACpB07B,cAAe,QACfxzB,YAAa,EACbiuB,aAAc,EACd70B,oBAAoB,EACpB07B,gBAAYzzC,GAEd/C,GAAWwxB,cAAgB,CACzBnP,gBAAiB,kBACjBE,YAAa,eAGf,IAAItgB,GAAwBsE,OAAOkQ,OAAO,CAC1CyP,UAAW,KACXpmB,WAAYA,GACZiB,YAAaA,GACbI,aAAcA,GACdnB,WAAYA,KAsGZ,SAAS02C,GAAsB5mC,GAC7B,GAAIA,EAAQkU,WAAY,CACtB,MAAM9S,EAAOpB,EAAQX,aACdW,EAAQkU,kBACRlU,EAAQX,MACf5I,OAAOowC,eAAe7mC,EAAS,OAAQ,CAAC5E,MAAOgG,KAGnD,SAAS0lC,GAAmB5zC,GAC1BA,EAAMkO,KAAKC,SAAS3N,SAASsM,IAC3B4mC,GAAsB5mC,MAmB1B,IAAIvP,GAAoB,CACtByN,GAAI,aACJwL,SAAU,CACRq9B,UAAW,UACX7jB,SAAS,GAEX8jB,qBAAsB,CAAC9zC,EAAOqtB,EAAMjmB,KAClC,IAAKA,EAAQ4oB,QAEX,YADA4jB,GAAmB5zC,GAGrB,MAAM+oB,EAAiB/oB,EAAMiY,MAC7BjY,EAAMkO,KAAKC,SAAS3N,SAAQ,CAACsM,EAASvD,KACpC,MAAM4C,MAACA,EAAKsB,UAAEA,GAAaX,EACrBpD,EAAO1J,EAAMoO,eAAe7E,GAC5B2E,EAAO/B,GAASW,EAAQoB,KAC9B,GAA2H,MAAvH3K,OAAOhE,EAAmE,EAA1EgE,CAA6E,CAACkK,EAAWzN,EAAMoH,QAAQqG,YACzG,OAEF,GAAkB,SAAd/D,EAAKvJ,KACP,OAEF,MAAM4zC,EAAQ/zC,EAAMV,OAAOoK,EAAK0D,SAChC,GAAmB,WAAf2mC,EAAM5zC,MAAoC,SAAf4zC,EAAM5zC,KACnC,OAEF,GAAIH,EAAMoH,QAAQiI,QAChB,OAEF,IAmBI2kC,GAnBAlzC,MAACA,EAAKwO,MAAEA,GA7ClB,SAAmD5F,EAAMkR,GACvD,MAAMwF,EAAaxF,EAAOpZ,OAC1B,IACI8N,EADAxO,EAAQ,EAEZ,MAAM4J,OAACA,GAAUhB,GACX7I,IAACA,EAAG+B,IAAEA,EAAGmO,WAAEA,EAAUC,WAAEA,GAActG,EAAOuG,gBASlD,OARIF,IACFjQ,EAAQyC,OAAOhE,EAAoE,GAA3EgE,CAA8EA,OAAOhE,EAAoE,GAA3EgE,CAA8EqX,EAAQlQ,EAAOE,KAAM/J,GAAKwf,GAAI,EAAGD,EAAa,IAGlN9Q,EADE0B,EACMzN,OAAOhE,EAAoE,GAA3EgE,CAA8EA,OAAOhE,EAAoE,GAA3EgE,CAA8EqX,EAAQlQ,EAAOE,KAAMhI,GAAK0d,GAAK,EAAGxf,EAAOsf,GAActf,EAEnNsf,EAAatf,EAEhB,CAACA,MAAAA,EAAOwO,MAAAA,GA+BU2kC,CAA0CvqC,EAAMwE,GACrE,GAAIoB,GAAS,EAAIyZ,EACf2qB,GAAsB5mC,OADxB,CAmBA,OAfIvJ,OAAOhE,EAAoE,GAA3EgE,CAA8E4I,KAChFW,EAAQX,MAAQ+B,SACTpB,EAAQoB,KACf3K,OAAOowC,eAAe7mC,EAAS,OAAQ,CACrConC,cAAc,EACd/H,YAAY,EACZjqC,IAAK,WACH,OAAOzC,KAAKuhB,YAEd3e,IAAK,SAAS1F,GACZ8C,KAAK0M,MAAQxP,MAKXyK,EAAQysC,WAChB,IAAK,OACHG,EAnLR,SAAwB9lC,EAAMpN,EAAOwO,EAAOyZ,EAAgB3hB,GAC1D,MAAM+sC,EAAU/sC,EAAQ+sC,SAAWprB,EACnC,GAAIorB,GAAW7kC,EACb,OAAOpB,EAAK8R,MAAMlf,EAAOA,EAAQwO,GAEnC,MAAM0kC,EAAY,GACZI,GAAe9kC,EAAQ,IAAM6kC,EAAU,GAC7C,IAAIE,EAAe,EACnB,MAAMC,EAAWxzC,EAAQwO,EAAQ,EACjC,IACI5N,EAAG6yC,EAAcC,EAASriC,EAAMsiC,EADhCr/B,EAAItU,EAGR,IADAkzC,EAAUK,KAAkBnmC,EAAKkH,GAC5B1T,EAAI,EAAGA,EAAIyyC,EAAU,EAAGzyC,IAAK,CAChC,IAEIgjB,EAFA0rB,EAAO,EACPsE,EAAO,EAEX,MAAMC,EAAgB/zC,KAAK0D,OAAO5C,EAAI,GAAK0yC,GAAe,EAAItzC,EACxD8zC,EAAch0C,KAAKC,IAAID,KAAK0D,OAAO5C,EAAI,GAAK0yC,GAAe,EAAG9kC,GAASxO,EACvE+zC,EAAiBD,EAAcD,EACrC,IAAKjwB,EAAIiwB,EAAejwB,EAAIkwB,EAAalwB,IACvC0rB,GAAQliC,EAAKwW,GAAGzX,EAChBynC,GAAQxmC,EAAKwW,GAAGxX,EAElBkjC,GAAQyE,EACRH,GAAQG,EACR,MAAMC,EAAYl0C,KAAK0D,MAAM5C,EAAI0yC,GAAe,EAAItzC,EAC9Ci0C,EAAUn0C,KAAK0D,OAAO5C,EAAI,GAAK0yC,GAAe,EAAItzC,GACjDmM,EAAG+nC,EAAS9nC,EAAG+nC,GAAW/mC,EAAKkH,GAEtC,IADAo/B,EAAUriC,GAAQ,EACbuS,EAAIowB,EAAWpwB,EAAIqwB,EAASrwB,IAC/BvS,EAAO,GAAMvR,KAAK6U,KACfu/B,EAAU5E,IAASliC,EAAKwW,GAAGxX,EAAI+nC,IAC/BD,EAAU9mC,EAAKwW,GAAGzX,IAAMynC,EAAOO,IAE9B9iC,EAAOqiC,IACTA,EAAUriC,EACVoiC,EAAermC,EAAKwW,GACpB+vB,EAAQ/vB,GAGZsvB,EAAUK,KAAkBE,EAC5Bn/B,EAAIq/B,EAGN,OADAT,EAAUK,KAAkBnmC,EAAKomC,GAC1BN,EAuIWkB,CAAehnC,EAAMpN,EAAOwO,EAAOyZ,EAAgB3hB,GAC/D,MACF,IAAK,UACH4sC,EAxIR,SAA0B9lC,EAAMpN,EAAOwO,EAAOyZ,GAC5C,IAEIrnB,EAAGmZ,EAAO5N,EAAGC,EAAGgjC,EAAOiF,EAAUC,EAAUC,EAAYh4B,EAAMF,EAF7DizB,EAAO,EACPC,EAAS,EAEb,MAAM2D,EAAY,GACZM,EAAWxzC,EAAQwO,EAAQ,EAC3BgmC,EAAOpnC,EAAKpN,GAAOmM,EAEnBsoC,EADOrnC,EAAKomC,GAAUrnC,EACVqoC,EAClB,IAAK5zC,EAAIZ,EAAOY,EAAIZ,EAAQwO,IAAS5N,EAAG,CACtCmZ,EAAQ3M,EAAKxM,GACbuL,GAAK4N,EAAM5N,EAAIqoC,GAAQC,EAAKxsB,EAC5B7b,EAAI2N,EAAM3N,EACV,MAAMsjC,EAAa,EAAJvjC,EACf,GAAIujC,IAAWN,EACThjC,EAAImQ,GACNA,EAAOnQ,EACPioC,EAAWzzC,GACFwL,EAAIiQ,IACbA,EAAOjQ,EACPkoC,EAAW1zC,GAEb0uC,GAAQC,EAASD,EAAOv1B,EAAM5N,KAAOojC,MAChC,CACL,MAAMmF,EAAY9zC,EAAI,EACtB,IAAK6B,OAAOhE,EAAoE,GAA3EgE,CAA8E4xC,KAAc5xC,OAAOhE,EAAoE,GAA3EgE,CAA8E6xC,GAAW,CACxL,MAAMK,EAAqB70C,KAAKC,IAAIs0C,EAAUC,GACxCM,EAAqB90C,KAAKgC,IAAIuyC,EAAUC,GAC1CK,IAAuBJ,GAAcI,IAAuBD,GAC9DxB,EAAU33C,KAAK,IACV6R,EAAKunC,GACRxoC,EAAGmjC,IAGHsF,IAAuBL,GAAcK,IAAuBF,GAC9DxB,EAAU33C,KAAK,IACV6R,EAAKwnC,GACRzoC,EAAGmjC,IAIL1uC,EAAI,GAAK8zC,IAAcH,GACzBrB,EAAU33C,KAAK6R,EAAKsnC,IAEtBxB,EAAU33C,KAAKwe,GACfq1B,EAAQM,EACRH,EAAS,EACThzB,EAAOF,EAAOjQ,EACdioC,EAAWC,EAAWC,EAAa3zC,GAGvC,OAAOsyC,EAqFW2B,CAAiBznC,EAAMpN,EAAOwO,EAAOyZ,GACjD,MACF,QACE,MAAM,IAAI3F,MAAM,qCAAqChc,EAAQysC,cAE/D/mC,EAAQkU,WAAagzB,OAGzBx0C,QAAQQ,GACN4zC,GAAmB5zC,KAwBvB,SAAS41C,GAAW31B,EAAMhX,EAAOqG,GAC/B,MAAM2T,EAhBR,SAAyBhD,GACvB,MAAM7Y,EAAU6Y,EAAK7Y,QACfyuC,EAAazuC,EAAQ6b,KAC3B,IAAIA,EAAO1f,OAAOhE,EAAoE,GAA3EgE,CAA8EsyC,GAAcA,EAAW/xC,OAAQ+xC,GAI1H,YAHa91C,IAATkjB,IACFA,IAAS7b,EAAQiY,kBAEN,IAAT4D,GAA2B,OAATA,KAGT,IAATA,EACK,SAEFA,GAGM6yB,CAAgB71B,GAC7B,GAAI1c,OAAOhE,EAAoE,GAA3EgE,CAA8E0f,GAChF,OAAO5K,MAAM4K,EAAK/a,QAAiB+a,EAErC,IAAInf,EAASiyC,WAAW9yB,GACxB,OAAI1f,OAAOhE,EAAoE,GAA3EgE,CAA8EO,IAAWlD,KAAK0D,MAAMR,KAAYA,GAClG,MAAZmf,EAAK,IAA0B,MAAZA,EAAK,KAC1Bnf,EAASmF,EAAQnF,KAEfA,IAAWmF,GAASnF,EAAS,GAAKA,GAAUwL,IAGzCxL,GAEF,CAAC,SAAU,QAAS,MAAO,SAASwU,QAAQ2K,IAAS,GAAKA,EAwBnE,MAAM+yB,GACJx2C,YAAYiJ,GACVhJ,KAAKwN,EAAIxE,EAAKwE,EACdxN,KAAKyN,EAAIzE,EAAKyE,EACdzN,KAAKub,OAASvS,EAAKuS,OAErBxb,YAAYsM,EAAKolB,EAAQzoB,GACvB,MAAMwE,EAACA,EAACC,EAAEA,EAAC8N,OAAEA,GAAUvb,KAGvB,OAFAyxB,EAASA,GAAU,CAACpwB,MAAO,EAAG6H,IAAKpJ,EAAmE,GACtGuM,EAAIwS,IAAIrR,EAAGC,EAAG8N,EAAQkW,EAAOvoB,IAAKuoB,EAAOpwB,OAAO,IACxC2H,EAAKyoB,OAEf1xB,YAAYqb,GACV,MAAM5N,EAACA,EAACC,EAAEA,EAAC8N,OAAEA,GAAUvb,KACjBud,EAAQnC,EAAMmC,MACpB,MAAO,CACL/P,EAAGA,EAAIrM,KAAK8b,IAAIM,GAAShC,EACzB9N,EAAGA,EAAItM,KAAKgc,IAAII,GAAShC,EACzBgC,MAAAA,IAkCN,SAASi5B,GAAgB3f,GAEvB,OADcA,EAAO/tB,OAAS,IACpBya,yBAhCZ,SAAiCsT,GAC/B,MAAM/tB,MAACA,EAAK0a,KAAEA,GAAQqT,EAChBlvB,EAAUmB,EAAMnB,QAChB5F,EAAS+G,EAAMwH,YAAYvO,OAC3BsC,EAAS,GACThD,EAAQsG,EAAQsB,QAAUH,EAAM3F,IAAM2F,EAAM1H,IAC5C8H,EAAMvB,EAAQsB,QAAUH,EAAM1H,IAAM0H,EAAM3F,IAChD,IAAIlB,EAAGqW,EAAQ7P,EAUf,GAREA,EADW,UAAT+a,EACMniB,EACU,QAATmiB,EACDta,EACCpF,OAAOhE,EAAoE,GAA3EgE,CAA8E0f,GAC/EA,EAAK/a,MAELK,EAAMuxB,eAEZ1yB,EAAQqT,KAAKmI,SAEf,OADA7K,EAASxP,EAAMya,yBAAyB,EAAGliB,GACpC,IAAIk1C,GAAU,CACnB/oC,EAAG8K,EAAO9K,EACVC,EAAG6K,EAAO7K,EACV8N,OAAQzS,EAAMka,8BAA8Bva,KAGhD,IAAKxG,EAAI,EAAGA,EAAIF,IAAUE,EACxBoC,EAAOzH,KAAKkM,EAAMya,yBAAyBthB,EAAGwG,IAEhD,OAAOpE,EAKEoyC,CAAwB5f,GA7EnC,SAA+BA,GAC7B,MAAM/tB,MAACA,EAAQ,GAAE0a,KAAEA,GAAQqT,EAC3B,IACIpf,EADApT,EAAS,KAWb,MATa,UAATmf,EACFnf,EAASyE,EAAMsJ,OACG,QAAToR,EACTnf,EAASyE,EAAMoJ,IACNpO,OAAOhE,EAAoE,GAA3EgE,CAA8E0f,GACvFnf,EAASyE,EAAMmN,iBAAiBuN,EAAK/a,OAC5BK,EAAM0O,eACfnT,EAASyE,EAAM0O,gBAEb1T,OAAOhE,EAAoE,GAA3EgE,CAA8EO,IAChFoT,EAAa3O,EAAM4O,eACZ,CACLlK,EAAGiK,EAAapT,EAAS,KACzBoJ,EAAGgK,EAAa,KAAOpT,IAGpB,KA2DAqyC,CAAsB7f,GAmB/B,SAAS8f,GAAe9f,GACtB,MAAMt2B,MAACA,EAAKuI,MAAEA,EAAKU,MAAEA,EAAKgX,KAAEA,GAAQqW,EAC9B1b,EAAS,GACTg2B,EAAW3wB,EAAK2wB,SAChByF,EAAep2B,EAAKrF,OACpB07B,EAWR,SAAuBt2C,EAAOiJ,GAC5B,MAAMstC,EAAQ,GACRvhC,EAAQhV,EAAMykB,+BACpB,IAAK,IAAI/iB,EAAI,EAAGA,EAAIsT,EAAMxT,OAAQE,IAAK,CACrC,MAAMgI,EAAOsL,EAAMtT,GACnB,GAAIgI,EAAKT,QAAUA,EACjB,MAEEutC,GAA4B9sC,IAC9B6sC,EAAME,QAAQ/sC,EAAKoD,SAGvB,OAAOypC,EAvBYG,CAAc12C,EAAOiJ,GACxCqtC,EAAWj6C,KAAKs6C,GAAmB,CAAC1pC,EAAG,KAAMC,EAAG3E,EAAMsJ,QAASoO,IAC/D,IAAK,IAAIve,EAAI,EAAGA,EAAIkvC,EAASpvC,OAAQE,IAAK,CACxC,MAAMwf,EAAU0vB,EAASlvC,GACzB,IAAK,IAAIgjB,EAAIxD,EAAQpgB,MAAO4jB,GAAKxD,EAAQvY,IAAK+b,IAC5CkyB,GAAeh8B,EAAQy7B,EAAa3xB,GAAI4xB,GAG5C,OAAO,IAAIv4C,GAAY,CAAC6c,OAAAA,EAAQxT,QAAS,KAE3C,MAAMovC,GAA+B9sC,GAAuB,SAAdA,EAAKvJ,OAAoBuJ,EAAK+V,OAe5E,SAASm3B,GAAeh8B,EAAQi8B,EAAaP,GAC3C,MAAMQ,EAAY,GAClB,IAAK,IAAIpyB,EAAI,EAAGA,EAAI4xB,EAAW90C,OAAQkjB,IAAK,CAC1C,MAAMzE,EAAOq2B,EAAW5xB,IAClB0L,MAACA,EAAKjY,KAAEA,EAAI0C,MAAEA,GAASk8B,GAAU92B,EAAM42B,EAAa,KAC1D,MAAKh8B,GAAUuV,GAASjY,GAGxB,GAAIiY,EACF0mB,EAAUL,QAAQ57B,QAGlB,GADAD,EAAOve,KAAKwe,IACP1C,EACH,MAINyC,EAAOve,QAAQy6C,GAEjB,SAASC,GAAU92B,EAAM42B,EAAalY,GACpC,MAAM9jB,EAAQoF,EAAK+2B,YAAYH,EAAalY,GAC5C,IAAK9jB,EACH,MAAO,GAET,MAAMo8B,EAAap8B,EAAM8jB,GACnBiS,EAAW3wB,EAAK2wB,SAChBsG,EAAaj3B,EAAKrF,OACxB,IAAIwV,GAAQ,EACRjY,GAAO,EACX,IAAK,IAAIzW,EAAI,EAAGA,EAAIkvC,EAASpvC,OAAQE,IAAK,CACxC,MAAMwf,EAAU0vB,EAASlvC,GACnBy1C,EAAaD,EAAWh2B,EAAQpgB,OAAO69B,GACvCyY,EAAYF,EAAWh2B,EAAQvY,KAAKg2B,GAC1C,GAAIsY,GAAcE,GAAcF,GAAcG,EAAW,CACvDhnB,EAAQ6mB,IAAeE,EACvBh/B,EAAO8+B,IAAeG,EACtB,OAGJ,MAAO,CAAChnB,MAAAA,EAAOjY,KAAAA,EAAM0C,MAAAA,GAgBvB,SAAS87B,GAAmBU,EAAUp3B,GACpC,IAAIrF,EAAS,GACTpW,GAAQ,EAOZ,OANIjB,OAAOhE,EAAoE,GAA3EgE,CAA8E8zC,IAChF7yC,GAAQ,EACRoW,EAASy8B,GAETz8B,EA7GJ,SAA4By8B,EAAUp3B,GACpC,MAAMhT,EAACA,EAAI,KAAIC,EAAEA,EAAI,MAAQmqC,GAAY,GACnCH,EAAaj3B,EAAKrF,OAClBA,EAAS,GAYf,OAXAqF,EAAK2wB,SAASpwC,SAAS0gB,IACrB,MAAMkP,EAAQ8mB,EAAWh2B,EAAQpgB,OAC3BqX,EAAO++B,EAAWh2B,EAAQvY,KACtB,OAANuE,GACF0N,EAAOve,KAAK,CAAC4Q,EAAGmjB,EAAMnjB,EAAGC,EAAAA,IACzB0N,EAAOve,KAAK,CAAC4Q,EAAGkL,EAAKlL,EAAGC,EAAAA,KACT,OAAND,IACT2N,EAAOve,KAAK,CAAC4Q,EAAAA,EAAGC,EAAGkjB,EAAMljB,IACzB0N,EAAOve,KAAK,CAAC4Q,EAAAA,EAAGC,EAAGiL,EAAKjL,QAGrB0N,EA8FI08B,CAAmBD,EAAUp3B,GAEjCrF,EAAOpZ,OAAS,IAAIzD,GAAY,CACrC6c,OAAAA,EACAxT,QAAS,CAAC0oC,QAAS,GACnBtrC,MAAAA,EACAse,UAAWte,IACR,KAEP,SAAS+yC,GAAcC,EAASvuC,EAAOwuC,GAErC,IAAIx0B,EADWu0B,EAAQvuC,GACLga,KAClB,MAAMy0B,EAAU,CAACzuC,GACjB,IAAInF,EACJ,IAAK2zC,EACH,OAAOx0B,EAET,MAAgB,IAATA,IAA6C,IAA3By0B,EAAQp/B,QAAQ2K,IAAc,CACrD,IAAK1f,OAAOhE,EAAoE,GAA3EgE,CAA8E0f,GACjF,OAAOA,EAGT,GADAnf,EAAS0zC,EAAQv0B,IACZnf,EACH,OAAO,EAET,GAAIA,EAAOwC,QACT,OAAO2c,EAETy0B,EAAQr7C,KAAK4mB,GACbA,EAAOnf,EAAOmf,KAEhB,OAAO,EAET,SAAS1R,GAAMzF,EAAKhI,EAAQ6zC,GAC1B7rC,EAAIixB,YACJj5B,EAAO+sC,KAAK/kC,GACZA,EAAImxB,OAAOn5B,EAAOqU,OAAOlL,EAAG0qC,GAC5B7rC,EAAImxB,OAAOn5B,EAAOssB,QAAQnjB,EAAG0qC,GAC7B7rC,EAAIygC,YACJzgC,EAAIkG,OAEN,SAAS4lC,GAAUjZ,EAAUvO,EAAOjY,EAAM1T,GACxC,GAAIA,EACF,OAEF,IAAI3D,EAAQsvB,EAAMuO,GACdh2B,EAAMwP,EAAKwmB,GAKf,MAJiB,UAAbA,IACF79B,EAAQyC,OAAOhE,EAAqE,GAA5EgE,CAA+EzC,GACvF6H,EAAMpF,OAAOhE,EAAqE,GAA5EgE,CAA+EoF,IAEhF,CAACg2B,SAAAA,EAAU79B,MAAAA,EAAO6H,IAAAA,GAE3B,SAASkvC,GAASziC,EAAG3D,EAAG1N,EAAMtD,GAC5B,OAAI2U,GAAK3D,EACAhR,EAAG2U,EAAErR,GAAO0N,EAAE1N,IAEhBqR,EAAIA,EAAErR,GAAQ0N,EAAIA,EAAE1N,GAAQ,EAsCrC,SAAS+zC,GAAWhsC,EAAKvD,EAAO2oB,GAC9B,MAAMvf,IAACA,EAAGE,OAAEA,GAAUtJ,EAAMvI,MAAMoS,WAC5BusB,SAACA,EAAQ79B,MAAEA,EAAK6H,IAAEA,GAAOuoB,GAAU,GACxB,MAAbyN,IACF7yB,EAAIixB,YACJjxB,EAAIynC,KAAKzyC,EAAO6Q,EAAKhJ,EAAM7H,EAAO+Q,EAASF,GAC3C7F,EAAIkG,QAGR,SAAS+lC,GAAmBjsC,EAAKhI,EAAQ+W,EAAO8jB,GAC9C,MAAMqZ,EAAoBl0C,EAAOkzC,YAAYn8B,EAAO8jB,GAChDqZ,GACFlsC,EAAImxB,OAAO+a,EAAkB/qC,EAAG+qC,EAAkB9qC,GAGtD,SAAS+qC,GAAMnsC,EAAKjI,GAClB,MAAMoc,KAACA,EAAInc,OAAEA,EAAM66B,SAAEA,EAAQlN,MAAEA,EAAKlpB,MAAEA,GAAS1E,EACzC+sC,EArDR,SAAmB3wB,EAAMnc,EAAQ66B,GAC/B,MAAMiS,EAAW3wB,EAAK2wB,SAChBh2B,EAASqF,EAAKrF,OACds9B,EAAUp0C,EAAO8W,OACjBqkB,EAAQ,GACd,IAAK,MAAM/d,KAAW0vB,EAAU,CAC9B,MAAM1f,EAAS0mB,GAAUjZ,EAAU/jB,EAAOsG,EAAQpgB,OAAQ8Z,EAAOsG,EAAQvY,KAAMuY,EAAQzc,MACvF,IAAKX,EAAO8sC,SAAU,CACpB3R,EAAM5iC,KAAK,CACTi6B,OAAQpV,EACRpd,OAAQotB,EACRpwB,MAAO8Z,EAAOsG,EAAQpgB,OACtB6H,IAAKiS,EAAOsG,EAAQvY,OAEtB,SAEF,MAAMwvC,EAAiB50C,OAAOhE,EAAqE,GAA5EgE,CAA+EO,EAAQotB,GAC9G,IAAK,MAAMknB,KAAOD,EAAgB,CAChC,MAAME,EAAYT,GAAUjZ,EAAUuZ,EAAQE,EAAIt3C,OAAQo3C,EAAQE,EAAIzvC,KAAMyvC,EAAI3zC,MAC1E6zC,EAAc/0C,OAAOhE,EAAqE,GAA5EgE,CAA+E2d,EAAStG,EAAQy9B,GACpH,IAAK,MAAME,KAAcD,EACvBrZ,EAAM5iC,KAAK,CACTi6B,OAAQiiB,EACRz0C,OAAQs0C,EACRt3C,MAAO,CACLtB,CAACm/B,GAAWkZ,GAAS3mB,EAAQmnB,EAAW,QAASz3C,KAAKgC,MAExD+F,IAAK,CACHnJ,CAACm/B,GAAWkZ,GAAS3mB,EAAQmnB,EAAW,MAAOz3C,KAAKC,SAM9D,OAAOo+B,EAmBUkS,CAAUlxB,EAAMnc,EAAQ66B,GACzC,IAAK,MAAOrI,OAAQkiB,EAAK10C,OAAQs0C,EAAGt3C,MAAEA,EAAK6H,IAAEA,KAAQioC,EAAU,CAC7D,MAAO1xB,OAAOG,gBAACA,EAAkBoS,GAAS,IAAM+mB,EAChD1sC,EAAIuwB,OACJvwB,EAAIsT,UAAYC,EAChBy4B,GAAWhsC,EAAKvD,EAAOqvC,GAAUjZ,EAAU79B,EAAO6H,IAClDmD,EAAIixB,YACJ,MAAM0b,IAAax4B,EAAK0vB,YAAY7jC,EAAK0sC,GACrCC,EACF3sC,EAAIygC,YAEJwL,GAAmBjsC,EAAKhI,EAAQ6E,EAAKg2B,GAEvC,MAAM+Z,IAAe50C,EAAO6rC,YAAY7jC,EAAKssC,EAAK,CAAC7jC,KAAMkkC,EAAU/vC,SAAS,IACtEjE,EAAOg0C,GAAYC,EACpBj0C,GACHszC,GAAmBjsC,EAAKhI,EAAQhD,EAAO69B,GAEzC7yB,EAAIygC,YACJzgC,EAAImX,KAAKxe,EAAO,UAAY,WAC5BqH,EAAIywB,WAiBR,SAASoc,GAAS7sC,EAAKwqB,EAAQnkB,GAC7B,MAAMrO,EA3KR,SAAmBwyB,GACjB,MAAMt2B,MAACA,EAAKijB,KAAEA,EAAIhD,KAAEA,GAAQqW,EAC5B,GAAI/yB,OAAOhE,EAAoE,GAA3EgE,CAA8E0f,GAChF,OAjNJ,SAAwBjjB,EAAOiJ,GAC7B,MAAMS,EAAO1J,EAAMoO,eAAenF,GAElC,OADgBS,GAAQ1J,EAAMyb,iBAAiBxS,GAC9BS,EAAKoD,QAAU,KA8MvB8rC,CAAe54C,EAAOijB,GAE/B,GAAa,UAATA,EACF,OAAOmzB,GAAe9f,GAExB,MAAM+gB,EAAWpB,GAAgB3f,GACjC,OAAI+gB,aAAoBrB,GACfqB,EAEFV,GAAmBU,EAAUp3B,GA+JrB44B,CAAUviB,IACnBrW,KAACA,EAAI1X,MAAEA,EAAKqC,KAAEA,GAAQ0rB,EACtBwiB,EAAW74B,EAAK7Y,QAChByuC,EAAaiD,EAAS71B,KACtBwO,EAAQqnB,EAASz5B,iBACjB05B,MAACA,EAAQtnB,EAAK8kB,MAAEA,EAAQ9kB,GAASokB,GAAc,GACjD/xC,GAAUmc,EAAKrF,OAAOpZ,SACxB+B,OAAOhE,EAAoE,GAA3EgE,CAA8EuI,EAAKqG,GAtBvF,SAAgBrG,EAAKjI,GACnB,MAAMoc,KAACA,EAAInc,OAAEA,EAAMi1C,MAAEA,EAAKxC,MAAEA,EAAKpkC,KAAEA,EAAI5J,MAAEA,GAAS1E,EAC5C86B,EAAW1e,EAAKzb,MAAQ,QAAUX,EAAI+G,KAC5CkB,EAAIuwB,OACa,MAAbsC,GAAoB4X,IAAUwC,IAChCxnC,GAAMzF,EAAKhI,EAAQqO,EAAKR,KACxBsmC,GAAMnsC,EAAK,CAACmU,KAAAA,EAAMnc,OAAAA,EAAQ2tB,MAAOsnB,EAAOxwC,MAAAA,EAAOo2B,SAAAA,IAC/C7yB,EAAIywB,UACJzwB,EAAIuwB,OACJ9qB,GAAMzF,EAAKhI,EAAQqO,EAAKN,SAE1BomC,GAAMnsC,EAAK,CAACmU,KAAAA,EAAMnc,OAAAA,EAAQ2tB,MAAO8kB,EAAOhuC,MAAAA,EAAOo2B,SAAAA,IAC/C7yB,EAAIywB,UAWFyc,CAAOltC,EAAK,CAACmU,KAAAA,EAAMnc,OAAAA,EAAQi1C,MAAAA,EAAOxC,MAAAA,EAAOpkC,KAAAA,EAAM5J,MAAAA,EAAOqC,KAAAA,IACtDrH,OAAOhE,EAAoE,GAA3EgE,CAA8EuI,IAGlF,IAAInO,GAAgB,CAClBqN,GAAI,SACJxL,oBAAoBQ,EAAOi5C,EAAO7xC,GAChC,MAAMkI,GAAStP,EAAMkO,KAAKC,UAAY,IAAI3M,OACpCg2C,EAAU,GAChB,IAAI9tC,EAAMhI,EAAGue,EAAMqW,EACnB,IAAK50B,EAAI,EAAGA,EAAI4N,IAAS5N,EACvBgI,EAAO1J,EAAMoO,eAAe1M,GAC5Bue,EAAOvW,EAAKoD,QACZwpB,EAAS,KACLrW,GAAQA,EAAK7Y,SAAW6Y,aAAgBliB,KAC1Cu4B,EAAS,CACPhwB,QAAStG,EAAMyb,iBAAiB/Z,GAChCuH,MAAOvH,EACPuhB,KAAM2yB,GAAW31B,EAAMve,EAAG4N,GAC1BtP,MAAAA,EACA4K,KAAMlB,EAAKY,WAAWlD,QAAQqG,UAC9BlF,MAAOmB,EAAKQ,OACZ+V,KAAAA,IAGJvW,EAAKwvC,QAAU5iB,EACfkhB,EAAQn7C,KAAKi6B,GAEf,IAAK50B,EAAI,EAAGA,EAAI4N,IAAS5N,EACvB40B,EAASkhB,EAAQ91C,GACZ40B,IAA0B,IAAhBA,EAAOrT,OAGtBqT,EAAOrT,KAAOs0B,GAAcC,EAAS91C,EAAG0F,EAAQqwC,aAGpDj4C,WAAWQ,EAAOi5C,EAAO7xC,GACvB,MAAMzF,EAA4B,eAArByF,EAAQ+xC,SACfrwC,EAAW9I,EAAMykB,+BACjBtS,EAAOnS,EAAMoS,UACnB,IAAK,IAAI1Q,EAAIoH,EAAStH,OAAS,EAAGE,GAAK,IAAKA,EAAG,CAC7C,MAAM40B,EAASxtB,EAASpH,GAAGw3C,QACtB5iB,IAGLA,EAAOrW,KAAK4B,oBAAoB1P,GAC5BxQ,GACFg3C,GAAS34C,EAAM8L,IAAKwqB,EAAQnkB,MAIlC3S,mBAAmBQ,EAAOi5C,EAAO7xC,GAC/B,GAAyB,uBAArBA,EAAQ+xC,SACV,OAEF,MAAMrwC,EAAW9I,EAAMykB,+BACvB,IAAK,IAAI/iB,EAAIoH,EAAStH,OAAS,EAAGE,GAAK,IAAKA,EAAG,CAC7C,MAAM40B,EAASxtB,EAASpH,GAAGw3C,QACvB5iB,GACFqiB,GAAS34C,EAAM8L,IAAKwqB,EAAQt2B,EAAMoS,aAIxC5S,kBAAkBQ,EAAOqtB,EAAMjmB,GAC7B,MAAMkvB,EAASjJ,EAAK3jB,KAAKwvC,QACpB5iB,IAA0B,IAAhBA,EAAOrT,MAAuC,sBAArB7b,EAAQ+xC,UAGhDR,GAAS34C,EAAM8L,IAAKwqB,EAAQt2B,EAAMoS,YAEpCoE,SAAU,CACRihC,WAAW,EACX0B,SAAU,sBAId,MAAMC,GAAa,CAACC,EAAWrb,KAC7B,IAAIsb,UAACA,EAAYtb,EAAQub,SAAEA,EAAWvb,GAAYqb,EAKlD,OAJIA,EAAUG,gBACZF,EAAY14C,KAAKC,IAAIy4C,EAAWtb,GAChCub,EAAW34C,KAAKC,IAAI04C,EAAUvb,IAEzB,CACLub,SAAAA,EACAD,UAAAA,EACAG,WAAY74C,KAAKgC,IAAIo7B,EAAUsb,KAInC,MAAMI,WAAeh8C,GACnB8B,YAAYiH,GACVoQ,QACApX,KAAKk6C,QAAS,EACdl6C,KAAKm6C,eAAiB,GACtBn6C,KAAKo6C,aAAe,KACpBp6C,KAAKq6C,cAAe,EACpBr6C,KAAKO,MAAQyG,EAAOzG,MACpBP,KAAK2H,QAAUX,EAAOW,QACtB3H,KAAKqM,IAAMrF,EAAOqF,IAClBrM,KAAKs6C,iBAAch6C,EACnBN,KAAKu6C,iBAAcj6C,EACnBN,KAAKw6C,gBAAal6C,EAClBN,KAAK+d,eAAYzd,EACjBN,KAAK8d,cAAWxd,EAChBN,KAAKkS,SAAM5R,EACXN,KAAKoS,YAAS9R,EACdN,KAAKqS,UAAO/R,EACZN,KAAKmS,WAAQ7R,EACbN,KAAKuY,YAASjY,EACdN,KAAKwY,WAAQlY,EACbN,KAAKo0B,cAAW9zB,EAChBN,KAAK8kB,cAAWxkB,EAChBN,KAAKqf,YAAS/e,EACdN,KAAK8oB,cAAWxoB,EAElBP,OAAO+d,EAAUC,EAAW8X,GAC1B,MAAMv0B,EAAKtB,KACXsB,EAAGwc,SAAWA,EACdxc,EAAGyc,UAAYA,EACfzc,EAAG8yB,SAAWyB,EACdv0B,EAAG00B,gBACH10B,EAAGm5C,cACHn5C,EAAGy1B,MAELh3B,gBACE,MAAMuB,EAAKtB,KACPsB,EAAGoW,gBACLpW,EAAGkX,MAAQlX,EAAGwc,SACdxc,EAAG+Q,KAAO,EACV/Q,EAAG6Q,MAAQ7Q,EAAGkX,QAEdlX,EAAGiX,OAASjX,EAAGyc,UACfzc,EAAG4Q,IAAM,EACT5Q,EAAG8Q,OAAS9Q,EAAGiX,QAGnBxY,cACE,MAAMuB,EAAKtB,KACL45C,EAAYt4C,EAAGqG,QAAQ0I,QAAU,GACvC,IAAIiqC,EAAcx2C,OAAOhE,EAAmE,EAA1EgE,CAA6E81C,EAAUc,eAAgB,CAACp5C,EAAGf,OAAQe,IAAO,GACxIs4C,EAAUhuC,SACZ0uC,EAAcA,EAAY1uC,QAAQ5J,GAAS43C,EAAUhuC,OAAO5J,EAAMV,EAAGf,MAAMkO,SAEzEmrC,EAAUlkC,OACZ4kC,EAAcA,EAAY5kC,MAAK,CAACC,EAAG3D,IAAM4nC,EAAUlkC,KAAKC,EAAG3D,EAAG1Q,EAAGf,MAAMkO,SAErEnN,EAAGqG,QAAQsB,SACbqxC,EAAYrxC,UAEd3H,EAAGg5C,YAAcA,EAEnBv6C,MACE,MAAMuB,EAAKtB,MACL2H,QAACA,EAAO0E,IAAEA,GAAO/K,EACvB,IAAKqG,EAAQub,QAEX,YADA5hB,EAAGkX,MAAQlX,EAAGiX,OAAS,GAGzB,MAAMqhC,EAAYjyC,EAAQ0I,OACpBsqC,EAAY72C,OAAOhE,EAAmE,EAA1EgE,CAA6E81C,EAAU5lB,MACnGuK,EAAWoc,EAAUhyC,KACrB4vB,EAAcj3B,EAAGs5C,uBACjBd,SAACA,EAAQE,WAAEA,GAAcL,GAAWC,EAAWrb,GACrD,IAAI/lB,EAAOD,EACXlM,EAAI2nB,KAAO2mB,EAAU9gB,OACjBv4B,EAAGoW,gBACLc,EAAQlX,EAAGwc,SACXvF,EAASjX,EAAGu5C,SAAStiB,EAAagG,EAAUub,EAAUE,GAAc,KAEpEzhC,EAASjX,EAAGyc,UACZvF,EAAQlX,EAAGw5C,SAASviB,EAAagG,EAAUub,EAAUE,GAAc,IAErE14C,EAAGkX,MAAQrX,KAAKC,IAAIoX,EAAO7Q,EAAQmW,UAAYxc,EAAGwc,UAClDxc,EAAGiX,OAASpX,KAAKC,IAAImX,EAAQ5Q,EAAQoW,WAAazc,EAAGyc,WAEvDhe,SAASw4B,EAAagG,EAAUub,EAAUE,GACxC,MAAM14C,EAAKtB,MACLqM,IAACA,EAAGyR,SAAEA,EAAUnW,SAAU0I,QAAQ4Y,QAACA,KAAa3nB,EAChDy5C,EAAWz5C,EAAG64C,eAAiB,GAC/BK,EAAal5C,EAAGk5C,WAAa,CAAC,GAC9BvmB,EAAa+lB,EAAa/wB,EAChC,IAAI+xB,EAAcziB,EAClBlsB,EAAI2vB,UAAY,OAChB3vB,EAAI8vB,aAAe,SACnB,IAAI8e,GAAO,EACP/oC,GAAO+hB,EAYX,OAXA3yB,EAAGg5C,YAAYv5C,SAAQ,CAACmf,EAAYje,KAClC,MAAMi5C,EAAYpB,EAAYvb,EAAW,EAAKlyB,EAAI8uC,YAAYj7B,EAAWR,MAAMlH,OACrE,IAANvW,GAAWu4C,EAAWA,EAAWz4C,OAAS,GAAKm5C,EAAY,EAAIjyB,EAAUnL,KAC3Ek9B,GAAe/mB,EACfumB,EAAWA,EAAWz4C,QAAUE,EAAI,EAAI,EAAI,IAAM,EAClDiQ,GAAO+hB,EACPgnB,KAEFF,EAAS94C,GAAK,CAACoQ,KAAM,EAAGH,IAAAA,EAAK+oC,IAAAA,EAAKziC,MAAO0iC,EAAW3iC,OAAQyhC,GAC5DQ,EAAWA,EAAWz4C,OAAS,IAAMm5C,EAAYjyB,KAE5C+xB,EAETj7C,SAASw4B,EAAagG,EAAUub,EAAUE,GACxC,MAAM14C,EAAKtB,MACLqM,IAACA,EAAG0R,UAAEA,EAAWpW,SAAU0I,QAAQ4Y,QAACA,KAAa3nB,EACjDy5C,EAAWz5C,EAAG64C,eAAiB,GAC/BI,EAAcj5C,EAAGi5C,YAAc,GAC/Ba,EAAcr9B,EAAYwa,EAChC,IAAI8iB,EAAapyB,EACbqyB,EAAkB,EAClBC,EAAmB,EACnBlpC,EAAO,EACPH,EAAM,EACNspC,EAAM,EAkBV,OAjBAl6C,EAAGg5C,YAAYv5C,SAAQ,CAACmf,EAAYje,KAClC,MAAMi5C,EAAYpB,EAAYvb,EAAW,EAAKlyB,EAAI8uC,YAAYj7B,EAAWR,MAAMlH,MAC3EvW,EAAI,GAAKs5C,EAAmBhd,EAAW,EAAItV,EAAUmyB,IACvDC,GAAcC,EAAkBryB,EAChCsxB,EAAY39C,KAAK,CAAC4b,MAAO8iC,EAAiB/iC,OAAQgjC,IAClDlpC,GAAQipC,EAAkBryB,EAC1BuyB,IACAtpC,EAAM,EACNopC,EAAkBC,EAAmB,GAEvCD,EAAkBn6C,KAAKgC,IAAIm4C,EAAiBJ,GAC5CK,GAAoBhd,EAAWtV,EAC/B8xB,EAAS94C,GAAK,CAACoQ,KAAAA,EAAMH,IAAAA,EAAKspC,IAAAA,EAAKhjC,MAAO0iC,EAAW3iC,OAAQyhC,GACzD9nC,GAAO8nC,EAAa/wB,KAEtBoyB,GAAcC,EACdf,EAAY39C,KAAK,CAAC4b,MAAO8iC,EAAiB/iC,OAAQgjC,IAC3CF,EAETt7C,iBACE,MAAMuB,EAAKtB,KACX,IAAKsB,EAAGqG,QAAQub,QACd,OAEF,MAAMqV,EAAcj3B,EAAGs5C,uBAChBT,eAAgBY,EAAUpzC,SAASirB,MAACA,EAAOviB,QAAQ4Y,QAACA,KAAa3nB,EACxE,GAAItB,KAAK0X,eAAgB,CACvB,IAAIujC,EAAM,EACN5oC,EAAOvO,OAAOhE,EAAmE,EAA1EgE,CAA6E8uB,EAAOtxB,EAAG+Q,KAAO4W,EAAS3nB,EAAG6Q,MAAQ7Q,EAAGk5C,WAAWS,IAC3I,IAAK,MAAMQ,KAAUV,EACfE,IAAQQ,EAAOR,MACjBA,EAAMQ,EAAOR,IACb5oC,EAAOvO,OAAOhE,EAAmE,EAA1EgE,CAA6E8uB,EAAOtxB,EAAG+Q,KAAO4W,EAAS3nB,EAAG6Q,MAAQ7Q,EAAGk5C,WAAWS,KAEzIQ,EAAOvpC,KAAO5Q,EAAG4Q,IAAMqmB,EAActP,EACrCwyB,EAAOppC,KAAOA,EACdA,GAAQopC,EAAOjjC,MAAQyQ,MAEpB,CACL,IAAIuyB,EAAM,EACNtpC,EAAMpO,OAAOhE,EAAmE,EAA1EgE,CAA6E8uB,EAAOtxB,EAAG4Q,IAAMqmB,EAActP,EAAS3nB,EAAG8Q,OAAS9Q,EAAGi5C,YAAYiB,GAAKjjC,QAC9J,IAAK,MAAMkjC,KAAUV,EACfU,EAAOD,MAAQA,IACjBA,EAAMC,EAAOD,IACbtpC,EAAMpO,OAAOhE,EAAmE,EAA1EgE,CAA6E8uB,EAAOtxB,EAAG4Q,IAAMqmB,EAActP,EAAS3nB,EAAG8Q,OAAS9Q,EAAGi5C,YAAYiB,GAAKjjC,SAE5JkjC,EAAOvpC,IAAMA,EACbupC,EAAOppC,MAAQ/Q,EAAG+Q,KAAO4W,EACzB/W,GAAOupC,EAAOljC,OAAS0Q,GAI7BlpB,eACE,MAAiC,QAA1BC,KAAK2H,QAAQmd,UAAgD,WAA1B9kB,KAAK2H,QAAQmd,SAEzD/kB,OACE,MAAMuB,EAAKtB,KACX,GAAIsB,EAAGqG,QAAQub,QAAS,CACtB,MAAM7W,EAAM/K,EAAG+K,IACfvI,OAAOhE,EAAoE,GAA3EgE,CAA8EuI,EAAK/K,GACnFA,EAAGo6C,QACH53C,OAAOhE,EAAoE,GAA3EgE,CAA8EuI,IAGlFtM,QACE,MAAMuB,EAAKtB,MACJ2H,QAASqB,EAAIuxC,YAAEA,EAAWC,WAAEA,EAAUnuC,IAAEA,GAAO/K,GAChDsxB,MAACA,EAAOviB,OAAQupC,GAAa5wC,EAC7B2yC,EAAe77C,EAAoE,GAAEkyB,MACrF4pB,EAAY93C,OAAOhE,EAAqE,GAA5EgE,CAA+EkF,EAAK6yC,IAAKv6C,EAAG+Q,KAAM/Q,EAAGkX,OACjHmiC,EAAY72C,OAAOhE,EAAmE,EAA1EgE,CAA6E81C,EAAU5lB,OAClGhC,MAAO8pB,EAAS7yB,QAAEA,GAAW2wB,EAC9Brb,EAAWoc,EAAUhyC,KACrBozC,EAAexd,EAAW,EAChC,IAAIyd,EACJ16C,EAAG48B,YACH7xB,EAAI2vB,UAAY4f,EAAU5f,UAAU,QACpC3vB,EAAI8vB,aAAe,SACnB9vB,EAAI0T,UAAY,GAChB1T,EAAI2nB,KAAO2mB,EAAU9gB,OACrB,MAAMigB,SAACA,EAAQD,UAAEA,EAASG,WAAEA,GAAcL,GAAWC,EAAWrb,GAqD1D7mB,EAAepW,EAAGoW,eAClB6gB,EAAcv4B,KAAK46C,sBAEvBoB,EADEtkC,EACO,CACPlK,EAAG1J,OAAOhE,EAAmE,EAA1EgE,CAA6E8uB,EAAOtxB,EAAG+Q,KAAO4W,EAAS3nB,EAAG6Q,MAAQqoC,EAAW,IAChI/sC,EAAGnM,EAAG4Q,IAAM+W,EAAUsP,EACtB/X,KAAM,GAGC,CACPhT,EAAGlM,EAAG+Q,KAAO4W,EACbxb,EAAG3J,OAAOhE,EAAmE,EAA1EgE,CAA6E8uB,EAAOtxB,EAAG4Q,IAAMqmB,EAActP,EAAS3nB,EAAG8Q,OAASmoC,EAAY,GAAGhiC,QAClJiI,KAAM,GAGV1c,OAAOhE,EAAqE,GAA5EgE,CAA+ExC,EAAG+K,IAAKrD,EAAKizC,eAC5F,MAAMhoB,EAAa+lB,EAAa/wB,EAChC3nB,EAAGg5C,YAAYv5C,SAAQ,CAACmf,EAAYje,KAClCoK,EAAIwT,YAAcK,EAAW47B,WAAaA,EAC1CzvC,EAAIsT,UAAYO,EAAW47B,WAAaA,EACxC,MAAMI,EAAY7vC,EAAI8uC,YAAYj7B,EAAWR,MAAMlH,MAC7CwjB,EAAY4f,EAAU5f,UAAU9b,EAAW8b,YAAc9b,EAAW8b,UAAY4d,EAAU5d,YAC1FxjB,EAAQshC,EAAYvb,EAAW,EAAK2d,EAC1C,IAAI1uC,EAAIwuC,EAAOxuC,EACXC,EAAIuuC,EAAOvuC,EACfmuC,EAAUO,SAAS76C,EAAGkX,OAClBd,EACEzV,EAAI,GAAKuL,EAAIgL,EAAQyQ,EAAU3nB,EAAG6Q,QACpC1E,EAAIuuC,EAAOvuC,GAAKwmB,EAChB+nB,EAAOx7B,OACPhT,EAAIwuC,EAAOxuC,EAAI1J,OAAOhE,EAAmE,EAA1EgE,CAA6E8uB,EAAOtxB,EAAG+Q,KAAO4W,EAAS3nB,EAAG6Q,MAAQqoC,EAAWwB,EAAOx7B,QAE5Ive,EAAI,GAAKwL,EAAIwmB,EAAa3yB,EAAG8Q,SACtC5E,EAAIwuC,EAAOxuC,EAAIA,EAAI+sC,EAAYyB,EAAOx7B,MAAMhI,MAAQyQ,EACpD+yB,EAAOx7B,OACP/S,EAAIuuC,EAAOvuC,EAAI3J,OAAOhE,EAAmE,EAA1EgE,CAA6E8uB,EAAOtxB,EAAG4Q,IAAMqmB,EAActP,EAAS3nB,EAAG8Q,OAASmoC,EAAYyB,EAAOx7B,MAAMjI,UAvFtJ,SAAS/K,EAAGC,EAAGyS,GACnC,GAAItH,MAAMkhC,IAAaA,GAAY,GAAKlhC,MAAMihC,IAAcA,EAAY,EACtE,OAEFxtC,EAAIuwB,OACJ,MAAM7c,EAAYjc,OAAOhE,EAAoE,GAA3EgE,CAA8Eoc,EAAWH,UAAW,GAQtH,GAPA1T,EAAIsT,UAAY7b,OAAOhE,EAAoE,GAA3EgE,CAA8Eoc,EAAWP,UAAWg8B,GACpHtvC,EAAImjC,QAAU1rC,OAAOhE,EAAoE,GAA3EgE,CAA8Eoc,EAAWsvB,QAAS,QAChHnjC,EAAIgxB,eAAiBv5B,OAAOhE,EAAoE,GAA3EgE,CAA8Eoc,EAAWmd,eAAgB,GAC9HhxB,EAAIsiC,SAAW7qC,OAAOhE,EAAoE,GAA3EgE,CAA8Eoc,EAAWyuB,SAAU,SAClHtiC,EAAI0T,UAAYA,EAChB1T,EAAIwT,YAAc/b,OAAOhE,EAAoE,GAA3EgE,CAA8Eoc,EAAWL,YAAa87B,GACxHtvC,EAAI+wB,YAAYt5B,OAAOhE,EAAoE,GAA3EgE,CAA8Eoc,EAAWk8B,SAAU,KAC/GxC,EAAUG,cAAe,CAC3B,MAAMsC,EAAc,CAClB9gC,OAAQu+B,EAAW34C,KAAKm7C,MAAQ,EAChCvI,WAAY7zB,EAAW6zB,WACvBj4B,SAAUoE,EAAWpE,SACrBmD,YAAac,GAETtB,EAAUm9B,EAAUW,MAAM/uC,EAAGssC,EAAW,GACxCp7B,EAAUjR,EAAIsuC,EACpBj4C,OAAOhE,EAAqE,GAA5EgE,CAA+EuI,EAAKgwC,EAAa59B,EAASC,OACrG,CACL,MAAM89B,EAAU/uC,EAAItM,KAAKgC,KAAKo7B,EAAWsb,GAAa,EAAG,GACnD4C,EAAWb,EAAUc,WAAWlvC,EAAGssC,GACnC5M,EAAeppC,OAAOhE,EAAqE,GAA5EgE,CAA+Eoc,EAAWgtB,cAC/G7gC,EAAIixB,YACAx5B,OAAO2D,OAAOylC,GAAcvL,MAAK56B,GAAW,IAANA,IACxCjD,OAAOhE,EAAqE,GAA5EgE,CAA+EuI,EAAK,CAClFmB,EAAGivC,EACHhvC,EAAG+uC,EACHv0B,EAAG6xB,EACH3xB,EAAG0xB,EACHt+B,OAAQ2xB,IAGV7gC,EAAIynC,KAAK2I,EAAUD,EAAS1C,EAAUD,GAExCxtC,EAAImX,OACc,IAAdzD,GACF1T,EAAIoxB,SAGRpxB,EAAIywB,UA8CJ6f,CADcf,EAAUpuC,EAAEA,GACLC,EAAGyS,GACxB1S,EAAI1J,OAAOhE,EAAqE,GAA5EgE,CAA+Ek4B,EAAWxuB,EAAIssC,EAAWiC,EAAcz6C,EAAG6Q,OA7C/G,SAAS3E,EAAGC,EAAGyS,GAC9Bpc,OAAOhE,EAAmE,EAA1EgE,CAA6EuI,EAAK6T,EAAWR,KAAMlS,EAAGC,EAAKusC,EAAa,EAAIW,EAAW,CACrIiC,cAAe18B,EAAWF,OAC1Bgc,UAAW9b,EAAW8b,YA2CxB6gB,CAASjB,EAAUpuC,EAAEA,GAAIC,EAAGyS,GACxBxI,EACFskC,EAAOxuC,GAAKgL,EAAQyQ,EAEpB+yB,EAAOvuC,GAAKwmB,KAGhBnwB,OAAOhE,EAAqE,GAA5EgE,CAA+ExC,EAAG+K,IAAKrD,EAAKizC,eAE9Fl8C,YACE,MAAMuB,EAAKtB,KACLgJ,EAAO1H,EAAGqG,QACV0wB,EAAYrvB,EAAKyS,MACjBqhC,EAAYh5C,OAAOhE,EAAmE,EAA1EgE,CAA6Eu0B,EAAUrE,MACnG+oB,EAAej5C,OAAOhE,EAAmE,EAA1EgE,CAA6Eu0B,EAAUpP,SAC5G,IAAKoP,EAAUnV,QACb,OAEF,MAAM04B,EAAY93C,OAAOhE,EAAqE,GAA5EgE,CAA+EkF,EAAK6yC,IAAKv6C,EAAG+Q,KAAM/Q,EAAGkX,OACjHnM,EAAM/K,EAAG+K,IACTyY,EAAWuT,EAAUvT,SACrBi3B,EAAee,EAAUn0C,KAAO,EAChCq0C,EAA6BD,EAAa7qC,IAAM6pC,EACtD,IAAItuC,EACA4E,EAAO/Q,EAAG+Q,KACVyL,EAAWxc,EAAGkX,MAClB,GAAIxY,KAAK0X,eACPoG,EAAW3c,KAAKgC,OAAO7B,EAAGk5C,YAC1B/sC,EAAInM,EAAG4Q,IAAM8qC,EACb3qC,EAAOvO,OAAOhE,EAAmE,EAA1EgE,CAA6EkF,EAAK4pB,MAAOvgB,EAAM/Q,EAAG6Q,MAAQ2L,OAC5G,CACL,MAAMC,EAAYzc,EAAGi5C,YAAYv3C,QAAO,CAACC,EAAK0F,IAASxH,KAAKgC,IAAIF,EAAK0F,EAAK4P,SAAS,GACnF9K,EAAIuvC,EAA6Bl5C,OAAOhE,EAAmE,EAA1EgE,CAA6EkF,EAAK4pB,MAAOtxB,EAAG4Q,IAAK5Q,EAAG8Q,OAAS2L,EAAY/U,EAAKqH,OAAO4Y,QAAU3nB,EAAGs5C,uBAErL,MAAMptC,EAAI1J,OAAOhE,EAAmE,EAA1EgE,CAA6EghB,EAAUzS,EAAMA,EAAOyL,GAC9GzR,EAAI2vB,UAAY4f,EAAU5f,UAAUl4B,OAAOhE,EAAmE,EAA1EgE,CAA6EghB,IACjHzY,EAAI8vB,aAAe,SACnB9vB,EAAIwT,YAAcwY,EAAUrG,MAC5B3lB,EAAIsT,UAAY0Y,EAAUrG,MAC1B3lB,EAAI2nB,KAAO8oB,EAAUjjB,OACrB/1B,OAAOhE,EAAmE,EAA1EgE,CAA6EuI,EAAKgsB,EAAU3Y,KAAMlS,EAAGC,EAAGqvC,GAE1G/8C,sBACE,MAAMs4B,EAAYr4B,KAAK2H,QAAQ8T,MACzBqhC,EAAYh5C,OAAOhE,EAAmE,EAA1EgE,CAA6Eu0B,EAAUrE,MACnG+oB,EAAej5C,OAAOhE,EAAmE,EAA1EgE,CAA6Eu0B,EAAUpP,SAC5G,OAAOoP,EAAUnV,QAAU45B,EAAU7oB,WAAa8oB,EAAaxkC,OAAS,EAE1ExY,iBAAiByN,EAAGC,GAClB,MAAMnM,EAAKtB,KACX,IAAIiC,EAAGg7C,EAAQC,EACf,GAAI1vC,GAAKlM,EAAG+Q,MAAQ7E,GAAKlM,EAAG6Q,OAAS1E,GAAKnM,EAAG4Q,KAAOzE,GAAKnM,EAAG8Q,OAE1D,IADA8qC,EAAK57C,EAAG64C,eACHl4C,EAAI,EAAGA,EAAIi7C,EAAGn7C,SAAUE,EAE3B,GADAg7C,EAASC,EAAGj7C,GACRuL,GAAKyvC,EAAO5qC,MAAQ7E,GAAKyvC,EAAO5qC,KAAO4qC,EAAOzkC,OAAS/K,GAAKwvC,EAAO/qC,KAAOzE,GAAKwvC,EAAO/qC,IAAM+qC,EAAO1kC,OACrG,OAAOjX,EAAGg5C,YAAYr4C,GAI5B,OAAO,KAETlC,YAAYkgB,GACV,MAAM3e,EAAKtB,KACLgJ,EAAO1H,EAAGqG,QAChB,IAmBJ,SAAoBjH,EAAMsI,GACxB,GAAa,cAATtI,IAAyBsI,EAAKujC,SAAWvjC,EAAKm0C,SAChD,OAAO,EAET,GAAIn0C,EAAKwjC,UAAqB,UAAT9rC,GAA6B,YAATA,GACvC,OAAO,EAET,OAAO,EA1BA08C,CAAWn9B,EAAEvf,KAAMsI,GACtB,OAEF,MAAMq0C,EAAc/7C,EAAGg8C,iBAAiBr9B,EAAEzS,EAAGyS,EAAExS,GAC/C,GAAe,cAAXwS,EAAEvf,KAAsB,CAC1B,MAAMivC,EAAWruC,EAAG84C,aACdmD,GA/WWvrC,EA+WqBqrC,EA/WT,QAAf1nC,EA+Wcg6B,IA/We,OAAN39B,GAAc2D,EAAE7L,eAAiBkI,EAAElI,cAAgB6L,EAAEnM,QAAUwI,EAAExI,OAgXlGmmC,IAAa4N,GACfz5C,OAAOhE,EAAmE,EAA1EgE,CAA6EkF,EAAKm0C,QAAS,CAACl9B,EAAG0vB,EAAUruC,GAAKA,GAEhHA,EAAG84C,aAAeiD,EACdA,IAAgBE,GAClBz5C,OAAOhE,EAAmE,EAA1EgE,CAA6EkF,EAAKujC,QAAS,CAACtsB,EAAGo9B,EAAa/7C,GAAKA,QAE1G+7C,GACTv5C,OAAOhE,EAAmE,EAA1EgE,CAA6EkF,EAAKwjC,QAAS,CAACvsB,EAAGo9B,EAAa/7C,GAAKA,GAxXpG,IAACqU,EAAG3D,GAqYvB,IAAI5T,GAAgB,CAClBmN,GAAI,SACJiyC,SAAUvD,GACVl6C,MAAMQ,EAAOi5C,EAAO7xC,GAClB,MAAM4X,EAAShf,EAAMgf,OAAS,IAAI06B,GAAO,CAAC5tC,IAAK9L,EAAM8L,IAAK1E,QAAAA,EAASpH,MAAAA,IACnEd,GAAQ0H,UAAU5G,EAAOgf,EAAQ5X,GACjClI,GAAQmpC,OAAOroC,EAAOgf,IAExBxf,KAAKQ,GACHd,GAAQgqC,UAAUlpC,EAAOA,EAAMgf,eACxBhf,EAAMgf,QAEfxf,aAAaQ,EAAOi5C,EAAO7xC,GACzB,MAAM4X,EAAShf,EAAMgf,OACrB9f,GAAQ0H,UAAU5G,EAAOgf,EAAQ5X,GACjC4X,EAAO5X,QAAUA,GAEnB5H,YAAYQ,GACV,MAAMgf,EAAShf,EAAMgf,OACrBA,EAAOk7B,cACPl7B,EAAOk+B,kBAET19C,WAAWQ,EAAOqtB,GACXA,EAAKie,QACRtrC,EAAMgf,OAAOm+B,YAAY9vB,EAAK/qB,QAGlCkU,SAAU,CACRmM,SAAS,EACT4B,SAAU,MACV8N,MAAO,SACP9J,UAAU,EACV7f,SAAS,EACToW,OAAQ,IACRtf,QAAQkgB,EAAGC,EAAYX,GACrB,MAAM/V,EAAQ0W,EAAWpW,aACnB6zC,EAAKp+B,EAAOhf,MACdo9C,EAAG3hC,iBAAiBxS,IACtBm0C,EAAG72C,KAAK0C,GACR0W,EAAWF,QAAS,IAEpB29B,EAAGh3C,KAAK6C,GACR0W,EAAWF,QAAS,IAGxBusB,QAAS,KACT4Q,QAAS,KACT9sC,OAAQ,CACN2hB,MAAQ3lB,GAAQA,EAAI9L,MAAMoH,QAAQqqB,MAClC8nB,SAAU,GACV7wB,QAAS,GACTlpB,eAAeQ,GACb,MAAMmO,EAAWnO,EAAMkO,KAAKC,UACrB2B,QAAQ0pC,cAACA,EAAahG,WAAEA,EAAU/X,UAAEA,EAAShK,MAAEA,IAAUzxB,EAAMgf,OAAO5X,QAC7E,OAAOpH,EAAM+I,yBAAyBkW,KAAKvV,IACzC,MAAMwV,EAAQxV,EAAKY,WAAW0J,SAASwlC,EAAgB,OAAIz5C,GACrD2e,EAAcnb,OAAOhE,EAAmE,EAA1EgE,CAA6E2b,EAAMR,aACvG,MAAO,CACLS,KAAMhR,EAASzE,EAAKT,OAAOoI,MAC3B+N,UAAWF,EAAMG,gBACjBk8B,UAAW9pB,EACXhS,QAAS/V,EAAKpD,QACd2oC,QAAS/vB,EAAMgwB,eACf2M,SAAU38B,EAAMwS,WAChBoL,eAAgB5d,EAAMyS,iBACtByc,SAAUlvB,EAAMiwB,gBAChB3vB,WAAYd,EAAYzG,MAAQyG,EAAY1G,QAAU,EACtDsH,YAAaJ,EAAMK,YACnBi0B,WAAYA,GAAct0B,EAAMs0B,WAChCj4B,SAAU2D,EAAM3D,SAChBkgB,UAAWA,GAAavc,EAAMuc,UAC9BkR,aAAc,EACdpjC,aAAcG,EAAKT,SAEpBxJ,QAGPyb,MAAO,CACLuW,MAAQ3lB,GAAQA,EAAI9L,MAAMoH,QAAQqqB,MAClC9O,SAAS,EACT4B,SAAU,SACVpF,KAAM,KAGVkgB,YAAa,CACXx5B,YAAcC,IAAUA,EAAK6sB,WAAW,MACxC7iB,OAAQ,CACNjK,YAAcC,IAAU,CAAC,iBAAkB,SAAU,QAAQ0+B,SAAS1+B,MAK5E,MAAMu3C,WAAc3/C,GAClB8B,YAAYiH,GACVoQ,QACApX,KAAKO,MAAQyG,EAAOzG,MACpBP,KAAK2H,QAAUX,EAAOW,QACtB3H,KAAKqM,IAAMrF,EAAOqF,IAClBrM,KAAK69C,cAAWv9C,EAChBN,KAAKkS,SAAM5R,EACXN,KAAKoS,YAAS9R,EACdN,KAAKqS,UAAO/R,EACZN,KAAKmS,WAAQ7R,EACbN,KAAKwY,WAAQlY,EACbN,KAAKuY,YAASjY,EACdN,KAAK8kB,cAAWxkB,EAChBN,KAAKqf,YAAS/e,EACdN,KAAK8oB,cAAWxoB,EAElBP,OAAO+d,EAAUC,GACf,MAAMzc,EAAKtB,KACLgJ,EAAO1H,EAAGqG,QAGhB,GAFArG,EAAG+Q,KAAO,EACV/Q,EAAG4Q,IAAM,GACJlJ,EAAKka,QAER,YADA5hB,EAAGkX,MAAQlX,EAAGiX,OAASjX,EAAG6Q,MAAQ7Q,EAAG8Q,OAAS,GAGhD9Q,EAAGkX,MAAQlX,EAAG6Q,MAAQ2L,EACtBxc,EAAGiX,OAASjX,EAAG8Q,OAAS2L,EACxB,MAAMke,EAAYn4B,OAAOhE,EAAoE,GAA3EgE,CAA8EkF,EAAK0W,MAAQ1W,EAAK0W,KAAK3d,OAAS,EAChIT,EAAGu8C,SAAW/5C,OAAOhE,EAAmE,EAA1EgE,CAA6EkF,EAAKigB,SAChG,MAAM60B,EAAW7hB,EAAYn4B,OAAOhE,EAAmE,EAA1EgE,CAA6EkF,EAAKgrB,MAAMC,WAAa3yB,EAAGu8C,SAAStlC,OAC1IjX,EAAGoW,eACLpW,EAAGiX,OAASulC,EAEZx8C,EAAGkX,MAAQslC,EAGf/9C,eACE,MAAM+mB,EAAM9mB,KAAK2H,QAAQmd,SACzB,MAAe,QAARgC,GAAyB,WAARA,EAE1B/mB,UAAUgb,GACR,MAAM7I,IAACA,EAAGG,KAAEA,EAAID,OAAEA,EAAMD,MAAEA,EAAKxK,QAAEA,GAAW3H,KACtC4yB,EAAQjrB,EAAQirB,MACtB,IACI9U,EAAU+f,EAAQC,EADlBhiB,EAAW,EAkBf,OAhBI9b,KAAK0X,gBACPmmB,EAAS/5B,OAAOhE,EAAmE,EAA1EgE,CAA6E8uB,EAAOvgB,EAAMF,GACnG2rB,EAAS5rB,EAAM6I,EACf+C,EAAW3L,EAAQE,IAEM,SAArB1K,EAAQmd,UACV+Y,EAASxrB,EAAO0I,EAChB+iB,EAASh6B,OAAOhE,EAAmE,EAA1EgE,CAA6E8uB,EAAOxgB,EAAQF,GACrG4J,GAAmF,GAAxEhc,EAAmE,IAE9E+9B,EAAS1rB,EAAQ4I,EACjB+iB,EAASh6B,OAAOhE,EAAmE,EAA1EgE,CAA6E8uB,EAAO1gB,EAAKE,GAClG0J,EAAkF,GAAvEhc,EAAmE,GAEhFge,EAAW1L,EAASF,GAEf,CAAC2rB,OAAAA,EAAQC,OAAAA,EAAQhgB,SAAAA,EAAUhC,SAAAA,GAEpC/b,OACE,MAAMuB,EAAKtB,KACLqM,EAAM/K,EAAG+K,IACTrD,EAAO1H,EAAGqG,QAChB,IAAKqB,EAAKka,QACR,OAEF,MAAM66B,EAAWj6C,OAAOhE,EAAmE,EAA1EgE,CAA6EkF,EAAKgrB,MAE7FjZ,EADagjC,EAAS9pB,WACA,EAAI3yB,EAAGu8C,SAAS3rC,KACtC2rB,OAACA,EAAMC,OAAEA,EAAMhgB,SAAEA,EAAQhC,SAAEA,GAAYxa,EAAG08C,UAAUjjC,GAC1DjX,OAAOhE,EAAmE,EAA1EgE,CAA6EuI,EAAKrD,EAAK0W,KAAM,EAAG,EAAGq+B,EAAU,CAC3G/rB,MAAOhpB,EAAKgpB,MACZlU,SAAAA,EACAhC,SAAAA,EACAkgB,UAAWl4B,OAAOhE,EAAmE,EAA1EgE,CAA6EkF,EAAK4pB,OAC7FuJ,aAAc,SACdQ,YAAa,CAACkB,EAAQC,MAc5B,IAAI3+B,GAAe,CACjBoM,GAAI,QACJiyC,SAAUI,GACV79C,MAAMQ,EAAOi5C,EAAO7xC,IAbtB,SAAqBpH,EAAO83B,GAC1B,MAAM5c,EAAQ,IAAImiC,GAAM,CACtBvxC,IAAK9L,EAAM8L,IACX1E,QAAS0wB,EACT93B,MAAAA,IAEFd,GAAQ0H,UAAU5G,EAAOkb,EAAO4c,GAChC54B,GAAQmpC,OAAOroC,EAAOkb,GACtBlb,EAAM09C,WAAaxiC,EAMjByiC,CAAY39C,EAAOoH,IAErB5H,KAAKQ,GACH,MAAM09C,EAAa19C,EAAM09C,WACzBx+C,GAAQgqC,UAAUlpC,EAAO09C,UAClB19C,EAAM09C,YAEfl+C,aAAaQ,EAAOi5C,EAAO7xC,GACzB,MAAM8T,EAAQlb,EAAM09C,WACpBx+C,GAAQ0H,UAAU5G,EAAOkb,EAAO9T,GAChC8T,EAAM9T,QAAUA,GAElBoP,SAAU,CACR6b,MAAO,SACP1P,SAAS,EACT8Q,KAAM,CACJ3U,OAAQ,QAEVyJ,UAAU,EACVG,QAAS,GACTnE,SAAU,MACVpF,KAAM,GACNL,OAAQ,KAEV0P,cAAe,CACbiD,MAAO,SAET4N,YAAa,CACXx5B,aAAa,EACbD,YAAY,IAIhB,MAAMg4C,GAAc,CAClBp+C,QAAQ+B,GACN,IAAKA,EAAMC,OACT,OAAO,EAET,IAAIE,EAAG+uB,EACHxjB,EAAI,EACJC,EAAI,EACJoC,EAAQ,EACZ,IAAK5N,EAAI,EAAG+uB,EAAMlvB,EAAMC,OAAQE,EAAI+uB,IAAO/uB,EAAG,CAC5C,MAAM0iB,EAAK7iB,EAAMG,GAAG2Q,QACpB,GAAI+R,GAAMA,EAAGy5B,WAAY,CACvB,MAAMt3B,EAAMnC,EAAG05B,kBACf7wC,GAAKsZ,EAAItZ,EACTC,GAAKqZ,EAAIrZ,IACPoC,GAGN,MAAO,CACLrC,EAAGA,EAAIqC,EACPpC,EAAGA,EAAIoC,IAGX9P,QAAQ+B,EAAOw8C,GACb,IAAKx8C,EAAMC,OACT,OAAO,EAET,IAGIE,EAAG+uB,EAAKutB,EAHR/wC,EAAI8wC,EAAc9wC,EAClBC,EAAI6wC,EAAc7wC,EAClBwY,EAAchV,OAAOC,kBAEzB,IAAKjP,EAAI,EAAG+uB,EAAMlvB,EAAMC,OAAQE,EAAI+uB,IAAO/uB,EAAG,CAC5C,MAAM0iB,EAAK7iB,EAAMG,GAAG2Q,QACpB,GAAI+R,GAAMA,EAAGy5B,WAAY,CACvB,MAAM9lC,EAASqM,EAAGuB,iBACZhpB,EAAI4G,OAAOhE,EAAqE,GAA5EgE,CAA+Ew6C,EAAehmC,GACpGpb,EAAI+oB,IACNA,EAAc/oB,EACdqhD,EAAiB55B,IAIvB,GAAI45B,EAAgB,CAClB,MAAMC,EAAKD,EAAeF,kBAC1B7wC,EAAIgxC,EAAGhxC,EACPC,EAAI+wC,EAAG/wC,EAET,MAAO,CACLD,EAAAA,EACAC,EAAAA,KAIN,SAASgxC,GAAalnC,EAAMmnC,GAQ1B,OAPIA,IACE56C,OAAOhE,EAAoE,GAA3EgE,CAA8E46C,GAChF5vC,MAAMkI,UAAUpa,KAAK+hD,MAAMpnC,EAAMmnC,GAEjCnnC,EAAK3a,KAAK8hD,IAGPnnC,EAET,SAASqnC,GAAcC,GACrB,OAAoB,kBAARA,GAAoBA,aAAeC,SAAWD,EAAIhmC,QAAQ,OAAS,EACtEgmC,EAAIzf,MAAM,MAEZyf,EAET,SAASE,GAAkBx+C,EAAOyB,GAChC,MAAM4Q,QAACA,EAAO9I,aAAEA,EAAYN,MAAEA,GAASxH,EACjC6I,EAAatK,EAAMoO,eAAe7E,GAAce,YAChD+G,MAACA,EAAKnJ,MAAEA,GAASoC,EAAWm0C,iBAAiBx1C,GACnD,MAAO,CACLjJ,MAAAA,EACAqR,MAAAA,EACA9G,OAAQD,EAAW8G,UAAUnI,GAC7B2J,IAAK5S,EAAMkO,KAAKC,SAAS5E,GAAc2E,KAAKjF,GAC5C8W,eAAgB7X,EAChB4E,QAASxC,EAAWyC,aACpB4F,UAAW1J,EACXM,aAAAA,EACA8I,QAAAA,GAGJ,SAASqsC,GAAezjC,EAAS7T,GAC/B,MAAM0E,EAAMmP,EAAQvU,OAAOoF,KACrB6yC,KAACA,EAAIC,OAAEA,EAAM1jC,MAAEA,GAASD,GACxBs+B,SAACA,EAAQD,UAAEA,GAAalyC,EACxBy3C,EAAWt7C,OAAOhE,EAAmE,EAA1EgE,CAA6E6D,EAAQy3C,UAChGtC,EAAYh5C,OAAOhE,EAAmE,EAA1EgE,CAA6E6D,EAAQm1C,WACjGuC,EAAav7C,OAAOhE,EAAmE,EAA1EgE,CAA6E6D,EAAQ03C,YAClGC,EAAiB7jC,EAAM1Z,OACvBw9C,EAAkBJ,EAAOp9C,OACzBy9C,EAAoBN,EAAKn9C,OACzBknB,EAAUnlB,OAAOhE,EAAmE,EAA1EgE,CAA6E6D,EAAQshB,SACrG,IAAI1Q,EAAS0Q,EAAQ1Q,OACjBC,EAAQ,EACRinC,EAAqBP,EAAKl8C,QAAO,CAAC6M,EAAO6vC,IAAa7vC,EAAQ6vC,EAASC,OAAO59C,OAAS29C,EAASE,MAAM79C,OAAS29C,EAASG,MAAM99C,QAAQ,GAO1I,GANA09C,GAAsBjkC,EAAQskC,WAAW/9C,OAASyZ,EAAQukC,UAAUh+C,OAChEu9C,IACF/mC,GAAU+mC,EAAiBxC,EAAU7oB,YACnCqrB,EAAiB,GAAK33C,EAAQq4C,aAC/Br4C,EAAQs4C,mBAEPR,EAAoB,CAEtBlnC,GAAUinC,GADa73C,EAAQu4C,cAAgB/+C,KAAKgC,IAAI02C,EAAWuF,EAASnrB,YAAcmrB,EAASnrB,aAEjGwrB,EAAqBD,GAAqBJ,EAASnrB,YACnDwrB,EAAqB,GAAK93C,EAAQw4C,YAElCZ,IACFhnC,GAAU5Q,EAAQy4C,gBACjBb,EAAkBF,EAAWprB,YAC5BsrB,EAAkB,GAAK53C,EAAQ04C,eAEnC,IAAIC,EAAe,EACnB,MAAMC,EAAe,SAAS//B,GAC5BhI,EAAQrX,KAAKgC,IAAIqV,EAAOnM,EAAI8uC,YAAY36B,GAAMhI,MAAQ8nC,IAkBxD,OAhBAj0C,EAAIuwB,OACJvwB,EAAI2nB,KAAO8oB,EAAUjjB,OACrB/1B,OAAOhE,EAAmE,EAA1EgE,CAA6E0X,EAAQC,MAAO8kC,GAC5Fl0C,EAAI2nB,KAAOorB,EAASvlB,OACpB/1B,OAAOhE,EAAmE,EAA1EgE,CAA6E0X,EAAQskC,WAAWtqC,OAAOgG,EAAQukC,WAAYQ,GAC3HD,EAAe34C,EAAQu4C,cAAiBpG,EAAW,EAAK,EACxDh2C,OAAOhE,EAAmE,EAA1EgE,CAA6Eo7C,GAAOQ,IAClF57C,OAAOhE,EAAmE,EAA1EgE,CAA6E47C,EAASC,OAAQY,GAC9Fz8C,OAAOhE,EAAmE,EAA1EgE,CAA6E47C,EAASE,MAAOW,GAC7Fz8C,OAAOhE,EAAmE,EAA1EgE,CAA6E47C,EAASG,MAAOU,MAE/FD,EAAe,EACfj0C,EAAI2nB,KAAOqrB,EAAWxlB,OACtB/1B,OAAOhE,EAAmE,EAA1EgE,CAA6E0X,EAAQ2jC,OAAQoB,GAC7Fl0C,EAAIywB,UACJtkB,GAASyQ,EAAQzQ,MACV,CAACA,MAAAA,EAAOD,OAAAA,GAqBjB,SAASioC,GAAgBjgD,EAAOoH,EAASgB,EAAM83C,GAC7C,MAAMjzC,EAACA,EAACgL,MAAEA,GAAS7P,GACZ6P,MAAOkoC,EAAY/tC,WAAWN,KAACA,EAAIF,MAAEA,IAAU5R,EACtD,IAAIogD,EAAS,SAWb,MAVe,WAAXF,EACFE,EAASnzC,IAAM6E,EAAOF,GAAS,EAAI,OAAS,QACnC3E,GAAKgL,EAAQ,EACtBmoC,EAAS,OACAnzC,GAAKkzC,EAAaloC,EAAQ,IACnCmoC,EAAS,SAnBb,SAA6BA,EAAQpgD,EAAOoH,EAASgB,GACnD,MAAM6E,EAACA,EAACgL,MAAEA,GAAS7P,EACbi4C,EAAQj5C,EAAQk5C,UAAYl5C,EAAQm5C,aAC1C,MAAe,SAAXH,GAAqBnzC,EAAIgL,EAAQooC,EAAQrgD,EAAMiY,OAGpC,UAAXmoC,GAAsBnzC,EAAIgL,EAAQooC,EAAQ,QAA9C,EAeIG,CAAoBJ,EAAQpgD,EAAOoH,EAASgB,KAC9Cg4C,EAAS,UAEJA,EAET,SAASK,GAAmBzgD,EAAOoH,EAASgB,GAC1C,MAAM83C,EAAS94C,EAAQ84C,QApCzB,SAAyBlgD,EAAOoI,GAC9B,MAAM8E,EAACA,EAAC8K,OAAEA,GAAU5P,EACpB,OAAI8E,EAAI8K,EAAS,EACR,MACE9K,EAAKlN,EAAMgY,OAASA,EAAS,EAC/B,SAEF,SA6B0B0oC,CAAgB1gD,EAAOoI,GACxD,MAAO,CACLg4C,OAAQh5C,EAAQg5C,QAAUH,GAAgBjgD,EAAOoH,EAASgB,EAAM83C,GAChEA,OAAAA,GAuBJ,SAASS,GAAmBv5C,EAASgB,EAAMw4C,EAAW5gD,GACpD,MAAMsgD,UAACA,EAASC,aAAEA,EAAYM,aAAEA,GAAgBz5C,GAC1Cg5C,OAACA,EAAMF,OAAEA,GAAUU,EACnBE,EAAiBR,EAAYC,EAC7BQ,EAAmBF,EAAeN,EACxC,IAAItzC,EAzBN,SAAgB7E,EAAMg4C,GACpB,IAAInzC,EAACA,EAACgL,MAAEA,GAAS7P,EAMjB,MALe,UAAXg4C,EACFnzC,GAAKgL,EACe,WAAXmoC,IACTnzC,GAAMgL,EAAQ,GAEThL,EAkBC+zC,CAAO54C,EAAMg4C,GACrB,MAAMlzC,EAjBR,SAAgB9E,EAAM83C,EAAQY,GAC5B,IAAI5zC,EAACA,EAAC8K,OAAEA,GAAU5P,EAQlB,MAPe,QAAX83C,EACFhzC,GAAK4zC,EAEL5zC,GADoB,WAAXgzC,EACJloC,EAAS8oC,EAER9oC,EAAS,EAEV9K,EAQG+zC,CAAO74C,EAAM83C,EAAQY,GAY/B,MAXe,WAAXZ,EACa,SAAXE,EACFnzC,GAAK6zC,EACe,UAAXV,IACTnzC,GAAK6zC,GAEa,SAAXV,EACTnzC,GAAK8zC,EACe,UAAXX,IACTnzC,GAAK8zC,GAEA,CACL9zC,EAAG1J,OAAOhE,EAAoE,GAA3EgE,CAA8E0J,EAAG,EAAGjN,EAAMiY,MAAQ7P,EAAK6P,OAC1G/K,EAAG3J,OAAOhE,EAAoE,GAA3EgE,CAA8E2J,EAAG,EAAGlN,EAAMgY,OAAS5P,EAAK4P,SAG/G,SAASkpC,GAAYjmC,EAASoX,EAAOjrB,GACnC,MAAMshB,EAAUnlB,OAAOhE,EAAmE,EAA1EgE,CAA6E6D,EAAQshB,SACrG,MAAiB,WAAV2J,EACHpX,EAAQhO,EAAIgO,EAAQhD,MAAQ,EAClB,UAAVoa,EACEpX,EAAQhO,EAAIgO,EAAQhD,MAAQyQ,EAAQ9W,MACpCqJ,EAAQhO,EAAIyb,EAAQ5W,KAE5B,SAASqvC,GAAwBhvB,GAC/B,OAAO+rB,GAAa,GAAIG,GAAclsB,IASxC,SAASivB,GAAkBhhD,EAAWoS,GACpC,MAAMmR,EAAWnR,GAAWA,EAAQ1F,SAAW0F,EAAQ1F,QAAQmO,SAAWzI,EAAQ1F,QAAQmO,QAAQ7a,UAClG,OAAOujB,EAAWvjB,EAAUujB,SAASA,GAAYvjB,EAEnD,MAAMihD,WAAgB3jD,GACpB8B,YAAYiH,GACVoQ,QACApX,KAAK6hD,QAAU,EACf7hD,KAAKmC,QAAU,GACfnC,KAAKiH,OAASD,EAAOC,OACrBjH,KAAK8hD,oBAAiBxhD,EACtBN,KAAK+hD,WAAQzhD,EACbN,KAAKgiD,uBAAoB1hD,EACzBN,KAAKiiD,cAAgB,GACrBjiD,KAAK8H,iBAAcxH,EACnBN,KAAKgN,cAAW1M,EAChBN,KAAK2H,QAAUX,EAAOW,QACtB3H,KAAKkiD,gBAAa5hD,EAClBN,KAAKyb,WAAQnb,EACbN,KAAK8/C,gBAAax/C,EAClBN,KAAKk/C,UAAO5+C,EACZN,KAAK+/C,eAAYz/C,EACjBN,KAAKm/C,YAAS7+C,EACdN,KAAK2gD,YAASrgD,EACdN,KAAKygD,YAASngD,EACdN,KAAKwN,OAAIlN,EACTN,KAAKyN,OAAInN,EACTN,KAAKuY,YAASjY,EACdN,KAAKwY,WAAQlY,EACbN,KAAKmiD,YAAS7hD,EACdN,KAAKoiD,YAAS9hD,EACdN,KAAKqiD,iBAAc/hD,EACnBN,KAAKsiD,sBAAmBhiD,EACxBN,KAAKuiD,qBAAkBjiD,EAEzBP,WAAW4H,GACT3H,KAAK2H,QAAUA,EACf3H,KAAKgiD,uBAAoB1hD,EACzBN,KAAKgN,cAAW1M,EAElBP,qBACE,MAAMuB,EAAKtB,KACLkM,EAAS5K,EAAG0gD,kBAClB,GAAI91C,EACF,OAAOA,EAET,MAAM3L,EAAQe,EAAG2F,OACXU,EAAUrG,EAAGqG,QAAQ2tB,WAAWh0B,EAAGqO,cACnC3G,EAAOrB,EAAQ4oB,SAAWhwB,EAAMoH,QAAQ3B,WAAa2B,EAAQf,WAC7DA,EAAa,IAAIxJ,EAAWkE,EAAG2F,OAAQ+B,GAI7C,OAHIA,EAAKmL,aACP7S,EAAG0gD,kBAAoBl+C,OAAOkQ,OAAOpN,IAEhCA,EAET7G,aACE,MAAMuB,EAAKtB,KACX,OAAOsB,EAAG0L,WACV1L,EAAG0L,UAjEuBgG,EAiES1R,EAAG2F,OAAO0I,aAjEX6L,EAiEyBla,EAjEhBkhD,EAiEoBlhD,EAAG2gD,cAhE7Dn+C,OAAO+D,OAAO/D,OAAOmP,OAAOD,GAAS,CAC1CwI,QAAAA,EACAgnC,aAAAA,EACA9hD,KAAM,cAJV,IAA8BsS,EAAQwI,EAASgnC,EAmE7CziD,SAASgT,EAASpL,GAChB,MAAMrG,EAAKtB,MACLW,UAACA,GAAagH,EACd86C,EAAc9hD,EAAU8hD,YAAY9D,MAAMr9C,EAAI,CAACyR,IAC/C0I,EAAQ9a,EAAU8a,MAAMkjC,MAAMr9C,EAAI,CAACyR,IACnC2vC,EAAa/hD,EAAU+hD,WAAW/D,MAAMr9C,EAAI,CAACyR,IACnD,IAAI6sC,EAAQ,GAIZ,OAHAA,EAAQnB,GAAamB,EAAOhB,GAAc6D,IAC1C7C,EAAQnB,GAAamB,EAAOhB,GAAcnjC,IAC1CmkC,EAAQnB,GAAamB,EAAOhB,GAAc8D,IACnC9C,EAET7/C,cAAcyiD,EAAc76C,GAC1B,OAAO+5C,GAAwB/5C,EAAQhH,UAAUm/C,WAAWnB,MAAM3+C,KAAM,CAACwiD,KAE3EziD,QAAQyiD,EAAc76C,GACpB,MAAMrG,EAAKtB,MACLW,UAACA,GAAagH,EACdg7C,EAAY,GAalB,OAZA7+C,OAAOhE,EAAmE,EAA1EgE,CAA6E0+C,GAAezvC,IAC1F,MAAM2sC,EAAW,CACfC,OAAQ,GACRC,MAAO,GACPC,MAAO,IAEH+C,EAASjB,GAAkBhhD,EAAWoS,GAC5C0rC,GAAaiB,EAASC,OAAQf,GAAcgE,EAAOC,YAAYthD,KAAKD,EAAIyR,KACxE0rC,GAAaiB,EAASE,MAAOgD,EAAOhxC,MAAMrQ,KAAKD,EAAIyR,IACnD0rC,GAAaiB,EAASG,MAAOjB,GAAcgE,EAAOE,WAAWvhD,KAAKD,EAAIyR,KACtE4vC,EAAU/lD,KAAK8iD,MAEViD,EAET5iD,aAAayiD,EAAc76C,GACzB,OAAO+5C,GAAwB/5C,EAAQhH,UAAUo/C,UAAUpB,MAAM3+C,KAAM,CAACwiD,KAE1EziD,UAAUyiD,EAAc76C,GACtB,MAAMrG,EAAKtB,MACLW,UAACA,GAAagH,EACdo7C,EAAepiD,EAAUoiD,aAAapE,MAAMr9C,EAAI,CAACkhD,IACjDrD,EAASx+C,EAAUw+C,OAAOR,MAAMr9C,EAAI,CAACkhD,IACrCQ,EAAcriD,EAAUqiD,YAAYrE,MAAMr9C,EAAI,CAACkhD,IACrD,IAAI5C,EAAQ,GAIZ,OAHAA,EAAQnB,GAAamB,EAAOhB,GAAcmE,IAC1CnD,EAAQnB,GAAamB,EAAOhB,GAAcO,IAC1CS,EAAQnB,GAAamB,EAAOhB,GAAcoE,IACnCpD,EAET7/C,aAAa4H,GACX,MAAMrG,EAAKtB,KACLyG,EAASnF,EAAGa,QACZsM,EAAOnN,EAAG2F,OAAOwH,KACjB4zC,EAAc,GACdC,EAAmB,GACnBC,EAAkB,GACxB,IACItgD,EAAG+uB,EADHwxB,EAAe,GAEnB,IAAKvgD,EAAI,EAAG+uB,EAAMvqB,EAAO1E,OAAQE,EAAI+uB,IAAO/uB,EAC1CugD,EAAa5lD,KAAKmiD,GAAkBz9C,EAAG2F,OAAQR,EAAOxE,KAkBxD,OAhBI0F,EAAQiE,SACV42C,EAAeA,EAAa52C,QAAO,CAACgH,EAASpJ,EAAOqd,IAAUlf,EAAQiE,OAAOgH,EAASpJ,EAAOqd,EAAOpY,MAElG9G,EAAQs7C,WACVT,EAAeA,EAAa9sC,MAAK,CAACC,EAAG3D,IAAMrK,EAAQs7C,SAASttC,EAAG3D,EAAGvD,MAEpE3K,OAAOhE,EAAmE,EAA1EgE,CAA6E0+C,GAAezvC,IAC1F,MAAM6vC,EAASjB,GAAkBh6C,EAAQhH,UAAWoS,GACpDsvC,EAAYzlD,KAAKgmD,EAAOM,WAAW3hD,KAAKD,EAAIyR,IAC5CuvC,EAAiB1lD,KAAKgmD,EAAOO,gBAAgB5hD,KAAKD,EAAIyR,IACtDwvC,EAAgB3lD,KAAKgmD,EAAOQ,eAAe7hD,KAAKD,EAAIyR,OAEtDzR,EAAG+gD,YAAcA,EACjB/gD,EAAGghD,iBAAmBA,EACtBhhD,EAAGihD,gBAAkBA,EACrBjhD,EAAG4gD,WAAaM,EACTA,EAETziD,OAAOshB,EAASwqB,GACd,MAAMvqC,EAAKtB,KACL2H,EAAUrG,EAAGqG,QAAQ2tB,WAAWh0B,EAAGqO,cACnClJ,EAASnF,EAAGa,QAClB,IAAIoE,EACAi8C,EAAe,GACnB,GAAK/7C,EAAO1E,OAML,CACL,MAAM+iB,EAAWq5B,GAAYx2C,EAAQmd,UAAUvjB,KAAKD,EAAImF,EAAQnF,EAAGwgD,gBACnEU,EAAelhD,EAAG+hD,aAAa17C,GAC/BrG,EAAGma,MAAQna,EAAGgiD,SAASd,EAAc76C,GACrCrG,EAAGw+C,WAAax+C,EAAGiiD,cAAcf,EAAc76C,GAC/CrG,EAAG49C,KAAO59C,EAAGkiD,QAAQhB,EAAc76C,GACnCrG,EAAGy+C,UAAYz+C,EAAGmiD,aAAajB,EAAc76C,GAC7CrG,EAAG69C,OAAS79C,EAAGoiD,UAAUlB,EAAc76C,GACvC,MAAMgB,EAAOrH,EAAGygD,MAAQ9C,GAAe39C,EAAIqG,GACrCg8C,EAAkB7/C,OAAO+D,OAAO,GAAIid,EAAUnc,GAC9Cw4C,EAAYH,GAAmB1/C,EAAG2F,OAAQU,EAASg8C,GACnDC,EAAkB1C,GAAmBv5C,EAASg8C,EAAiBxC,EAAW7/C,EAAG2F,QACnF3F,EAAGq/C,OAASQ,EAAUR,OACtBr/C,EAAGm/C,OAASU,EAAUV,OACtBl6C,EAAa,CACXs7C,QAAS,EACTr0C,EAAGo2C,EAAgBp2C,EACnBC,EAAGm2C,EAAgBn2C,EACnB+K,MAAO7P,EAAK6P,MACZD,OAAQ5P,EAAK4P,OACb4pC,OAAQr9B,EAAStX,EACjB40C,OAAQt9B,EAASrX,QA1BA,IAAfnM,EAAGugD,UACLt7C,EAAa,CACXs7C,QAAS,IA2BfvgD,EAAG2gD,cAAgBO,EACnBlhD,EAAG0L,cAAW1M,EACViG,GACFjF,EAAGgT,qBAAqB5L,OAAOpH,EAAIiF,GAEjC8a,GAAW1Z,EAAQk8C,UACrBl8C,EAAQk8C,SAAStiD,KAAKD,EAAI,CAACf,MAAOe,EAAG2F,OAAQuU,QAASla,EAAIuqC,OAAAA,IAG9D9rC,UAAU+jD,EAAcz3C,EAAK1D,EAAMhB,GACjC,MAAMo8C,EAAgB/jD,KAAKgkD,iBAAiBF,EAAcn7C,EAAMhB,GAChE0E,EAAImxB,OAAOumB,EAAc1oB,GAAI0oB,EAAczoB,IAC3CjvB,EAAImxB,OAAOumB,EAAcxoB,GAAIwoB,EAAcvoB,IAC3CnvB,EAAImxB,OAAOumB,EAAcE,GAAIF,EAAcG,IAE7CnkD,iBAAiB+jD,EAAcn7C,EAAMhB,GACnC,MAAMg5C,OAACA,EAAMF,OAAEA,GAAUzgD,MACnBohD,aAACA,EAAYP,UAAEA,GAAal5C,GAC3B6F,EAAG22C,EAAK12C,EAAG22C,GAAON,GACnBtrC,MAACA,EAAKD,OAAEA,GAAU5P,EACxB,IAAI0yB,EAAIE,EAAI0oB,EAAI3oB,EAAIE,EAAI0oB,EAoCxB,MAnCe,WAAXzD,GACFjlB,EAAK4oB,EAAO7rC,EAAS,EACN,SAAXooC,GACFtlB,EAAK8oB,EACL5oB,EAAKF,EAAKwlB,EACVvlB,EAAKE,EAAKqlB,EACVqD,EAAK1oB,EAAKqlB,IAEVxlB,EAAK8oB,EAAM3rC,EACX+iB,EAAKF,EAAKwlB,EACVvlB,EAAKE,EAAKqlB,EACVqD,EAAK1oB,EAAKqlB,GAEZoD,EAAK5oB,IAGHE,EADa,SAAXolB,EACGwD,EAAM/C,EAAe,EACN,UAAXT,EACJwD,EAAM3rC,EAAQ4oC,EAAeP,EAE7B7gD,KAAKmiD,OAEG,QAAX1B,GACFnlB,EAAK8oB,EACL5oB,EAAKF,EAAKulB,EACVxlB,EAAKE,EAAKslB,EACVoD,EAAK1oB,EAAKslB,IAEVvlB,EAAK8oB,EAAM7rC,EACXijB,EAAKF,EAAKulB,EACVxlB,EAAKE,EAAKslB,EACVoD,EAAK1oB,EAAKslB,GAEZqD,EAAK5oB,GAEA,CAACD,GAAAA,EAAIE,GAAAA,EAAI0oB,GAAAA,EAAI3oB,GAAAA,EAAIE,GAAAA,EAAI0oB,GAAAA,GAE9BnkD,UAAUskD,EAAIh4C,EAAK1E,GACjB,MAAMrG,EAAKtB,KACLyb,EAAQna,EAAGma,MACX1Z,EAAS0Z,EAAM1Z,OACrB,IAAI+6C,EAAWkD,EAAc/9C,EAC7B,GAAIF,EAAQ,CACV,MAAM65C,EAAY93C,OAAOhE,EAAqE,GAA5EgE,CAA+E6D,EAAQk0C,IAAKv6C,EAAGkM,EAAGlM,EAAGkX,OAQvH,IAPA6rC,EAAG72C,EAAIi0C,GAAYngD,EAAIqG,EAAQusB,WAAYvsB,GAC3C0E,EAAI2vB,UAAY4f,EAAU5f,UAAUr0B,EAAQusB,YAC5C7nB,EAAI8vB,aAAe,SACnB2gB,EAAYh5C,OAAOhE,EAAmE,EAA1EgE,CAA6E6D,EAAQm1C,WACjGkD,EAAer4C,EAAQq4C,aACvB3zC,EAAIsT,UAAYhY,EAAQ28C,WACxBj4C,EAAI2nB,KAAO8oB,EAAUjjB,OAChB53B,EAAI,EAAGA,EAAIF,IAAUE,EACxBoK,EAAIwwC,SAASphC,EAAMxZ,GAAI25C,EAAUpuC,EAAE62C,EAAG72C,GAAI62C,EAAG52C,EAAIqvC,EAAU7oB,WAAa,GACxEowB,EAAG52C,GAAKqvC,EAAU7oB,WAAa+rB,EAC3B/9C,EAAI,IAAMF,IACZsiD,EAAG52C,GAAK9F,EAAQs4C,kBAAoBD,IAK5CjgD,cAAcsM,EAAKg4C,EAAIpiD,EAAG25C,EAAWj0C,GACnC,MAAMrG,EAAKtB,KACLqiD,EAAc/gD,EAAG+gD,YAAYpgD,GAC7BkhD,EAAkB7hD,EAAGghD,iBAAiBrgD,IACtC43C,UAACA,EAASC,SAAEA,GAAYnyC,EACxBy3C,EAAWt7C,OAAOhE,EAAmE,EAA1EgE,CAA6E6D,EAAQy3C,UAChGmF,EAAS9C,GAAYngD,EAAI,OAAQqG,GACjC68C,EAAY5I,EAAUpuC,EAAE+2C,GACxBE,EAAU5K,EAAYuF,EAASnrB,YAAcmrB,EAASnrB,WAAa4lB,GAAa,EAAI,EACpF6K,EAASL,EAAG52C,EAAIg3C,EACtB,GAAI98C,EAAQoyC,cAAe,CACzB,MAAMsC,EAAc,CAClB9gC,OAAQpa,KAAKC,IAAI04C,EAAUD,GAAa,EACxC9F,WAAYoP,EAAgBpP,WAC5Bj4B,SAAUqnC,EAAgBrnC,SAC1BmD,YAAa,GAETR,EAAUm9B,EAAUc,WAAW8H,EAAW1K,GAAYA,EAAW,EACjEp7B,EAAUgmC,EAAS7K,EAAY,EACrCxtC,EAAIwT,YAAclY,EAAQg9C,mBAC1Bt4C,EAAIsT,UAAYhY,EAAQg9C,mBACxB7gD,OAAOhE,EAAqE,GAA5EgE,CAA+EuI,EAAKgwC,EAAa59B,EAASC,GAC1GrS,EAAIwT,YAAcwiC,EAAYviC,YAC9BzT,EAAIsT,UAAY0iC,EAAYziC,gBAC5B9b,OAAOhE,EAAqE,GAA5EgE,CAA+EuI,EAAKgwC,EAAa59B,EAASC,OACrG,CACLrS,EAAI0T,UAAYsiC,EAAYpjC,aAAe,EAC3C5S,EAAIwT,YAAcwiC,EAAYviC,YAC9BzT,EAAI+wB,YAAYilB,EAAYpwB,YAAc,IAC1C5lB,EAAIgxB,eAAiBglB,EAAYnwB,kBAAoB,EACrD,MAAM0yB,EAAShJ,EAAUc,WAAW8H,EAAW1K,GACzC+K,EAASjJ,EAAUc,WAAWd,EAAUW,MAAMiI,EAAW,GAAI1K,EAAW,GACxE5M,EAAeppC,OAAOhE,EAAqE,GAA5EgE,CAA+Eu+C,EAAYnV,cAC5GppC,OAAO2D,OAAOylC,GAAcvL,MAAK56B,GAAW,IAANA,KACxCsF,EAAIixB,YACJjxB,EAAIsT,UAAYhY,EAAQg9C,mBACxB7gD,OAAOhE,EAAqE,GAA5EgE,CAA+EuI,EAAK,CAClFmB,EAAGo3C,EACHn3C,EAAGi3C,EACHz8B,EAAG6xB,EACH3xB,EAAG0xB,EACHt+B,OAAQ2xB,IAEV7gC,EAAImX,OACJnX,EAAIoxB,SACJpxB,EAAIsT,UAAY0iC,EAAYziC,gBAC5BvT,EAAIixB,YACJx5B,OAAOhE,EAAqE,GAA5EgE,CAA+EuI,EAAK,CAClFmB,EAAGq3C,EACHp3C,EAAGi3C,EAAS,EACZz8B,EAAG6xB,EAAW,EACd3xB,EAAG0xB,EAAY,EACft+B,OAAQ2xB,IAEV7gC,EAAImX,SAEJnX,EAAIsT,UAAYhY,EAAQg9C,mBACxBt4C,EAAIwwB,SAAS+nB,EAAQF,EAAQ5K,EAAUD,GACvCxtC,EAAIy4C,WAAWF,EAAQF,EAAQ5K,EAAUD,GACzCxtC,EAAIsT,UAAY0iC,EAAYziC,gBAC5BvT,EAAIwwB,SAASgoB,EAAQH,EAAS,EAAG5K,EAAW,EAAGD,EAAY,IAG/DxtC,EAAIsT,UAAYre,EAAGihD,gBAAgBtgD,GAErClC,SAASskD,EAAIh4C,EAAK1E,GAChB,MAAMrG,EAAKtB,MACLk/C,KAACA,GAAQ59C,GACT6+C,YAACA,EAAW4E,UAAEA,EAAS7E,cAAEA,EAAarG,UAAEA,EAASC,SAAEA,GAAYnyC,EAC/Dy3C,EAAWt7C,OAAOhE,EAAmE,EAA1EgE,CAA6E6D,EAAQy3C,UACtG,IAAI4F,EAAiB5F,EAASnrB,WAC1BgxB,EAAe,EACnB,MAAMrJ,EAAY93C,OAAOhE,EAAqE,GAA5EgE,CAA+E6D,EAAQk0C,IAAKv6C,EAAGkM,EAAGlM,EAAGkX,OACjH0sC,EAAiB,SAAS1kC,GAC9BnU,EAAIwwC,SAASr8B,EAAMo7B,EAAUpuC,EAAE62C,EAAG72C,EAAIy3C,GAAeZ,EAAG52C,EAAIu3C,EAAiB,GAC7EX,EAAG52C,GAAKu3C,EAAiB7E,GAErBgF,EAA0BvJ,EAAU5f,UAAU+oB,GACpD,IAAIrF,EAAU0F,EAAWxF,EAAO39C,EAAGgjB,EAAG1b,EAAMgd,EAU5C,IATAla,EAAI2vB,UAAY+oB,EAChB14C,EAAI8vB,aAAe,SACnB9vB,EAAI2nB,KAAOorB,EAASvlB,OACpBwqB,EAAG72C,EAAIi0C,GAAYngD,EAAI6jD,EAAyBx9C,GAChD0E,EAAIsT,UAAYhY,EAAQ09C,UACxBvhD,OAAOhE,EAAmE,EAA1EgE,CAA6ExC,EAAGw+C,WAAYoF,GAC5FD,EAAe/E,GAA6C,UAA5BiF,EACd,WAAdJ,EAA0BjL,EAAW,EAAI,EAAMA,EAAW,EAC1D,EACC73C,EAAI,EAAGsH,EAAO21C,EAAKn9C,OAAQE,EAAIsH,IAAQtH,EAAG,CAU7C,IATAy9C,EAAWR,EAAKj9C,GAChBmjD,EAAY9jD,EAAGihD,gBAAgBtgD,GAC/BoK,EAAIsT,UAAYylC,EAChBthD,OAAOhE,EAAmE,EAA1EgE,CAA6E47C,EAASC,OAAQuF,GAC9FtF,EAAQF,EAASE,MACbM,GAAiBN,EAAM79C,SACzBT,EAAGgkD,cAAcj5C,EAAKg4C,EAAIpiD,EAAG25C,EAAWj0C,GACxCq9C,EAAiB7jD,KAAKgC,IAAIi8C,EAASnrB,WAAY4lB,IAE5C50B,EAAI,EAAGsB,EAAOq5B,EAAM79C,OAAQkjB,EAAIsB,IAAQtB,EAC3CigC,EAAetF,EAAM36B,IACrB+/B,EAAiB5F,EAASnrB,WAE5BnwB,OAAOhE,EAAmE,EAA1EgE,CAA6E47C,EAASG,MAAOqF,GAE/FD,EAAe,EACfD,EAAiB5F,EAASnrB,WAC1BnwB,OAAOhE,EAAmE,EAA1EgE,CAA6ExC,EAAGy+C,UAAWmF,GAC3Fb,EAAG52C,GAAK0yC,EAEVpgD,WAAWskD,EAAIh4C,EAAK1E,GAClB,MAAMrG,EAAKtB,KACLm/C,EAAS79C,EAAG69C,OACZp9C,EAASo9C,EAAOp9C,OACtB,IAAIs9C,EAAYp9C,EAChB,GAAIF,EAAQ,CACV,MAAM65C,EAAY93C,OAAOhE,EAAqE,GAA5EgE,CAA+E6D,EAAQk0C,IAAKv6C,EAAGkM,EAAGlM,EAAGkX,OAQvH,IAPA6rC,EAAG72C,EAAIi0C,GAAYngD,EAAIqG,EAAQ49C,YAAa59C,GAC5C08C,EAAG52C,GAAK9F,EAAQy4C,gBAChB/zC,EAAI2vB,UAAY4f,EAAU5f,UAAUr0B,EAAQ49C,aAC5Cl5C,EAAI8vB,aAAe,SACnBkjB,EAAav7C,OAAOhE,EAAmE,EAA1EgE,CAA6E6D,EAAQ03C,YAClGhzC,EAAIsT,UAAYhY,EAAQ69C,YACxBn5C,EAAI2nB,KAAOqrB,EAAWxlB,OACjB53B,EAAI,EAAGA,EAAIF,IAAUE,EACxBoK,EAAIwwC,SAASsC,EAAOl9C,GAAI25C,EAAUpuC,EAAE62C,EAAG72C,GAAI62C,EAAG52C,EAAI4xC,EAAWprB,WAAa,GAC1EowB,EAAG52C,GAAK4xC,EAAWprB,WAAatsB,EAAQ04C,eAI9CtgD,eAAeskD,EAAIh4C,EAAKo5C,EAAa99C,GACnC,MAAMg5C,OAACA,EAAMF,OAAEA,GAAUzgD,MACnBwN,EAACA,EAACC,EAAEA,GAAK42C,GACT7rC,MAACA,EAAKD,OAAEA,GAAUktC,EAClBlqC,EAAS5T,EAAQy5C,aACvB/0C,EAAIsT,UAAYhY,EAAQiY,gBACxBvT,EAAIwT,YAAclY,EAAQmY,YAC1BzT,EAAI0T,UAAYpY,EAAQsX,YACxB5S,EAAIixB,YACJjxB,EAAIkxB,OAAO/vB,EAAI+N,EAAQ9N,GACR,QAAXgzC,GACFzgD,KAAK0lD,UAAUrB,EAAIh4C,EAAKo5C,EAAa99C,GAEvC0E,EAAImxB,OAAOhwB,EAAIgL,EAAQ+C,EAAQ9N,GAC/BpB,EAAIs5C,iBAAiBn4C,EAAIgL,EAAO/K,EAAGD,EAAIgL,EAAO/K,EAAI8N,GACnC,WAAXklC,GAAkC,UAAXE,GACzB3gD,KAAK0lD,UAAUrB,EAAIh4C,EAAKo5C,EAAa99C,GAEvC0E,EAAImxB,OAAOhwB,EAAIgL,EAAO/K,EAAI8K,EAASgD,GACnClP,EAAIs5C,iBAAiBn4C,EAAIgL,EAAO/K,EAAI8K,EAAQ/K,EAAIgL,EAAQ+C,EAAQ9N,EAAI8K,GACrD,WAAXkoC,GACFzgD,KAAK0lD,UAAUrB,EAAIh4C,EAAKo5C,EAAa99C,GAEvC0E,EAAImxB,OAAOhwB,EAAI+N,EAAQ9N,EAAI8K,GAC3BlM,EAAIs5C,iBAAiBn4C,EAAGC,EAAI8K,EAAQ/K,EAAGC,EAAI8K,EAASgD,GACrC,WAAXklC,GAAkC,SAAXE,GACzB3gD,KAAK0lD,UAAUrB,EAAIh4C,EAAKo5C,EAAa99C,GAEvC0E,EAAImxB,OAAOhwB,EAAGC,EAAI8N,GAClBlP,EAAIs5C,iBAAiBn4C,EAAGC,EAAGD,EAAI+N,EAAQ9N,GACvCpB,EAAIygC,YACJzgC,EAAImX,OACA7b,EAAQsX,YAAc,GACxB5S,EAAIoxB,SAGR19B,uBAAuB4H,GACrB,MAAMrG,EAAKtB,KACLO,EAAQe,EAAG2F,OACXzG,EAAQc,EAAGwG,YACX89C,EAAQplD,GAASA,EAAMgN,EACvBq4C,EAAQrlD,GAASA,EAAMiN,EAC7B,GAAIm4C,GAASC,EAAO,CAClB,MAAM/gC,EAAWq5B,GAAYx2C,EAAQmd,UAAUvjB,KAAKD,EAAIA,EAAGa,QAASb,EAAGwgD,gBACvE,IAAKh9B,EACH,OAEF,MAAMnc,EAAOrH,EAAGygD,MAAQ9C,GAAe39C,EAAIqG,GACrCg8C,EAAkB7/C,OAAO+D,OAAO,GAAIid,EAAUxjB,EAAGygD,OACjDZ,EAAYH,GAAmBzgD,EAAOoH,EAASg8C,GAC/CvoC,EAAQ8lC,GAAmBv5C,EAASg8C,EAAiBxC,EAAW5gD,GAClEqlD,EAAMxgD,MAAQgW,EAAM5N,GAAKq4C,EAAMzgD,MAAQgW,EAAM3N,IAC/CnM,EAAGq/C,OAASQ,EAAUR,OACtBr/C,EAAGm/C,OAASU,EAAUV,OACtBn/C,EAAGkX,MAAQ7P,EAAK6P,MAChBlX,EAAGiX,OAAS5P,EAAK4P,OACjBjX,EAAG6gD,OAASr9B,EAAStX,EACrBlM,EAAG8gD,OAASt9B,EAASrX,EACrBnM,EAAGgT,qBAAqB5L,OAAOpH,EAAI8Z,KAIzCrb,KAAKsM,GACH,MAAM/K,EAAKtB,KACL2H,EAAUrG,EAAGqG,QAAQ2tB,WAAWh0B,EAAGqO,cACzC,IAAIkyC,EAAUvgD,EAAGugD,QACjB,IAAKA,EACH,OAEFvgD,EAAGwkD,uBAAuBn+C,GAC1B,MAAM89C,EAAc,CAClBjtC,MAAOlX,EAAGkX,MACVD,OAAQjX,EAAGiX,QAEP8rC,EAAK,CACT72C,EAAGlM,EAAGkM,EACNC,EAAGnM,EAAGmM,GAERo0C,EAAU1gD,KAAK6U,IAAI6rC,GAAW,KAAO,EAAIA,EACzC,MAAM54B,EAAUnlB,OAAOhE,EAAmE,EAA1EgE,CAA6E6D,EAAQshB,SAC/F88B,EAAoBzkD,EAAGma,MAAM1Z,QAAUT,EAAGw+C,WAAW/9C,QAAUT,EAAG49C,KAAKn9C,QAAUT,EAAGy+C,UAAUh+C,QAAUT,EAAG69C,OAAOp9C,OACpH4F,EAAQ4oB,SAAWw1B,IACrB15C,EAAIuwB,OACJvwB,EAAI25C,YAAcnE,EAClBvgD,EAAG08B,eAAeqmB,EAAIh4C,EAAKo5C,EAAa99C,GACxC7D,OAAOhE,EAAqE,GAA5EgE,CAA+EuI,EAAK1E,EAAQs0C,eAC5FoI,EAAG52C,GAAKwb,EAAQ/W,IAChB5Q,EAAG48B,UAAUmmB,EAAIh4C,EAAK1E,GACtBrG,EAAG2kD,SAAS5B,EAAIh4C,EAAK1E,GACrBrG,EAAG4kD,WAAW7B,EAAIh4C,EAAK1E,GACvB7D,OAAOhE,EAAqE,GAA5EgE,CAA+EuI,EAAK1E,EAAQs0C,eAC5F5vC,EAAIywB,WAGR/8B,oBACE,OAAOC,KAAKmC,SAAW,GAEzBpC,kBAAkB0rC,EAAgB6S,GAChC,MAAMh9C,EAAKtB,KACL0rC,EAAapqC,EAAGa,QAChBsE,EAASglC,EAAejsB,KAAI,EAAE1V,aAAAA,EAAcN,MAAAA,MAChD,MAAMS,EAAO3I,EAAG2F,OAAO0H,eAAe7E,GACtC,IAAKG,EACH,MAAM,IAAI0Z,MAAM,kCAAoC7Z,GAEtD,MAAO,CACLA,aAAAA,EACA8I,QAAS3I,EAAKwE,KAAKjF,GACnBA,MAAAA,MAGE6X,GAAWvd,OAAOhE,EAAqE,GAA5EgE,CAA+E4nC,EAAYjlC,GACtG0/C,EAAkB7kD,EAAG8kD,iBAAiB3/C,EAAQ63C,IAChDj9B,GAAW8kC,KACb7kD,EAAGa,QAAUsE,EACbnF,EAAGwgD,eAAiBxD,EACpBh9C,EAAGoH,QAAO,IAGd3I,YAAYkgB,EAAG4rB,GACb,MAAMvqC,EAAKtB,KACL2H,EAAUrG,EAAGqG,QACb+jC,EAAapqC,EAAGa,SAAW,GACjC,IAAIkf,GAAU,EACV5a,EAAS,GACE,aAAXwZ,EAAEvf,OACJ+F,EAASnF,EAAG2F,OAAOqlC,0BAA0BrsB,EAAGtY,EAAQkC,KAAMlC,EAASkkC,GACnElkC,EAAQsB,SACVxC,EAAOwC,WAGX,MAAMk9C,EAAkB7kD,EAAG8kD,iBAAiB3/C,EAAQwZ,GAYpD,OAXAoB,EAAUwqB,IAAW/nC,OAAOhE,EAAqE,GAA5EgE,CAA+E2C,EAAQilC,IAAeya,EACvH9kC,IACF/f,EAAGa,QAAUsE,GACTkB,EAAQ4oB,SAAW5oB,EAAQk8C,YAC7BviD,EAAGwgD,eAAiB,CAClBt0C,EAAGyS,EAAEzS,EACLC,EAAGwS,EAAExS,GAEPnM,EAAGoH,QAAO,EAAMmjC,KAGbxqB,EAETthB,iBAAiB0G,EAAQwZ,GACvB,MAAMkiC,OAACA,EAAMC,OAAEA,EAAMz6C,QAAEA,GAAW3H,KAC5B8kB,EAAWq5B,GAAYx2C,EAAQmd,UAAUvjB,KAAKvB,KAAMyG,EAAQwZ,GAClE,OAAoB,IAAb6E,IAAuBq9B,IAAWr9B,EAAStX,GAAK40C,IAAWt9B,EAASrX,IAG/Em0C,GAAQzD,YAAcA,GACtB,IAAI/+C,GAAiB,CACnBmM,GAAI,UACJiyC,SAAUoE,GACVzD,YAAAA,GACAp+C,UAAUQ,EAAOi5C,EAAO7xC,GAClBA,IACFpH,EAAMib,QAAU,IAAIomC,GAAQ,CAAC36C,OAAQ1G,EAAOoH,QAAAA,MAGhD5H,aAAaQ,EAAOi5C,EAAO7xC,GACrBpH,EAAMib,SACRjb,EAAMib,QAAQvO,WAAWtF,IAG7B5H,MAAMQ,EAAOi5C,EAAO7xC,GACdpH,EAAMib,SACRjb,EAAMib,QAAQvO,WAAWtF,IAG7B5H,UAAUQ,GACR,MAAMib,EAAUjb,EAAMib,QAChBoS,EAAO,CACXpS,QAAAA,IAEqD,IAAnDjb,EAAMg3B,cAAc,oBAAqB3J,KAGzCpS,GACFA,EAAQtZ,KAAK3B,EAAM8L,KAErB9L,EAAMg3B,cAAc,mBAAoB3J,KAE1C7tB,WAAWQ,EAAOqtB,GAChB,GAAIrtB,EAAMib,QAAS,CACjB,MAAM2J,EAAmByI,EAAKie,OAC1BtrC,EAAMib,QAAQkiC,YAAY9vB,EAAK/qB,MAAOsiB,KACxCyI,EAAKvM,SAAU,KAIrBtK,SAAU,CACRwZ,SAAS,EACTszB,SAAU,KACV/+B,SAAU,UACVlF,gBAAiB,kBACjB0kC,WAAY,OACZxH,UAAW,CACTz9B,OAAQ,QAEV2gC,aAAc,EACdC,kBAAmB,EACnB/rB,WAAY,OACZmxB,UAAW,OACXlF,YAAa,EACbf,SAAU,GAEV2F,UAAW,OACXS,YAAa,OACbnF,cAAe,EACfD,gBAAiB,EACjBf,WAAY,CACVhgC,OAAQ,QAEVkmC,YAAa,OACbt8B,QAAS,EACT63B,aAAc,EACdD,UAAW,EACXO,aAAc,EACdvH,UAAW,CAACxtC,EAAKrD,IAASA,EAAKo2C,SAASz2C,KACxCmxC,SAAU,CAACztC,EAAKrD,IAASA,EAAKo2C,SAASz2C,KACvCg8C,mBAAoB,OACpBzE,eAAe,EACfpgC,YAAa,gBACbb,YAAa,EACbjZ,UAAW,CACTlF,SAAU,IACV4D,OAAQ,gBAEVkC,WAAY,CACVJ,QAAS,CACP9F,KAAM,SACN6F,WAAY,CAAC,IAAK,IAAK,QAAS,SAAU,SAAU,WAEtDs7C,QAAS,CACPn9C,OAAQ,SACR5D,SAAU,MAGdH,UAAW,CACT8hD,YAAa3iD,EAAqE,GAClFC,MAAMyiD,GACJ,GAAIA,EAAazgD,OAAS,EAAG,CAC3B,MAAMC,EAAOwgD,EAAa,GACpBnyC,EAASrO,EAAKzB,MAAMkO,KAAK4B,OACzBg2C,EAAah2C,EAASA,EAAOtO,OAAS,EAC5C,GAAI/B,MAAQA,KAAK2H,SAAiC,YAAtB3H,KAAK2H,QAAQkC,KACvC,OAAO7H,EAAKqL,QAAQuE,OAAS,GACxB,GAAI5P,EAAK4P,MACd,OAAO5P,EAAK4P,MACP,GAAIy0C,EAAa,GAAKrkD,EAAKkR,UAAYmzC,EAC5C,OAAOh2C,EAAOrO,EAAKkR,WAGvB,MAAO,IAETwvC,WAAY5iD,EAAqE,GACjFggD,WAAYhgD,EAAqE,GACjF+iD,YAAa/iD,EAAqE,GAClFC,MAAMqgB,GACJ,GAAIpgB,MAAQA,KAAK2H,SAAiC,YAAtB3H,KAAK2H,QAAQkC,KACvC,OAAOuW,EAAYxO,MAAQ,KAAOwO,EAAYE,gBAAkBF,EAAYE,eAE9E,IAAI1O,EAAQwO,EAAY/S,QAAQuE,OAAS,GACrCA,IACFA,GAAS,MAEX,MAAMnJ,EAAQ2X,EAAYE,eAI1B,OAHKxc,OAAOhE,EAAoE,GAA3EgE,CAA8E2E,KACjFmJ,GAASnJ,GAEJmJ,GAET7R,WAAWqgB,GACT,MACMzY,EADOyY,EAAY7f,MAAMoO,eAAeyR,EAAYtW,cACrCe,WAAW0J,SAAS6L,EAAYlN,WACrD,MAAO,CACL4M,YAAanY,EAAQmY,YACrBF,gBAAiBjY,EAAQiY,gBACzBX,YAAatX,EAAQsX,YACrBgT,WAAYtqB,EAAQsqB,WACpBC,iBAAkBvqB,EAAQuqB,iBAC1Bgb,aAAc,IAGlBntC,iBACE,OAAOC,KAAK2H,QAAQ09C,WAEtBtlD,gBAAgBqgB,GACd,MACMzY,EADOyY,EAAY7f,MAAMoO,eAAeyR,EAAYtW,cACrCe,WAAW0J,SAAS6L,EAAYlN,WACrD,MAAO,CACL6gC,WAAYpsC,EAAQosC,WACpBj4B,SAAUnU,EAAQmU,WAGtBgnC,WAAYhjD,EAAqE,GACjFigD,UAAWjgD,EAAqE,GAChFijD,aAAcjjD,EAAqE,GACnFq/C,OAAQr/C,EAAqE,GAC7EkjD,YAAaljD,EAAqE,KAGtFivB,cAAe,CACbqwB,SAAU,OACVC,WAAY,OACZvC,UAAW,QAEbld,YAAa,CACXx5B,YAAcC,GAAkB,WAATA,GAA8B,aAATA,GAAgC,aAATA,EACnEF,YAAY,EACZxF,UAAW,CACTyF,aAAa,EACbD,YAAY,GAEdH,UAAW,CACTE,WAAW,GAEbU,WAAY,CACVV,UAAW,cAGf89B,uBAAwB,CAAC,gBAGvBtkC,GAAuBoE,OAAOkQ,OAAO,CACzCyP,UAAW,KACX6iC,WAAYxoD,GACZyoD,OAAQroD,GACR+7C,OAAQ77C,GACRw/C,MAAOz+C,GACPyiD,QAASxiD,KAMT,SAASonD,GAAen2C,EAAQ8C,EAAK3J,GACnC,MAAMmnB,EAAQtgB,EAAOwI,QAAQ1F,GAC7B,IAAe,IAAXwd,EACF,MANgB,EAACtgB,EAAQ8C,EAAK3J,IAAyB,kBAAR2J,EAC/C9C,EAAOzT,KAAKuW,GAAO,EACnByF,MAAMzF,GAAO,KAAO3J,EAIbi9C,CAAYp2C,EAAQ8C,EAAK3J,GAGlC,OAAOmnB,IADMtgB,EAAOq2C,YAAYvzC,GACR3J,EAAQmnB,EAGlC,MAAMhzB,WAAsBmB,GAC1BiB,YAAYqE,GACVgT,MAAMhT,GACNpE,KAAK2mD,iBAAcrmD,EACnBN,KAAK4mD,YAAc,EAErB7mD,MAAMoT,EAAK3J,GACT,GAAI1F,OAAOhE,EAAoE,GAA3EgE,CAA8EqP,GAChF,OAAO,KAET,MAAM9C,EAASrQ,KAAKsQ,YAGpB,MAde,EAAC9G,EAAOrG,IAAkB,OAAVqG,EAAiB,KAAO1F,OAAOhE,EAAoE,GAA3EgE,CAA8E3C,KAAKmwB,MAAM9nB,GAAQ,EAAGrG,GAcpJuwB,CAFPlqB,EAAQq9C,SAASr9C,IAAU6G,EAAO7G,KAAW2J,EAAM3J,EAC/Cg9C,GAAen2C,EAAQ8C,EAAKrP,OAAOhE,EAAoE,GAA3EgE,CAA8E0F,EAAO2J,IAC5F9C,EAAOtO,OAAS,GAE3ChC,sBACE,MAAMuB,EAAKtB,MACLsR,WAACA,EAAUC,WAAEA,GAAcjQ,EAAGkQ,gBACpC,IAAIpQ,IAACA,EAAG+B,IAAEA,GAAO7B,EAAGm0B,WAAU,GACJ,UAAtBn0B,EAAGqG,QAAQ8pB,SACRngB,IACHlQ,EAAM,GAEHmQ,IACHpO,EAAM7B,EAAGgP,YAAYvO,OAAS,IAGlCT,EAAGF,IAAMA,EACTE,EAAG6B,IAAMA,EAEXpD,aACE,MAAMuB,EAAKtB,KACLoB,EAAME,EAAGF,IACT+B,EAAM7B,EAAG6B,IACT4X,EAASzZ,EAAGqG,QAAQoT,OACpB7E,EAAQ,GACd,IAAI7F,EAAS/O,EAAGgP,YAChBD,EAAkB,IAARjP,GAAa+B,IAAQkN,EAAOtO,OAAS,EAAKsO,EAASA,EAAOkQ,MAAMnf,EAAK+B,EAAM,GACrF7B,EAAGslD,YAAczlD,KAAKgC,IAAIkN,EAAOtO,QAAUgZ,EAAS,EAAI,GAAI,GAC5DzZ,EAAGqlD,YAAcrlD,EAAGF,KAAO2Z,EAAS,GAAM,GAC1C,IAAK,IAAItS,EAAQrH,EAAKqH,GAAStF,EAAKsF,IAClCyN,EAAMtZ,KAAK,CAAC6L,MAAAA,IAEd,OAAOyN,EAETnW,iBAAiB0I,GACf,MACM4H,EADKrQ,KACOsQ,YAClB,OAAI7H,GAAS,GAAKA,EAAQ4H,EAAOtO,OACxBsO,EAAO5H,GAETA,EAET1I,YACE,MAAMuB,EAAKtB,KACXoX,MAAMjQ,YACD7F,EAAGoW,iBACNpW,EAAGojB,gBAAkBpjB,EAAGojB,gBAG5B3kB,iBAAiB0I,GACf,MAAMnH,EAAKtB,KAIX,MAHqB,kBAAVyI,IACTA,EAAQnH,EAAGkP,MAAM/H,IAEF,OAAVA,EAAiBoI,IAAMvP,EAAG+Z,oBAAoB5S,EAAQnH,EAAGqlD,aAAerlD,EAAGslD,aAEpF7mD,gBAAgByJ,GACd,MACM0M,EADKlW,KACMkW,MACjB,OAAI1M,EAAQ,GAAKA,EAAQ0M,EAAMnU,OAAS,EAC/B,KAHE/B,KAKDiW,iBAAiBC,EAAM1M,GAAOf,OAE1C1I,iBAAiBo6B,GACf,MAAM74B,EAAKtB,KACX,OAAOmB,KAAKmwB,MAAMhwB,EAAGqlD,YAAcrlD,EAAGwlD,mBAAmB3sB,GAAS74B,EAAGslD,aAEvE7mD,eACE,OAAOC,KAAKoS,QAGhBzU,GAAc4N,GAAK,WACnB5N,GAAcoZ,SAAW,CACvBb,MAAO,CACLwc,SAAU/0B,GAAcqZ,UAAUnF,mBA2EtC,MAAMk1C,WAAwBjoD,GAC5BiB,YAAYqE,GACVgT,MAAMhT,GACNpE,KAAKqB,WAAQf,EACbN,KAAKkJ,SAAM5I,EACXN,KAAK2mD,iBAAcrmD,EACnBN,KAAKgnD,eAAY1mD,EACjBN,KAAK4mD,YAAc,EAErB7mD,MAAMoT,EAAK3J,GACT,OAAI1F,OAAOhE,EAAoE,GAA3EgE,CAA8EqP,KAG9D,kBAARA,GAAoBA,aAAelC,UAAY41C,UAAU1zC,GAF5D,MAKDA,EAEVpT,yBACE,MAAMuB,EAAKtB,MACLkb,YAACA,EAAWhR,QAAEA,GAAW5I,EAAGqG,SAC5B2J,WAACA,EAAUC,WAAEA,GAAcjQ,EAAGkQ,gBACpC,IAAIpQ,IAACA,EAAG+B,IAAEA,GAAO7B,EACjB,MAAM2lD,EAASlgD,GAAM3F,EAAMkQ,EAAalQ,EAAM2F,EACxCmgD,EAASngD,GAAM5D,EAAMoO,EAAapO,EAAM4D,EAC9C,GAAImU,GAAehR,EAAS,CAC1B,MAAMi9C,EAAUrjD,OAAOhE,EAAoE,GAA3EgE,CAA8E1C,GACxFgmD,EAAUtjD,OAAOhE,EAAoE,GAA3EgE,CAA8EX,GAC1FgkD,EAAU,GAAKC,EAAU,EAC3BF,EAAO,GACEC,EAAU,GAAKC,EAAU,GAClCH,EAAO,GAGP7lD,IAAQ+B,IACV+jD,EAAO/jD,EAAM,GACR+X,GACH+rC,EAAO7lD,EAAM,IAGjBE,EAAGF,IAAMA,EACTE,EAAG6B,IAAMA,EAEXpD,eACE,MAAMuB,EAAKtB,KACL4vB,EAAWtuB,EAAGqG,QAAQuO,MAC5B,IACImxC,GADAv3B,cAACA,EAAaw3B,SAAEA,GAAY13B,EAWhC,OATI03B,EACFD,EAAWlmD,KAAK0vB,KAAKvvB,EAAG6B,IAAMmkD,GAAYnmD,KAAK0D,MAAMvD,EAAGF,IAAMkmD,GAAY,GAE1ED,EAAW/lD,EAAGimD,mBACdz3B,EAAgBA,GAAiB,IAE/BA,IACFu3B,EAAWlmD,KAAKC,IAAI0uB,EAAeu3B,IAE9BA,EAETtnD,mBACE,OAAOkR,OAAOC,kBAEhBnR,aACE,MAAMuB,EAAKtB,KACLgJ,EAAO1H,EAAGqG,QACVioB,EAAW5mB,EAAKkN,MACtB,IAAImxC,EAAW/lD,EAAGkmD,eAClBH,EAAWlmD,KAAKgC,IAAI,EAAGkkD,GACvB,MAWMnxC,EAtJV,SAAyBuxC,EAAmBC,GAC1C,MAAMxxC,EAAQ,IAERyxC,KAACA,EAAIvmD,IAAEA,EAAG+B,IAAEA,EAAGykD,UAAEA,EAAS/3C,MAAEA,EAAKw3C,SAAEA,EAAQQ,UAAEA,EAASpwC,WAAEA,GAAcgwC,EACtEzjC,EAAO2jC,GAAQ,EACfG,EAAYT,EAAW,GACtBjmD,IAAK2mD,EAAM5kD,IAAK6kD,GAAQN,EACzBp2C,GAAcxN,OAAOhE,EAAoE,GAA3EgE,CAA8E1C,GAC5FmQ,GAAczN,OAAOhE,EAAoE,GAA3EgE,CAA8EX,GAC5F8kD,GAAgBnkD,OAAOhE,EAAoE,GAA3EgE,CAA8E+L,GAC9Fq4C,GAAcF,EAAOD,GAAQF,EACnC,IACIjkD,EAAQukD,EAASC,EAASC,EAD1BjsC,EAAUtY,OAAOhE,EAAoE,EAA3EgE,EAA+EkkD,EAAOD,GAAQD,EAAY9jC,GAAQA,EAEhI,GAAI5H,EAXgB,QAWU9K,IAAeC,EAC3C,MAAO,CAAC,CAAC9I,MAAOs/C,GAAO,CAACt/C,MAAOu/C,IAEjCK,EAAYlnD,KAAK0vB,KAAKm3B,EAAO5rC,GAAWjb,KAAK0D,MAAMkjD,EAAO3rC,GACtDisC,EAAYP,IACd1rC,EAAUtY,OAAOhE,EAAoE,EAA3EgE,CAA8EukD,EAAYjsC,EAAU0rC,EAAY9jC,GAAQA,GAE/HlgB,OAAOhE,EAAoE,GAA3EgE,CAA8E8jD,KACjFhkD,EAASzC,KAAK4kB,IAAI,GAAI6hC,GACtBxrC,EAAUjb,KAAK0vB,KAAKzU,EAAUxY,GAAUA,GAE1CukD,EAAUhnD,KAAK0D,MAAMkjD,EAAO3rC,GAAWA,EACvCgsC,EAAUjnD,KAAK0vB,KAAKm3B,EAAO5rC,GAAWA,EAClC9K,GAAcC,GAAco2C,GAAQ7jD,OAAOhE,EAAoE,EAA3EgE,EAA+EX,EAAM/B,GAAOumD,EAAMvrC,EAAU,MAClJisC,EAAYlnD,KAAKC,KAAK+B,EAAM/B,GAAOgb,EAASirC,GAC5CjrC,GAAWjZ,EAAM/B,GAAOinD,EACxBF,EAAU/mD,EACVgnD,EAAUjlD,GACD8kD,GACTE,EAAU72C,EAAalQ,EAAM+mD,EAC7BC,EAAU72C,EAAapO,EAAMilD,EAC7BC,EAAYx4C,EAAQ,EACpBuM,GAAWgsC,EAAUD,GAAWE,IAEhCA,GAAaD,EAAUD,GAAW/rC,EAEhCisC,EADEvkD,OAAOhE,EAAoE,EAA3EgE,CAA8EukD,EAAWlnD,KAAKmwB,MAAM+2B,GAAYjsC,EAAU,KAChHjb,KAAKmwB,MAAM+2B,GAEXlnD,KAAK0vB,KAAKw3B,IAG1BzkD,EAASzC,KAAK4kB,IAAI,GAAIjiB,OAAOhE,EAAoE,GAA3EgE,CAA8E8jD,GAAa9jD,OAAOhE,EAAoE,EAA3EgE,CAA8EsY,GAAWwrC,GAC1MO,EAAUhnD,KAAKmwB,MAAM62B,EAAUvkD,GAAUA,EACzCwkD,EAAUjnD,KAAKmwB,MAAM82B,EAAUxkD,GAAUA,EACzC,IAAIqhB,EAAI,EAUR,IATI3T,IACF4E,EAAMtZ,KAAK,CAAC6L,MAAOrH,IACf+mD,GAAW/mD,GACb6jB,IAEEnhB,OAAOhE,EAAoE,EAA3EgE,CAA8E3C,KAAKmwB,OAAO62B,EAAUljC,EAAI7I,GAAWxY,GAAUA,EAAQxC,EAAK8mD,GAAczwC,GAAc,GAAKrW,GAAKW,OAAS,KAC3LkjB,KAGGA,EAAIojC,IAAapjC,EACtB/O,EAAMtZ,KAAK,CAAC6L,MAAOtH,KAAKmwB,OAAO62B,EAAUljC,EAAI7I,GAAWxY,GAAUA,IAWpE,OATI2N,EACEzN,OAAOhE,EAAoE,EAA3EgE,CAA8EoS,EAAMA,EAAMnU,OAAS,GAAG0G,MAAOtF,EAAK+kD,GAAczwC,GAAc,GAAKtU,GAAKpB,OAAS,IACnKmU,EAAMA,EAAMnU,OAAS,GAAG0G,MAAQtF,EAEhC+S,EAAMtZ,KAAK,CAAC6L,MAAOtF,IAGrB+S,EAAMtZ,KAAK,CAAC6L,MAAO2/C,IAEdlyC,EAiFSoyC,CAXkB,CAC9BjB,SAAAA,EACAjmD,IAAK4H,EAAK5H,IACV+B,IAAK6F,EAAK7F,IACVykD,UAAWh4B,EAASg4B,UACpBD,KAAM/3B,EAAS03B,SACfz3C,MAAO+f,EAAS/f,MAChBg4C,UAAWvmD,EAAGinD,aACd9wC,WAAYnW,EAAGoW,gBAECpW,EAAGozB,QAAUpzB,GAa/B,MAXoB,UAAhB0H,EAAKyoB,QACP3tB,OAAOhE,EAAqE,GAA5EgE,CAA+EoS,EAAO5U,EAAI,SAExF0H,EAAKC,SACPiN,EAAMjN,UACN3H,EAAGD,MAAQC,EAAG6B,IACd7B,EAAG4H,IAAM5H,EAAGF,MAEZE,EAAGD,MAAQC,EAAGF,IACdE,EAAG4H,IAAM5H,EAAG6B,KAEP+S,EAETnW,YACE,MAAMuB,EAAKtB,KACLkW,EAAQ5U,EAAG4U,MACjB,IAAI7U,EAAQC,EAAGF,IACX8H,EAAM5H,EAAG6B,IAEb,GADAiU,MAAMjQ,YACF7F,EAAGqG,QAAQoT,QAAU7E,EAAMnU,OAAQ,CACrC,MAAMgZ,GAAU7R,EAAM7H,GAASF,KAAKgC,IAAI+S,EAAMnU,OAAS,EAAG,GAAK,EAC/DV,GAAS0Z,EACT7R,GAAO6R,EAETzZ,EAAGqlD,YAActlD,EACjBC,EAAG0lD,UAAY99C,EACf5H,EAAGslD,YAAc19C,EAAM7H,EAEzBtB,iBAAiB0I,GACf,OAAO3E,OAAOhE,EAAoE,GAA3EgE,CAA8E2E,EAAOzI,KAAKO,MAAMoH,QAAQoX,SAInH,MAAMxgB,WAAoBwoD,GACxBhnD,sBACE,MAAMuB,EAAKtB,MACLoB,IAACA,EAAG+B,IAAEA,GAAO7B,EAAGm0B,WAAU,GAChCn0B,EAAGF,IAAM0C,OAAOhE,EAAoE,GAA3EgE,CAA8E1C,GAAOA,EAAM,EACpGE,EAAG6B,IAAMW,OAAOhE,EAAoE,GAA3EgE,CAA8EX,GAAOA,EAAM,EACpG7B,EAAGknD,yBAELzoD,mBACE,MAAMuB,EAAKtB,KACX,GAAIsB,EAAGoW,eACL,OAAOvW,KAAK0vB,KAAKvvB,EAAGkX,MAAQ,IAE9B,MAAM+gB,EAAWj4B,EAAGs4B,wBAAwB,GAC5C,OAAOz4B,KAAK0vB,KAAKvvB,EAAGiX,OAASghB,EAAStF,YAExCl0B,iBAAiB0I,GACf,OAAiB,OAAVA,EAAiBoI,IAAM7Q,KAAKqb,oBAAoB5S,EAAQzI,KAAK2mD,aAAe3mD,KAAK4mD,aAE1F7mD,iBAAiBo6B,GACf,OAAOn6B,KAAK2mD,YAAc3mD,KAAK8mD,mBAAmB3sB,GAASn6B,KAAK4mD,aAUpE,SAAS6B,GAAQC,GAEf,OAAkB,IADHA,EAAWvnD,KAAK4kB,IAAI,GAAI5kB,KAAK0D,MAAMf,OAAOhE,EAAmE,EAA1EgE,CAA6E4kD,KARjInqD,GAAYgN,GAAK,SACjBhN,GAAYwY,SAAW,CACrBb,MAAO,CACLwc,SAAU1zB,GAAMgwB,WAAWU,UA8B/B,MAAMlxB,WAAyBM,GAC7BiB,YAAYqE,GACVgT,MAAMhT,GACNpE,KAAKqB,WAAQf,EACbN,KAAKkJ,SAAM5I,EACXN,KAAK2mD,iBAAcrmD,EACnBN,KAAK4mD,YAAc,EAErB7mD,MAAMoT,EAAK3J,GACT,MAAMf,EAAQs+C,GAAgB/vC,UAAUxG,MAAMmuC,MAAM3+C,KAAM,CAACmT,EAAK3J,IAChE,GAAc,IAAVf,EAIJ,OAAO3E,OAAOhE,EAAoE,GAA3EgE,CAA8E2E,IAAUA,EAAQ,EAAIA,EAAQ,KAHjHzI,KAAK2oD,OAAQ,EAKjB5oD,sBACE,MAAMuB,EAAKtB,MACLoB,IAACA,EAAG+B,IAAEA,GAAO7B,EAAGm0B,WAAU,GAChCn0B,EAAGF,IAAM0C,OAAOhE,EAAoE,GAA3EgE,CAA8E1C,GAAOD,KAAKgC,IAAI,EAAG/B,GAAO,KACjHE,EAAG6B,IAAMW,OAAOhE,EAAoE,GAA3EgE,CAA8EX,GAAOhC,KAAKgC,IAAI,EAAGA,GAAO,KAC7G7B,EAAGqG,QAAQuT,cACb5Z,EAAGqnD,OAAQ,GAEbrnD,EAAGknD,yBAELzoD,yBACE,MAAMuB,EAAKtB,MACLsR,WAACA,EAAUC,WAAEA,GAAcjQ,EAAGkQ,gBACpC,IAAIpQ,EAAME,EAAGF,IACT+B,EAAM7B,EAAG6B,IACb,MAAM8jD,EAASlgD,GAAM3F,EAAMkQ,EAAalQ,EAAM2F,EACxCmgD,EAASngD,GAAM5D,EAAMoO,EAAapO,EAAM4D,EACxC6hD,EAAM,CAAC7hD,EAAG8hD,IAAM1nD,KAAK4kB,IAAI,GAAI5kB,KAAK0D,MAAMf,OAAOhE,EAAmE,EAA1EgE,CAA6EiD,IAAM8hD,GAC7HznD,IAAQ+B,IACN/B,GAAO,GACT6lD,EAAO,GACPC,EAAO,MAEPD,EAAO2B,EAAIxnD,GAAM,IACjB8lD,EAAO0B,EAAIzlD,EAAK,MAGhB/B,GAAO,GACT6lD,EAAO2B,EAAIzlD,GAAM,IAEfA,GAAO,GACT+jD,EAAO0B,EAAIxnD,EAAK,IAEdE,EAAGqnD,OAASrnD,EAAGF,MAAQE,EAAG4zB,eAAiB9zB,IAAQwnD,EAAItnD,EAAGF,IAAK,IACjE6lD,EAAO2B,EAAIxnD,GAAM,IAEnBE,EAAGF,IAAMA,EACTE,EAAG6B,IAAMA,EAEXpD,aACE,MAAMuB,EAAKtB,KACLgJ,EAAO1H,EAAGqG,QAKVuO,EApFV,SAAuBuxC,EAAmBC,GACxC,MAAMoB,EAAS3nD,KAAK0D,MAAMf,OAAOhE,EAAmE,EAA1EgE,CAA6E4jD,EAAUvkD,MAC3G4lD,EAAiB5nD,KAAK0vB,KAAK62B,EAAUvkD,IAAMhC,KAAK4kB,IAAI,GAAI+iC,IACxD5yC,EAAQ,GACd,IAAIwyC,EAAU5kD,OAAOhE,EAAmE,EAA1EgE,CAA6E2jD,EAAkBrmD,IAAKD,KAAK4kB,IAAI,GAAI5kB,KAAK0D,MAAMf,OAAOhE,EAAmE,EAA1EgE,CAA6E4jD,EAAUtmD,QAC7NwnD,EAAMznD,KAAK0D,MAAMf,OAAOhE,EAAmE,EAA1EgE,CAA6E4kD,IAC9FM,EAAc7nD,KAAK0D,MAAM6jD,EAAUvnD,KAAK4kB,IAAI,GAAI6iC,IAChDhB,EAAYgB,EAAM,EAAIznD,KAAK4kB,IAAI,GAAI5kB,KAAK6U,IAAI4yC,IAAQ,EACxD,GACE1yC,EAAMtZ,KAAK,CAAC6L,MAAOigD,EAASp4B,MAAOm4B,GAAQC,OACzCM,EACkB,KAAhBA,IACFA,EAAc,IACZJ,EACFhB,EAAYgB,GAAO,EAAI,EAAIhB,GAE7Bc,EAAUvnD,KAAKmwB,MAAM03B,EAAc7nD,KAAK4kB,IAAI,GAAI6iC,GAAOhB,GAAaA,QAC7DgB,EAAME,GAAWF,IAAQE,GAAUE,EAAcD,GAC1D,MAAME,EAAWnlD,OAAOhE,EAAmE,EAA1EgE,CAA6E2jD,EAAkBtkD,IAAKulD,GAErH,OADAxyC,EAAMtZ,KAAK,CAAC6L,MAAOwgD,EAAU34B,MAAOm4B,GAAQC,KACrCxyC,EAgESgzC,CAJY,CACxB9nD,IAAKE,EAAG0zB,SACR7xB,IAAK7B,EAAGyzB,UAEqCzzB,GAY/C,MAXoB,UAAhB0H,EAAKyoB,QACP3tB,OAAOhE,EAAqE,GAA5EgE,CAA+EoS,EAAO5U,EAAI,SAExF0H,EAAKC,SACPiN,EAAMjN,UACN3H,EAAGD,MAAQC,EAAG6B,IACd7B,EAAG4H,IAAM5H,EAAGF,MAEZE,EAAGD,MAAQC,EAAGF,IACdE,EAAG4H,IAAM5H,EAAG6B,KAEP+S,EAETnW,iBAAiB0I,GACf,YAAiBnI,IAAVmI,EAAsB,IAAM3E,OAAOhE,EAAoE,GAA3EgE,CAA8E2E,EAAOzI,KAAKO,MAAMoH,QAAQoX,QAE7Ihf,YACE,MAAMuB,EAAKtB,KACLqB,EAAQC,EAAGF,IACjBgW,MAAMjQ,YACN7F,EAAGqlD,YAAc7iD,OAAOhE,EAAmE,EAA1EgE,CAA6EzC,GAC9FC,EAAGslD,YAAc9iD,OAAOhE,EAAmE,EAA1EgE,CAA6ExC,EAAG6B,KAAOW,OAAOhE,EAAmE,EAA1EgE,CAA6EzC,GAEvLtB,iBAAiB0I,GACf,MAAMnH,EAAKtB,KAIX,YAHcM,IAAVmI,GAAiC,IAAVA,IACzBA,EAAQnH,EAAGF,KAEC,OAAVqH,GAAkBmQ,MAAMnQ,GACnBoI,IAEFvP,EAAG+Z,mBAAmB5S,IAAUnH,EAAGF,IACtC,GACC0C,OAAOhE,EAAmE,EAA1EgE,CAA6E2E,GAASnH,EAAGqlD,aAAerlD,EAAGslD,aAElH7mD,iBAAiBo6B,GACf,MAAM74B,EAAKtB,KACLo6B,EAAU94B,EAAGwlD,mBAAmB3sB,GACtC,OAAOh5B,KAAK4kB,IAAI,GAAIzkB,EAAGqlD,YAAcvsB,EAAU94B,EAAGslD,cAatD,SAASuC,GAAsBngD,GAC7B,MAAM4mB,EAAW5mB,EAAKkN,MACtB,GAAI0Z,EAAS1M,SAAWla,EAAKka,QAAS,CACpC,MAAM+F,EAAUnlB,OAAOhE,EAAmE,EAA1EgE,CAA6E8rB,EAASoD,iBACtG,OAAOlvB,OAAOhE,EAAoE,GAA3EgE,CAA8E8rB,EAASoE,MAAQpE,EAASoE,KAAKrrB,KAAM7I,EAAoE,GAAEk0B,KAAKrrB,MAAQsgB,EAAQ1Q,OAEvN,OAAO,EAcT,SAAS6wC,GAAgB7rC,EAAOuJ,EAAKne,EAAMvH,EAAK+B,GAC9C,OAAIoa,IAAUnc,GAAOmc,IAAUpa,EACtB,CACL9B,MAAOylB,EAAOne,EAAO,EACrBO,IAAK4d,EAAOne,EAAO,GAEZ4U,EAAQnc,GAAOmc,EAAQpa,EACzB,CACL9B,MAAOylB,EAAMne,EACbO,IAAK4d,GAGF,CACLzlB,MAAOylB,EACP5d,IAAK4d,EAAMne,GA4Ef,SAAS0gD,GAAqB9rC,GAC5B,OAAc,IAAVA,GAAyB,MAAVA,EACV,SACEA,EAAQ,IACV,OAEF,QAET,SAAS+rC,GAAkC/rC,EAAOugC,EAAUh5B,GAC5C,KAAVvH,GAA0B,MAAVA,EAClBuH,EAASrX,GAAMqwC,EAAS31B,EAAI,GACnB5K,EAAQ,KAAOA,EAAQ,MAChCuH,EAASrX,GAAKqwC,EAAS31B,GA6B3B,SAASohC,GAAezgD,EAAOyS,EAAQ4H,EAAUkjC,GAC/C,MAAMh6C,IAACA,GAAOvD,EACd,GAAIqa,EACF9W,EAAIwS,IAAI/V,EAAM2Z,QAAS3Z,EAAM4Z,QAASnH,EAAQ,EAAGzb,EAAmE,OAC/G,CACL,IAAIwjB,EAAgBxa,EAAM0gD,iBAAiB,EAAGjuC,GAC9ClP,EAAIkxB,OAAOja,EAAc9V,EAAG8V,EAAc7V,GAC1C,IAAK,IAAIxL,EAAI,EAAGA,EAAIokD,EAAYpkD,IAC9BqhB,EAAgBxa,EAAM0gD,iBAAiBvnD,EAAGsZ,GAC1ClP,EAAImxB,OAAOla,EAAc9V,EAAG8V,EAAc7V,IAsBhD,SAASg8C,GAAaC,GACpB,OAAO5lD,OAAOhE,EAAoE,GAA3EgE,CAA8E4lD,GAASA,EAAQ,EAjMxGlrD,GAAiB+M,GAAK,cACtB/M,GAAiBuY,SAAW,CAC1Bb,MAAO,CACLwc,SAAU1zB,GAAMgwB,WAAW26B,YAC3Br5B,MAAO,CACLC,SAAS,KA8Lf,MAAM1xB,WAA0BkoD,GAC9BhnD,YAAYqE,GACVgT,MAAMhT,GACNpE,KAAKyiB,aAAUniB,EACfN,KAAK0iB,aAAUpiB,EACfN,KAAK4pD,iBAActpD,EACnBN,KAAK6pD,aAAe,GACpB7pD,KAAK8pD,iBAAmB,GAE1B/pD,gBACE,MAAMuB,EAAKtB,KACXsB,EAAGkX,MAAQlX,EAAGwc,SACdxc,EAAGiX,OAASjX,EAAGyc,UACfzc,EAAG+yB,WAAa80B,GAAsB7nD,EAAGqG,SAAW,EACpDrG,EAAGmhB,QAAUthB,KAAK0D,MAAMvD,EAAGkX,MAAQ,GACnClX,EAAGohB,QAAUvhB,KAAK0D,OAAOvD,EAAGiX,OAASjX,EAAG+yB,YAAc,GACtD/yB,EAAGsoD,YAAczoD,KAAKC,IAAIE,EAAGiX,OAASjX,EAAG+yB,WAAY/yB,EAAGkX,OAAS,EAEnEzY,sBACE,MAAMuB,EAAKtB,MACLoB,IAACA,EAAG+B,IAAEA,GAAO7B,EAAGm0B,WAAU,GAChCn0B,EAAGF,IAAM0C,OAAOhE,EAAoE,GAA3EgE,CAA8E1C,KAASwX,MAAMxX,GAAOA,EAAM,EACnHE,EAAG6B,IAAMW,OAAOhE,EAAoE,GAA3EgE,CAA8EX,KAASyV,MAAMzV,GAAOA,EAAM,EACnH7B,EAAGknD,yBAELzoD,mBACE,OAAOoB,KAAK0vB,KAAK7wB,KAAK4pD,YAAcT,GAAsBnpD,KAAK2H,UAEjE5H,mBAAmBmW,GACjB,MAAM5U,EAAKtB,KACX+mD,GAAgB/vC,UAAUkiB,mBAAmB33B,KAAKD,EAAI4U,GACtD5U,EAAGuoD,aAAevoD,EAAGgP,YAAYkP,KAAI,CAAC/W,EAAOe,KAC3C,MAAMoI,EAAQ9N,OAAOhE,EAAmE,EAA1EgE,CAA6ExC,EAAGqG,QAAQyb,YAAYsP,SAAU,CAACjqB,EAAOe,GAAQlI,GAC5I,OAAOsQ,GAAmB,IAAVA,EAAcA,EAAQ,MAG1C7R,MACE,MAAMuB,EAAKtB,KACLgJ,EAAO1H,EAAGqG,QACZqB,EAAKka,SAAWla,EAAKoa,YAAYF,QA3LzC,SAA4Bpa,GAC1B,MAAMihD,EAAiB,CACrB93C,EAAG,EACHhV,EAAG6L,EAAM0P,MACTzG,EAAG,EACHC,EAAGlJ,EAAMyP,OAASzP,EAAMurB,YAEpB21B,EAAiB,GACvB,IAAI/nD,EAAG67C,EAAUx6B,EACjB,MAAMwU,EAAa,GACb7O,EAAU,GACVghC,EAAanhD,EAAMwH,YAAYvO,OACrC,IAAKE,EAAI,EAAGA,EAAIgoD,EAAYhoD,IAAK,CAC/B,MAAM+G,EAAOF,EAAMnB,QAAQyb,YAAYkS,WAAWxsB,EAAM6G,WAAW1N,IACnEgnB,EAAQhnB,GAAK+G,EAAKigB,QAClB3F,EAAgBxa,EAAM0gD,iBAAiBvnD,EAAG6G,EAAM8gD,YAAc3gC,EAAQhnB,IACtE,MAAMioD,EAASpmD,OAAOhE,EAAmE,EAA1EgE,CAA6EkF,EAAKgrB,MACjGlrB,EAAMuD,IAAI2nB,KAAOk2B,EAAOrwB,OA9CFxtB,EA+CMvD,EAAMuD,IA/CP4nB,EA+CYi2B,EAAOj2B,WA/CPriB,EA+CmB9I,EAAM+gD,aAAa5nD,GAA7E67C,EA9CEh6C,OAAOhE,EAAoE,GAA3EgE,CAA8E8N,GACzE,CACLqW,EAAGnkB,OAAOhE,EAAoE,EAA3EgE,CAA8EuI,EAAKA,EAAI2nB,KAAMpiB,GAChGuW,EAAGvW,EAAM7P,OAASkyB,GAGf,CACLhM,EAAG5b,EAAI8uC,YAAYvpC,GAAO4G,MAC1B2P,EAAG8L,GAuCH6D,EAAW71B,GAAK67C,EAChB,MAAMrlB,EAAe3vB,EAAM8Z,cAAc3gB,GACnCsb,EAAQzZ,OAAOhE,EAAmE,EAA1EgE,CAA6E20B,GACrF0xB,EAAUf,GAAgB7rC,EAAO+F,EAAc9V,EAAGswC,EAAS71B,EAAG,EAAG,KACjEmiC,EAAUhB,GAAgB7rC,EAAO+F,EAAc7V,EAAGqwC,EAAS31B,EAAG,GAAI,KACpEgiC,EAAQ9oD,MAAQ0oD,EAAe93C,IACjC83C,EAAe93C,EAAIk4C,EAAQ9oD,MAC3B2oD,EAAe/3C,EAAIwmB,GAEjB0xB,EAAQjhD,IAAM6gD,EAAe9sD,IAC/B8sD,EAAe9sD,EAAIktD,EAAQjhD,IAC3B8gD,EAAe/sD,EAAIw7B,GAEjB2xB,EAAQ/oD,MAAQ0oD,EAAeh4C,IACjCg4C,EAAeh4C,EAAIq4C,EAAQ/oD,MAC3B2oD,EAAej4C,EAAI0mB,GAEjB2xB,EAAQlhD,IAAM6gD,EAAe/3C,IAC/B+3C,EAAe/3C,EAAIo4C,EAAQlhD,IAC3B8gD,EAAeh4C,EAAIymB,GAnEzB,IAA0BpsB,EAAK4nB,EAAYriB,EAsEzC9I,EAAMuhD,eAAevhD,EAAM8gD,YAAaG,EAAgBC,GACxDlhD,EAAMghD,iBAAmB,GACzB,MAAM9gD,EAAOF,EAAMnB,QACb2iD,EAAqBnB,GAAsBngD,GAC3CuhD,EAAgBzhD,EAAMka,8BAA8Bha,EAAKkN,MAAMjN,QAAUH,EAAM1H,IAAM0H,EAAM3F,KACjG,IAAKlB,EAAI,EAAGA,EAAIgoD,EAAYhoD,IAAK,CAC/B,MAAMuoD,EAAe,IAANvoD,EAAUqoD,EAAqB,EAAI,EAC5CG,EAAqB3hD,EAAM0gD,iBAAiBvnD,EAAGsoD,EAAgBC,EAAQvhC,EAAQhnB,IAC/Esb,EAAQzZ,OAAOhE,EAAmE,EAA1EgE,CAA6EgF,EAAM8Z,cAAc3gB,IACzG0G,EAAOmvB,EAAW71B,GACxBqnD,GAAkC/rC,EAAO5U,EAAM8hD,GAC/C,MAAMzuB,EAAYqtB,GAAqB9rC,GACvC,IAAIlL,EAEFA,EADgB,SAAd2pB,EACKyuB,EAAmBj9C,EACH,WAAdwuB,EACFyuB,EAAmBj9C,EAAK7E,EAAKsf,EAAI,EAEjCwiC,EAAmBj9C,EAAI7E,EAAKsf,EAErC,MAAM9V,EAAQE,EAAO1J,EAAKsf,EAC1Bnf,EAAMghD,iBAAiB7nD,GAAK,CAC1BuL,EAAGi9C,EAAmBj9C,EACtBC,EAAGg9C,EAAmBh9C,EACtBuuB,UAAAA,EACA3pB,KAAAA,EACAH,IAAKu4C,EAAmBh9C,EACxB0E,MAAAA,EACAC,OAAQq4C,EAAmBh9C,EAAI9E,EAAKwf,IAuHpCuiC,CAAmBppD,GAEnBA,EAAGqpD,eAAe,EAAG,EAAG,EAAG,GAG/B5qD,eAAe6qD,EAAuBb,EAAgBC,GACpD,MAAM1oD,EAAKtB,KACX,IAAI6qD,EAAsBd,EAAe93C,EAAI9Q,KAAKgc,IAAI6sC,EAAe/3C,GACjE64C,EAAuB3pD,KAAKgC,IAAI4mD,EAAe9sD,EAAIqE,EAAGkX,MAAO,GAAKrX,KAAKgc,IAAI6sC,EAAe/sD,GAC1F8tD,GAAsBhB,EAAeh4C,EAAI5Q,KAAK8b,IAAI+sC,EAAej4C,GACjEi5C,GAAyB7pD,KAAKgC,IAAI4mD,EAAe/3C,GAAK1Q,EAAGiX,OAASjX,EAAG+yB,YAAa,GAAKlzB,KAAK8b,IAAI+sC,EAAeh4C,GACnH64C,EAAsBpB,GAAaoB,GACnCC,EAAuBrB,GAAaqB,GACpCC,EAAqBtB,GAAasB,GAClCC,EAAwBvB,GAAauB,GACrC1pD,EAAGsoD,YAAczoD,KAAKgC,IAAIynD,EAAwB,EAAGzpD,KAAKC,IACxDD,KAAK0D,MAAM+lD,GAAyBC,EAAsBC,GAAwB,GAClF3pD,KAAK0D,MAAM+lD,GAAyBG,EAAqBC,GAAyB,KACpF1pD,EAAGqpD,eAAeE,EAAqBC,EAAsBC,EAAoBC,GAEnFjrD,eAAekrD,EAAcC,EAAeC,EAAaC,GACvD,MAAM9pD,EAAKtB,KACLqrD,EAAW/pD,EAAGkX,MAAQ0yC,EAAgB5pD,EAAGsoD,YACzC0B,EAAUL,EAAe3pD,EAAGsoD,YAC5B2B,EAASJ,EAAc7pD,EAAGsoD,YAC1B4B,EAAalqD,EAAGiX,OAASjX,EAAG+yB,WAAc+2B,EAAiB9pD,EAAGsoD,YACpEtoD,EAAGmhB,QAAUthB,KAAK0D,OAAQymD,EAAUD,GAAY,EAAK/pD,EAAG+Q,MACxD/Q,EAAGohB,QAAUvhB,KAAK0D,OAAQ0mD,EAASC,GAAa,EAAKlqD,EAAG4Q,IAAM5Q,EAAG+yB,YAEnEt0B,cAAcyJ,GACZ,MAAMiiD,EAAkB3rD,EAAmE,EAAIE,KAAKsQ,YAAYvO,OAC1G+a,EAAa9c,KAAK2H,QAAQmV,YAAc,EAC9C,OAAOhZ,OAAOhE,EAAqE,GAA5EgE,CAA+E0F,EAAQiiD,EAAkB3nD,OAAOhE,EAAoE,GAA3EgE,CAA8EgZ,IAEhM/c,8BAA8B0I,GAC5B,MAAMnH,EAAKtB,KACX,GAAI8D,OAAOhE,EAAoE,GAA3EgE,CAA8E2E,GAChF,OAAOoI,IAET,MAAM66C,EAAgBpqD,EAAGsoD,aAAetoD,EAAG6B,IAAM7B,EAAGF,KACpD,OAAIE,EAAGqG,QAAQsB,SACL3H,EAAG6B,IAAMsF,GAASijD,GAEpBjjD,EAAQnH,EAAGF,KAAOsqD,EAE5B3rD,8BAA8BomB,GAC5B,GAAIriB,OAAOhE,EAAoE,GAA3EgE,CAA8EqiB,GAChF,OAAOtV,IAET,MAAMvP,EAAKtB,KACL2rD,EAAiBxlC,GAAY7kB,EAAGsoD,aAAetoD,EAAG6B,IAAM7B,EAAGF,MACjE,OAAOE,EAAGqG,QAAQsB,QAAU3H,EAAG6B,IAAMwoD,EAAiBrqD,EAAGF,IAAMuqD,EAEjE5rD,iBAAiByJ,EAAOoiD,GACtB,MAAMtqD,EAAKtB,KACLud,EAAQjc,EAAGshB,cAAcpZ,GAAS1J,EAAmE,EAC3G,MAAO,CACL0N,EAAGrM,KAAK8b,IAAIM,GAASquC,EAAqBtqD,EAAGmhB,QAC7ChV,EAAGtM,KAAKgc,IAAII,GAASquC,EAAqBtqD,EAAGohB,QAC7CnF,MAAAA,GAGJxd,yBAAyByJ,EAAOf,GAC9B,OAAOzI,KAAKwpD,iBAAiBhgD,EAAOxJ,KAAKgjB,8BAA8Bva,IAEzE1I,gBAAgByJ,GACd,OAAOxJ,KAAKujB,yBAAyB/Z,GAAS,EAAGxJ,KAAKq6B,gBAExDt6B,sBAAsByJ,GACpB,MAAM6I,KAACA,EAAIH,IAAEA,EAAGC,MAAEA,EAAKC,OAAEA,GAAUpS,KAAK8pD,iBAAiBtgD,GACzD,MAAO,CACL6I,KAAAA,EACAH,IAAAA,EACAC,MAAAA,EACAC,OAAAA,GAGJrS,iBACE,MAAMuB,EAAKtB,MACL4f,gBAACA,EAAiB5E,MAAMmI,SAACA,IAAa7hB,EAAGqG,QAC/C,GAAIiY,EAAiB,CACnB,MAAMvT,EAAM/K,EAAG+K,IACfA,EAAIuwB,OACJvwB,EAAIixB,YACJisB,GAAejoD,EAAIA,EAAG0hB,8BAA8B1hB,EAAG0lD,WAAY7jC,EAAU7hB,EAAGgP,YAAYvO,QAC5FsK,EAAIygC,YACJzgC,EAAIsT,UAAYC,EAChBvT,EAAImX,OACJnX,EAAIywB,WAGR/8B,WACE,MAAMuB,EAAKtB,KACLqM,EAAM/K,EAAG+K,IACTrD,EAAO1H,EAAGqG,SACVsb,WAACA,EAAUjI,KAAEA,GAAQhS,EACrBq9C,EAAa/kD,EAAGgP,YAAYvO,OAClC,IAAIE,EAAG8Y,EAAQ+J,EAaf,GAZI9b,EAAKoa,YAAYF,SAtMzB,SAAyBpa,EAAOu9C,GAC9B,MAAMh6C,IAACA,EAAK1E,SAASyb,YAACA,IAAgBta,EACtC,IAAK,IAAI7G,EAAIokD,EAAa,EAAGpkD,GAAK,EAAGA,IAAK,CACxC,MAAMy5B,EAActY,EAAYkS,WAAWxsB,EAAM6G,WAAW1N,IACtDioD,EAASpmD,OAAOhE,EAAmE,EAA1EgE,CAA6E43B,EAAY1H,OAClGxmB,EAACA,EAACC,EAAEA,EAACuuB,UAAEA,EAAS3pB,KAAEA,EAAIH,IAAEA,EAAGC,MAAEA,EAAKC,OAAEA,GAAUtJ,EAAMghD,iBAAiB7nD,IACrE8wB,cAACA,GAAiB2I,EACxB,IAAK53B,OAAOhE,EAAoE,GAA3EgE,CAA8EivB,GAAgB,CACjG,MAAM9J,EAAUnlB,OAAOhE,EAAmE,EAA1EgE,CAA6E43B,EAAY1I,iBACzG3mB,EAAIsT,UAAYoT,EAChB1mB,EAAIwwB,SAASxqB,EAAO4W,EAAQ5W,KAAMH,EAAM+W,EAAQ/W,IAAKC,EAAQE,EAAO4W,EAAQzQ,MAAOpG,EAASF,EAAM+W,EAAQ1Q,QAE5GzU,OAAOhE,EAAmE,EAA1EgE,CACEuI,EACAvD,EAAM+gD,aAAa5nD,GACnBuL,EACAC,EAAKy8C,EAAOj2B,WAAa,EACzBi2B,EACA,CACEl4B,MAAO0J,EAAY1J,MACnBgK,UAAWA,EACXG,aAAc,YAkLhB0vB,CAAgBvqD,EAAI+kD,GAElBrrC,EAAKkI,SACP5hB,EAAG4U,MAAMnV,SAAQ,CAACsB,EAAMmH,KACtB,GAAc,IAAVA,EAAa,CACfuR,EAASzZ,EAAG0hB,8BAA8B3gB,EAAKoG,OAC/C,MAAMizB,EAAc1gB,EAAKsa,WAAWh0B,EAAGqO,WAAWnG,EAAQ,KAtKpE,SAAwBV,EAAOgjD,EAAcvwC,EAAQ8qC,GACnD,MAAMh6C,EAAMvD,EAAMuD,IACZ8W,EAAW2oC,EAAa3oC,UACxB6O,MAACA,EAAKjS,UAAEA,GAAa+rC,GACrB3oC,IAAakjC,IAAgBr0B,IAAUjS,GAAaxE,EAAS,IAGnElP,EAAIuwB,OACJvwB,EAAIwT,YAAcmS,EAClB3lB,EAAI0T,UAAYA,EAChB1T,EAAI+wB,YAAY0uB,EAAa75B,YAC7B5lB,EAAIgxB,eAAiByuB,EAAa55B,iBAClC7lB,EAAIixB,YACJisB,GAAezgD,EAAOyS,EAAQ4H,EAAUkjC,GACxCh6C,EAAIygC,YACJzgC,EAAIoxB,SACJpxB,EAAIywB,WAuJIivB,CAAezqD,EAAIo6B,EAAa3gB,EAAQsrC,OAI1CpjC,EAAWC,QAAS,CAEtB,IADA7W,EAAIuwB,OACC36B,EAAIX,EAAGgP,YAAYvO,OAAS,EAAGE,GAAK,EAAGA,IAAK,CAC/C,MAAMy5B,EAAczY,EAAWqS,WAAWh0B,EAAGqO,WAAW1N,KAClD+vB,MAACA,EAAKjS,UAAEA,GAAa2b,EACtB3b,GAAciS,IAGnB3lB,EAAI0T,UAAYA,EAChB1T,EAAIwT,YAAcmS,EAClB3lB,EAAI+wB,YAAY1B,EAAYzJ,YAC5B5lB,EAAIgxB,eAAiB3B,EAAYxJ,iBACjCnX,EAASzZ,EAAG0hB,8BAA8Bha,EAAKkN,MAAMjN,QAAU3H,EAAGF,IAAME,EAAG6B,KAC3E2hB,EAAWxjB,EAAGkoD,iBAAiBvnD,EAAG8Y,GAClC1O,EAAIixB,YACJjxB,EAAIkxB,OAAOj8B,EAAGmhB,QAASnhB,EAAGohB,SAC1BrW,EAAImxB,OAAO1Y,EAAStX,EAAGsX,EAASrX,GAChCpB,EAAIoxB,UAENpxB,EAAIywB,WAGR/8B,cACAA,aACE,MAAMuB,EAAKtB,KACLqM,EAAM/K,EAAG+K,IACTrD,EAAO1H,EAAGqG,QACVioB,EAAW5mB,EAAKkN,MACtB,IAAK0Z,EAAS1M,QACZ,OAEF,MAAMpG,EAAaxb,EAAGshB,cAAc,GACpC,IAAI7H,EAAQvC,EACZnM,EAAIuwB,OACJvwB,EAAIgjC,UAAU/tC,EAAGmhB,QAASnhB,EAAGohB,SAC7BrW,EAAI2/C,OAAOlvC,GACXzQ,EAAI2vB,UAAY,SAChB3vB,EAAI8vB,aAAe,SACnB76B,EAAG4U,MAAMnV,SAAQ,CAACsB,EAAMmH,KACtB,GAAc,IAAVA,IAAgBR,EAAKC,QACvB,OAEF,MAAMyyB,EAAc9L,EAAS0F,WAAWh0B,EAAGqO,WAAWnG,IAChD+vB,EAAWz1B,OAAOhE,EAAmE,EAA1EgE,CAA6E43B,EAAY1H,MAE1G,GADAjZ,EAASzZ,EAAG0hB,8BAA8B1hB,EAAG4U,MAAM1M,GAAOf,OACtDizB,EAAY5I,kBAAmB,CACjCta,EAAQnM,EAAI8uC,YAAY94C,EAAKuP,OAAO4G,MACpCnM,EAAIsT,UAAY+b,EAAY3I,cAC5B,MAAM9J,EAAUnlB,OAAOhE,EAAmE,EAA1EgE,CAA6E43B,EAAY1I,iBACzG3mB,EAAIwwB,UACDrkB,EAAQ,EAAIyQ,EAAQ5W,MACpB0I,EAASwe,EAAS5wB,KAAO,EAAIsgB,EAAQ/W,IACtCsG,EAAQyQ,EAAQzQ,MAChB+gB,EAAS5wB,KAAOsgB,EAAQ1Q,QAG5BzU,OAAOhE,EAAmE,EAA1EgE,CAA6EuI,EAAKhK,EAAKuP,MAAO,GAAImJ,EAAQwe,EAAU,CAClHvH,MAAO0J,EAAY1J,WAGvB3lB,EAAIywB,UAEN/8B,cAEFlB,GAAkB0M,GAAK,eACvB1M,GAAkBkY,SAAW,CAC3BmM,SAAS,EACT+oC,SAAS,EACTnnC,SAAU,YACV7B,WAAY,CACVC,SAAS,EACTnD,UAAW,EACXkS,WAAY,GACZC,iBAAkB,GAEpBlX,KAAM,CACJmI,UAAU,GAEZrG,WAAY,EACZ5G,MAAO,CACL4c,mBAAmB,EACnBJ,SAAU1zB,GAAMgwB,WAAWU,SAE7BtM,YAAa,CACX2P,mBAAezyB,EACf0yB,gBAAiB,EACjB9P,SAAS,EACT8Q,KAAM,CACJrrB,KAAM,IAER+pB,SAAS9gB,GACAA,EAETqX,QAAS,IAGbpqB,GAAkBkwB,cAAgB,CAChCm9B,mBAAoB,cACpBC,oBAAqB,QACrBC,cAAe,SAEjBvtD,GAAkB+gC,YAAc,CAC9B3c,WAAY,CACV/c,UAAW,SAIf,MAAMmmD,GAAY,CAChBC,YAAa,CAACC,QAAQ,EAAM5jD,KAAM,EAAG6jD,MAAO,KAC5CC,OAAQ,CAACF,QAAQ,EAAM5jD,KAAM,IAAM6jD,MAAO,IAC1CE,OAAQ,CAACH,QAAQ,EAAM5jD,KAAM,IAAO6jD,MAAO,IAC3CG,KAAM,CAACJ,QAAQ,EAAM5jD,KAAM,KAAS6jD,MAAO,IAC3CI,IAAK,CAACL,QAAQ,EAAM5jD,KAAM,MAAU6jD,MAAO,IAC3CK,KAAM,CAACN,QAAQ,EAAO5jD,KAAM,OAAW6jD,MAAO,GAC9CM,MAAO,CAACP,QAAQ,EAAM5jD,KAAM,OAAS6jD,MAAO,IAC5CO,QAAS,CAACR,QAAQ,EAAO5jD,KAAM,OAAS6jD,MAAO,GAC/CQ,KAAM,CAACT,QAAQ,EAAM5jD,KAAM,SAEvBskD,GAASnpD,OAAOiC,KAAKsmD,IAC3B,SAASa,GAAOv3C,EAAG3D,GACjB,OAAO2D,EAAI3D,EAEb,SAASxB,GAAM1H,EAAOqkD,GACpB,GAAIrpD,OAAOhE,EAAoE,GAA3EgE,CAA8EqpD,GAChF,OAAO,KAET,MAAMC,EAAUtkD,EAAMukD,UAChBC,OAACA,EAAMh8B,MAAEA,EAAKi8B,WAAEA,GAAczkD,EAAM0kD,WAC1C,IAAI/kD,EAAQ0kD,EASZ,MARsB,oBAAXG,IACT7kD,EAAQ6kD,EAAO7kD,IAEZ3E,OAAOhE,EAAoE,GAA3EgE,CAA8E2E,KACjFA,EAA0B,kBAAX6kD,EACXF,EAAQ58C,MAAM/H,EAAO6kD,GACrBF,EAAQ58C,MAAM/H,IAEN,OAAVA,EACK,MAEL6oB,IACF7oB,EAAkB,SAAV6oB,IAAqBxtB,OAAOhE,EAAoE,GAA3EgE,CAA8EypD,KAA8B,IAAfA,EAEtHH,EAAQK,QAAQhlD,EAAO6oB,GADvB87B,EAAQK,QAAQhlD,EAAO,UAAW8kD,KAGhC9kD,GAEV,SAASilD,GAA0BC,EAASvsD,EAAK+B,EAAKyqD,GACpD,MAAMrkD,EAAO0jD,GAAMlrD,OACnB,IAAK,IAAIE,EAAIgrD,GAAMp0C,QAAQ80C,GAAU1rD,EAAIsH,EAAO,IAAKtH,EAAG,CACtD,MAAM4rD,EAAWxB,GAAUY,GAAMhrD,IAC3B2B,EAASiqD,EAASrB,MAAQqB,EAASrB,MAAQv7C,OAAO68C,iBACxD,GAAID,EAAStB,QAAUprD,KAAK0vB,MAAM1tB,EAAM/B,IAAQwC,EAASiqD,EAASllD,QAAUilD,EAC1E,OAAOX,GAAMhrD,GAGjB,OAAOgrD,GAAM1jD,EAAO,GAkBtB,SAASwkD,GAAQ73C,EAAO83C,EAAMC,GAC5B,GAAKA,GAEE,GAAIA,EAAWlsD,OAAQ,CAC5B,MAAM6e,GAACA,EAAEC,GAAEA,GAAM/c,OAAOhE,EAAoE,EAA3EgE,CAA8EmqD,EAAYD,GAE3G93C,EADkB+3C,EAAWrtC,IAAOotC,EAAOC,EAAWrtC,GAAMqtC,EAAWptC,KACpD,QAJnB3K,EAAM83C,IAAQ,EAoBlB,SAASE,GAAoBplD,EAAOrB,EAAQ0mD,GAC1C,MAAMj4C,EAAQ,GACRsJ,EAAM,GACNjW,EAAO9B,EAAO1F,OACpB,IAAIE,EAAGwG,EACP,IAAKxG,EAAI,EAAGA,EAAIsH,IAAQtH,EACtBwG,EAAQhB,EAAOxF,GACfud,EAAI/W,GAASxG,EACbiU,EAAMtZ,KAAK,CACT6L,MAAAA,EACA6nB,OAAO,IAGX,OAAiB,IAAT/mB,GAAe4kD,EA1BzB,SAAuBrlD,EAAOoN,EAAOsJ,EAAK2uC,GACxC,MAAMf,EAAUtkD,EAAMukD,SAChB18B,GAASy8B,EAAQK,QAAQv3C,EAAM,GAAGzN,MAAO0lD,GACzCz1C,EAAOxC,EAAMA,EAAMnU,OAAS,GAAG0G,MACrC,IAAI6nB,EAAO9mB,EACX,IAAK8mB,EAAQK,EAAOL,GAAS5X,EAAM4X,GAAS88B,EAAQxkD,IAAI0nB,EAAO,EAAG69B,GAChE3kD,EAAQgW,EAAI8Q,GACR9mB,GAAS,IACX0M,EAAM1M,GAAO8mB,OAAQ,GAGzB,OAAOpa,EAeqCk4C,CAActlD,EAAOoN,EAAOsJ,EAAK2uC,GAAzCj4C,EAEtC,MAAMjX,WAAkBH,GACtBiB,YAAYuI,GACV8O,MAAM9O,GACNtI,KAAKqV,OAAS,CACZ5G,KAAM,GACN4B,OAAQ,GACRlI,IAAK,IAEPnI,KAAKquD,MAAQ,MACbruD,KAAKsuD,gBAAahuD,EAClBN,KAAKuuD,SAAW,GAChBvuD,KAAKwuD,aAAc,EACnBxuD,KAAKwtD,gBAAaltD,EAEpBP,KAAKooC,EAAWn/B,GACd,MAAMglD,EAAO7lB,EAAU6lB,OAAS7lB,EAAU6lB,KAAO,IAC3CZ,EAAUptD,KAAKqtD,SAAW,IAAIhuD,EAAS+kB,MAAM+jB,EAAU9oC,SAASoB,MACtEqD,OAAOhE,EAAoE,EAA3EgE,CAA8EkqD,EAAKS,eAAgBrB,EAAQsB,WAC3G1uD,KAAKwtD,WAAa,CAChBF,OAAQU,EAAKV,OACbh8B,MAAO08B,EAAK18B,MACZi8B,WAAYS,EAAKT,YAEnBn2C,MAAMsxB,KAAKP,GACXnoC,KAAKwuD,YAAcxlD,EAAK2lD,WAE1B5uD,MAAMoT,EAAK3J,GACT,YAAYlJ,IAAR6S,EACK,KAEF3C,GAAMxQ,KAAMmT,GAErBpT,eACEqX,MAAM+S,eACNnqB,KAAKqV,OAAS,CACZ5G,KAAM,GACN4B,OAAQ,GACRlI,IAAK,IAGTpI,sBACE,MAAMuB,EAAKtB,KACL2H,EAAUrG,EAAGqG,QACbylD,EAAU9rD,EAAG+rD,SACbrpC,EAAOrc,EAAQqmD,KAAKhqC,MAAQ,MAClC,IAAI5iB,IAACA,EAAG+B,IAAEA,EAAGmO,WAAEA,EAAUC,WAAEA,GAAcjQ,EAAGkQ,gBAC5C,SAASo9C,EAAan9B,GACfngB,GAAesH,MAAM6Y,EAAOrwB,OAC/BA,EAAMD,KAAKC,IAAIA,EAAKqwB,EAAOrwB,MAExBmQ,GAAeqH,MAAM6Y,EAAOtuB,OAC/BA,EAAMhC,KAAKgC,IAAIA,EAAKsuB,EAAOtuB,MAG1BmO,GAAeC,IAClBq9C,EAAattD,EAAGutD,mBACO,UAAnBlnD,EAAQ8pB,QAA+C,WAAzB9pB,EAAQuO,MAAM2gB,QAC9C+3B,EAAattD,EAAGm0B,WAAU,KAG9Br0B,EAAM0C,OAAOhE,EAAoE,GAA3EgE,CAA8E1C,KAASwX,MAAMxX,GAAOA,GAAOgsD,EAAQK,QAAQ/rD,KAAKC,MAAOqiB,GAC7I7gB,EAAMW,OAAOhE,EAAoE,GAA3EgE,CAA8EX,KAASyV,MAAMzV,GAAOA,GAAOiqD,EAAQ0B,MAAMptD,KAAKC,MAAOqiB,GAAQ,EACnJ1iB,EAAGF,IAAMD,KAAKC,IAAIA,EAAK+B,EAAM,GAC7B7B,EAAG6B,IAAMhC,KAAKgC,IAAI/B,EAAM,EAAG+B,GAE7BpD,kBACE,MAAMgV,EAAM/U,KAAK+uD,qBACjB,IAAI3tD,EAAM6P,OAAOC,kBACb/N,EAAM8N,OAAOE,kBAKjB,OAJI4D,EAAIhT,SACNX,EAAM2T,EAAI,GACV5R,EAAM4R,EAAIA,EAAIhT,OAAS,IAElB,CAACX,IAAAA,EAAK+B,IAAAA,GAEfpD,aACE,MAAMuB,EAAKtB,KACL2H,EAAUrG,EAAGqG,QACbqnD,EAAWrnD,EAAQqmD,KACnBp+B,EAAWjoB,EAAQuO,MACnB+3C,EAAiC,WAApBr+B,EAASiH,OAAsBv1B,EAAGytD,qBAAuBztD,EAAG2tD,YACxD,UAAnBtnD,EAAQ8pB,QAAsBw8B,EAAWlsD,SAC3CT,EAAGF,IAAME,EAAG0zB,UAAYi5B,EAAW,GACnC3sD,EAAG6B,IAAM7B,EAAGyzB,UAAYk5B,EAAWA,EAAWlsD,OAAS,IAEzD,MAAMX,EAAME,EAAGF,IACT+B,EAAM7B,EAAG6B,IACT+S,EAAQpS,OAAOhE,EAAoE,EAA3EgE,CAA8EmqD,EAAY7sD,EAAK+B,GAU7G,OATA7B,EAAG+sD,MAAQW,EAAShrC,OAAS4L,EAASD,SAClC+9B,GAA0BsB,EAASrB,QAASrsD,EAAGF,IAAKE,EAAG6B,IAAK7B,EAAG4tD,kBAAkB9tD,IA9IzF,SAAoC0H,EAAO6uB,EAAUg2B,EAASvsD,EAAK+B,GACjE,IAAK,IAAIlB,EAAIgrD,GAAMlrD,OAAS,EAAGE,GAAKgrD,GAAMp0C,QAAQ80C,GAAU1rD,IAAK,CAC/D,MAAM+hB,EAAOipC,GAAMhrD,GACnB,GAAIoqD,GAAUroC,GAAMuoC,QAAUzjD,EAAMukD,SAASp8B,KAAK9tB,EAAK/B,EAAK4iB,IAAS2T,EAAW,EAC9E,OAAO3T,EAGX,OAAOipC,GAAMU,EAAUV,GAAMp0C,QAAQ80C,GAAW,GAwI1CwB,CAA2B7tD,EAAI4U,EAAMnU,OAAQitD,EAASrB,QAASrsD,EAAGF,IAAKE,EAAG6B,MAC9E7B,EAAGgtD,WAAc1+B,EAASU,MAAMC,SAAwB,SAAbjvB,EAAG+sD,MAvIlD,SAA4BrqC,GAC1B,IAAK,IAAI/hB,EAAIgrD,GAAMp0C,QAAQmL,GAAQ,EAAGza,EAAO0jD,GAAMlrD,OAAQE,EAAIsH,IAAQtH,EACrE,GAAIoqD,GAAUY,GAAMhrD,IAAIsqD,OACtB,OAAOU,GAAMhrD,GAqIXmtD,CAAmB9tD,EAAG+sD,YADuC/tD,EAEjEgB,EAAG+tD,YAAYpB,GACXtmD,EAAQsB,SACViN,EAAMjN,UAEDilD,GAAoB5sD,EAAI4U,EAAO5U,EAAGgtD,YAE3CvuD,YAAYkuD,GACV,MAAM3sD,EAAKtB,KACX,IAEI2wB,EAAOjY,EAFPrX,EAAQ,EACR6H,EAAM,EAEN5H,EAAGqG,QAAQoT,QAAUkzC,EAAWlsD,SAClC4uB,EAAQrvB,EAAGguD,mBAAmBrB,EAAW,IAEvC5sD,EADwB,IAAtB4sD,EAAWlsD,OACL,EAAI4uB,GAEHrvB,EAAGguD,mBAAmBrB,EAAW,IAAMt9B,GAAS,EAE3DjY,EAAOpX,EAAGguD,mBAAmBrB,EAAWA,EAAWlsD,OAAS,IAE1DmH,EADwB,IAAtB+kD,EAAWlsD,OACP2W,GAECA,EAAOpX,EAAGguD,mBAAmBrB,EAAWA,EAAWlsD,OAAS,KAAO,GAG9E,MAAMwtD,EAAQtB,EAAWlsD,OAAS,EAAI,GAAM,IAC5CV,EAAQyC,OAAOhE,EAAoE,GAA3EgE,CAA8EzC,EAAO,EAAGkuD,GAChGrmD,EAAMpF,OAAOhE,EAAoE,GAA3EgE,CAA8EoF,EAAK,EAAGqmD,GAC5FjuD,EAAGitD,SAAW,CAACltD,MAAAA,EAAO6H,IAAAA,EAAKtF,OAAQ,GAAKvC,EAAQ,EAAI6H,IAEtDnJ,YACE,MAAMuB,EAAKtB,KACLotD,EAAU9rD,EAAG+rD,SACbjsD,EAAME,EAAGF,IACT+B,EAAM7B,EAAG6B,IACTwE,EAAUrG,EAAGqG,QACbqnD,EAAWrnD,EAAQqmD,KACnBr7B,EAAQq8B,EAAShrC,MAAQ0pC,GAA0BsB,EAASrB,QAASvsD,EAAK+B,EAAK7B,EAAG4tD,kBAAkB9tD,IACpGkmD,EAAWxjD,OAAOhE,EAAoE,GAA3EgE,CAA8EkrD,EAAS1H,SAAU,GAC5GrjC,EAAoB,SAAV0O,GAAmBq8B,EAASzB,WACtCiC,EAAa1rD,OAAOhE,EAAoE,GAA3EgE,CAA8EmgB,KAAwB,IAAZA,EACvG/N,EAAQ,GACd,IACI83C,EAAMn+C,EADN8gB,EAAQvvB,EAMZ,GAJIouD,IACF7+B,GAASy8B,EAAQK,QAAQ98B,EAAO,UAAW1M,IAE7C0M,GAASy8B,EAAQK,QAAQ98B,EAAO6+B,EAAa,MAAQ78B,GACjDy6B,EAAQn8B,KAAK9tB,EAAK/B,EAAKuxB,GAAS,IAAS20B,EAC3C,MAAM,IAAI3jC,MAAMviB,EAAM,QAAU+B,EAAM,uCAAyCmkD,EAAW,IAAM30B,GAElG,MAAMs7B,EAAsC,SAAzBtmD,EAAQuO,MAAM2gB,QAAqBv1B,EAAGmuD,oBACzD,IAAKzB,EAAOr9B,EAAO9gB,EAAQ,EAAGm+C,EAAO7qD,EAAK6qD,GAAQZ,EAAQxkD,IAAIolD,EAAM1G,EAAU30B,GAAQ9iB,IACpFk+C,GAAQ73C,EAAO83C,EAAMC,GAKvB,OAHID,IAAS7qD,GAA0B,UAAnBwE,EAAQ8pB,QAAgC,IAAV5hB,GAChDk+C,GAAQ73C,EAAO83C,EAAMC,GAEhBnqD,OAAOiC,KAAKmQ,GAAOR,MAAK,CAACC,EAAG3D,IAAM2D,EAAI3D,IAAGwN,KAAIhS,IAAMA,IAE5DzN,iBAAiB0I,GACf,MACM2kD,EADKptD,KACQqtD,SACb2B,EAFKhvD,KAES2H,QAAQqmD,KAC5B,OAAIgB,EAASU,cACJtC,EAAQvpC,OAAOpb,EAAOumD,EAASU,eAEjCtC,EAAQvpC,OAAOpb,EAAOumD,EAASP,eAAekB,UAEvD5vD,oBAAoBiuD,EAAMxkD,EAAO0M,EAAO2N,GACtC,MAAMviB,EAAKtB,KACL2H,EAAUrG,EAAGqG,QACb+mD,EAAU/mD,EAAQqmD,KAAKS,eACvBzqC,EAAO1iB,EAAG+sD,MACVF,EAAY7sD,EAAGgtD,WACfsB,EAAc5rC,GAAQ0qC,EAAQ1qC,GAC9B6rC,EAAc1B,GAAaO,EAAQP,GACnC9rD,EAAO6T,EAAM1M,GACb8mB,EAAQ69B,GAAa0B,GAAextD,GAAQA,EAAKiuB,MACjD1e,EAAQtQ,EAAG+rD,SAASxpC,OAAOmqC,EAAMnqC,IAAWyM,EAAQu/B,EAAcD,IAClEE,EAAYnoD,EAAQuO,MAAMwc,SAChC,OAAOo9B,EAAYhsD,OAAOhE,EAAmE,EAA1EgE,CAA6EgsD,EAAW,CAACl+C,EAAOpI,EAAO0M,GAAQ5U,GAAMsQ,EAE1I7R,mBAAmBmW,GACjB,IAAIjU,EAAGsH,EAAMlH,EACb,IAAKJ,EAAI,EAAGsH,EAAO2M,EAAMnU,OAAQE,EAAIsH,IAAQtH,EAC3CI,EAAO6T,EAAMjU,GACbI,EAAKuP,MAAQ5R,KAAK+vD,oBAAoB1tD,EAAKoG,MAAOxG,EAAGiU,GAGzDnW,mBAAmB0I,GACjB,MAAMnH,EAAKtB,KACX,OAAiB,OAAVyI,EAAiBoI,KAAOpI,EAAQnH,EAAGF,MAAQE,EAAG6B,IAAM7B,EAAGF,KAEhErB,iBAAiB0I,GACf,MAAMnH,EAAKtB,KACLgwD,EAAU1uD,EAAGitD,SACbznC,EAAMxlB,EAAGguD,mBAAmB7mD,GAClC,OAAOnH,EAAG+Z,oBAAoB20C,EAAQ3uD,MAAQylB,GAAOkpC,EAAQpsD,QAE/D7D,iBAAiBo6B,GACf,MAAM74B,EAAKtB,KACLgwD,EAAU1uD,EAAGitD,SACbznC,EAAMxlB,EAAGwlD,mBAAmB3sB,GAAS61B,EAAQpsD,OAASosD,EAAQ9mD,IACpE,OAAO5H,EAAGF,IAAM0lB,GAAOxlB,EAAG6B,IAAM7B,EAAGF,KAErCrB,cAAc6R,GACZ,MAAMtQ,EAAKtB,KACLiwD,EAAY3uD,EAAGqG,QAAQuO,MACvBg6C,EAAiB5uD,EAAG+K,IAAI8uC,YAAYvpC,GAAO4G,MAC3C+E,EAAQzZ,OAAOhE,EAAoE,GAA3EgE,CAA8ExC,EAAGoW,eAAiBu4C,EAAU79B,YAAc69B,EAAU99B,aAC5Ig+B,EAAchvD,KAAK8b,IAAIM,GACvB6yC,EAAcjvD,KAAKgc,IAAII,GACvB8yC,EAAe/uD,EAAGs4B,wBAAwB,GAAGjxB,KACnD,MAAO,CACLsf,EAAIioC,EAAiBC,EAAgBE,EAAeD,EACpDjoC,EAAI+nC,EAAiBE,EAAgBC,EAAeF,GAGxDpwD,kBAAkBuwD,GAChB,MAAMhvD,EAAKtB,KACLgvD,EAAW1tD,EAAGqG,QAAQqmD,KACtBS,EAAiBO,EAASP,eAC1B5qC,EAAS4qC,EAAeO,EAAShrC,OAASyqC,EAAenC,YACzDiE,EAAejvD,EAAGyuD,oBAAoBO,EAAa,EAAGpC,GAAoB5sD,EAAI,CAACgvD,GAAchvD,EAAGgtD,YAAazqC,GAC7Glb,EAAOrH,EAAGkvD,cAAcD,GACxB3C,EAAWzsD,KAAK0D,MAAMvD,EAAGoW,eAAiBpW,EAAGkX,MAAQ7P,EAAKsf,EAAI3mB,EAAGiX,OAAS5P,EAAKwf,GAAK,EAC1F,OAAOylC,EAAW,EAAIA,EAAW,EAEnC7tD,oBACE,MAAMuB,EAAKtB,KACX,IACIiC,EAAGsH,EADH0kD,EAAa3sD,EAAG+T,OAAO5G,MAAQ,GAEnC,GAAIw/C,EAAWlsD,OACb,OAAOksD,EAET,MAAM14C,EAAQjU,EAAGqJ,0BACjB,GAAIrJ,EAAGktD,aAAej5C,EAAMxT,OAC1B,OAAQT,EAAG+T,OAAO5G,KAAO8G,EAAM,GAAG1K,WAAW4K,mBAAmBnU,GAElE,IAAKW,EAAI,EAAGsH,EAAOgM,EAAMxT,OAAQE,EAAIsH,IAAQtH,EAC3CgsD,EAAaA,EAAWz4C,OAAOD,EAAMtT,GAAG4I,WAAW4K,mBAAmBnU,IAExE,OAAQA,EAAG+T,OAAO5G,KAAOnN,EAAGmvD,UAAUxC,GAExCluD,qBACE,MAAMuB,EAAKtB,KACLiuD,EAAa3sD,EAAG+T,OAAOhF,QAAU,GACvC,IAAIpO,EAAGsH,EACP,GAAI0kD,EAAWlsD,OACb,OAAOksD,EAET,MAAM59C,EAAS/O,EAAGgP,YAClB,IAAKrO,EAAI,EAAGsH,EAAO8G,EAAOtO,OAAQE,EAAIsH,IAAQtH,EAC5CgsD,EAAWrxD,KAAK4T,GAAMlP,EAAI+O,EAAOpO,KAEnC,OAAQX,EAAG+T,OAAOhF,OAAS/O,EAAGktD,YAAcP,EAAa3sD,EAAGmvD,UAAUxC,GAExEluD,UAAU0H,GACR,OAAO3D,OAAOhE,EAAmE,EAA1EgE,CAA6E2D,EAAOiO,KAAKw3C,MAuBpG,SAAS3V,GAAYmZ,EAAO/3C,EAAK1P,GAC/B,IAAI0nD,EAAYC,EAAYC,EAAYC,EACxC,GAAI7nD,EACF0nD,EAAaxvD,KAAK0D,MAAM8T,GACxBi4C,EAAazvD,KAAK0vB,KAAKlY,GACvBk4C,EAAaH,EAAMC,GACnBG,EAAaJ,EAAME,OACd,CACL,MAAMpgC,EAAS1sB,OAAOhE,EAAoE,EAA3EgE,CAA8E4sD,EAAO/3C,GACpGk4C,EAAargC,EAAO5P,GACpBkwC,EAAatgC,EAAO3P,GACpB8vC,EAAaD,EAAMG,GACnBD,EAAaF,EAAMI,GAErB,MAAMC,EAAOH,EAAaD,EAC1B,OAAOI,EAAOF,GAAcC,EAAaD,IAAel4C,EAAMg4C,GAAcI,EAAOF,EAnCrF5xD,GAAUsM,GAAK,OACftM,GAAU8X,SAAW,CACnB0a,OAAQ,OACRpyB,SAAU,GACV2uD,KAAM,CACJV,QAAQ,EACRtpC,MAAM,EACNsN,OAAO,EACPi8B,YAAY,EACZI,QAAS,cACTc,eAAgB,IAElBv4C,MAAO,CACL2gB,OAAQ,OACRvG,MAAO,CACLC,SAAS,KAsBf,MAAMrxB,WAAwBD,GAC5Bc,YAAYuI,GACV8O,MAAM9O,GACNtI,KAAKgxD,OAAS,GACdhxD,KAAKixD,eAAY3wD,EAEnBP,cACE,MAAMuB,EAAKtB,KACLiuD,EAAa3sD,EAAG4vD,yBACtB5vD,EAAG0vD,OAAS1vD,EAAG6vD,iBAAiBlD,GAChC3sD,EAAG2vD,UAAY3vD,EAAG0vD,OAAOjvD,OAAS,EAClCqV,MAAMi4C,YAAYpB,GAEpBluD,iBAAiBkuD,GACf,MACM7sD,IAACA,EAAG+B,IAAEA,GADDnD,KAEX,IAAKiuD,EAAWlsD,OACd,MAAO,CACL,CAACisD,KAAM5sD,EAAK0lB,IAAK,GACjB,CAACknC,KAAM7qD,EAAK2jB,IAAK,IAGrB,MAAMhlB,EAAQ,CAACV,GACf,IAAIa,EAAGsH,EAAMsM,EACb,IAAK5T,EAAI,EAAGsH,EAAO0kD,EAAWlsD,OAAQE,EAAIsH,IAAQtH,EAChD4T,EAAOo4C,EAAWhsD,GACd4T,EAAOzU,GAAOyU,EAAO1S,GACvBrB,EAAMlF,KAAKiZ,GAIf,OADA/T,EAAMlF,KAAKuG,GACJrB,EAET/B,yBACE,MAAMuB,EAAKtB,KACX,IAAIiuD,EAAa3sD,EAAG+T,OAAOlN,KAAO,GAClC,GAAI8lD,EAAWlsD,OACb,OAAOksD,EAET,MAAMx/C,EAAOnN,EAAGmuD,oBACV79C,EAAQtQ,EAAGytD,qBAOjB,OALEd,EADEx/C,EAAK1M,QAAU6P,EAAM7P,OACVT,EAAGmvD,UAAUhiD,EAAK+G,OAAO5D,IAEzBnD,EAAK1M,OAAS0M,EAAOmD,EAEpCq8C,EAAa3sD,EAAG+T,OAAOlN,IAAM8lD,EACtBA,EAETluD,iBAAiB0I,EAAOe,GACtB,MAAMlI,EAAKtB,KACLgwD,EAAU1uD,EAAGitD,SACbznC,EAAMxlB,EAAGktD,aAAeltD,EAAG2vD,UAAY,IAAMntD,OAAOhE,EAAoE,GAA3EgE,CAA8E0F,GAC7HA,EAAQlI,EAAG2vD,UAAY3vD,EAAGguD,mBAAmB7mD,GACjD,OAAOnH,EAAG+Z,oBAAoB20C,EAAQ3uD,MAAQylB,GAAOkpC,EAAQpsD,QAE/D7D,mBAAmB0I,GACjB,OAAO8uC,GAAYv3C,KAAKgxD,OAAQvoD,GAASzI,KAAKixD,UAEhDlxD,iBAAiBo6B,GACf,MAAM74B,EAAKtB,KACLgwD,EAAU1uD,EAAGitD,SACbn0B,EAAU94B,EAAGwlD,mBAAmB3sB,GAAS61B,EAAQpsD,OAASosD,EAAQ9mD,IACxE,OAAOquC,GAAYj2C,EAAG0vD,OAAQ52B,EAAUp6B,KAAKixD,WAAW,IAG5D/xD,GAAgBqM,GAAK,aACrBrM,GAAgB6X,SAAW9X,GAAU8X,SAErC,IAAIlX,GAAsBiE,OAAOkQ,OAAO,CACxCyP,UAAW,KACX9lB,cAAeA,GACfY,YAAaA,GACbC,iBAAkBA,GAClBK,kBAAmBA,GACnBI,UAAWA,GACXC,gBAAiBA,KAGjB,MAAMS,GAAgB,CACpBJ,EACAC,GACAE,GACAG"},"name":"static/chunks/36bcf0ca.6d3ce99295ab10576d25.js","input":"(window[\"webpackJsonp_N_E\"] = window[\"webpackJsonp_N_E\"] || []).push([[5],{\n\n/***/ \"m0r1\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Animation\", function() { return Animation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Animations\", function() { return Animations; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ArcElement\", function() { return ArcElement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BarController\", function() { return BarController; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BarElement\", function() { return BarElement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BasePlatform\", function() { return BasePlatform; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BasicPlatform\", function() { return BasicPlatform; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BubbleController\", function() { return BubbleController; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CategoryScale\", function() { return CategoryScale; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Chart\", function() { return Chart; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DatasetController\", function() { return DatasetController; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Decimation\", function() { return plugin_decimation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DomPlatform\", function() { return DomPlatform; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DoughnutController\", function() { return DoughnutController; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Element\", function() { return Element; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Filler\", function() { return plugin_filler; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Interaction\", function() { return Interaction; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Legend\", function() { return plugin_legend; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LineController\", function() { return LineController; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LineElement\", function() { return LineElement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LinearScale\", function() { return LinearScale; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LogarithmicScale\", function() { return LogarithmicScale; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PieController\", function() { return PieController; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PointElement\", function() { return PointElement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PolarAreaController\", function() { return PolarAreaController; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RadarController\", function() { return RadarController; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RadialLinearScale\", function() { return RadialLinearScale; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Scale\", function() { return Scale; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ScatterController\", function() { return ScatterController; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Ticks\", function() { return Ticks; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TimeScale\", function() { return TimeScale; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TimeSeriesScale\", function() { return TimeSeriesScale; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Title\", function() { return plugin_title; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Tooltip\", function() { return plugin_tooltip; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"_adapters\", function() { return adapters; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"animator\", function() { return animator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"controllers\", function() { return controllers; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"elements\", function() { return elements; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"layouts\", function() { return layouts; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"plugins\", function() { return plugins; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"registerables\", function() { return registerables; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"registry\", function() { return registry; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"scales\", function() { return scales; });\n/* harmony import */ var _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"3T2N\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"defaults\", function() { return _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[\"Nb\"]; });\n\n/*!\n * Chart.js v3.2.1\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\n\n\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    const me = this;\n    if (me._request) {\n      return;\n    }\n    me._running = true;\n    me._request = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* r */ \"bc\"].call(window, () => {\n      me._update();\n      me._request = null;\n      if (me._running) {\n        me._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    const me = this;\n    let remaining = 0;\n    me._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        me._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        me._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    me._lastDate = date;\n    if (remaining === 0) {\n      me._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* c */ \"Mb\"])(from || transparent);\n    const c1 = c0.valid && Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* c */ \"Mb\"])(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a */ \"C\"])([cfg.to, to, currentValue, cfg.from]);\n    const from = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a */ \"C\"])([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* e */ \"Ob\"][cfg.easing] || _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* e */ \"Ob\"].linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    const me = this;\n    if (me._active) {\n      me._notify(false);\n      const currentValue = me._target[me._prop];\n      const elapsed = date - me._start;\n      const remain = me._duration - elapsed;\n      me._start = date;\n      me._duration = Math.floor(Math.max(remain, cfg.duration));\n      me._total += elapsed;\n      me._loop = !!cfg.loop;\n      me._to = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a */ \"C\"])([cfg.to, to, currentValue, cfg.from]);\n      me._from = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a */ \"C\"])([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    const me = this;\n    if (me._active) {\n      me.tick(Date.now());\n      me._active = false;\n      me._notify(false);\n    }\n  }\n  tick(date) {\n    const me = this;\n    const elapsed = date - me._start;\n    const duration = me._duration;\n    const prop = me._prop;\n    const from = me._from;\n    const loop = me._loop;\n    const to = me._to;\n    let factor;\n    me._active = from !== to && (loop || (elapsed < duration));\n    if (!me._active) {\n      me._target[prop] = to;\n      me._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      me._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = me._easing(Math.min(1, Math.max(0, factor)));\n    me._target[prop] = me._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"Nb\"].set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"Nb\"].animation);\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"Nb\"].describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"Nb\"].set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"Nb\"].describe('animations', {\n  _fallback: 'animation',\n});\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"Nb\"].set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Sb\"])(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Sb\"])(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"Lb\"])(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Sb\"])(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Qb\"])(otherValue) && (singleMode || (value === 0 || Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* s */ \"cc\"])(value) === Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* s */ \"cc\"])(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive) {\n  for (const meta of vScale.getMatchingVisibleMetas('bar').reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true);\n    stack._bottom = getLastIndexInStack(stack, vScale, false);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return Object.assign(Object.create(parent),\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[meta.vScale.id] === undefined || stacks[meta.vScale.id][meta.index] === undefined) {\n      return;\n    }\n    delete stacks[meta.vScale.id][meta.index];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this.initialize();\n  }\n  initialize() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    me.addElements();\n  }\n  updateIndex(datasetIndex) {\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"fc\"])(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"fc\"])(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"fc\"])(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = me.getScaleForId(xid);\n    meta.yScale = me.getScaleForId(yid);\n    meta.rScale = me.getScaleForId(rid);\n    meta.iScale = me.getScaleForId(iid);\n    meta.vScale = me.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* u */ \"ec\"])(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const me = this;\n    const dataset = me.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Sb\"])(data)) {\n      me._data = convertObjectDataToArray(data);\n    } else if (me._data !== data) {\n      if (me._data) {\n        Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* u */ \"ec\"])(me._data, me);\n        clearStacks(me._cachedMeta);\n      }\n      if (data && Object.isExtensible(data)) {\n        Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* l */ \"Vb\"])(data, me);\n      }\n      me._data = data;\n    }\n  }\n  addElements() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me._dataCheck();\n    if (me.datasetElementType) {\n      meta.dataset = new me.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    let stackChanged = false;\n    me._dataCheck();\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    me._resyncElements(resetNewElements);\n    if (stackChanged) {\n      updateStacks(me, meta._parsed);\n    }\n  }\n  configure() {\n    const me = this;\n    const config = me.chart.config;\n    const scopeKeys = config.datasetScopeKeys(me._type);\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\n    me.options = config.createResolver(scopes, me.getContext());\n    me._parsing = me.options.parsing;\n  }\n  parse(start, count) {\n    const me = this;\n    const {_cachedMeta: meta, _data: data} = me;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (me._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"Lb\"])(data[start])) {\n        parsed = me.parseArrayData(meta, data, start, count);\n      } else if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Sb\"])(data[start])) {\n        parsed = me.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = me.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(me, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* f */ \"Pb\"])(item, xAxisKey), index),\n        y: yScale.parse(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* f */ \"Pb\"])(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n      value = applyStack(stack, parsedValue, this._cachedMeta.index, {all: true});\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = me._getOtherScale(scale);\n    const stack = canStack && meta._stacked && {keys: getSortedDatasetIndices(me.chart, true), values: null};\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, value, parsed, otherValue;\n    function _skip() {\n      parsed = _parsed[i];\n      value = parsed[scale.axis];\n      otherValue = parsed[otherScale.axis];\n      return !Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Qb\"])(value) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      me.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        me.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Qb\"])(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me._cachedDataOpts = {};\n    me.update(mode || 'default');\n    meta._clip = toClip(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"fc\"])(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const me = this;\n    const ctx = me._ctx;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = me._drawStart || 0;\n    const count = me._drawCount || (elements.length - start);\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.active) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    let context;\n    if (index >= 0 && index < me._cachedMeta.data.length) {\n      const element = me._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(me.getContext(), index, element));\n      context.parsed = me.getParsed(index);\n      context.raw = dataset.data[index];\n    } else {\n      context = me.$context ||\n        (me.$context = createDatasetContext(me.chart.getContext(), me.index));\n      context.dataset = dataset;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const me = this;\n    const active = mode === 'active';\n    const cache = me._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = me.enableOptionSharing && Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* h */ \"Rb\"])(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = me.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n    const names = Object.keys(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"Nb\"].elements[elementType]);\n    const context = () => me.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const me = this;\n    const chart = me.chart;\n    const cache = me._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = me.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\n      const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, me.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const me = this;\n    const numMeta = me._cachedMeta.data.length;\n    const numData = me._data.length;\n    if (numData > numMeta) {\n      me._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      me._removeElements(numData, numMeta - numData);\n    }\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      me.parse(0, count);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new me.dataElementType();\n    }\n    if (me._parsing) {\n      move(meta._parsed);\n    }\n    me.parse(start, count);\n    if (resetNewElements) {\n      me.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const me = this;\n    const meta = me._cachedMeta;\n    if (me._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._insertElements(this.getDataset().data.length - count, count);\n  }\n  _onDataPop() {\n    this._removeElements(this._cachedMeta.data.length - 1, 1);\n  }\n  _onDataShift() {\n    this._removeElements(0, 1);\n  }\n  _onDataSplice(start, count) {\n    this._removeElements(start, count);\n    this._insertElements(start, arguments.length - 2);\n  }\n  _onDataUnshift() {\n    this._insertElements(0, arguments.length);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale) {\n  if (!scale._cache.$bar) {\n    const metas = scale.getMatchingVisibleMetas('bar');\n    let values = [];\n    for (let i = 0, ilen = metas.length; i < ilen; i++) {\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* _ */ \"B\"])(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(scale) {\n  const values = getAllScaleValues(scale);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* h */ \"Rb\"])(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Tb\"])(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"Lb\"])(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* f */ \"Pb\"])(obj, iAxisKey), i);\n      parsed.push(parseValue(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* f */ \"Pb\"])(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    const me = this;\n    me.enableOptionSharing = true;\n    super.initialize();\n    const meta = me._cachedMeta;\n    meta.stack = me.getDataset().stack;\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const vScale = me._cachedMeta.vScale;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = me._getRuler();\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = me.getParsed(i);\n      const vpixels = reset || Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Tb\"])(parsed[vScale.axis]) ? {base, head: base} : me._calculateBarValuePixels(i);\n      const ipixels = me._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (me.index === stack._top || me.index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : undefined,\n        width: horizontal ? undefined : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      me.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(me._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Tb\"])(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(iScale);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: me._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const me = this;\n    const {vScale, _stacked} = me._cachedMeta;\n    const {base: baseValue, minBarLength} = me.options;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* s */ \"cc\"])(value) !== Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* s */ \"cc\"])(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Tb\"])(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n      size = size < 0 ? -minBarLength : minBarLength;\n      if (value === 0) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    const actualBase = baseValue || 0;\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = vScale.getLineWidthForValue(actualBase) / 2;\n      if (size > 0) {\n        base += halfGrid;\n        size -= halfGrid;\n      } else if (size < 0) {\n        base -= halfGrid;\n        size += halfGrid;\n      }\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const me = this;\n    const scale = ruler.scale;\n    const options = me.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"fc\"])(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? me._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* k */ \"Ub\"])(chart.ctx, chart.chartArea);\n    for (; i < ilen; ++i) {\n      if (me.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(me._ctx);\n      }\n    }\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* m */ \"Wb\"])(chart.ctx);\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  interaction: {\n    mode: 'index'\n  },\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = [];\n    let i, ilen, item;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      item = data[i];\n      parsed.push({\n        x: xScale.parse(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* f */ \"Pb\"])(item, xAxisKey), i),\n        y: yScale.parse(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* f */ \"Pb\"])(item, yAxisKey), i),\n        _custom: item && item.r && +item.r\n      });\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const {data, _parsed} = this._cachedMeta;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = me.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const me = this;\n    const points = me._cachedMeta.data;\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {xScale, yScale} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && me.getParsed(i);\n      const x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(parsed.x);\n      const y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(parsed.y);\n      const properties = {\n        x,\n        y,\n        skip: isNaN(x) || isNaN(y)\n      };\n      if (includeOptions) {\n        properties.options = me.resolveDataElementOptions(i, mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      me.updateElement(point, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"fc\"])(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"]) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* q */ \"ac\"])(angle, startAngle, endAngle) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* q */ \"ac\"])(angle, startAngle, endAngle) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* H */ \"i\"], startY, endY);\n    const minX = calcMin(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* P */ \"q\"], startX, endX);\n    const minY = calcMin(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* P */ \"q\"] + _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* H */ \"i\"], startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    let i, ilen;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      meta._parsed[i] = +data[i];\n    }\n  }\n  _getRotation() {\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* t */ \"dc\"])(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* t */ \"dc\"])(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"];\n    let max = -_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"];\n    const me = this;\n    for (let i = 0; i < me.chart.data.datasets.length; ++i) {\n      if (me.chart.isDatasetVisible(i)) {\n        const controller = me.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const me = this;\n    const chart = me.chart;\n    const {chartArea} = chart;\n    const meta = me._cachedMeta;\n    const arcs = meta.data;\n    const spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs);\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* n */ \"Xb\"])(me.options.cutout, maxSize), 1);\n    const chartWeight = me._getRingWeight(me.index);\n    const {circumference, rotation} = me._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* o */ \"Yb\"])(me.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\n    me.offsetX = offsetX * outerRadius;\n    me.offsetY = offsetY * outerRadius;\n    meta.total = me.calculateTotal();\n    me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\n    me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\n    me.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const circumference = me._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null) {\n      return 0;\n    }\n    return me.calculateCircumference(meta._parsed[i] * circumference / _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"]);\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : me.innerRadius;\n    const outerRadius = animateScale ? 0 : me.outerRadius;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    let startAngle = me._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += me._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = me._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + me.offsetX,\n        y: centerY + me.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      startAngle += circumference;\n      me.updateElement(arc, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i)) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"] * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* p */ \"Zb\"])(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    const me = this;\n    let max = 0;\n    const chart = me.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          if (controller !== me) {\n            controller.configure();\n          }\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"fc\"])(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  indexAxis: 'r',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"Lb\"])(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = me.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    me._drawStart = start;\n    me._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = me.resolveDatasetElementOptions(mode);\n    if (!me.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = me.options.segment;\n    me.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    me.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {xScale, yScale, _stacked} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const spanGaps = me.options.spanGaps;\n    const maxGapLength = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* w */ \"gc\"])(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && me.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = me.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Tb\"])(parsed.y);\n      const x = properties.x = xScale.getPixelForValue(parsed.x, i);\n      const y = properties.y = reset || nullData ? yScale.getBasePixel() : yScale.getPixelForValue(_stacked ? me.applyStack(yScale, parsed, _stacked) : parsed.y, i);\n      properties.skip = isNaN(x) || isNaN(y) || nullData;\n      properties.stop = i > 0 && (parsed.x - prevParsed.x) > maxGapLength;\n      properties.parsed = parsed;\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      if (!directUpdate) {\n        me.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(me.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    this._cachedMeta.dataset.updateControlPoints(this.chart.chartArea);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* x */ \"hc\"])(Math.min(\n        Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* y */ \"ic\"])(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* y */ \"ic\"])(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* x */ \"hc\"])(Math.max(\n        Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* y */ \"ic\"])(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* y */ \"ic\"])(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const me = this;\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    me.outerRadius = outerRadius - (radiusLength * me.index);\n    me.innerRadius = me.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const dataset = me.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = me._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* P */ \"q\"];\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / me.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += me._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + me._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: me.resolveDataElementOptions(i, mode)\n      };\n      me.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* t */ \"dc\"])(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const me = this;\n    const vScale = me._cachedMeta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = me.resolveDatasetElementOptions(mode);\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      me.updateElement(line, undefined, properties, mode);\n    }\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    const scale = me._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = me.resolveDataElementOptions(i, mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      me.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: either no adapter can be found or an incomplete integration was provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* z */ \"jc\"])(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* B */ \"c\"] : _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* y */ \"ic\"];\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* A */ \"b\"])(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  let items = [];\n  if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* A */ \"b\"])(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos: box.position,\n      horizontal: box.isHorizontal(),\n      weight: box.weight\n    });\n  }\n  return layoutBoxes;\n}\nfunction setLayoutDims(layouts, params) {\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    if (layout.horizontal) {\n      layout.width = layout.box.fullSize && params.availableWidth;\n      layout.height = params.hBoxMaxHeight;\n    } else {\n      layout.width = params.vBoxMaxWidth;\n      layout.height = layout.box.fullSize && params.availableHeight;\n    }\n  }\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout) {\n  const box = layout.box;\n  const maxPadding = chartArea.maxPadding;\n  if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Sb\"])(layout.pos)) {\n    if (layout.size) {\n      chartArea[layout.pos] -= layout.size;\n    }\n    layout.size = layout.horizontal ? box.height : box.width;\n    chartArea[layout.pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params) || changed;\n}\nfunction placeBoxes(boxes, chartArea, params) {\n  const userPadding = params.padding;\n  let x = chartArea.x;\n  let y = chartArea.y;\n  let i, ilen, layout, box;\n  for (i = 0, ilen = boxes.length; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    if (layout.horizontal) {\n      box.left = box.fullSize ? userPadding.left : chartArea.left;\n      box.right = box.fullSize ? params.outerWidth - userPadding.right : chartArea.left + chartArea.w;\n      box.top = y;\n      box.bottom = y + box.height;\n      box.width = box.right - box.left;\n      y = box.bottom;\n    } else {\n      box.left = x;\n      box.right = x + box.width;\n      box.top = box.fullSize ? userPadding.top : chartArea.top;\n      box.bottom = box.fullSize ? params.outerHeight - userPadding.right : chartArea.top + chartArea.h;\n      box.height = box.bottom - box.top;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"Nb\"].set('layout', {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* C */ \"d\"])(chart.options.layout.padding);\n    const availableWidth = width - padding.width;\n    const availableHeight = height - padding.height;\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* C */ \"d\"])(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params);\n    fitBoxes(verticalBoxes, chartArea, params);\n    if (fitBoxes(horizontalBoxes, chartArea, params)) {\n      fitBoxes(verticalBoxes, chartArea, params);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* G */ \"h\"])(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* G */ \"h\"])(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* J */ \"k\"] ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* z */ \"jc\"])(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* F */ \"g\"])(canvas);\n  const element = container || canvas;\n  const observer = new MutationObserver(entries => {\n    const parent = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* F */ \"g\"])(element);\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.addedNodes.length; i++) {\n        const added = entry.addedNodes[i];\n        if (added === element || added === parent) {\n          listener(entry.target);\n        }\n      }\n    });\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* F */ \"g\"])(canvas);\n  if (!container) {\n    return;\n  }\n  const observer = new MutationObserver(entries => {\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.removedNodes.length; i++) {\n        if (entry.removedNodes[i] === canvas) {\n          listener();\n          break;\n        }\n      }\n    });\n  });\n  observer.observe(container, {childList: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* F */ \"g\"])(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* I */ \"j\"])((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* I */ \"j\"])((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Tb\"])(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* E */ \"f\"])(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* F */ \"g\"])(canvas);\n    return !!(container && Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* F */ \"g\"])(container));\n  }\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* w */ \"gc\"])(this.x) && Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* w */ \"gc\"])(this.y);\n  }\n  getProps(props, final) {\n    const me = this;\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return me;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"Lb\"])(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* K */ \"l\"])(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* p */ \"Zb\"])(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* K */ \"l\"])(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) > 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"Nb\"].set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"Nb\"].route('scale.ticks', 'color', '', 'color');\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"Nb\"].route('scale.grid', 'color', '', 'borderColor');\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"Nb\"].route('scale.grid', 'borderColor', '', 'borderColor');\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"Nb\"].route('scale.title', 'color', '', 'color');\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"Nb\"].describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"Nb\"].describe('scales', {\n  _fallback: 'scale',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Tb\"])(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Tb\"])(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* L */ \"m\"])(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"fc\"])(majorStart, 0);\n  const end = Math.min(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"fc\"])(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(options.font, fallback);\n  const padding = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* C */ \"d\"])(options.padding);\n  const lines = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"Lb\"])(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return Object.assign(Object.create(parent), {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return Object.assign(Object.create(parent), {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* X */ \"y\"])(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right} = scale;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  if (scale.isHorizontal()) {\n    titleX = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(align, left, right);\n    titleY = offsetFromEdge(scale, position, offset);\n    maxWidth = right - left;\n  } else {\n    titleX = offsetFromEdge(scale, position, offset);\n    titleY = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(align, bottom, top);\n    rotation = position === 'left' ? -_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* H */ \"i\"] : _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* H */ \"i\"];\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    const me = this;\n    me.options = options.setContext(me.getContext());\n    me.axis = options.axis;\n    me._userMin = me.parse(options.min);\n    me._userMax = me.parse(options.max);\n    me._suggestedMin = me.parse(options.suggestedMin);\n    me._suggestedMax = me.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(_userMin, _suggestedMin),\n      max: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(_userMax, _suggestedMax),\n      minDefined: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Qb\"])(_userMin),\n      maxDefined: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Qb\"])(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    const me = this;\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = me.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(me, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    return {\n      min: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(min, Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(max, min)),\n      max: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(max, Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(min, max))\n    };\n  }\n  getPadding() {\n    const me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    const sampleSize = tickOpts.sampleSize;\n    me.beforeUpdate();\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.ticks = null;\n    me._labelSizes = null;\n    me._gridLineItems = null;\n    me._labelItems = null;\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions();\n    me._maxLength = me.isHorizontal()\n      ? me.width + margins.left + margins.right\n      : me.height + margins.top + margins.bottom;\n    if (!me._dataLimitsCached) {\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits();\n      me._range = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* O */ \"p\"])(me, me.options.grace);\n      me._dataLimitsCached = true;\n    }\n    me.beforeBuildTicks();\n    me.ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    const samplingEnabled = sampleSize < me.ticks.length;\n    me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\n    me.configure();\n    me.beforeCalculateLabelRotation();\n    me.calculateLabelRotation();\n    me.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      me.ticks = autoSkip(me, me.ticks);\n      me._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      me._convertTicksToLabels(me.ticks);\n    }\n    me.beforeFit();\n    me.fit();\n    me.afterFit();\n    me.afterUpdate();\n  }\n  configure() {\n    const me = this;\n    let reversePixels = me.options.reverse;\n    let startPixel, endPixel;\n    if (me.isHorizontal()) {\n      startPixel = me.left;\n      endPixel = me.right;\n    } else {\n      startPixel = me.top;\n      endPixel = me.bottom;\n      reversePixels = !reversePixels;\n    }\n    me._startPixel = startPixel;\n    me._endPixel = endPixel;\n    me._reversePixels = reversePixels;\n    me._length = endPixel - startPixel;\n    me._alignToPixels = me.options.alignToPixels;\n  }\n  afterUpdate() {\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    const me = this;\n    me.chart.notifyPlugins(name, me.getContext());\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(me.options[name], [me]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(tickOpts.callback, [tick.value, i, ticks], me);\n    }\n    for (i = 0; i < ilen; i++) {\n      if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Tb\"])(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n  }\n  afterTickToLabelConversion() {\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const me = this;\n    const options = me.options;\n    const tickOpts = options.ticks;\n    const numTicks = me.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\n      me.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = me._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* x */ \"hc\"])(me.chart.width - maxLabelWidth, 0, me.maxWidth);\n    tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = me.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Q */ \"r\"])(Math.min(\n        Math.asin(Math.min((labelSizes.highest.height + 6) / tickWidth, 1)),\n        Math.asin(Math.min(maxHeight / maxLabelDiagonal, 1)) - Math.asin(maxLabelHeight / maxLabelDiagonal)\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    me.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const me = this;\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = me;\n    const display = me._isVisible();\n    const isHorizontal = me.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = me.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = me.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && me.ticks.length) {\n        const {first, last, widest, highest} = me._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* t */ \"dc\"])(me.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        me._calculatePadding(first, last, sin, cos);\n      }\n    }\n    me._handleMargins();\n    if (isHorizontal) {\n      me.width = me._length = chart.width - me._margins.left - me._margins.right;\n      me.height = minSize.height;\n    } else {\n      me.width = minSize.width;\n      me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const me = this;\n    const {ticks: {align, padding}, position} = me.options;\n    const isRotated = me.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && me.axis === 'x';\n    if (me.isHorizontal()) {\n      const offsetLeft = me.getPixelForTick(0) - me.left;\n      const offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\n      me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      me.paddingTop = paddingTop + padding;\n      me.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    const me = this;\n    if (me._margins) {\n      me._margins.left = Math.max(me.paddingLeft, me._margins.left);\n      me._margins.top = Math.max(me.paddingTop, me._margins.top);\n      me._margins.right = Math.max(me.paddingRight, me._margins.right);\n      me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\n    }\n  }\n  afterFit() {\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    const me = this;\n    me.beforeTickToLabelConversion();\n    me.generateTickLabels(ticks);\n    me.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    const me = this;\n    let labelSizes = me._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = me.options.ticks.sampleSize;\n      let ticks = me.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Tb\"])(label) && !Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"Lb\"])(label)) {\n        width = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* R */ \"s\"])(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"Lb\"])(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Tb\"])(nestedLabel) && !Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"Lb\"])(nestedLabel)) {\n            width = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* R */ \"s\"])(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    const me = this;\n    if (me._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = me._startPixel + decimal * me._length;\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* S */ \"t\"])(me._alignToPixels ? Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* U */ \"v\"])(me.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const me = this;\n    const ticks = me.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(me.getContext(), index, tick));\n    }\n    return me.$context ||\n\t\t\t(me.$context = createScaleContext(me.chart.getContext(), me));\n  }\n  _tickSize() {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    const rot = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* t */ \"dc\"])(me.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = me._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return me.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const chart = me.chart;\n    const options = me.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* U */ \"v\"])(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(me.bottom);\n      ty1 = me.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(me.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = me.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(me.right);\n      tx1 = me.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(me.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = me.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Sb\"])(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Sb\"])(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    for (i = 0; i < ticksLength; ++i) {\n      const optsAtIndex = grid.setContext(me.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(me, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* U */ \"v\"])(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    me._ticksLength = ticksLength;\n    me._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const options = me.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* t */ \"dc\"])(me.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = me.bottom - hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = me.top + hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Sb\"])(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Sb\"])(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = me.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = me._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = me._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(me.getContext(i));\n      pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\n      font = me._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"Lb\"])(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* C */ \"d\"])(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const me = this;\n    const {position, ticks} = me.options;\n    const rotation = -Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* t */ \"dc\"])(me.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const me = this;\n    const {position, ticks: {crossAlign, mirror, padding}} = me.options;\n    const labelSizes = me._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        textAlign = 'left';\n        x = me.right + padding;\n      } else {\n        x = me.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = me.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        textAlign = 'right';\n        x = me.left + padding;\n      } else {\n        x = me.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = me.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    const me = this;\n    if (me.options.ticks.mirror) {\n      return;\n    }\n    const chart = me.chart;\n    const position = me.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: me.left, bottom: chart.height, right: me.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: me.top, left: 0, bottom: me.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const me = this;\n    const grid = me.options.grid;\n    if (!me._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = me.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(me.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const me = this;\n    const grid = me.options.grid;\n    const ctx = me.ctx;\n    const items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const me = this;\n    const {chart, ctx, options: {grid}} = me;\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(me.getContext(0)).lineWidth;\n    const borderValue = me._borderValue;\n    let x1, x2, y1, y2;\n    if (me.isHorizontal()) {\n      x1 = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* U */ \"v\"])(chart, me.left, axisWidth) - axisWidth / 2;\n      x2 = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* U */ \"v\"])(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* U */ \"v\"])(chart, me.top, axisWidth) - axisWidth / 2;\n      y2 = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* U */ \"v\"])(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = me.ctx;\n    const area = me._computeLabelArea();\n    if (area) {\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* k */ \"Ub\"])(ctx, area);\n    }\n    const items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* V */ \"w\"])(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* m */ \"Wb\"])(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(title.font);\n    const padding = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* C */ \"d\"])(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom') {\n      offset += padding.bottom;\n      if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"Lb\"])(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* V */ \"w\"])(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    const me = this;\n    if (!me._isVisible()) {\n      return;\n    }\n    me.drawBackground();\n    me.drawGrid(chartArea);\n    me.drawBorder();\n    me.drawTitle();\n    me.drawLabels(chartArea);\n  }\n  _layers() {\n    const me = this;\n    const opts = me.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = opts.grid && opts.grid.z || 0;\n    if (!me._isVisible() || me.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw(chartArea) {\n          me.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw(chartArea) {\n        me.drawBackground();\n        me.drawGrid(chartArea);\n        me.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw() {\n        me.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw(chartArea) {\n        me.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const me = this;\n    const metas = me.chart.getSortedVisibleDatasetMetas();\n    const axisID = me.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === me.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(opts.font);\n  }\n  _maxDigits() {\n    const me = this;\n    const fontSize = me._resolveTickFontOptions(0).lineHeight;\n    return me.isHorizontal() ? me.width / fontSize / 0.7 : me.height / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const me = this;\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = me.register(proto);\n    }\n    const items = me.items;\n    const id = item.id;\n    const scope = me.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (me.override) {\n      _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"Nb\"].override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"Nb\"][scope]) {\n      delete _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"Nb\"][scope][id];\n      if (this.override) {\n        delete _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Z */ \"A\"][id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* $ */ \"a\"])(Object.create(null), [\n    parentScope ? _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"Nb\"].get(parentScope) : {},\n    _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"Nb\"].get(scope),\n    item.defaults\n  ]);\n  _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"Nb\"].set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"Nb\"].describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"Nb\"].route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    const me = this;\n    [...args].forEach(arg => {\n      const reg = typedRegistry || me._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === me.plugins && arg.id)) {\n        me._exec(method, reg, arg);\n      } else {\n        Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(arg, item => {\n          const itemReg = typedRegistry || me._getRegistryForType(item);\n          me._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a0 */ \"D\"])(method);\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(component['before' + camelMethod], [], component);\n    registry[method](component);\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    const me = this;\n    if (hook === 'beforeInit') {\n      me._init = me._createDescriptors(chart, true);\n      me._notify(me._init, chart, 'install');\n    }\n    const descriptors = filter ? me._descriptors(chart).filter(filter) : me._descriptors(chart);\n    const result = me._notify(descriptors, chart, hook, args);\n    if (hook === 'destroy') {\n      me._notify(descriptors, chart, 'stop');\n      me._notify(me._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Tb\"])(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"fc\"])(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"Nb\"].datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Z */ \"A\"][config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a6 */ \"J\"])(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Z */ \"A\"][type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a6 */ \"J\"])(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a6 */ \"J\"])(scale, [_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"Nb\"].scales[scale.type], _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"Nb\"].scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"fc\"])(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* f */ \"Pb\"])(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Z */ \"A\"][type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"Nb\"], key));\n      keys.forEach(key => addIfFound(scopes, _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a1 */ \"E\"], key));\n    });\n    const array = [...scopes];\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Z */ \"A\"][type] || {},\n      _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"Nb\"].datasets[type] || {},\n      {type},\n      _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"Nb\"],\n      _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a1 */ \"E\"]\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a2 */ \"F\"])(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a3 */ \"G\"])(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Sb\"])(context)\n      ? Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a3 */ \"G\"])(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a4 */ \"H\"])(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a5 */ \"I\"])(proxy);\n  for (const prop of names) {\n    if ((isScriptable(prop) && Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a2 */ \"F\"])(proxy[prop]))\n      || (isIndexable(prop) && Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"Lb\"])(proxy[prop]))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.2.1\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction getCanvas(item) {\n  if (isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nclass Chart {\n  constructor(item, config) {\n    const me = this;\n    this.config = config = new Config(config);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    this.platform = me._initializePlatform(initialCanvas, config);\n    const context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a7 */ \"K\"])();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._sortedMetasets = [];\n    this.scales = {};\n    this.scale = undefined;\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a8 */ \"L\"])(() => this.update('resize'), options.resizeDelay || 0);\n    instances[me.id] = me;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(me, 'complete', onAnimationsComplete);\n    animator.listen(me, 'progress', onAnimationProgress);\n    me._initialize();\n    if (me.attached) {\n      me.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Tb\"])(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    const me = this;\n    me.notifyPlugins('beforeInit');\n    if (me.options.responsive) {\n      me.resize();\n    } else {\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a9 */ \"M\"])(me, me.options.devicePixelRatio);\n    }\n    me.bindEvents();\n    me.notifyPlugins('afterInit');\n    return me;\n  }\n  _initializePlatform(canvas, config) {\n    if (config.platform) {\n      return new config.platform();\n    } else if (!isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n      return new BasicPlatform();\n    }\n    return new DomPlatform();\n  }\n  clear() {\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aa */ \"lb\"])(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const me = this;\n    const options = me.options;\n    const canvas = me.canvas;\n    const aspectRatio = options.maintainAspectRatio && me.aspectRatio;\n    const newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const oldRatio = me.currentDevicePixelRatio;\n    const newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\n    if (me.width === newSize.width && me.height === newSize.height && oldRatio === newRatio) {\n      return;\n    }\n    me.width = newSize.width;\n    me.height = newSize.height;\n    me._aspectRatio = me.aspectRatio;\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a9 */ \"M\"])(me, newRatio, true);\n    me.notifyPlugins('resize', {size: newSize});\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(options.onResize, [me, newSize], me);\n    if (me.attached) {\n      if (me._doResize()) {\n        me.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const me = this;\n    const options = me.options;\n    const scaleOpts = options.scales;\n    const scales = me.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"fc\"])(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: me.ctx,\n          chart: me\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(scales, (scale) => {\n      layouts.configure(me, scale, scale.options);\n      layouts.addBox(me, scale);\n    });\n  }\n  _updateMetasetIndex(meta, index) {\n    const metasets = this._metasets;\n    const oldIndex = meta.index;\n    if (oldIndex !== index) {\n      metasets[oldIndex] = metasets[index];\n      metasets[index] = meta;\n      meta.index = index;\n    }\n  }\n  _updateMetasets() {\n    const me = this;\n    const metasets = me._metasets;\n    const numData = me.data.datasets.length;\n    const numMeta = metasets.length;\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        me._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const me = this;\n    const {_metasets: metasets, data: {datasets}} = me;\n    if (metasets.length > datasets.length) {\n      delete me._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        me._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const me = this;\n    const newControllers = [];\n    const datasets = me.data.datasets;\n    let i, ilen;\n    me._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = me.getDatasetMeta(i);\n      const type = dataset.type || me.config.type;\n      if (meta.type && meta.type !== type) {\n        me._destroyDatasetMeta(i);\n        meta = me.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\n      meta.order = dataset.order || 0;\n      me._updateMetasetIndex(meta, i);\n      meta.label = '' + dataset.label;\n      meta.visible = me.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"Nb\"].datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(me, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    me._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    const me = this;\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(me.data.datasets, (dataset, datasetIndex) => {\n      me.getDatasetMeta(datasetIndex).controller.reset();\n    }, me);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const me = this;\n    const config = me.config;\n    config.update();\n    me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(me.scales, (scale) => {\n      layouts.removeBox(me, scale);\n    });\n    const animsDisabled = me._animationsDisabled = !me.options.animation;\n    me.ensureScalesHaveIDs();\n    me.buildOrUpdateScales();\n    const existingEvents = new Set(Object.keys(me._listeners));\n    const newEvents = new Set(me.options.events);\n    if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ab */ \"mb\"])(existingEvents, newEvents)) {\n      me.unbindEvents();\n      me.bindEvents();\n    }\n    me._plugins.invalidate();\n    if (me.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = me.buildOrUpdateControllers();\n    me.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\n      const {controller} = me.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    me._minPadding = minPadding;\n    me._updateLayout(minPadding);\n    if (!animsDisabled) {\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    me._updateDatasets(mode);\n    me.notifyPlugins('afterUpdate', {mode});\n    me._layers.sort(compare2Level('z', '_idx'));\n    if (me._lastEvent) {\n      me._eventHandler(me._lastEvent, true);\n    }\n    me.render();\n  }\n  _updateLayout(minPadding) {\n    const me = this;\n    if (me.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(me, me.width, me.height, minPadding);\n    const area = me.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    me._layers = [];\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(me.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      me._layers.push(...box._layers());\n    }, me);\n    me._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    me.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    const me = this;\n    const isFunction = typeof mode === 'function';\n    if (me.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._updateDataset(i, isFunction ? mode({datasetIndex: i}) : mode);\n    }\n    me.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const me = this;\n    const meta = me.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    const me = this;\n    if (me.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(me)) {\n      if (me.attached && !animator.running(me)) {\n        animator.start(me);\n      }\n    } else {\n      me.draw();\n      onAnimationsComplete({chart: me});\n    }\n  }\n  draw() {\n    const me = this;\n    let i;\n    if (me._resizeBeforeDraw) {\n      const {width, height} = me._resizeBeforeDraw;\n      me._resize(width, height);\n      me._resizeBeforeDraw = null;\n    }\n    me.clear();\n    if (me.width <= 0 || me.height <= 0) {\n      return;\n    }\n    if (me.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = me._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const me = this;\n    const metasets = me._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    const me = this;\n    if (me.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = me.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      me._drawDataset(metasets[i]);\n    }\n    me.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const me = this;\n    const ctx = me.ctx;\n    const clip = meta._clip;\n    const area = me.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* k */ \"Ub\"])(ctx, {\n      left: clip.left === false ? 0 : area.left - clip.left,\n      right: clip.right === false ? me.width : area.right + clip.right,\n      top: clip.top === false ? 0 : area.top - clip.top,\n      bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\n    });\n    meta.controller.draw();\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* m */ \"Wb\"])(ctx);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const me = this;\n    const dataset = me.data.datasets[datasetIndex];\n    const metasets = me._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = metasets[datasetIndex] = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = {chart: this, type: 'chart'});\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateDatasetVisibility(datasetIndex, visible) {\n    const me = this;\n    const mode = visible ? 'show' : 'hide';\n    const meta = me.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    me.setDatasetVisibility(datasetIndex, visible);\n    anims.update(meta, {visible});\n    me.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n  }\n  hide(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, false);\n  }\n  show(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const me = this;\n    const meta = me._metasets && me._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n      delete me._metasets[datasetIndex];\n    }\n  }\n  destroy() {\n    const me = this;\n    const {canvas, ctx} = me;\n    let i, ilen;\n    me.stop();\n    animator.remove(me);\n    for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._destroyDatasetMeta(i);\n    }\n    me.config.clearCache();\n    if (canvas) {\n      me.unbindEvents();\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aa */ \"lb\"])(canvas, ctx);\n      me.platform.releaseContext(ctx);\n      me.canvas = null;\n      me.ctx = null;\n    }\n    me.notifyPlugins('destroy');\n    delete instances[me.id];\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(me, type, listener);\n        delete listeners[type];\n      }\n    };\n    let listener = function(e, x, y) {\n      e.offsetX = x;\n      e.offsetY = y;\n      me._eventHandler(e);\n    };\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(me.options.events, (type) => _add(type, listener));\n    if (me.options.responsive) {\n      listener = (width, height) => {\n        if (me.canvas) {\n          me.resize(width, height);\n        }\n      };\n      let detached;\n      const attached = () => {\n        _remove('attach', attached);\n        me.attached = true;\n        me.resize();\n        _add('resize', listener);\n        _add('detach', detached);\n      };\n      detached = () => {\n        me.attached = false;\n        _remove('resize', listener);\n        _add('attach', attached);\n      };\n      if (platform.isAttached(me.canvas)) {\n        attached();\n      } else {\n        detached();\n      }\n    } else {\n      me.attached = true;\n    }\n  }\n  unbindEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    if (!listeners) {\n      return;\n    }\n    me._listeners = {};\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(listeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const me = this;\n    const lastActive = me._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ac */ \"nb\"])(active, lastActive);\n    if (changed) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const me = this;\n    const hoverOptions = me.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      me.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      me.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const me = this;\n    const args = {event: e, replay, cancelable: true};\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.type);\n    if (me.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = me._handleEvent(e, replay);\n    args.cancelable = false;\n    me.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      me.render();\n    }\n    return me;\n  }\n  _handleEvent(e, replay) {\n    const me = this;\n    const {_active: lastActive = [], options} = me;\n    const hoverOptions = options.hover;\n    const useFinalPosition = replay;\n    let active = [];\n    let changed = false;\n    let lastEvent = null;\n    if (e.type !== 'mouseout') {\n      active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n      lastEvent = e.type === 'click' ? me._lastEvent : e;\n    }\n    me._lastEvent = null;\n    if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* A */ \"b\"])(e, me.chartArea, me._minPadding)) {\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(options.onHover, [e, active, me], me);\n      if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n        Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(options.onClick, [e, active, me], me);\n      }\n    }\n    changed = !Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ac */ \"nb\"])(active, lastActive);\n    if (changed || replay) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive, replay);\n    }\n    me._lastEvent = lastEvent;\n    return changed;\n  }\n}\nconst invalidatePlugins = () => Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"Nb\"]\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Z */ \"A\"]\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element) {\n  const {startAngle, endAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* H */ \"i\"], startAngle - _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* H */ \"i\"]);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ae */ \"pb\"])(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* x */ \"hc\"])(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* x */ \"hc\"])(o.innerStart, 0, innerLimit),\n    innerEnd: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* x */ \"hc\"])(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element) {\n  const {x, y, startAngle, endAngle, pixelMargin} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* H */ \"i\"]);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* H */ \"i\"], innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* H */ \"i\"]);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* H */ \"i\"], outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element) {\n  if (element.fullCircles) {\n    element.endAngle = element.startAngle + _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"];\n    pathArc(ctx, element);\n    for (let i = 0; i < element.fullCircles; ++i) {\n      ctx.fill();\n    }\n  }\n  if (!isNaN(element.circumference)) {\n    element.endAngle = element.startAngle + element.circumference % _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"];\n  }\n  pathArc(ctx, element);\n  ctx.fill();\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, endAngle, pixelMargin} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    element.endAngle = element.startAngle + _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"];\n    clipArc(ctx, element);\n    element.endAngle = endAngle;\n    if (element.endAngle === element.startAngle) {\n      element.endAngle += _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"];\n      element.fullCircles--;\n    }\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"], startAngle, true);\n  for (i = 0; i < element.fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"]);\n  for (i = 0; i < element.fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element) {\n  const {options} = element;\n  const inner = options.borderAlign === 'inner';\n  if (!options.borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element);\n  }\n  pathArc(ctx, element);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ad */ \"ob\"])(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const betweenAngles = circumference >= _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"] || Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* q */ \"ac\"])(angle, startAngle, endAngle);\n    const withinRadius = (distance >= innerRadius && distance <= outerRadius);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options;\n    const offset = options.offset || 0;\n    me.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    me.fullCircles = Math.floor(me.circumference / _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"]);\n    if (me.circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    if (offset && me.circumference < _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"]) {\n      const halfAngle = (me.startAngle + me.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    drawArc(ctx, me);\n    drawBorder(ctx, me);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"fc\"])(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"fc\"])(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"fc\"])(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"fc\"])(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"fc\"])(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"fc\"])(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* al */ \"wb\"];\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* am */ \"xb\"];\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ai */ \"tb\"];\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aj */ \"ub\"];\n  }\n  return _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ak */ \"vb\"];\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && line.segments.length === 1) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea) {\n    const me = this;\n    const options = me.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !me._pointsUpdated) {\n      const loop = options.spanGaps ? me._loop : me._fullLoop;\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* af */ \"qb\"])(me._points, options, chartArea, loop);\n      me._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    const me = this;\n    me._points = points;\n    delete me._segments;\n    delete me._path;\n    me._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ag */ \"rb\"])(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const me = this;\n    const options = me.options;\n    const value = point[property];\n    const points = me.points;\n    const segments = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ah */ \"sb\"])(me, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const me = this;\n    const segments = me.segments;\n    const segmentMethod = _getSegmentMethod(me);\n    let loop = me._loop;\n    start = start || 0;\n    count = count || (me.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, me, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const me = this;\n    const options = me.options || {};\n    const points = me.points || [];\n    if (!points.length || !options.borderWidth) {\n      return;\n    }\n    ctx.save();\n    draw(ctx, me, start, count);\n    ctx.restore();\n    if (me.animated) {\n      me._pointsUpdated = false;\n      me._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options;\n    if (me.skip || options.radius < 0.1) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* an */ \"yb\"])(ctx, options, me.x, me.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction parseBorderSkipped(bar) {\n  let edge = bar.options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    return res;\n  }\n  edge = bar.horizontal\n    ? parseEdge(edge, 'left', 'right', bar.base > bar.x)\n    : parseEdge(edge, 'bottom', 'top', bar.base < bar.y);\n  res[edge] = true;\n  return res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : Math.max(Math.min(value, max), min);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = parseBorderSkipped(bar);\n  const o = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ap */ \"Ab\"])(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aq */ \"Bb\"])(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = parseBorderSkipped(bar);\n  const enableBorder = enableBorderRadius || Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Sb\"])(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const options = this.options;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ao */ \"zb\"] : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, outer);\n      ctx.clip();\n      addRectPath(ctx, inner);\n      ctx.fillStyle = options.borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inner);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  enableBorderRadius: true,\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Tb\"])(minIndex) && !Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Tb\"])(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* x */ \"hc\"])(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* y */ \"ic\"])(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* x */ \"hc\"])(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* y */ \"ic\"])(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a */ \"C\"])([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      if (count <= 4 * availableWidth) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Tb\"])(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"fc\"])(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Sb\"])(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Qb\"])(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Sb\"])(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Qb\"])(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"]};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Sb\"])(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach((segment) => {\n    const first = linePoints[segment.start];\n    const last = linePoints[segment.end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {chart, scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(chart, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nconst isLineAndNotInHideAnimation = (meta) => meta.type === 'line' && !meta.hidden;\nfunction getLinesBelow(chart, index) {\n  const below = [];\n  const metas = chart.getSortedVisibleDatasetMetas();\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (isLineAndNotInHideAnimation(meta)) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Qb\"])(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"Lb\"])(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Qb\"])(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* as */ \"Db\"])(start);\n    end = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* as */ \"Db\"])(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    const bounds = getBounds(property, points[segment.start], points[segment.end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[segment.start],\n        end: points[segment.end]\n      });\n      continue;\n    }\n    const targetSegments = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ah */ \"sb\"])(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ar */ \"Cb\"])(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      interpolatedLineTo(ctx, target, end, property);\n    }\n    const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n    const loop = lineLoop && targetLoop;\n    if (!loop) {\n      interpolatedLineTo(ctx, target, start, property);\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* k */ \"Ub\"])(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* m */ \"Wb\"])(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins;\n    me.setDimensions();\n    me.buildLabels();\n    me.fit();\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n  }\n  buildLabels() {\n    const me = this;\n    const labelOpts = me.options.labels || {};\n    let legendItems = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(labelOpts.generateLabels, [me.chart], me) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, me.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, me.chart.data));\n    }\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n    me.legendItems = legendItems;\n  }\n  fit() {\n    const me = this;\n    const {options, ctx} = me;\n    if (!options.display) {\n      me.width = me.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = me._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (me.isHorizontal()) {\n      width = me.maxWidth;\n      height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = me.maxHeight;\n      width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    me.width = Math.min(width, options.maxWidth || me.maxWidth);\n    me.height = Math.min(height, options.maxHeight || me.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxWidth, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const lineWidths = me.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxHeight, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const columnSizes = me.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let top = 0;\n    let col = 0;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + fontSize + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        top = 0;\n        currentColWidth = currentColHeight = 0;\n      }\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += fontSize + padding;\n      hitboxes[i] = {left, top, col, width: itemWidth, height: itemHeight};\n      top += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    const me = this;\n    if (!me.options.display) {\n      return;\n    }\n    const titleHeight = me._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}}} = me;\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(align, me.left + padding, me.right - me.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(align, me.left + padding, me.right - me.lineWidths[row]);\n        }\n        hitbox.top += me.top + titleHeight + padding;\n        hitbox.left = left;\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += me.left + padding;\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    const me = this;\n    if (me.options.display) {\n      const ctx = me.ctx;\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* k */ \"Ub\"])(ctx, me);\n      me._draw();\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* m */ \"Wb\"])(ctx);\n    }\n  }\n  _draw() {\n    const me = this;\n    const {options: opts, columnSizes, lineWidths, ctx} = me;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"Nb\"].color;\n    const rtlHelper = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* at */ \"Eb\"])(opts.rtl, me.left, me.width);\n    const labelFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    me.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"fc\"])(legendItem.lineWidth, 1);\n      ctx.fillStyle = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"fc\"])(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"fc\"])(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"fc\"])(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"fc\"])(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"fc\"])(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"fc\"])(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* an */ \"yb\"])(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aq */ \"Bb\"])(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ao */ \"zb\"])(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* V */ \"w\"])(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: legendItem.textAlign\n      });\n    };\n    const isHorizontal = me.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(align, me.left + padding, me.right - lineWidths[0]),\n        y: me.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: me.left + padding,\n        y: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* au */ \"Fb\"])(me.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    me.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + (fontSize / 2) + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(me.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > me.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(align, me.left + padding, me.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > me.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* av */ \"Gb\"])(textAlign, x + boxWidth + halfFontSize, me.right);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aw */ \"Hb\"])(me.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const me = this;\n    const opts = me.options;\n    const titleOpts = opts.title;\n    const titleFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(titleOpts.font);\n    const titlePadding = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* C */ \"d\"])(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* at */ \"Eb\"])(opts.rtl, me.left, me.width);\n    const ctx = me.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = me.left;\n    let maxWidth = me.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...me.lineWidths);\n      y = me.top + topPaddingPlusHalfFontSize;\n      left = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(opts.align, left, me.right - maxWidth);\n    } else {\n      const maxHeight = me.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\n    }\n    const x = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* X */ \"y\"])(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* V */ \"w\"])(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(titleOpts.font);\n    const titlePadding = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* C */ \"d\"])(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    const me = this;\n    let i, hitBox, lh;\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      lh = me.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          return me.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const me = this;\n    const opts = me.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = me._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = me._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(opts.onLeave, [e, previous, me], me);\n      }\n      me._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(opts.onHover, [e, hoveredItem, me], me);\n      }\n    } else if (hoveredItem) {\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(opts.onClick, [e, hoveredItem, me], me);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* C */ \"d\"])(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const me = this;\n    const opts = me.options;\n    me.left = 0;\n    me.top = 0;\n    if (!opts.display) {\n      me.width = me.height = me.right = me.bottom = 0;\n      return;\n    }\n    me.width = me.right = maxWidth;\n    me.height = me.bottom = maxHeight;\n    const lineCount = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"Lb\"])(opts.text) ? opts.text.length : 1;\n    me._padding = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* C */ \"d\"])(opts.padding);\n    const textSize = lineCount * Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(opts.font).lineHeight + me._padding.height;\n    if (me.isHorizontal()) {\n      me.height = textSize;\n    } else {\n      me.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(align, bottom, top);\n        rotation = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* P */ \"q\"] * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(align, top, bottom);\n        rotation = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* P */ \"q\"] * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + me._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = me._drawArgs(offset);\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* V */ \"w\"])(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* X */ \"y\"])(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ay */ \"Jb\"])(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"Lb\"])(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip._chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(options.bodyFont);\n  const titleFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(options.titleFont);\n  const footerFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* C */ \"d\"])(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2) : 0;\n  Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(body, (bodyItem) => {\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(bodyItem.before, maxLineWidth);\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(bodyItem.lines, maxLineWidth);\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const radiusAndPadding = cornerRadius + caretPadding;\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n  return {\n    x: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* x */ \"hc\"])(x, 0, chart.width - size.width),\n    y: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* x */ \"hc\"])(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* C */ \"d\"])(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return Object.assign(Object.create(parent), {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._chart = config._chart;\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const me = this;\n    const cached = me._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = me._chart;\n    const options = me.options.setContext(me.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(me._chart, opts);\n    if (opts._cacheable) {\n      me._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    const me = this;\n    return me.$context ||\n\t\t\t(me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\n  }\n  getTitle(context, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(me, [context]);\n    const title = callbacks.title.apply(me, [context]);\n    const afterTitle = callbacks.afterTitle.apply(me, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const bodyItems = [];\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\n    const footer = callbacks.footer.apply(me, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const me = this;\n    const active = me._active;\n    const data = me._chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(me._chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(me, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(me, context));\n      labelTextColors.push(scoped.labelTextColor.call(me, context));\n    });\n    me.labelColors = labelColors;\n    me.labelPointStyles = labelPointStyles;\n    me.labelTextColors = labelTextColors;\n    me.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    const active = me._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (me.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(me, active, me._eventPosition);\n      tooltipItems = me._createItems(options);\n      me.title = me.getTitle(tooltipItems, options);\n      me.beforeBody = me.getBeforeBody(tooltipItems, options);\n      me.body = me.getBody(tooltipItems, options);\n      me.afterBody = me.getAfterBody(tooltipItems, options);\n      me.footer = me.getFooter(tooltipItems, options);\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(me._chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\n      me.xAlign = alignment.xAlign;\n      me.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    me._tooltipItems = tooltipItems;\n    me.$context = undefined;\n    if (properties) {\n      me._resolveAnimations().update(me, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(me, {chart: me._chart, tooltip: me, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {cornerRadius, caretSize} = options;\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const me = this;\n    const title = me.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* at */ \"Eb\"])(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const me = this;\n    const labelColors = me.labelColors[i];\n    const labelPointStyle = me.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(options.bodyFont);\n    const colorX = getAlignedX(me, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* an */ \"yb\"])(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* an */ \"yb\"])(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aq */ \"Bb\"])(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ao */ \"zb\"])(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ao */ \"zb\"])(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = me.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const me = this;\n    const {body} = me;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth} = options;\n    const bodyFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* at */ \"Eb\"])(options.rtl, me.x, me.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(me, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(me.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + 1) : (boxWidth + 2)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = me.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        me._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(me.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const me = this;\n    const footer = me.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* at */ \"Eb\"])(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const radius = options.cornerRadius;\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const me = this;\n    const chart = me._chart;\n    const anims = me.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(me, me._active, me._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, me._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        me.xAlign = alignment.xAlign;\n        me.yAlign = alignment.yAlign;\n        me.width = size.width;\n        me.height = size.height;\n        me.caretX = position.x;\n        me.caretY = position.y;\n        me._resolveAnimations().update(me, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    let opacity = me.opacity;\n    if (!opacity) {\n      return;\n    }\n    me._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: me.width,\n      height: me.height\n    };\n    const pt = {\n      x: me.x,\n      y: me.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* C */ \"d\"])(options.padding);\n    const hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      me.drawBackground(pt, ctx, tooltipSize, options);\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* au */ \"Fb\"])(ctx, options.textDirection);\n      pt.y += padding.top;\n      me.drawTitle(pt, ctx, options);\n      me.drawBody(pt, ctx, options);\n      me.drawFooter(pt, ctx, options);\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aw */ \"Hb\"])(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const me = this;\n    const lastActive = me._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me._chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ac */ \"nb\"])(lastActive, active);\n    const positionChanged = me._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      me._active = active;\n      me._eventPosition = eventPosition;\n      me.update(true);\n    }\n  }\n  handleEvent(e, replay) {\n    const me = this;\n    const options = me.options;\n    const lastActive = me._active || [];\n    let changed = false;\n    let active = [];\n    if (e.type !== 'mouseout') {\n      active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n    }\n    const positionChanged = me._positionChanged(active, e);\n    changed = replay || !Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ac */ \"nb\"])(active, lastActive) || positionChanged;\n    if (changed) {\n      me._active = active;\n      if (options.enabled || options.external) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({_chart: chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ax */ \"Ib\"],\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ax */ \"Ib\"],\n      beforeBody: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ax */ \"Ib\"],\n      beforeLabel: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ax */ \"Ib\"],\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Tb\"])(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ax */ \"Ib\"],\n      afterBody: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ax */ \"Ib\"],\n      beforeFooter: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ax */ \"Ib\"],\n      footer: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ax */ \"Ib\"],\n      afterFooter: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ax */ \"Ib\"]\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index) => typeof raw === 'string'\n  ? labels.push(raw) - 1\n  : isNaN(raw) ? null : index;\nfunction findOrAddLabel(labels, raw, index) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* x */ \"hc\"])(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Tb\"])(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"fc\"])(index, raw));\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me.getMinMax(true);\n    if (me.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = me.getLabels().length - 1;\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const min = me.min;\n    const max = me.max;\n    const offset = me.options.offset;\n    const ticks = [];\n    let labels = me.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    me._startValue = me.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const labels = me.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    const me = this;\n    super.configure();\n    if (!me.isHorizontal()) {\n      me._reversePixels = !me._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (typeof value !== 'number') {\n      value = me.parse(value);\n    }\n    return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\n  }\n  getPixelForTick(index) {\n    const me = this;\n    const ticks = me.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return me.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {step, min, max, precision, count, maxTicks, maxDigits, horizontal} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Tb\"])(min);\n  const maxDefined = !Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Tb\"])(max);\n  const countDefined = !Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Tb\"])(count);\n  const minSpacing = (rmax - rmin) / maxDigits;\n  let spacing = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aA */ \"N\"])((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aA */ \"N\"])(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Tb\"])(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  niceMin = Math.floor(rmin / spacing) * spacing;\n  niceMax = Math.ceil(rmax / spacing) * spacing;\n  if (minDefined && maxDefined && step && Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aB */ \"O\"])((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.min((max - min) / spacing, maxTicks);\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aC */ \"P\"])(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  factor = Math.pow(10, Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Tb\"])(precision) ? Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aD */ \"Q\"])(spacing) : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    ticks.push({value: min});\n    if (niceMin <= min) {\n      j++;\n    }\n    if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aC */ \"P\"])(Math.round((niceMin + j * spacing) * factor) / factor, min, minSpacing * (horizontal ? ('' + min).length : 1))) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined) {\n    if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aC */ \"P\"])(ticks[ticks.length - 1].value, max, minSpacing * (horizontal ? ('' + max).length : 1))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Tb\"])(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {beginAtZero, stacked} = me.options;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero || stacked) {\n      const minSign = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* s */ \"cc\"])(min);\n      const maxSign = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* s */ \"cc\"])(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      setMax(max + 1);\n      if (!beginAtZero) {\n        setMin(min - 1);\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  getTickLimit() {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n    } else {\n      maxTicks = me.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = me.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: me._maxDigits(),\n      horizontal: me.isHorizontal()\n    };\n    const dataRange = me._range || me;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* az */ \"Kb\"])(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const me = this;\n    const ticks = me.ticks;\n    let start = me.min;\n    let end = me.max;\n    super.configure();\n    if (me.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    me._startValue = start;\n    me._endValue = end;\n    me._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* p */ \"Zb\"])(value, this.chart.options.locale);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Qb\"])(min) ? min : 0;\n    me.max = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Qb\"])(max) ? max : 1;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const me = this;\n    if (me.isHorizontal()) {\n      return Math.ceil(me.width / 40);\n    }\n    const tickFont = me._resolveTickFontOptions(0);\n    return Math.ceil(me.height / tickFont.lineHeight);\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* K */ \"l\"])(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* K */ \"l\"])(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(generationOptions.min, Math.pow(10, Math.floor(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* K */ \"l\"])(dataRange.min))));\n  let exp = Math.floor(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* K */ \"l\"])(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Qb\"])(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Qb\"])(min) ? Math.max(0, min) : null;\n    me.max = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Qb\"])(max) ? Math.max(0, max) : null;\n    if (me.options.beginAtZero) {\n      me._zero = true;\n    }\n    me.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let min = me.min;\n    let max = me.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* K */ \"l\"])(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const generationOptions = {\n      min: me._userMin,\n      max: me._userMax\n    };\n    const ticks = generateTicks(generationOptions, me);\n    if (opts.bounds === 'ticks') {\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* az */ \"Kb\"])(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined ? '0' : Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* p */ \"Zb\"])(value, this.chart.options.locale);\n  }\n  configure() {\n    const me = this;\n    const start = me.min;\n    super.configure();\n    me._startValue = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* K */ \"l\"])(start);\n    me._valueRange = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* K */ \"l\"])(me.max) - Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* K */ \"l\"])(start);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (value === undefined || value === 0) {\n      value = me.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return me.getPixelForDecimal(value === me.min\n      ? 0\n      : (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* K */ \"l\"])(value) - me._startValue) / me._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const decimal = me.getDecimalForPixel(pixel);\n    return Math.pow(10, me._startValue + decimal * me._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* C */ \"d\"])(tickOpts.backdropPadding);\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"fc\"])(tickOpts.font && tickOpts.font.size, _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"Nb\"].font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, lineHeight, label) {\n  if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"Lb\"])(label)) {\n    return {\n      w: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aE */ \"R\"])(ctx, ctx.font, label),\n      h: label.length * lineHeight\n    };\n  }\n  return {\n    w: ctx.measureText(label).width,\n    h: lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  const furthestAngles = {};\n  let i, textSize, pointPosition;\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale.getLabels().length;\n  for (i = 0; i < valueCount; i++) {\n    const opts = scale.options.pointLabels.setContext(scale.getContext(i));\n    padding[i] = opts.padding;\n    pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    const plFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(opts.font);\n    scale.ctx.font = plFont.string;\n    textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = scale.getIndexAngle(i);\n    const angle = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Q */ \"r\"])(angleRadians);\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  scale._pointLabelItems = [];\n  const opts = scale.options;\n  const tickBackdropHeight = getTickBackdropHeight(opts);\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n  for (i = 0; i < valueCount; i++) {\n    const extra = (i === 0 ? tickBackdropHeight / 2 : 0);\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    const angle = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Q */ \"r\"])(scale.getIndexAngle(i));\n    const size = labelSizes[i];\n    adjustPointPositionForLabelHeight(angle, size, pointLabelPosition);\n    const textAlign = getTextAlignForAngle(angle);\n    let left;\n    if (textAlign === 'left') {\n      left = pointLabelPosition.x;\n    } else if (textAlign === 'center') {\n      left = pointLabelPosition.x - (size.w / 2);\n    } else {\n      left = pointLabelPosition.x - size.w;\n    }\n    const right = left + size.w;\n    scale._pointLabelItems[i] = {\n      x: pointLabelPosition.x,\n      y: pointLabelPosition.y,\n      textAlign,\n      left,\n      top: pointLabelPosition.y,\n      right,\n      bottom: pointLabelPosition.y + size.h,\n    };\n  }\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n  if (angle === 90 || angle === 270) {\n    position.y -= (textSize.h / 2);\n  } else if (angle > 270 || angle < 90) {\n    position.y -= textSize.h;\n  }\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getContext(i));\n    const plFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Tb\"])(backdropColor)) {\n      const padding = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* C */ \"d\"])(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* V */ \"w\"])(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"]);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction numberOrZero(param) {\n  return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* w */ \"gc\"])(param) ? param : 0;\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const me = this;\n    me.width = me.maxWidth;\n    me.height = me.maxHeight;\n    me.paddingTop = getTickBackdropHeight(me.options) / 2;\n    me.xCenter = Math.floor(me.width / 2);\n    me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n    me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(false);\n    me.min = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Qb\"])(min) && !isNaN(min) ? min : 0;\n    me.max = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Qb\"])(max) && !isNaN(max) ? max : 0;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\n    me._pointLabels = me.getLabels().map((value, index) => {\n      const label = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(me.options.pointLabels.callback, [value, index], me);\n      return label || label === 0 ? label : '';\n    });\n  }\n  fit() {\n    const me = this;\n    const opts = me.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(me);\n    } else {\n      me.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n    const me = this;\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n    let radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\n    radiusReductionRight = numberOrZero(radiusReductionRight);\n    radiusReductionTop = numberOrZero(radiusReductionTop);\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\n    me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(\n      Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n      Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n    me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    const me = this;\n    const maxRight = me.width - rightMovement - me.drawingArea;\n    const maxLeft = leftMovement + me.drawingArea;\n    const maxTop = topMovement + me.drawingArea;\n    const maxBottom = (me.height - me.paddingTop) - bottomMovement - me.drawingArea;\n    me.xCenter = Math.floor(((maxLeft + maxRight) / 2) + me.left);\n    me.yCenter = Math.floor(((maxTop + maxBottom) / 2) + me.top + me.paddingTop);\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"] / this.getLabels().length;\n    const startAngle = this.options.startAngle || 0;\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* as */ \"Db\"])(index * angleMultiplier + Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* t */ \"dc\"])(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    const me = this;\n    if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Tb\"])(value)) {\n      return NaN;\n    }\n    const scalingFactor = me.drawingArea / (me.max - me.min);\n    if (me.options.reverse) {\n      return (me.max - value) * scalingFactor;\n    }\n    return (value - me.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Tb\"])(distance)) {\n      return NaN;\n    }\n    const me = this;\n    const scaledDistance = distance / (me.drawingArea / (me.max - me.min));\n    return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\n  }\n  getPointPosition(index, distanceFromCenter) {\n    const me = this;\n    const angle = me.getIndexAngle(index) - _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* H */ \"i\"];\n    return {\n      x: Math.cos(angle) * distanceFromCenter + me.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + me.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const me = this;\n    const {backgroundColor, grid: {circular}} = me.options;\n    if (backgroundColor) {\n      const ctx = me.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const {angleLines, grid} = opts;\n    const labelCount = me.getLabels().length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(me, labelCount);\n    }\n    if (grid.display) {\n      me.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = me.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(me.getContext(index - 1));\n          drawRadiusLine(me, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = me.getLabels().length - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(me.getContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\n        position = me.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(me.xCenter, me.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = me.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(me.xCenter, me.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    me.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(me.getContext(index));\n      const tickFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(optsAtIndex.font);\n      offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* C */ \"d\"])(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* V */ \"w\"])(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Tb\"])(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Qb\"])(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* w */ \"gc\"])(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aG */ \"T\"])(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a6 */ \"J\"])(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const me = this;\n    const options = me.options;\n    const adapter = me._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(me._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(me.getMinMax(false));\n      }\n    }\n    min = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Qb\"])(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Qb\"])(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    me.min = Math.min(min, max - 1);\n    me.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const me = this;\n    const options = me.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      me.min = me._userMin || timestamps[0];\n      me.max = me._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = me.min;\n    const max = me.max;\n    const ticks = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aF */ \"S\"])(timestamps, min, max);\n    me._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min))\n      : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\n    me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined\n      : determineMajorUnit(me._unit);\n    me.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(me, ticks, me._majorUnit);\n  }\n  initOffsets(timestamps) {\n    const me = this;\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (me.options.offset && timestamps.length) {\n      first = me.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* x */ \"hc\"])(start, 0, limit);\n    end = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* x */ \"hc\"])(end, 0, limit);\n    me._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const me = this;\n    const adapter = me._adapter;\n    const min = me.min;\n    const max = me.max;\n    const options = me.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\n    const stepSize = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"fc\"])(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* w */ \"gc\"])(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const adapter = me._adapter;\n    const timeOpts = me.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const me = this;\n    const options = me.options;\n    const formats = options.time.displayFormats;\n    const unit = me._unit;\n    const majorUnit = me._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(formatter, [label, index, ticks], me) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    const me = this;\n    return value === null ? NaN : (value - me.min) / (me.max - me.min);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return me.min + pos * (me.max - me.min);\n  }\n  _getLabelSize(label) {\n    const me = this;\n    const ticksOpts = me.options.ticks;\n    const tickLabelWidth = me.ctx.measureText(label).width;\n    const angle = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* t */ \"dc\"])(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = me._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const me = this;\n    const timeOpts = me.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\n    const size = me._getLabelSize(exampleLabel);\n    const capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    const me = this;\n    let timestamps = me._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = me.getMatchingVisibleMetas();\n    if (me._normalized && metas.length) {\n      return (me._cache.data = metas[0].controller.getAllParsedValues(me));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\n    }\n    return (me._cache.data = me.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const me = this;\n    const timestamps = me._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = me.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(me, labels[i]));\n    }\n    return (me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps));\n  }\n  normalize(values) {\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* _ */ \"B\"])(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    prevSource = Math.floor(val);\n    nextSource = Math.ceil(val);\n    prevTarget = table[prevSource];\n    nextTarget = table[nextSource];\n  } else {\n    const result = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aG */ \"T\"])(table, val);\n    prevTarget = result.lo;\n    nextTarget = result.hi;\n    prevSource = table[prevTarget];\n    nextSource = table[nextTarget];\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._maxIndex = undefined;\n  }\n  initOffsets() {\n    const me = this;\n    const timestamps = me._getTimestampsForTable();\n    me._table = me.buildLookupTable(timestamps);\n    me._maxIndex = me._table.length - 1;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const me = this;\n    const {min, max} = me;\n    if (!timestamps.length) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    const items = [min];\n    let i, ilen, curr;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n    items.push(max);\n    return items;\n  }\n  _getTimestampsForTable() {\n    const me = this;\n    let timestamps = me._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = me.getDataTimestamps();\n    const label = me.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = me.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = me._cache.all = timestamps;\n    return timestamps;\n  }\n  getPixelForValue(value, index) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me._normalized && me._maxIndex > 0 && !Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Tb\"])(index)\n      ? index / me._maxIndex : me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getDecimalForValue(value) {\n    return interpolate(this._table, value) / this._maxIndex;\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(me._table, decimal * this._maxIndex, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\n\n\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/home/runner/work/mapa-vacinacao-c19/mapa-vacinacao-c19/node_modules/chart.js/dist/chart.esm.js"],"names":[],"mappings":";;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACs3D;AAC1zD;;AAE5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,qEAAgB;AAClC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,QAAQ;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,eAAe,6EAAK;AACpB,2BAA2B,6EAAK;AAChC;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,4EAAO;AAChB,iBAAiB,4EAAO;AACxB;AACA;AACA,mBAAmB,qEAAO,gBAAgB,qEAAO;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,4EAAO;AACtB,iBAAiB,4EAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,SAAS;AAC9B,KAAK;AACL;AACA;AACA;AACA;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA,qEAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,qCAAqC,qEAAQ;AAC7C,qEAAQ;AACR;AACA;AACA;AACA,CAAC;AACD,qEAAQ;AACR;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH,CAAC;AACD,qEAAQ;AACR;AACA,CAAC;AACD,qEAAQ;AACR;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,6EAAQ;AACjB;AACA;AACA;AACA;AACA;AACA,WAAW,6EAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,6EAAO;AACd;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE;AACA;AACA;AACA,8BAA8B,QAAQ;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,YAAY,gCAAgC;AAC3F;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,6EAAQ;AACd;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,UAAU;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,UAAU;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,6EAAc,+CAA+C,6EAAI,YAAY,6EAAI;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,UAAU;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,cAAc,GAAG,cAAc,GAAG,wBAAwB;AACtE;AACA;AACA,SAAS,iCAAiC;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,yBAAyB;AAClC,qDAAqD;AACrD,SAAS,oCAAoC;AAC7C;AACA;AACA;AACA;AACA;AACA,iBAAiB,UAAU;AAC3B;AACA,WAAW,+BAA+B;AAC1C,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+EAA+E;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,6EAAc;AAC7C,+BAA+B,6EAAc;AAC7C,+BAA+B,6EAAc;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,6EAAmB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,6EAAQ;AAChB;AACA,KAAK;AACL;AACA,QAAQ,6EAAmB;AAC3B;AACA;AACA;AACA,QAAQ,6EAAiB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,+BAA+B;AAC1C,WAAW,iBAAiB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,UAAU,6EAAO;AACjB;AACA,OAAO,UAAU,6EAAQ;AACzB;AACA,OAAO;AACP;AACA;AACA;AACA,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,UAAU;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA;AACA,6BAA6B,UAAU;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,+BAA+B;AAC1C;AACA;AACA,6BAA6B,UAAU;AACvC;AACA;AACA;AACA,wBAAwB,6EAAgB;AACxC,wBAAwB,6EAAgB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,KAAK;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,UAAU;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD,mBAAmB;AACnB,WAAW,6BAA6B;AACxC;AACA;AACA;AACA;AACA;AACA,cAAc,6EAAc;AAC5B;AACA,eAAe,UAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,QAAQ;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,UAAU;AAC/C;AACA,UAAU,6EAAc;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,6EAAc;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,eAAe,mBAAmB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,6EAAO;AACrD;AACA;AACA;AACA;AACA;AACA,kCAAkC,YAAY;AAC9C;AACA,8BAA8B,qEAAQ;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,WAAW;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,UAAU;AACxC;AACA;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wCAAwC,UAAU;AAClD;AACA;AACA,wBAAwB,4EAAY;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,6EAAO;AACf;AACA;AACA;AACA;AACA,mCAAmC,UAAU;AAC7C;AACA;AACA;AACA;AACA,wCAAwC,UAAU;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,6EAAa;AACnB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,6EAAO;AACb;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,UAAU;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,+BAA+B;AAC1C;AACA;AACA;AACA;AACA,yCAAyC,UAAU;AACnD;AACA;AACA,uCAAuC,6EAAgB;AACvD,6BAA6B,6EAAgB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA,+BAA+B,6EAAa,yBAAyB,iBAAiB;AACtF;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,UAAU;AACzB;AACA;AACA;AACA;AACA;AACA,YAAY,6EAAa;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,UAAU;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,8BAA8B;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,6EAAI,YAAY,6EAAI;AAC7C;AACA;AACA;AACA;AACA,wBAAwB,6EAAa;AACrC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,6EAAc;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,6EAAQ;AACZ,UAAU,UAAU;AACpB;AACA;AACA;AACA;AACA,IAAI,6EAAU;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,+BAA+B;AAC1C;AACA;AACA,yCAAyC,UAAU;AACnD;AACA;AACA,wBAAwB,6EAAgB;AACxC,wBAAwB,6EAAgB;AACxC;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA,iCAAiC,QAAQ;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,WAAW,eAAe;AACzD;AACA;AACA;AACA;AACA;AACA,qBAAqB,6EAAc;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAsB,oEAAG;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,6EAAa;AAClD,qCAAqC,6EAAa;AAClD;AACA,yBAAyB,oEAAO;AAChC,yBAAyB,oEAAE;AAC3B,yBAAyB,oEAAE,GAAG,oEAAO;AACrC;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,UAAU;AACnD;AACA;AACA;AACA;AACA,WAAW,6EAAS;AACpB;AACA;AACA,WAAW,6EAAS;AACpB;AACA;AACA,cAAc,oEAAG;AACjB,eAAe,oEAAG;AAClB;AACA,mBAAmB,mCAAmC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA,4BAA4B,6EAAY;AACxC;AACA,WAAW,wBAAwB;AACnC,WAAW,iCAAiC;AAC5C;AACA;AACA;AACA,wBAAwB,6EAAW;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,oEAAG;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,qBAAqB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,oEAAG;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,6EAAY;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,UAAU;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,UAAU;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,UAAU;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,6EAAc;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,cAAc,6EAAO;AACrB;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,2CAA2C;AACtD;AACA,SAAS,aAAa;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,WAAW,yBAAyB;AACpC;AACA;AACA;AACA;AACA,yBAAyB,6EAAQ;AACjC;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA,uBAAuB,6EAAa;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA,WAAW,iCAAiC;AAC5C;AACA,cAAc,6EAAW;AACzB,QAAQ,6EAAY;AACpB,0CAA0C,6EAAY;AACtD;AACA;AACA;AACA,cAAc,6EAAW;AACzB,QAAQ,6EAAY;AACpB,iCAAiC,6EAAY;AAC7C;AACA,KAAK;AACL;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,SAAS,6BAA6B;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,oEAAE;AAC/D;AACA;AACA;AACA,eAAe,WAAW;AAC1B;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,QAAQ,6EAAS;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mBAAmqB;AAC9B;AACA;AACA;AACA;AACA,yCAAyC,UAAU;AACnD,MAAM,YAAY;AAClB,uCAAuC,UAAU;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,0BAA0B;AACnC;AACA;AACA,iDAAiD,oEAAa,GAAG,qEAAY;AAC7E;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,yCAAyC,UAAU;AACnD,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,4EAAc;AACrB;AACA;AACA;AACA;AACA,kBAAkB,6BAA6B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,4EAAc;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,6BAA6B;AAC7C;AACA,KAAK;AACL,kBAAkB,6BAA6B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,6BAA6B;AAC/C;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,yCAAyC;AAClE;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC,sBAAsB,yCAAyC;AAC/D;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,0CAA0C,UAAU;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,oCAAoC,UAAU;AAC9C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,6EAAQ;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,UAAU;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,UAAU;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,oBAAoB,4EAAS;AAC7B;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAI;AACR;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,uCAAuC;AACvC,iCAAiC,4EAAS;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAI;AACR;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,4EAAY;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,4BAA4B,4EAAY;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,oEAA4B,IAAI,cAAc;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,KAAK,GAAG,6EAAqB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4EAAc;AAC5C;AACA;AACA,mBAAmB,4EAAc;AACjC;AACA,qBAAqB,6BAA6B;AAClD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH,8BAA8B,+BAA+B;AAC7D;AACA;AACA;AACA;AACA,8BAA8B,4EAAc;AAC5C;AACA;AACA;AACA;AACA;AACA,qBAAqB,+BAA+B;AACpD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH,+BAA+B,gBAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4EAAc;AAC5C;AACA;AACA;AACA,iBAAiB,4EAAS;AAC1B;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,4EAAS;AACzB;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,6EAAa;AACvB;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4EAAc;AACzB;AACA;AACA,sBAAsB,4EAAc;AACpC,2BAA2B,4EAAc;AACzC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,YAAY;AACZ;AACA;AACA,WAAW,6EAAQ,YAAY,6EAAQ;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,6EAAO;AAClB,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,4EAAK;AAC1B;AACA,qBAAqB;AACrB;AACA,WAAW,6EAAY;AACvB,GAAG;AACH;AACA;AACA;AACA;AACA,wDAAwD,4EAAK;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb,qEAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,qEAAQ;AACR,qEAAQ;AACR,qEAAQ;AACR,qEAAQ;AACR,qEAAQ;AACR;AACA;AACA;AACA,CAAC;AACD,qEAAQ;AACR;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,6EAAa;AAChD,2CAA2C,UAAU;AACrD;AACA;AACA,yCAAyC,6EAAa;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,4EAAU;AAC5B,4CAA4C,UAAU;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,UAAU;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,kBAAkB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,6EAAc;AAC9B,uBAAuB,6EAAc;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,SAAS;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,SAAS;AACrC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,SAAS;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,4EAAI;AACN;AACA;AACA;AACA;AACA,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,4EAAM;AACrB,kBAAkB,4EAAS;AAC3B,gBAAgB,6EAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,YAAY,4EAAkB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,yBAAyB;AAClC;AACA;AACA;AACA,aAAa,4EAAc;AAC3B;AACA;AACA,GAAG;AACH;AACA,aAAa,4EAAc;AAC3B,sCAAsC,oEAAO,GAAG,oEAAO;AACvD;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iDAAiD;AAC1D,eAAe,4EAAe;AAC9B,eAAe,4EAAe;AAC9B,oBAAoB,4EAAe;AACnC,oBAAoB,4EAAe;AACnC;AACA,WAAW,4EAAe;AAC1B,WAAW,4EAAe;AAC1B,kBAAkB,6EAAc;AAChC,kBAAkB,6EAAc;AAChC;AACA;AACA;AACA;AACA,SAAS,iCAAiC;AAC1C;AACA;AACA,cAAc;AACd;AACA;AACA,wCAAwC,UAAU;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4EAAe,MAAM,4EAAe;AAC/C,WAAW,4EAAe,MAAM,4EAAe;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAQ;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,4EAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAQ;AACZ;AACA;AACA,IAAI,4EAAQ;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAQ;AACZ;AACA;AACA;AACA;AACA,IAAI,4EAAQ;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAQ;AACZ;AACA;AACA;AACA;AACA;AACA,oCAAoC,UAAU;AAC9C;AACA,mBAAmB,4EAAQ;AAC3B;AACA,eAAe,UAAU;AACzB,UAAU,6EAAa;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAQ;AACZ;AACA;AACA,IAAI,4EAAQ;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,6EAAW;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,4EAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAQ;AACZ;AACA;AACA,IAAI,4EAAQ;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iBAAiB,mDAAmD;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,eAAe,6BAA6B;AAC5C;AACA,6BAA6B,6EAAS;AACtC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ,eAAe,WAAW;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAQ;AACZ;AACA;AACA,WAAW,eAAe;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,+BAA+B;AAC1C;AACA;AACA;AACA;AACA;AACA,eAAe,YAAY;AAC3B;AACA;AACA;AACA,0DAA0D,QAAQ;AAClE;AACA;AACA,WAAW,6EAAa,YAAY,6EAAO;AAC3C,gBAAgB,4EAAY;AAC5B;AACA,OAAO,UAAU,6EAAO;AACxB,wCAAwC,UAAU;AAClD;AACA,eAAe,6EAAa,kBAAkB,6EAAO;AACrD,oBAAoB,4EAAY;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,mDAAmD;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4EAAW,qBAAqB,4EAAW;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,6EAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,4EAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO,UAAU,6EAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO,UAAU,6EAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,4EAAW;AACpC;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,6BAA6B;AACxC;AACA;AACA,WAAW,mCAAmC;AAC9C;AACA;AACA;AACA,sBAAsB,6EAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO,UAAU,6EAAQ;AACzB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO,UAAU,6EAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,oCAAoC,UAAU;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,6EAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,6BAA6B,4EAAS;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,sBAAsB,6EAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,kBAAkB,6BAA6B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,KAAK;AACL,cAAc;AACd;AACA;AACA;AACA,WAAW,eAAe,gBAAgB,2BAA2B;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,UAAU;AAChD;AACA;AACA;AACA,aAAa,uBAAuB;AACpC,aAAa,uBAAuB;AACpC;AACA;AACA;AACA;AACA;AACA,aAAa,yBAAyB;AACtC,aAAa,yBAAyB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sBAAsB,MAAM;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4EAAW;AACtB,WAAW,4EAAW;AACtB;AACA,KAAK;AACL,WAAW,4EAAW;AACtB,WAAW,4EAAW;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,6EAAQ;AACd;AACA;AACA;AACA,oCAAoC,UAAU;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,4EAAU;AAChB;AACA;AACA,MAAM,6EAAU;AAChB;AACA;AACA;AACA,WAAW,eAAe,0BAA0B;AACpD;AACA;AACA;AACA,iBAAiB,4EAAM;AACvB,oBAAoB,4EAAS;AAC7B;AACA;AACA;AACA;AACA,UAAU,6EAAO;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA,WAAW,mCAAmC;AAC9C,IAAI,4EAAU;AACd;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,UAAU;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4EAAM;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,qEAAQ;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,qEAAQ;AAC/B,aAAa,qEAAQ;AACrB;AACA,eAAe,oEAAS;AACxB;AACA;AACA;AACA;AACA;AACA,uBAAuB,4EAAK;AAC5B,kBAAkB,qEAAQ,sBAAsB;AAChD,IAAI,qEAAQ;AACZ;AACA;AACA,EAAE,qEAAQ;AACV;AACA;AACA;AACA;AACA,IAAI,qEAAQ;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,qEAAQ;AACZ,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,QAAQ,4EAAI;AACZ;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA,wBAAwB,6EAAW;AACnC,IAAI,4EAAQ;AACZ;AACA,IAAI,4EAAQ;AACZ;AACA;AACA,mBAAmB,kCAAkC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,4EAAQ;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,6EAAa;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,6EAAc,6CAA6C;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,oBAAoB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,mDAAmD;AAC1G;;AAEA;AACA,0BAA0B,qEAAQ;AAClC,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,oEAAS,kBAAkB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,6EAAO,wBAAwB,KAAK;AACrD,GAAG;AACH;AACA;AACA;AACA,4BAA4B,oEAAS;AACrC;AACA;AACA;AACA;AACA;AACA,MAAM,6EAAO,eAAe,KAAK;AACjC,KAAK;AACL,GAAG;AACH;AACA;AACA,IAAI,6EAAO,SAAS,qEAAQ,qBAAqB,qEAAQ;AACzD,GAAG;AACH;AACA;AACA;AACA,wDAAwD;AACxD,oBAAoB,6EAAc,oBAAoB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,6EAAgB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,YAAY;AAChC;AACA;AACA;AACA;AACA,yBAAyB,YAAY,cAAc,WAAW;AAC9D;AACA;AACA,sBAAsB,YAAY,eAAe,WAAW;AAC5D,yBAAyB,WAAW;AACpC;AACA;AACA,sBAAsB,YAAY;AAClC;AACA;AACA;AACA;AACA;AACA,yBAAyB,YAAY,GAAG,YAAY;AACpD;AACA,oBAAoB,YAAY,YAAY,YAAY;AACxD,oBAAoB,YAAY;AAChC,oBAAoB,YAAY;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,KAAK,UAAU,GAAG;AAC3C;AACA,mBAAmB,GAAG;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,oEAAS,YAAY;AAClE,6CAA6C,qEAAQ;AACrD,6CAA6C,qEAAW;AACxD,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA;AACA,MAAM,oEAAS,YAAY;AAC3B,MAAM,qEAAQ,qBAAqB;AACnC,OAAO,KAAK;AACZ,MAAM,qEAAQ;AACd,MAAM,qEAAW;AACjB;AACA;AACA;AACA,oBAAoB;AACpB,WAAW,sBAAsB;AACjC;AACA;AACA;AACA,gBAAgB,6EAAU;AAC1B;AACA,gBAAgB,6EAAc;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,6EAAQ;AACnB,QAAQ,6EAAc;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,6EAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,0BAA0B,GAAG,6EAAY;AAClD;AACA,+BAA+B,6EAAU;AACzC,+BAA+B,6EAAO;AACtC;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,4EAAQ;AACV;AACA;AACA;AACA;AACA,EAAE,4EAAQ;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,6EAAG;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,6EAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU,iCAAiC,8BAA8B;AACpF,SAAS,6EAAa;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,MAAM,6EAAW;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAI,8EAAW;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,6EAAW;AACf,gCAAgC,cAAc;AAC9C,IAAI,4EAAQ;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAI;AACR;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,IAAI;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,IAAI,4EAAI;AACR;AACA;AACA;AACA,wBAAwB,6EAAc;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL,IAAI,4EAAI;AACR;AACA;AACA;AACA,KAAK;AACL,IAAI,4EAAI;AACR;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,aAAa;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4BAA4B,UAAU;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,UAAU;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,eAAe,oCAAoC,GAAG,qEAAQ;AAC9D;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAI;AACR;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAI;AACR;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS,8EAAS;AAClB;AACA;AACA;AACA;AACA,0CAA0C,uBAAuB;AACjE;AACA;AACA;AACA;AACA;AACA,mDAAmD,UAAU;AAC7D,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,4EAAI;AACV;AACA,OAAO;AACP;AACA;AACA,qCAAqC,KAAK;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,iBAAiB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAI;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,kDAAkD,uBAAuB;AACzE;AACA;AACA,mDAAmD,UAAU;AAC7D,8CAA8C,gBAAgB;AAC9D;AACA,6CAA6C,KAAK;AAClD;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,iBAAiB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,4BAA4B,UAAU;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,iBAAiB;AACzD;AACA;AACA;AACA,eAAe,uCAAuC;AACtD;AACA;AACA;AACA,UAAU,mBAAmB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,UAAU;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,iBAAiB;AACjE;AACA;AACA;AACA,qCAAqC,QAAQ;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,6EAAQ;AACZ;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,IAAI,6EAAU;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,2BAA2B;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,QAAQ;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA,+CAA+C,UAAU;AACzD;AACA;AACA;AACA;AACA;AACA,MAAM,8EAAW;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAI;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAI;AACR;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,UAAU;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,qBAAqB,8EAAc;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,kCAAkC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,4EAAc;AACtB,MAAM,4EAAQ;AACd;AACA,QAAQ,4EAAQ;AAChB;AACA;AACA,eAAe,8EAAc;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,4EAAI;AACpC;AACA;AACA;AACA;AACA,WAAW,qEAAQ;AACnB,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,WAAW,oEAAS;AACpB,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,SAAS,kEAAkE;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,0CAA0C,oEAAO,eAAe,oEAAO;AACvE;AACA;AACA;AACA;AACA;AACA,SAAS,8EAAiB;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,6EAAW;AACtB;AACA;AACA;AACA;AACA,gBAAgB,6EAAW;AAC3B,cAAc,6EAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,wCAAwC;AACjD;AACA;AACA,SAAS,2CAA2C;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E,oEAAO;AACrF;AACA;AACA;AACA;AACA;AACA,uDAAuD,oEAAO;AAC9D;AACA;AACA;AACA;AACA,8FAA8F,oEAAO;AACrG;AACA;AACA;AACA;AACA;AACA,2DAA2D,oEAAO;AAClE;AACA;AACA;AACA;AACA;AACA,4CAA4C,oEAAG;AAC/C;AACA,mBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA;AACA,oEAAoE,oEAAG;AACvE;AACA;AACA;AACA;AACA;AACA,SAAS,wCAAwC;AACjD;AACA;AACA;AACA;AACA,4CAA4C,oEAAG;AAC/C;AACA;AACA;AACA,0BAA0B,oEAAG;AAC7B;AACA;AACA;AACA;AACA,0CAA0C,oEAAG;AAC7C,aAAa,yBAAyB;AACtC;AACA;AACA;AACA,sDAAsD,oEAAG;AACzD,aAAa,yBAAyB;AACtC;AACA;AACA;AACA;AACA,SAAS,QAAQ;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB,GAAG,8EAAiB,SAAS,qBAAqB;AAC7E,WAAW,8DAA8D;AACzE;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,oEAAG,IAAI,6EAAa;AAC/D;AACA;AACA;AACA;AACA,WAAW,qDAAqD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,oEAAG;AACtD;AACA;AACA;AACA;AACA,qCAAqC,oEAAG;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,6EAAc;AAC9B,kBAAkB,6EAAc;AAChC,uBAAuB,6EAAc;AACrC,iBAAiB,6EAAc;AAC/B,kBAAkB,6EAAc;AAChC,oBAAoB,6EAAc;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sEAAc;AACzB;AACA;AACA,WAAW,sEAAc;AACzB;AACA;AACA;AACA,8CAA8C;AAC9C;AACA,SAAS,mDAAmD;AAC5D,SAAS,qCAAqC;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,gBAAgB;AACzB,SAAS,yBAAyB;AAClC;AACA,OAAO,qBAAqB;AAC5B;AACA,aAAa,WAAW;AACxB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,mBAAmB;AAC5B,SAAS,qBAAqB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sEAAqB;AAChC;AACA;AACA,WAAW,sEAAoB;AAC/B;AACA,SAAS,sEAAY;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,kBAAkB;AAC3B;AACA;AACA;AACA;AACA,2CAA2C,8BAA8B;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,8EAA0B;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,8EAAgB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,8EAAc,MAAM,mCAAmC;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,UAAU;AACjD,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,8BAA8B;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS,cAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,8EAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS,0BAA0B;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,8EAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,mBAAmB;AAC5B;AACA,YAAY,8EAAa;AACzB;AACA;AACA,6CAA6C,6EAAQ;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,kDAAkD,sEAAkB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uBAAuB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uBAAuB;AAClC;AACA,uBAAuB,aAAa;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,WAAW,6EAAa,eAAe,6EAAa;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,YAAY;AACxD;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO;AAChB,SAAS,iCAAiC;AAC1C;AACA,YAAY,6EAAW,CAAC,6EAAY;AACpC;AACA;AACA,YAAY,6EAAW,CAAC,6EAAY;AACpC,GAAG;AACH;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA,UAAU,4EAAO;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB;AACA;AACA;AACA;AACA,UAAU,6EAAa;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,kBAAkB;AAC/E;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,6EAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,6EAAQ;AACd;AACA;AACA;AACA,MAAM,6EAAc;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,UAAU,OAAO;AAC1B;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG,UAAU,6EAAQ;AACrB;AACA,GAAG;AACH;AACA;AACA,MAAM,6EAAc;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,wBAAwB,eAAe,oEAAG;AAC1C;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,YAAY;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG,UAAU,6EAAQ;AACrB;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,mBAAmB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,cAAc;AACjC,mBAAmB,aAAa;AAChC,KAAK;AACL,mBAAmB,cAAc;AACjC,mBAAmB,aAAa;AAChC;AACA,GAAG;AACH;AACA;AACA;AACA,SAAS,0BAA0B;AACnC;AACA;AACA;AACA;AACA,sCAAsC,yBAAyB;AAC/D,iBAAiB,qBAAqB;AACtC;AACA,+BAA+B,kBAAkB;AACjD;AACA;AACA;AACA,0BAA0B,oBAAoB;AAC9C;AACA;AACA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,uBAAuB;AACxC;AACA,WAAW,mBAAmB;AAC9B;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,SAAS,kBAAkB;AAC3B,MAAM,6EAAc;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,6EAAO;AACb;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,6EAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,8EAAe;AAC3B,UAAU,8EAAe;AACzB;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,2BAA2B,8EAAc;AACzC;AACA;AACA,0BAA0B,8EAAa;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,YAAY;AACrB,SAAS,qBAAqB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,qCAAqC;AAC9C;AACA,cAAc,qCAAqC;AACnD,WAAW,QAAQ,wBAAwB,MAAM;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,uDAAuD,8BAA8B;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,wCAAwC;AACjD;AACA;AACA;AACA;AACA,gBAAgB,4CAA4C;AAC5D;AACA;AACA;AACA;AACA,cAAc,4CAA4C;AAC1D;AACA;AACA;AACA;AACA,SAAS,kBAAkB;AAC3B;AACA;AACA;AACA,SAAS,6BAA6B;AACtC;AACA,IAAI,6EAAQ;AACZ,iBAAiB,8CAA8C;AAC/D,IAAI,6EAAU;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,qCAAqC,QAAQ;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,qCAAqC,QAAQ;AAC7C;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO,0CAA0C;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,4EAAQ;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA,sBAAsB,4EAAM;AAC5B;AACA;AACA,WAAW,qBAAqB;AAChC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,yBAAyB,SAAS,UAAU;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,WAAW,0BAA0B,SAAS,UAAU;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,iDAAiD;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,KAAK;AACL;AACA,sBAAsB,iDAAiD;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,oCAAoC,gBAAgB,UAAU;AACzE;AACA;AACA,iBAAiB,4EAAc;AAC/B;AACA;AACA;AACA,iBAAiB,4EAAc;AAC/B;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,gBAAgB,4EAAc;AAC9B;AACA;AACA;AACA,gBAAgB,4EAAc;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,6EAAQ;AACd;AACA,MAAM,6EAAU;AAChB;AACA;AACA;AACA;AACA,WAAW,4CAA4C;AACvD,WAAW,yBAAyB;AACpC,yBAAyB,qEAAQ;AACjC,sBAAsB,8EAAa;AACnC,sBAAsB,4EAAM;AAC5B,WAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gCAAgC;AAC3C;AACA;AACA;AACA;AACA;AACA,wBAAwB,6EAAc;AACtC,sBAAsB,6EAAc;AACpC,oBAAoB,6EAAc;AAClC,2BAA2B,6EAAc;AACzC,qBAAqB,6EAAc;AACnC;AACA,wBAAwB,6EAAc;AACtC,sBAAsB,6EAAc;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,8EAAS;AACjB,OAAO;AACP;AACA;AACA,6BAA6B,8EAAa;AAC1C;AACA;AACA,UAAU,8EAAkB;AAC5B;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,4EAAU;AAChB;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW,4EAAc;AACzB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,WAAW,4EAAc;AACzB;AACA;AACA;AACA,IAAI,8EAAqB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,4EAAc;AACvC;AACA,OAAO;AACP;AACA;AACA,uBAAuB,4EAAc;AACrC;AACA;AACA;AACA,UAAU,8EAAM;AAChB;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL,IAAI,8EAAoB;AACxB;AACA;AACA;AACA;AACA;AACA,sBAAsB,4EAAM;AAC5B,yBAAyB,4EAAS;AAClC;AACA;AACA;AACA,sBAAsB,8EAAa;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,4EAAc;AAC3B,KAAK;AACL;AACA,uCAAuC,4EAAc;AACrD;AACA,cAAc,4EAAc;AAC5B,wCAAwC,4EAAkB;AAC1D;AACA;AACA;AACA;AACA,IAAI,4EAAU;AACd;AACA;AACA;AACA,sBAAsB,4EAAM;AAC5B,yBAAyB,4EAAS;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,4EAAQ;AAChB;AACA;AACA;AACA,QAAQ,4EAAQ;AAChB;AACA,KAAK;AACL,MAAM,4EAAQ;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,+BAA+B;AAC7E;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS,6CAA6C;AACrE;AACA;AACA,8BAA8B,4EAAS;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,6EAAO;AAC7B,kBAAkB,4EAAS;AAC3B,iCAAiC,4EAAM;AACvC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,kCAAkC;AAC7C;AACA;AACA;AACA;AACA,eAAe,4EAAc;AAC7B;AACA;AACA,KAAK;AACL;AACA;AACA,iBAAiB,4EAAc;AAC/B,mBAAmB,oEAAE;AACrB,OAAO;AACP;AACA,iBAAiB,4EAAc;AAC/B,mBAAmB,oEAAE;AACrB;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,4EAAM;AAC3B;AACA;AACA,WAAW,mCAAmC;AAC9C,IAAI,4EAAU;AACd;AACA;AACA;AACA,iBAAiB,4EAAkB;AACnC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,SAAS;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,SAAS;AAC5C;AACA;AACA;AACA,kBAAkB,8EAAqB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,6EAAO;AACf;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,6BAA6B;AACtC;AACA,SAAS,aAAa;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,oBAAoB;AAC7B,SAAS,oBAAoB;AAC7B,mBAAmB,4EAAM;AACzB,oBAAoB,4EAAM;AAC1B,qBAAqB,4EAAM;AAC3B;AACA;AACA;AACA,kBAAkB,4EAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,4EAAI;AACN;AACA,EAAE,4EAAI;AACN;AACA,EAAE,4EAAI;AACN,IAAI,4EAAI;AACR,IAAI,4EAAI;AACR,IAAI,4EAAI;AACR,GAAG;AACH;AACA;AACA,EAAE,4EAAI;AACN;AACA;AACA,UAAU;AACV;AACA;AACA,SAAS,UAAU;AACnB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,SAAS,SAAS;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,SAAS;AAClB,SAAS,+BAA+B,aAAa;AACrD;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAAS;AAChB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,OAAO,UAAU;AACjB;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,SAAS,sCAAsC;AAC/C,SAAS,eAAe;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA,OAAO,6EAAW;AAClB,OAAO,6EAAW;AAClB;AACA;AACA;AACA,kBAAkB,4EAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA,IAAI,4EAAI;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,SAAS;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAI;AACR;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,sCAAsC;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,wBAAwB;AACnC,WAAW,eAAe;AAC1B,WAAW,cAAc;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,8EAAa;AACrC;AACA;AACA;AACA,kBAAkB,4EAAM;AACxB;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,oBAAoB;AAC/B,qBAAqB,4EAAM;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,8EAAS;AACf;AACA;AACA,MAAM,8EAAS;AACf,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,8EAAa;AACxC;AACA;AACA;AACA,QAAQ,8EAAkB;AAC1B;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,QAAQ,8EAAkB;AAC1B;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,2DAA2D;AACtE,qBAAqB,4EAAM;AAC3B;AACA;AACA,sBAAsB,8EAAa;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAI;AACR;AACA;AACA;AACA,mCAAmC,UAAU;AAC7C;AACA;AACA;AACA,MAAM,4EAAI;AACV;AACA;AACA;AACA;AACA;AACA,sCAAsC,UAAU;AAChD;AACA;AACA;AACA,MAAM,4EAAI;AACV;AACA;AACA;AACA,IAAI,4EAAI;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,8EAAa;AACrC;AACA;AACA;AACA;AACA,mBAAmB,4EAAM;AACzB;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,KAAK;AAChB,WAAW,cAAc;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,4EAAS;AAC7B;AACA;AACA;AACA;AACA;AACA,MAAM,8EAAqB;AAC3B;AACA;AACA;AACA;AACA,MAAM,8EAAoB;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,qBAAqB,8EAAc;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,8EAAc;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wBAAwB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,uBAAuB;AAC1D;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,mBAAmB,sEAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,OAAO;AACP,kBAAkB,sEAAI;AACtB,kBAAkB,sEAAI;AACtB,mBAAmB,sEAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,6EAAa;AAC1B;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,kBAAkB,sEAAI;AACtB,iBAAiB,sEAAI;AACrB,oBAAoB,sEAAI;AACxB,cAAc,sEAAI;AAClB,mBAAmB,sEAAI;AACvB;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,6EAAW;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,6EAAa;AACrB;AACA;AACA;AACA;AACA,oCAAoC,6EAAc;AAClD;AACA;AACA;AACA;AACA,WAAW,uBAAuB;AAClC,SAAS,SAAS;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,cAAc;AACvC,kBAAkB,MAAM;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS,kEAAkE;AAC3E;AACA;AACA,SAAS,qBAAqB;AAC9B,sBAAsB,6EAAa;AACnC,sBAAsB,6EAAa;AACnC,wBAAwB,6EAAa;AACrC;AACA,gBAAgB,6EAAO;AACvB;AACA;AACA,aAAa,YAAY,GAAG,YAAY;AACxC;AACA;AACA;AACA,cAAc,6EAAO;AACrB;AACA,OAAO,6EAAa;AACpB;AACA;AACA;AACA;AACA;AACA,0CAA0C,6EAAW;AACrD;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,QAAQ,6EAAY;AACpB;AACA,KAAK;AACL;AACA;AACA;AACA,wBAAwB,6EAAa,cAAc,6EAAc;AACjE;AACA;AACA;AACA;AACA,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA,QAAQ,6EAAY;AACpB;AACA;AACA;AACA,QAAQ,eAAe;AACvB,gBAAgB,6DAA6D;AAC7E;AACA;AACA,QAAQ,6EAAY;AACpB;AACA,KAAK;AACL,kBAAkB,WAAW;AAC7B;AACA,GAAG;AACH,gBAAgB,eAAe;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,6EAAa;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC,WAAW,uBAAuB;AAClC,SAAS,SAAS;AAClB;AACA;AACA;AACA,sBAAsB,6EAAI;AAC1B,sBAAsB,6EAAI;AAC1B;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,wBAAwB;AACjC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,8EAAkB;AACxB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,6EAAY;AACvB;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,6EAAc;AAC3B,aAAa,6EAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oDAAoD,4EAAK;AACzD;AACA;AACA;AACA,4BAA4B,4EAAK;AACjC;AACA;AACA,gBAAgB,4EAAe,gDAAgD,4EAAK;AACpF,uBAAuB,4EAAK;AAC5B;AACA;AACA;AACA,gBAAgB,wCAAwC;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,mBAAmB,4EAAe;AAClC,cAAc,yCAAyC;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,6EAAc;AACzB;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,6EAAc;AAC3B,aAAa,6EAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uBAAuB;AAClC;AACA;AACA;AACA;AACA,kDAAkD,4EAAK;AACvD;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,8EAAkB;AACxB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,6EAAY;AACnD;AACA;AACA;AACA;AACA;AACA,qBAAqB,4EAAK;AAC1B,qBAAqB,4EAAK,WAAW,4EAAK;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,4EAAK;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,4EAAS;AAC7B,WAAW,6EAAc,sCAAsC,qEAAQ;AACvE;AACA;AACA;AACA;AACA,MAAM,6EAAO;AACb;AACA,SAAS,6EAAY;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA,mBAAmB,4EAAM;AACzB;AACA;AACA;AACA;AACA,kBAAkB,4EAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,gBAAgB;AAC7B;AACA;AACA,kBAAkB,4EAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,SAAS,eAAe,aAAa;AACrC,8BAA8B,QAAQ;AACtC;AACA,mBAAmB,4EAAM;AACzB,WAAW,0CAA0C;AACrD,WAAW,cAAc;AACzB,SAAS,6EAAa;AACtB,sBAAsB,4EAAS;AAC/B;AACA;AACA;AACA,IAAI,4EAAU;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,IAAI;AACb;AACA,qDAAqD,oEAAG;AACxD,GAAG;AACH;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iBAAiB;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,6EAAQ;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,6EAAc;AAC3B,aAAa,6EAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,4EAAQ;AAC5B;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,oEAAG;AAC/B;AACA,WAAW,8EAAe,2BAA2B,6EAAS;AAC9D;AACA;AACA;AACA,QAAQ,6EAAa;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,6EAAa;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,oEAAO;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,yBAAyB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wBAAwB,UAAU;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,yCAAyC,QAAQ;AACjD;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4EAAM;AAC7B;AACA;AACA;AACA;AACA,wBAAwB,4EAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,4EAAU;AAChB;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,mCAAmC;AACnD,WAAW,oCAAoC;AAC/C,WAAW,qCAAqC;AAChD,SAAS,uCAAuC;AAChD,QAAQ,wCAAwC;AAChD,SAAS,yCAAyC;AAClD,UAAU,uCAAuC;AACjD,YAAY,uCAAuC;AACnD,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,6EAAa;AACnB;AACA;AACA;AACA,SAAS,0BAA0B;AACnC;AACA;AACA;AACA;AACA,OAAO,6EAAc;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,6EAAQ;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,cAAc;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,6BAA6B;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,UAAU;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,WAAW,OAAO,GAAG,6EAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA,IAAI,6EAAO;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iCAAiC;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,6EAAc;AACxB,UAAU,6EAAc;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,6EAAc;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,YAAY,6EAAW;AACvB,UAAU,6EAAW;AACrB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,6EAAc;AACnC;AACA,uBAAuB,6EAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,YAAY;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4EAAQ;AAC/B;AACA;AACA;AACA,oCAAoC,UAAU;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,6EAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,UAAU;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,UAAU;AAC/C;AACA;AACA;AACA;AACA;AACA,WAAW,4EAAY;AACvB;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,mBAAmB,6EAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA,SAAS,kBAAkB;AAC3B,SAAS;AACT;AACA;AACA;AACA;AACA,yCAAyC,UAAU;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,6EAAa;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEspB","file":"x","sourcesContent":["/*!\n * Chart.js v3.2.1\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, b as isArray, d as defaults, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as isNullOrUndef, k as clipArea, m as unclipArea, _ as _arrayUnique, t as toRadians, n as toPercentage, o as toDimension, T as TAU, p as formatNumber, q as _angleBetween, H as HALF_PI, P as PI, w as isNumber, x as _limitValue, y as _lookupByKey, z as getRelativePosition$1, A as _isPointInArea, B as _rlookupByKey, C as toPadding, D as each, E as getMaximumSize, F as _getParentNode, G as readUsedSize, I as throttled, J as supportsEventListenerOptions, K as log10, L as _factorize, M as finiteOrDefault, N as callback, O as _addGrace, Q as toDegrees, R as _measureText, S as _int16Range, U as _alignPixel, V as renderText, W as toFont, X as _toLeftRightCenter, Y as _alignStartEnd, Z as overrides, $ as merge, a0 as _capitalize, a1 as descriptors, a2 as isFunction, a3 as _attachContext, a4 as _createResolver, a5 as _descriptors, a6 as mergeIf, a7 as uid, a8 as debounce, a9 as retinaScale, aa as clearCanvas, ab as setsEqual, ac as _elementsEqual, ad as getAngleFromPoint, ae as _readValueToProps, af as _updateBezierControlPoints, ag as _computeSegments, ah as _boundSegments, ai as _steppedInterpolation, aj as _bezierInterpolation, ak as _pointInLine, al as _steppedLineTo, am as _bezierCurveTo, an as drawPoint, ao as addRoundedRectPath, ap as toTRBL, aq as toTRBLCorners, ar as _boundSegment, as as _normalizeAngle, at as getRtlAdapter, au as overrideTextDirection, av as _textX, aw as restoreTextDirection, ax as noop, ay as distanceBetweenPoints, az as _setMinAndMaxByKey, aA as niceNum, aB as almostWhole, aC as almostEquals, aD as _decimalPlaces, aE as _longestText, aF as _filterBetween, aG as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    const me = this;\n    if (me._request) {\n      return;\n    }\n    me._running = true;\n    me._request = requestAnimFrame.call(window, () => {\n      me._update();\n      me._request = null;\n      if (me._running) {\n        me._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    const me = this;\n    let remaining = 0;\n    me._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        me._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        me._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    me._lastDate = date;\n    if (remaining === 0) {\n      me._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    const me = this;\n    if (me._active) {\n      me._notify(false);\n      const currentValue = me._target[me._prop];\n      const elapsed = date - me._start;\n      const remain = me._duration - elapsed;\n      me._start = date;\n      me._duration = Math.floor(Math.max(remain, cfg.duration));\n      me._total += elapsed;\n      me._loop = !!cfg.loop;\n      me._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      me._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    const me = this;\n    if (me._active) {\n      me.tick(Date.now());\n      me._active = false;\n      me._notify(false);\n    }\n  }\n  tick(date) {\n    const me = this;\n    const elapsed = date - me._start;\n    const duration = me._duration;\n    const prop = me._prop;\n    const from = me._from;\n    const loop = me._loop;\n    const to = me._to;\n    let factor;\n    me._active = from !== to && (loop || (elapsed < duration));\n    if (!me._active) {\n      me._target[prop] = to;\n      me._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      me._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = me._easing(Math.min(1, Math.max(0, factor)));\n    me._target[prop] = me._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive) {\n  for (const meta of vScale.getMatchingVisibleMetas('bar').reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true);\n    stack._bottom = getLastIndexInStack(stack, vScale, false);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return Object.assign(Object.create(parent),\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[meta.vScale.id] === undefined || stacks[meta.vScale.id][meta.index] === undefined) {\n      return;\n    }\n    delete stacks[meta.vScale.id][meta.index];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this.initialize();\n  }\n  initialize() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    me.addElements();\n  }\n  updateIndex(datasetIndex) {\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = me.getScaleForId(xid);\n    meta.yScale = me.getScaleForId(yid);\n    meta.rScale = me.getScaleForId(rid);\n    meta.iScale = me.getScaleForId(iid);\n    meta.vScale = me.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const me = this;\n    const dataset = me.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    if (isObject(data)) {\n      me._data = convertObjectDataToArray(data);\n    } else if (me._data !== data) {\n      if (me._data) {\n        unlistenArrayEvents(me._data, me);\n        clearStacks(me._cachedMeta);\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, me);\n      }\n      me._data = data;\n    }\n  }\n  addElements() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me._dataCheck();\n    if (me.datasetElementType) {\n      meta.dataset = new me.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    let stackChanged = false;\n    me._dataCheck();\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    me._resyncElements(resetNewElements);\n    if (stackChanged) {\n      updateStacks(me, meta._parsed);\n    }\n  }\n  configure() {\n    const me = this;\n    const config = me.chart.config;\n    const scopeKeys = config.datasetScopeKeys(me._type);\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\n    me.options = config.createResolver(scopes, me.getContext());\n    me._parsing = me.options.parsing;\n  }\n  parse(start, count) {\n    const me = this;\n    const {_cachedMeta: meta, _data: data} = me;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (me._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = me.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = me.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = me.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(me, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n      value = applyStack(stack, parsedValue, this._cachedMeta.index, {all: true});\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = me._getOtherScale(scale);\n    const stack = canStack && meta._stacked && {keys: getSortedDatasetIndices(me.chart, true), values: null};\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, value, parsed, otherValue;\n    function _skip() {\n      parsed = _parsed[i];\n      value = parsed[scale.axis];\n      otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      me.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        me.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me._cachedDataOpts = {};\n    me.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const me = this;\n    const ctx = me._ctx;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = me._drawStart || 0;\n    const count = me._drawCount || (elements.length - start);\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.active) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    let context;\n    if (index >= 0 && index < me._cachedMeta.data.length) {\n      const element = me._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(me.getContext(), index, element));\n      context.parsed = me.getParsed(index);\n      context.raw = dataset.data[index];\n    } else {\n      context = me.$context ||\n        (me.$context = createDatasetContext(me.chart.getContext(), me.index));\n      context.dataset = dataset;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const me = this;\n    const active = mode === 'active';\n    const cache = me._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = me.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = me.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => me.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const me = this;\n    const chart = me.chart;\n    const cache = me._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = me.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\n      const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, me.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const me = this;\n    const numMeta = me._cachedMeta.data.length;\n    const numData = me._data.length;\n    if (numData > numMeta) {\n      me._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      me._removeElements(numData, numMeta - numData);\n    }\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      me.parse(0, count);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new me.dataElementType();\n    }\n    if (me._parsing) {\n      move(meta._parsed);\n    }\n    me.parse(start, count);\n    if (resetNewElements) {\n      me.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const me = this;\n    const meta = me._cachedMeta;\n    if (me._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._insertElements(this.getDataset().data.length - count, count);\n  }\n  _onDataPop() {\n    this._removeElements(this._cachedMeta.data.length - 1, 1);\n  }\n  _onDataShift() {\n    this._removeElements(0, 1);\n  }\n  _onDataSplice(start, count) {\n    this._removeElements(start, count);\n    this._insertElements(start, arguments.length - 2);\n  }\n  _onDataUnshift() {\n    this._insertElements(0, arguments.length);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale) {\n  if (!scale._cache.$bar) {\n    const metas = scale.getMatchingVisibleMetas('bar');\n    let values = [];\n    for (let i = 0, ilen = metas.length; i < ilen; i++) {\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(scale) {\n  const values = getAllScaleValues(scale);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    const me = this;\n    me.enableOptionSharing = true;\n    super.initialize();\n    const meta = me._cachedMeta;\n    meta.stack = me.getDataset().stack;\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const vScale = me._cachedMeta.vScale;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = me._getRuler();\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = me.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : me._calculateBarValuePixels(i);\n      const ipixels = me._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (me.index === stack._top || me.index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : undefined,\n        width: horizontal ? undefined : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      me.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(me._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(iScale);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: me._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const me = this;\n    const {vScale, _stacked} = me._cachedMeta;\n    const {base: baseValue, minBarLength} = me.options;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n      size = size < 0 ? -minBarLength : minBarLength;\n      if (value === 0) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    const actualBase = baseValue || 0;\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = vScale.getLineWidthForValue(actualBase) / 2;\n      if (size > 0) {\n        base += halfGrid;\n        size -= halfGrid;\n      } else if (size < 0) {\n        base -= halfGrid;\n        size += halfGrid;\n      }\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const me = this;\n    const scale = ruler.scale;\n    const options = me.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? me._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    clipArea(chart.ctx, chart.chartArea);\n    for (; i < ilen; ++i) {\n      if (me.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(me._ctx);\n      }\n    }\n    unclipArea(chart.ctx);\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  interaction: {\n    mode: 'index'\n  },\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = [];\n    let i, ilen, item;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      item = data[i];\n      parsed.push({\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\n        _custom: item && item.r && +item.r\n      });\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const {data, _parsed} = this._cachedMeta;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = me.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const me = this;\n    const points = me._cachedMeta.data;\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {xScale, yScale} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && me.getParsed(i);\n      const x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(parsed.x);\n      const y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(parsed.y);\n      const properties = {\n        x,\n        y,\n        skip: isNaN(x) || isNaN(y)\n      };\n      if (includeOptions) {\n        properties.options = me.resolveDataElementOptions(i, mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      me.updateElement(point, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    let i, ilen;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      meta._parsed[i] = +data[i];\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    const me = this;\n    for (let i = 0; i < me.chart.data.datasets.length; ++i) {\n      if (me.chart.isDatasetVisible(i)) {\n        const controller = me.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const me = this;\n    const chart = me.chart;\n    const {chartArea} = chart;\n    const meta = me._cachedMeta;\n    const arcs = meta.data;\n    const spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs);\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(me.options.cutout, maxSize), 1);\n    const chartWeight = me._getRingWeight(me.index);\n    const {circumference, rotation} = me._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(me.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\n    me.offsetX = offsetX * outerRadius;\n    me.offsetY = offsetY * outerRadius;\n    meta.total = me.calculateTotal();\n    me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\n    me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\n    me.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const circumference = me._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null) {\n      return 0;\n    }\n    return me.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : me.innerRadius;\n    const outerRadius = animateScale ? 0 : me.outerRadius;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    let startAngle = me._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += me._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = me._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + me.offsetX,\n        y: centerY + me.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      startAngle += circumference;\n      me.updateElement(arc, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i)) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    const me = this;\n    let max = 0;\n    const chart = me.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          if (controller !== me) {\n            controller.configure();\n          }\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  indexAxis: 'r',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = me.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    me._drawStart = start;\n    me._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = me.resolveDatasetElementOptions(mode);\n    if (!me.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = me.options.segment;\n    me.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    me.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {xScale, yScale, _stacked} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const spanGaps = me.options.spanGaps;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && me.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = me.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed.y);\n      const x = properties.x = xScale.getPixelForValue(parsed.x, i);\n      const y = properties.y = reset || nullData ? yScale.getBasePixel() : yScale.getPixelForValue(_stacked ? me.applyStack(yScale, parsed, _stacked) : parsed.y, i);\n      properties.skip = isNaN(x) || isNaN(y) || nullData;\n      properties.stop = i > 0 && (parsed.x - prevParsed.x) > maxGapLength;\n      properties.parsed = parsed;\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      if (!directUpdate) {\n        me.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(me.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    this._cachedMeta.dataset.updateControlPoints(this.chart.chartArea);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const me = this;\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    me.outerRadius = outerRadius - (radiusLength * me.index);\n    me.innerRadius = me.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const dataset = me.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = me._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / me.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += me._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + me._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: me.resolveDataElementOptions(i, mode)\n      };\n      me.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const me = this;\n    const vScale = me._cachedMeta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = me.resolveDatasetElementOptions(mode);\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      me.updateElement(line, undefined, properties, mode);\n    }\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    const scale = me._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = me.resolveDataElementOptions(i, mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      me.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: either no adapter can be found or an incomplete integration was provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  let items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos: box.position,\n      horizontal: box.isHorizontal(),\n      weight: box.weight\n    });\n  }\n  return layoutBoxes;\n}\nfunction setLayoutDims(layouts, params) {\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    if (layout.horizontal) {\n      layout.width = layout.box.fullSize && params.availableWidth;\n      layout.height = params.hBoxMaxHeight;\n    } else {\n      layout.width = params.vBoxMaxWidth;\n      layout.height = layout.box.fullSize && params.availableHeight;\n    }\n  }\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout) {\n  const box = layout.box;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(layout.pos)) {\n    if (layout.size) {\n      chartArea[layout.pos] -= layout.size;\n    }\n    layout.size = layout.horizontal ? box.height : box.width;\n    chartArea[layout.pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params) || changed;\n}\nfunction placeBoxes(boxes, chartArea, params) {\n  const userPadding = params.padding;\n  let x = chartArea.x;\n  let y = chartArea.y;\n  let i, ilen, layout, box;\n  for (i = 0, ilen = boxes.length; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    if (layout.horizontal) {\n      box.left = box.fullSize ? userPadding.left : chartArea.left;\n      box.right = box.fullSize ? params.outerWidth - userPadding.right : chartArea.left + chartArea.w;\n      box.top = y;\n      box.bottom = y + box.height;\n      box.width = box.right - box.left;\n      y = box.bottom;\n    } else {\n      box.left = x;\n      box.right = x + box.width;\n      box.top = box.fullSize ? userPadding.top : chartArea.top;\n      box.bottom = box.fullSize ? params.outerHeight - userPadding.right : chartArea.top + chartArea.h;\n      box.height = box.bottom - box.top;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = width - padding.width;\n    const availableHeight = height - padding.height;\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params);\n    fitBoxes(verticalBoxes, chartArea, params);\n    if (fitBoxes(horizontalBoxes, chartArea, params)) {\n      fitBoxes(verticalBoxes, chartArea, params);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  const element = container || canvas;\n  const observer = new MutationObserver(entries => {\n    const parent = _getParentNode(element);\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.addedNodes.length; i++) {\n        const added = entry.addedNodes[i];\n        if (added === element || added === parent) {\n          listener(entry.target);\n        }\n      }\n    });\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const observer = new MutationObserver(entries => {\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.removedNodes.length; i++) {\n        if (entry.removedNodes[i] === canvas) {\n          listener();\n          break;\n        }\n      }\n    });\n  });\n  observer.observe(container, {childList: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && _getParentNode(container));\n  }\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const me = this;\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return me;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) > 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return Object.assign(Object.create(parent), {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return Object.assign(Object.create(parent), {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right} = scale;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    titleY = offsetFromEdge(scale, position, offset);\n    maxWidth = right - left;\n  } else {\n    titleX = offsetFromEdge(scale, position, offset);\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    const me = this;\n    me.options = options.setContext(me.getContext());\n    me.axis = options.axis;\n    me._userMin = me.parse(options.min);\n    me._userMax = me.parse(options.max);\n    me._suggestedMin = me.parse(options.suggestedMin);\n    me._suggestedMax = me.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    const me = this;\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = me.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(me, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    const me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    const sampleSize = tickOpts.sampleSize;\n    me.beforeUpdate();\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.ticks = null;\n    me._labelSizes = null;\n    me._gridLineItems = null;\n    me._labelItems = null;\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions();\n    me._maxLength = me.isHorizontal()\n      ? me.width + margins.left + margins.right\n      : me.height + margins.top + margins.bottom;\n    if (!me._dataLimitsCached) {\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits();\n      me._range = _addGrace(me, me.options.grace);\n      me._dataLimitsCached = true;\n    }\n    me.beforeBuildTicks();\n    me.ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    const samplingEnabled = sampleSize < me.ticks.length;\n    me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\n    me.configure();\n    me.beforeCalculateLabelRotation();\n    me.calculateLabelRotation();\n    me.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      me.ticks = autoSkip(me, me.ticks);\n      me._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      me._convertTicksToLabels(me.ticks);\n    }\n    me.beforeFit();\n    me.fit();\n    me.afterFit();\n    me.afterUpdate();\n  }\n  configure() {\n    const me = this;\n    let reversePixels = me.options.reverse;\n    let startPixel, endPixel;\n    if (me.isHorizontal()) {\n      startPixel = me.left;\n      endPixel = me.right;\n    } else {\n      startPixel = me.top;\n      endPixel = me.bottom;\n      reversePixels = !reversePixels;\n    }\n    me._startPixel = startPixel;\n    me._endPixel = endPixel;\n    me._reversePixels = reversePixels;\n    me._length = endPixel - startPixel;\n    me._alignToPixels = me.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    const me = this;\n    me.chart.notifyPlugins(name, me.getContext());\n    callback(me.options[name], [me]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], me);\n    }\n    for (i = 0; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const me = this;\n    const options = me.options;\n    const tickOpts = options.ticks;\n    const numTicks = me.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\n      me.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = me._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(me.chart.width - maxLabelWidth, 0, me.maxWidth);\n    tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = me.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(Math.min((labelSizes.highest.height + 6) / tickWidth, 1)),\n        Math.asin(Math.min(maxHeight / maxLabelDiagonal, 1)) - Math.asin(maxLabelHeight / maxLabelDiagonal)\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    me.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const me = this;\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = me;\n    const display = me._isVisible();\n    const isHorizontal = me.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = me.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = me.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && me.ticks.length) {\n        const {first, last, widest, highest} = me._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(me.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        me._calculatePadding(first, last, sin, cos);\n      }\n    }\n    me._handleMargins();\n    if (isHorizontal) {\n      me.width = me._length = chart.width - me._margins.left - me._margins.right;\n      me.height = minSize.height;\n    } else {\n      me.width = minSize.width;\n      me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const me = this;\n    const {ticks: {align, padding}, position} = me.options;\n    const isRotated = me.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && me.axis === 'x';\n    if (me.isHorizontal()) {\n      const offsetLeft = me.getPixelForTick(0) - me.left;\n      const offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\n      me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      me.paddingTop = paddingTop + padding;\n      me.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    const me = this;\n    if (me._margins) {\n      me._margins.left = Math.max(me.paddingLeft, me._margins.left);\n      me._margins.top = Math.max(me.paddingTop, me._margins.top);\n      me._margins.right = Math.max(me.paddingRight, me._margins.right);\n      me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    const me = this;\n    me.beforeTickToLabelConversion();\n    me.generateTickLabels(ticks);\n    me.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    const me = this;\n    let labelSizes = me._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = me.options.ticks.sampleSize;\n      let ticks = me.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    const me = this;\n    if (me._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = me._startPixel + decimal * me._length;\n    return _int16Range(me._alignToPixels ? _alignPixel(me.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const me = this;\n    const ticks = me.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(me.getContext(), index, tick));\n    }\n    return me.$context ||\n\t\t\t(me.$context = createScaleContext(me.chart.getContext(), me));\n  }\n  _tickSize() {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    const rot = toRadians(me.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = me._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return me.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const chart = me.chart;\n    const options = me.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(me.bottom);\n      ty1 = me.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(me.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = me.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(me.right);\n      tx1 = me.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(me.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = me.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    for (i = 0; i < ticksLength; ++i) {\n      const optsAtIndex = grid.setContext(me.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(me, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    me._ticksLength = ticksLength;\n    me._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const options = me.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(me.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = me.bottom - hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = me.top + hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = me.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = me._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = me._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(me.getContext(i));\n      pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\n      font = me._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const me = this;\n    const {position, ticks} = me.options;\n    const rotation = -toRadians(me.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const me = this;\n    const {position, ticks: {crossAlign, mirror, padding}} = me.options;\n    const labelSizes = me._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        textAlign = 'left';\n        x = me.right + padding;\n      } else {\n        x = me.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = me.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        textAlign = 'right';\n        x = me.left + padding;\n      } else {\n        x = me.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = me.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    const me = this;\n    if (me.options.ticks.mirror) {\n      return;\n    }\n    const chart = me.chart;\n    const position = me.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: me.left, bottom: chart.height, right: me.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: me.top, left: 0, bottom: me.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const me = this;\n    const grid = me.options.grid;\n    if (!me._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = me.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(me.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const me = this;\n    const grid = me.options.grid;\n    const ctx = me.ctx;\n    const items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const me = this;\n    const {chart, ctx, options: {grid}} = me;\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(me.getContext(0)).lineWidth;\n    const borderValue = me._borderValue;\n    let x1, x2, y1, y2;\n    if (me.isHorizontal()) {\n      x1 = _alignPixel(chart, me.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, me.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = me.ctx;\n    const area = me._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom') {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    const me = this;\n    if (!me._isVisible()) {\n      return;\n    }\n    me.drawBackground();\n    me.drawGrid(chartArea);\n    me.drawBorder();\n    me.drawTitle();\n    me.drawLabels(chartArea);\n  }\n  _layers() {\n    const me = this;\n    const opts = me.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = opts.grid && opts.grid.z || 0;\n    if (!me._isVisible() || me.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw(chartArea) {\n          me.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw(chartArea) {\n        me.drawBackground();\n        me.drawGrid(chartArea);\n        me.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw() {\n        me.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw(chartArea) {\n        me.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const me = this;\n    const metas = me.chart.getSortedVisibleDatasetMetas();\n    const axisID = me.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === me.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const me = this;\n    const fontSize = me._resolveTickFontOptions(0).lineHeight;\n    return me.isHorizontal() ? me.width / fontSize / 0.7 : me.height / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const me = this;\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = me.register(proto);\n    }\n    const items = me.items;\n    const id = item.id;\n    const scope = me.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (me.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    const me = this;\n    [...args].forEach(arg => {\n      const reg = typedRegistry || me._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === me.plugins && arg.id)) {\n        me._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || me._getRegistryForType(item);\n          me._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    const me = this;\n    if (hook === 'beforeInit') {\n      me._init = me._createDescriptors(chart, true);\n      me._notify(me._init, chart, 'install');\n    }\n    const descriptors = filter ? me._descriptors(chart).filter(filter) : me._descriptors(chart);\n    const result = me._notify(descriptors, chart, hook, args);\n    if (hook === 'destroy') {\n      me._notify(descriptors, chart, 'stop');\n      me._notify(me._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = [...scopes];\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    if ((isScriptable(prop) && isFunction(proxy[prop]))\n      || (isIndexable(prop) && isArray(proxy[prop]))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.2.1\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction getCanvas(item) {\n  if (isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nclass Chart {\n  constructor(item, config) {\n    const me = this;\n    this.config = config = new Config(config);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    this.platform = me._initializePlatform(initialCanvas, config);\n    const context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._sortedMetasets = [];\n    this.scales = {};\n    this.scale = undefined;\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(() => this.update('resize'), options.resizeDelay || 0);\n    instances[me.id] = me;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(me, 'complete', onAnimationsComplete);\n    animator.listen(me, 'progress', onAnimationProgress);\n    me._initialize();\n    if (me.attached) {\n      me.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    const me = this;\n    me.notifyPlugins('beforeInit');\n    if (me.options.responsive) {\n      me.resize();\n    } else {\n      retinaScale(me, me.options.devicePixelRatio);\n    }\n    me.bindEvents();\n    me.notifyPlugins('afterInit');\n    return me;\n  }\n  _initializePlatform(canvas, config) {\n    if (config.platform) {\n      return new config.platform();\n    } else if (!isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n      return new BasicPlatform();\n    }\n    return new DomPlatform();\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const me = this;\n    const options = me.options;\n    const canvas = me.canvas;\n    const aspectRatio = options.maintainAspectRatio && me.aspectRatio;\n    const newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const oldRatio = me.currentDevicePixelRatio;\n    const newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\n    if (me.width === newSize.width && me.height === newSize.height && oldRatio === newRatio) {\n      return;\n    }\n    me.width = newSize.width;\n    me.height = newSize.height;\n    me._aspectRatio = me.aspectRatio;\n    retinaScale(me, newRatio, true);\n    me.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [me, newSize], me);\n    if (me.attached) {\n      if (me._doResize()) {\n        me.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const me = this;\n    const options = me.options;\n    const scaleOpts = options.scales;\n    const scales = me.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: me.ctx,\n          chart: me\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(me, scale, scale.options);\n      layouts.addBox(me, scale);\n    });\n  }\n  _updateMetasetIndex(meta, index) {\n    const metasets = this._metasets;\n    const oldIndex = meta.index;\n    if (oldIndex !== index) {\n      metasets[oldIndex] = metasets[index];\n      metasets[index] = meta;\n      meta.index = index;\n    }\n  }\n  _updateMetasets() {\n    const me = this;\n    const metasets = me._metasets;\n    const numData = me.data.datasets.length;\n    const numMeta = metasets.length;\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        me._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const me = this;\n    const {_metasets: metasets, data: {datasets}} = me;\n    if (metasets.length > datasets.length) {\n      delete me._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        me._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const me = this;\n    const newControllers = [];\n    const datasets = me.data.datasets;\n    let i, ilen;\n    me._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = me.getDatasetMeta(i);\n      const type = dataset.type || me.config.type;\n      if (meta.type && meta.type !== type) {\n        me._destroyDatasetMeta(i);\n        meta = me.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\n      meta.order = dataset.order || 0;\n      me._updateMetasetIndex(meta, i);\n      meta.label = '' + dataset.label;\n      meta.visible = me.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(me, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    me._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    const me = this;\n    each(me.data.datasets, (dataset, datasetIndex) => {\n      me.getDatasetMeta(datasetIndex).controller.reset();\n    }, me);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const me = this;\n    const config = me.config;\n    config.update();\n    me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    each(me.scales, (scale) => {\n      layouts.removeBox(me, scale);\n    });\n    const animsDisabled = me._animationsDisabled = !me.options.animation;\n    me.ensureScalesHaveIDs();\n    me.buildOrUpdateScales();\n    const existingEvents = new Set(Object.keys(me._listeners));\n    const newEvents = new Set(me.options.events);\n    if (!setsEqual(existingEvents, newEvents)) {\n      me.unbindEvents();\n      me.bindEvents();\n    }\n    me._plugins.invalidate();\n    if (me.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = me.buildOrUpdateControllers();\n    me.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\n      const {controller} = me.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    me._minPadding = minPadding;\n    me._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    me._updateDatasets(mode);\n    me.notifyPlugins('afterUpdate', {mode});\n    me._layers.sort(compare2Level('z', '_idx'));\n    if (me._lastEvent) {\n      me._eventHandler(me._lastEvent, true);\n    }\n    me.render();\n  }\n  _updateLayout(minPadding) {\n    const me = this;\n    if (me.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(me, me.width, me.height, minPadding);\n    const area = me.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    me._layers = [];\n    each(me.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      me._layers.push(...box._layers());\n    }, me);\n    me._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    me.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    const me = this;\n    const isFunction = typeof mode === 'function';\n    if (me.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._updateDataset(i, isFunction ? mode({datasetIndex: i}) : mode);\n    }\n    me.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const me = this;\n    const meta = me.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    const me = this;\n    if (me.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(me)) {\n      if (me.attached && !animator.running(me)) {\n        animator.start(me);\n      }\n    } else {\n      me.draw();\n      onAnimationsComplete({chart: me});\n    }\n  }\n  draw() {\n    const me = this;\n    let i;\n    if (me._resizeBeforeDraw) {\n      const {width, height} = me._resizeBeforeDraw;\n      me._resize(width, height);\n      me._resizeBeforeDraw = null;\n    }\n    me.clear();\n    if (me.width <= 0 || me.height <= 0) {\n      return;\n    }\n    if (me.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = me._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const me = this;\n    const metasets = me._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    const me = this;\n    if (me.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = me.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      me._drawDataset(metasets[i]);\n    }\n    me.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const me = this;\n    const ctx = me.ctx;\n    const clip = meta._clip;\n    const area = me.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    clipArea(ctx, {\n      left: clip.left === false ? 0 : area.left - clip.left,\n      right: clip.right === false ? me.width : area.right + clip.right,\n      top: clip.top === false ? 0 : area.top - clip.top,\n      bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\n    });\n    meta.controller.draw();\n    unclipArea(ctx);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const me = this;\n    const dataset = me.data.datasets[datasetIndex];\n    const metasets = me._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = metasets[datasetIndex] = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = {chart: this, type: 'chart'});\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateDatasetVisibility(datasetIndex, visible) {\n    const me = this;\n    const mode = visible ? 'show' : 'hide';\n    const meta = me.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    me.setDatasetVisibility(datasetIndex, visible);\n    anims.update(meta, {visible});\n    me.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n  }\n  hide(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, false);\n  }\n  show(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const me = this;\n    const meta = me._metasets && me._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n      delete me._metasets[datasetIndex];\n    }\n  }\n  destroy() {\n    const me = this;\n    const {canvas, ctx} = me;\n    let i, ilen;\n    me.stop();\n    animator.remove(me);\n    for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._destroyDatasetMeta(i);\n    }\n    me.config.clearCache();\n    if (canvas) {\n      me.unbindEvents();\n      clearCanvas(canvas, ctx);\n      me.platform.releaseContext(ctx);\n      me.canvas = null;\n      me.ctx = null;\n    }\n    me.notifyPlugins('destroy');\n    delete instances[me.id];\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(me, type, listener);\n        delete listeners[type];\n      }\n    };\n    let listener = function(e, x, y) {\n      e.offsetX = x;\n      e.offsetY = y;\n      me._eventHandler(e);\n    };\n    each(me.options.events, (type) => _add(type, listener));\n    if (me.options.responsive) {\n      listener = (width, height) => {\n        if (me.canvas) {\n          me.resize(width, height);\n        }\n      };\n      let detached;\n      const attached = () => {\n        _remove('attach', attached);\n        me.attached = true;\n        me.resize();\n        _add('resize', listener);\n        _add('detach', detached);\n      };\n      detached = () => {\n        me.attached = false;\n        _remove('resize', listener);\n        _add('attach', attached);\n      };\n      if (platform.isAttached(me.canvas)) {\n        attached();\n      } else {\n        detached();\n      }\n    } else {\n      me.attached = true;\n    }\n  }\n  unbindEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    if (!listeners) {\n      return;\n    }\n    me._listeners = {};\n    each(listeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const me = this;\n    const lastActive = me._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const me = this;\n    const hoverOptions = me.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      me.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      me.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const me = this;\n    const args = {event: e, replay, cancelable: true};\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.type);\n    if (me.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = me._handleEvent(e, replay);\n    args.cancelable = false;\n    me.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      me.render();\n    }\n    return me;\n  }\n  _handleEvent(e, replay) {\n    const me = this;\n    const {_active: lastActive = [], options} = me;\n    const hoverOptions = options.hover;\n    const useFinalPosition = replay;\n    let active = [];\n    let changed = false;\n    let lastEvent = null;\n    if (e.type !== 'mouseout') {\n      active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n      lastEvent = e.type === 'click' ? me._lastEvent : e;\n    }\n    me._lastEvent = null;\n    if (_isPointInArea(e, me.chartArea, me._minPadding)) {\n      callback(options.onHover, [e, active, me], me);\n      if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n        callback(options.onClick, [e, active, me], me);\n      }\n    }\n    changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive, replay);\n    }\n    me._lastEvent = lastEvent;\n    return changed;\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element) {\n  const {startAngle, endAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element) {\n  const {x, y, startAngle, endAngle, pixelMargin} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element) {\n  if (element.fullCircles) {\n    element.endAngle = element.startAngle + TAU;\n    pathArc(ctx, element);\n    for (let i = 0; i < element.fullCircles; ++i) {\n      ctx.fill();\n    }\n  }\n  if (!isNaN(element.circumference)) {\n    element.endAngle = element.startAngle + element.circumference % TAU;\n  }\n  pathArc(ctx, element);\n  ctx.fill();\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, endAngle, pixelMargin} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    element.endAngle = element.startAngle + TAU;\n    clipArc(ctx, element);\n    element.endAngle = endAngle;\n    if (element.endAngle === element.startAngle) {\n      element.endAngle += TAU;\n      element.fullCircles--;\n    }\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < element.fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < element.fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element) {\n  const {options} = element;\n  const inner = options.borderAlign === 'inner';\n  if (!options.borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element);\n  }\n  pathArc(ctx, element);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = (distance >= innerRadius && distance <= outerRadius);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options;\n    const offset = options.offset || 0;\n    me.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    me.fullCircles = Math.floor(me.circumference / TAU);\n    if (me.circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    if (offset && me.circumference < TAU) {\n      const halfAngle = (me.startAngle + me.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    drawArc(ctx, me);\n    drawBorder(ctx, me);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && line.segments.length === 1) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea) {\n    const me = this;\n    const options = me.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !me._pointsUpdated) {\n      const loop = options.spanGaps ? me._loop : me._fullLoop;\n      _updateBezierControlPoints(me._points, options, chartArea, loop);\n      me._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    const me = this;\n    me._points = points;\n    delete me._segments;\n    delete me._path;\n    me._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const me = this;\n    const options = me.options;\n    const value = point[property];\n    const points = me.points;\n    const segments = _boundSegments(me, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const me = this;\n    const segments = me.segments;\n    const segmentMethod = _getSegmentMethod(me);\n    let loop = me._loop;\n    start = start || 0;\n    count = count || (me.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, me, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const me = this;\n    const options = me.options || {};\n    const points = me.points || [];\n    if (!points.length || !options.borderWidth) {\n      return;\n    }\n    ctx.save();\n    draw(ctx, me, start, count);\n    ctx.restore();\n    if (me.animated) {\n      me._pointsUpdated = false;\n      me._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options;\n    if (me.skip || options.radius < 0.1) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, me.x, me.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction parseBorderSkipped(bar) {\n  let edge = bar.options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    return res;\n  }\n  edge = bar.horizontal\n    ? parseEdge(edge, 'left', 'right', bar.base > bar.x)\n    : parseEdge(edge, 'bottom', 'top', bar.base < bar.y);\n  res[edge] = true;\n  return res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : Math.max(Math.min(value, max), min);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = parseBorderSkipped(bar);\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = parseBorderSkipped(bar);\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const options = this.options;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, outer);\n      ctx.clip();\n      addRectPath(ctx, inner);\n      ctx.fillStyle = options.borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inner);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  enableBorderRadius: true,\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      if (count <= 4 * availableWidth) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach((segment) => {\n    const first = linePoints[segment.start];\n    const last = linePoints[segment.end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {chart, scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(chart, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nconst isLineAndNotInHideAnimation = (meta) => meta.type === 'line' && !meta.hidden;\nfunction getLinesBelow(chart, index) {\n  const below = [];\n  const metas = chart.getSortedVisibleDatasetMetas();\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (isLineAndNotInHideAnimation(meta)) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    const bounds = getBounds(property, points[segment.start], points[segment.end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[segment.start],\n        end: points[segment.end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      interpolatedLineTo(ctx, target, end, property);\n    }\n    const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n    const loop = lineLoop && targetLoop;\n    if (!loop) {\n      interpolatedLineTo(ctx, target, start, property);\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins;\n    me.setDimensions();\n    me.buildLabels();\n    me.fit();\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n  }\n  buildLabels() {\n    const me = this;\n    const labelOpts = me.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [me.chart], me) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, me.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, me.chart.data));\n    }\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n    me.legendItems = legendItems;\n  }\n  fit() {\n    const me = this;\n    const {options, ctx} = me;\n    if (!options.display) {\n      me.width = me.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = me._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (me.isHorizontal()) {\n      width = me.maxWidth;\n      height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = me.maxHeight;\n      width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    me.width = Math.min(width, options.maxWidth || me.maxWidth);\n    me.height = Math.min(height, options.maxHeight || me.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxWidth, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const lineWidths = me.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxHeight, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const columnSizes = me.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let top = 0;\n    let col = 0;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + fontSize + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        top = 0;\n        currentColWidth = currentColHeight = 0;\n      }\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += fontSize + padding;\n      hitboxes[i] = {left, top, col, width: itemWidth, height: itemHeight};\n      top += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    const me = this;\n    if (!me.options.display) {\n      return;\n    }\n    const titleHeight = me._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}}} = me;\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n        }\n        hitbox.top += me.top + titleHeight + padding;\n        hitbox.left = left;\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += me.left + padding;\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    const me = this;\n    if (me.options.display) {\n      const ctx = me.ctx;\n      clipArea(ctx, me);\n      me._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const me = this;\n    const {options: opts, columnSizes, lineWidths, ctx} = me;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    me.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: legendItem.textAlign\n      });\n    };\n    const isHorizontal = me.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, me.left + padding, me.right - lineWidths[0]),\n        y: me.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: me.left + padding,\n        y: _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(me.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    me.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + (fontSize / 2) + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(me.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > me.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, me.left + padding, me.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > me.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, me.right);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(me.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const me = this;\n    const opts = me.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const ctx = me.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = me.left;\n    let maxWidth = me.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...me.lineWidths);\n      y = me.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, me.right - maxWidth);\n    } else {\n      const maxHeight = me.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    const me = this;\n    let i, hitBox, lh;\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      lh = me.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          return me.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const me = this;\n    const opts = me.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = me._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = me._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, me], me);\n      }\n      me._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, me], me);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, me], me);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const me = this;\n    const opts = me.options;\n    me.left = 0;\n    me.top = 0;\n    if (!opts.display) {\n      me.width = me.height = me.right = me.bottom = 0;\n      return;\n    }\n    me.width = me.right = maxWidth;\n    me.height = me.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    me._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + me._padding.height;\n    if (me.isHorizontal()) {\n      me.height = textSize;\n    } else {\n      me.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + me._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = me._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip._chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const radiusAndPadding = cornerRadius + caretPadding;\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return Object.assign(Object.create(parent), {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._chart = config._chart;\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const me = this;\n    const cached = me._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = me._chart;\n    const options = me.options.setContext(me.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(me._chart, opts);\n    if (opts._cacheable) {\n      me._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    const me = this;\n    return me.$context ||\n\t\t\t(me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\n  }\n  getTitle(context, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(me, [context]);\n    const title = callbacks.title.apply(me, [context]);\n    const afterTitle = callbacks.afterTitle.apply(me, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\n    const footer = callbacks.footer.apply(me, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const me = this;\n    const active = me._active;\n    const data = me._chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(me._chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(me, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(me, context));\n      labelTextColors.push(scoped.labelTextColor.call(me, context));\n    });\n    me.labelColors = labelColors;\n    me.labelPointStyles = labelPointStyles;\n    me.labelTextColors = labelTextColors;\n    me.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    const active = me._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (me.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(me, active, me._eventPosition);\n      tooltipItems = me._createItems(options);\n      me.title = me.getTitle(tooltipItems, options);\n      me.beforeBody = me.getBeforeBody(tooltipItems, options);\n      me.body = me.getBody(tooltipItems, options);\n      me.afterBody = me.getAfterBody(tooltipItems, options);\n      me.footer = me.getFooter(tooltipItems, options);\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(me._chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\n      me.xAlign = alignment.xAlign;\n      me.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    me._tooltipItems = tooltipItems;\n    me.$context = undefined;\n    if (properties) {\n      me._resolveAnimations().update(me, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(me, {chart: me._chart, tooltip: me, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {cornerRadius, caretSize} = options;\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const me = this;\n    const title = me.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const me = this;\n    const labelColors = me.labelColors[i];\n    const labelPointStyle = me.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(me, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = me.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const me = this;\n    const {body} = me;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(me, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(me.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + 1) : (boxWidth + 2)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = me.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        me._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(me.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const me = this;\n    const footer = me.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const radius = options.cornerRadius;\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const me = this;\n    const chart = me._chart;\n    const anims = me.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(me, me._active, me._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, me._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        me.xAlign = alignment.xAlign;\n        me.yAlign = alignment.yAlign;\n        me.width = size.width;\n        me.height = size.height;\n        me.caretX = position.x;\n        me.caretY = position.y;\n        me._resolveAnimations().update(me, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    let opacity = me.opacity;\n    if (!opacity) {\n      return;\n    }\n    me._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: me.width,\n      height: me.height\n    };\n    const pt = {\n      x: me.x,\n      y: me.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      me.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      me.drawTitle(pt, ctx, options);\n      me.drawBody(pt, ctx, options);\n      me.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const me = this;\n    const lastActive = me._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me._chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = me._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      me._active = active;\n      me._eventPosition = eventPosition;\n      me.update(true);\n    }\n  }\n  handleEvent(e, replay) {\n    const me = this;\n    const options = me.options;\n    const lastActive = me._active || [];\n    let changed = false;\n    let active = [];\n    if (e.type !== 'mouseout') {\n      active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n    }\n    const positionChanged = me._positionChanged(active, e);\n    changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      me._active = active;\n      if (options.enabled || options.external) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({_chart: chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index) => typeof raw === 'string'\n  ? labels.push(raw) - 1\n  : isNaN(raw) ? null : index;\nfunction findOrAddLabel(labels, raw, index) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me.getMinMax(true);\n    if (me.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = me.getLabels().length - 1;\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const min = me.min;\n    const max = me.max;\n    const offset = me.options.offset;\n    const ticks = [];\n    let labels = me.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    me._startValue = me.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const labels = me.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    const me = this;\n    super.configure();\n    if (!me.isHorizontal()) {\n      me._reversePixels = !me._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (typeof value !== 'number') {\n      value = me.parse(value);\n    }\n    return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\n  }\n  getPixelForTick(index) {\n    const me = this;\n    const ticks = me.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return me.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {step, min, max, precision, count, maxTicks, maxDigits, horizontal} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / maxDigits;\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  niceMin = Math.floor(rmin / spacing) * spacing;\n  niceMax = Math.ceil(rmax / spacing) * spacing;\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.min((max - min) / spacing, maxTicks);\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  factor = Math.pow(10, isNullOrUndef(precision) ? _decimalPlaces(spacing) : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    ticks.push({value: min});\n    if (niceMin <= min) {\n      j++;\n    }\n    if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, minSpacing * (horizontal ? ('' + min).length : 1))) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined) {\n    if (almostEquals(ticks[ticks.length - 1].value, max, minSpacing * (horizontal ? ('' + max).length : 1))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {beginAtZero, stacked} = me.options;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero || stacked) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      setMax(max + 1);\n      if (!beginAtZero) {\n        setMin(min - 1);\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  getTickLimit() {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n    } else {\n      maxTicks = me.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = me.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: me._maxDigits(),\n      horizontal: me.isHorizontal()\n    };\n    const dataRange = me._range || me;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const me = this;\n    const ticks = me.ticks;\n    let start = me.min;\n    let end = me.max;\n    super.configure();\n    if (me.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    me._startValue = start;\n    me._endValue = end;\n    me._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? min : 0;\n    me.max = isNumberFinite(max) ? max : 1;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const me = this;\n    if (me.isHorizontal()) {\n      return Math.ceil(me.width / 40);\n    }\n    const tickFont = me._resolveTickFontOptions(0);\n    return Math.ceil(me.height / tickFont.lineHeight);\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    me.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (me.options.beginAtZero) {\n      me._zero = true;\n    }\n    me.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let min = me.min;\n    let max = me.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const generationOptions = {\n      min: me._userMin,\n      max: me._userMax\n    };\n    const ticks = generateTicks(generationOptions, me);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\n  }\n  configure() {\n    const me = this;\n    const start = me.min;\n    super.configure();\n    me._startValue = log10(start);\n    me._valueRange = log10(me.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (value === undefined || value === 0) {\n      value = me.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return me.getPixelForDecimal(value === me.min\n      ? 0\n      : (log10(value) - me._startValue) / me._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const decimal = me.getDecimalForPixel(pixel);\n    return Math.pow(10, me._startValue + decimal * me._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, lineHeight, label) {\n  if (isArray(label)) {\n    return {\n      w: _longestText(ctx, ctx.font, label),\n      h: label.length * lineHeight\n    };\n  }\n  return {\n    w: ctx.measureText(label).width,\n    h: lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  const furthestAngles = {};\n  let i, textSize, pointPosition;\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale.getLabels().length;\n  for (i = 0; i < valueCount; i++) {\n    const opts = scale.options.pointLabels.setContext(scale.getContext(i));\n    padding[i] = opts.padding;\n    pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    const plFont = toFont(opts.font);\n    scale.ctx.font = plFont.string;\n    textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = scale.getIndexAngle(i);\n    const angle = toDegrees(angleRadians);\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  scale._pointLabelItems = [];\n  const opts = scale.options;\n  const tickBackdropHeight = getTickBackdropHeight(opts);\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n  for (i = 0; i < valueCount; i++) {\n    const extra = (i === 0 ? tickBackdropHeight / 2 : 0);\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    const angle = toDegrees(scale.getIndexAngle(i));\n    const size = labelSizes[i];\n    adjustPointPositionForLabelHeight(angle, size, pointLabelPosition);\n    const textAlign = getTextAlignForAngle(angle);\n    let left;\n    if (textAlign === 'left') {\n      left = pointLabelPosition.x;\n    } else if (textAlign === 'center') {\n      left = pointLabelPosition.x - (size.w / 2);\n    } else {\n      left = pointLabelPosition.x - size.w;\n    }\n    const right = left + size.w;\n    scale._pointLabelItems[i] = {\n      x: pointLabelPosition.x,\n      y: pointLabelPosition.y,\n      textAlign,\n      left,\n      top: pointLabelPosition.y,\n      right,\n      bottom: pointLabelPosition.y + size.h,\n    };\n  }\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n  if (angle === 90 || angle === 270) {\n    position.y -= (textSize.h / 2);\n  } else if (angle > 270 || angle < 90) {\n    position.y -= textSize.h;\n  }\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const me = this;\n    me.width = me.maxWidth;\n    me.height = me.maxHeight;\n    me.paddingTop = getTickBackdropHeight(me.options) / 2;\n    me.xCenter = Math.floor(me.width / 2);\n    me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n    me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(false);\n    me.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    me.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\n    me._pointLabels = me.getLabels().map((value, index) => {\n      const label = callback(me.options.pointLabels.callback, [value, index], me);\n      return label || label === 0 ? label : '';\n    });\n  }\n  fit() {\n    const me = this;\n    const opts = me.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(me);\n    } else {\n      me.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n    const me = this;\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n    let radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\n    radiusReductionRight = numberOrZero(radiusReductionRight);\n    radiusReductionTop = numberOrZero(radiusReductionTop);\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\n    me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(\n      Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n      Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n    me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    const me = this;\n    const maxRight = me.width - rightMovement - me.drawingArea;\n    const maxLeft = leftMovement + me.drawingArea;\n    const maxTop = topMovement + me.drawingArea;\n    const maxBottom = (me.height - me.paddingTop) - bottomMovement - me.drawingArea;\n    me.xCenter = Math.floor(((maxLeft + maxRight) / 2) + me.left);\n    me.yCenter = Math.floor(((maxTop + maxBottom) / 2) + me.top + me.paddingTop);\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / this.getLabels().length;\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    const me = this;\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = me.drawingArea / (me.max - me.min);\n    if (me.options.reverse) {\n      return (me.max - value) * scalingFactor;\n    }\n    return (value - me.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const me = this;\n    const scaledDistance = distance / (me.drawingArea / (me.max - me.min));\n    return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\n  }\n  getPointPosition(index, distanceFromCenter) {\n    const me = this;\n    const angle = me.getIndexAngle(index) - HALF_PI;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + me.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + me.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const me = this;\n    const {backgroundColor, grid: {circular}} = me.options;\n    if (backgroundColor) {\n      const ctx = me.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const {angleLines, grid} = opts;\n    const labelCount = me.getLabels().length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(me, labelCount);\n    }\n    if (grid.display) {\n      me.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = me.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(me.getContext(index - 1));\n          drawRadiusLine(me, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = me.getLabels().length - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(me.getContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\n        position = me.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(me.xCenter, me.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = me.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(me.xCenter, me.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    me.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(me.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const me = this;\n    const options = me.options;\n    const adapter = me._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(me._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(me.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    me.min = Math.min(min, max - 1);\n    me.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const me = this;\n    const options = me.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      me.min = me._userMin || timestamps[0];\n      me.max = me._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = me.min;\n    const max = me.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    me._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min))\n      : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\n    me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined\n      : determineMajorUnit(me._unit);\n    me.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(me, ticks, me._majorUnit);\n  }\n  initOffsets(timestamps) {\n    const me = this;\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (me.options.offset && timestamps.length) {\n      first = me.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    me._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const me = this;\n    const adapter = me._adapter;\n    const min = me.min;\n    const max = me.max;\n    const options = me.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const adapter = me._adapter;\n    const timeOpts = me.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const me = this;\n    const options = me.options;\n    const formats = options.time.displayFormats;\n    const unit = me._unit;\n    const majorUnit = me._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], me) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    const me = this;\n    return value === null ? NaN : (value - me.min) / (me.max - me.min);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return me.min + pos * (me.max - me.min);\n  }\n  _getLabelSize(label) {\n    const me = this;\n    const ticksOpts = me.options.ticks;\n    const tickLabelWidth = me.ctx.measureText(label).width;\n    const angle = toRadians(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = me._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const me = this;\n    const timeOpts = me.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\n    const size = me._getLabelSize(exampleLabel);\n    const capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    const me = this;\n    let timestamps = me._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = me.getMatchingVisibleMetas();\n    if (me._normalized && metas.length) {\n      return (me._cache.data = metas[0].controller.getAllParsedValues(me));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\n    }\n    return (me._cache.data = me.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const me = this;\n    const timestamps = me._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = me.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(me, labels[i]));\n    }\n    return (me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    prevSource = Math.floor(val);\n    nextSource = Math.ceil(val);\n    prevTarget = table[prevSource];\n    nextTarget = table[nextSource];\n  } else {\n    const result = _lookup(table, val);\n    prevTarget = result.lo;\n    nextTarget = result.hi;\n    prevSource = table[prevTarget];\n    nextSource = table[nextTarget];\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._maxIndex = undefined;\n  }\n  initOffsets() {\n    const me = this;\n    const timestamps = me._getTimestampsForTable();\n    me._table = me.buildLookupTable(timestamps);\n    me._maxIndex = me._table.length - 1;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const me = this;\n    const {min, max} = me;\n    if (!timestamps.length) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    const items = [min];\n    let i, ilen, curr;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n    items.push(max);\n    return items;\n  }\n  _getTimestampsForTable() {\n    const me = this;\n    let timestamps = me._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = me.getDataTimestamps();\n    const label = me.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = me.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = me._cache.all = timestamps;\n    return timestamps;\n  }\n  getPixelForValue(value, index) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me._normalized && me._maxIndex > 0 && !isNullOrUndef(index)\n      ? index / me._maxIndex : me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getDecimalForValue(value) {\n    return interpolate(this._table, value) / this._maxIndex;\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(me._table, decimal * this._maxIndex, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n"]}}