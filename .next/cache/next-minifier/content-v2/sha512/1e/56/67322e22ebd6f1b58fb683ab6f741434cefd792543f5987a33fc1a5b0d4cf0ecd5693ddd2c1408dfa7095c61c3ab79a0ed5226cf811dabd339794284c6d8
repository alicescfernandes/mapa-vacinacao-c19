{"code":"(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[5],{m0r1:function(t,e,i){\"use strict\";i.d(e,\"a\",(function(){return c})),i.d(e,\"b\",(function(){return re})),i.d(e,\"c\",(function(){return De})),i.d(e,\"d\",(function(){return Zt})),i.d(e,\"e\",(function(){return mt})),i.d(e,\"f\",(function(){return xe})),i.d(e,\"h\",(function(){return Ii}));var n=i(\"3T2N\");i.d(e,\"g\",(function(){return n.xb}));var o=new class{constructor(){this._request=null,this._charts=new Map,this._running=!1,this._lastDate=void 0}_notify(t,e,i,n){const o=e.listeners[n],s=e.duration;o.forEach((n=>n({chart:t,initial:e.initial,numSteps:s,currentStep:Math.min(i-e.start,s)})))}_refresh(){const t=this;t._request||(t._running=!0,t._request=n.Lb.call(window,(()=>{t._update(),t._request=null,t._running&&t._refresh()})))}_update(t=Date.now()){const e=this;let i=0;e._charts.forEach(((n,o)=>{if(!n.running||!n.items.length)return;const s=n.items;let a,r=s.length-1,l=!1;for(;r>=0;--r)a=s[r],a._active?(a._total>n.duration&&(n.duration=a._total),a.tick(t),l=!0):(s[r]=s[s.length-1],s.pop());l&&(o.draw(),e._notify(o,n,t,\"progress\")),s.length||(n.running=!1,e._notify(o,n,t,\"complete\"),n.initial=!1),i+=s.length})),e._lastDate=t,0===i&&(e._running=!1)}_getAnims(t){const e=this._charts;let i=e.get(t);return i||(i={running:!1,initial:!0,items:[],listeners:{complete:[],progress:[]}},e.set(t,i)),i}listen(t,e,i){this._getAnims(t).listeners[e].push(i)}add(t,e){e&&e.length&&this._getAnims(t).items.push(...e)}has(t){return this._getAnims(t).items.length>0}start(t){const e=this._charts.get(t);e&&(e.running=!0,e.start=Date.now(),e.duration=e.items.reduce(((t,e)=>Math.max(t,e._duration)),0),this._refresh())}running(t){if(!this._running)return!1;const e=this._charts.get(t);return!!(e&&e.running&&e.items.length)}stop(t){const e=this._charts.get(t);if(!e||!e.items.length)return;const i=e.items;let n=i.length-1;for(;n>=0;--n)i[n].cancel();e.items=[],this._notify(t,e,Date.now(),\"complete\")}remove(t){return this._charts.delete(t)}};const s=\"transparent\",a={boolean:(t,e,i)=>i>.5?e:t,color(t,e,i){const o=Object(n.wb)(t||s),a=o.valid&&Object(n.wb)(e||s);return a&&a.valid?a.mix(o,i).hexString():e},number:(t,e,i)=>t+(e-t)*i};class r{constructor(t,e,i,o){const s=e[i];o=Object(n.C)([t.to,o,s,t.from]);const r=Object(n.C)([t.from,s,o]);this._active=!0,this._fn=t.fn||a[t.type||typeof r],this._easing=n.yb[t.easing]||n.yb.linear,this._start=Math.floor(Date.now()+(t.delay||0)),this._duration=this._total=Math.floor(t.duration),this._loop=!!t.loop,this._target=e,this._prop=i,this._from=r,this._to=o,this._promises=void 0}active(){return this._active}update(t,e,i){const o=this;if(o._active){o._notify(!1);const s=o._target[o._prop],a=i-o._start,r=o._duration-a;o._start=i,o._duration=Math.floor(Math.max(r,t.duration)),o._total+=a,o._loop=!!t.loop,o._to=Object(n.C)([t.to,e,s,t.from]),o._from=Object(n.C)([t.from,s,e])}}cancel(){const t=this;t._active&&(t.tick(Date.now()),t._active=!1,t._notify(!1))}tick(t){const e=this,i=t-e._start,n=e._duration,o=e._prop,s=e._from,a=e._loop,r=e._to;let l;if(e._active=s!==r&&(a||i<n),!e._active)return e._target[o]=r,void e._notify(!0);i<0?e._target[o]=s:(l=i/n%2,l=a&&l>1?2-l:l,l=e._easing(Math.min(1,Math.max(0,l))),e._target[o]=e._fn(s,r,l))}wait(){const t=this._promises||(this._promises=[]);return new Promise(((e,i)=>{t.push({res:e,rej:i})}))}_notify(t){const e=t?\"res\":\"rej\",i=this._promises||[];for(let n=0;n<i.length;n++)i[n][e]()}}n.xb.set(\"animation\",{delay:void 0,duration:1e3,easing:\"easeOutQuart\",fn:void 0,from:void 0,loop:void 0,to:void 0,type:void 0});const l=Object.keys(n.xb.animation);n.xb.describe(\"animation\",{_fallback:!1,_indexable:!1,_scriptable:t=>\"onProgress\"!==t&&\"onComplete\"!==t&&\"fn\"!==t}),n.xb.set(\"animations\",{colors:{type:\"color\",properties:[\"color\",\"borderColor\",\"backgroundColor\"]},numbers:{type:\"number\",properties:[\"x\",\"y\",\"borderWidth\",\"radius\",\"tension\"]}}),n.xb.describe(\"animations\",{_fallback:\"animation\"}),n.xb.set(\"transitions\",{active:{animation:{duration:400}},resize:{animation:{duration:0}},show:{animations:{colors:{from:\"transparent\"},visible:{type:\"boolean\",duration:0}}},hide:{animations:{colors:{to:\"transparent\"},visible:{type:\"boolean\",easing:\"linear\",fn:t=>0|t}}}});class c{constructor(t,e){this._chart=t,this._properties=new Map,this.configure(e)}configure(t){if(!Object(n.Cb)(t))return;const e=this._properties;Object.getOwnPropertyNames(t).forEach((i=>{const o=t[i];if(!Object(n.Cb)(o))return;const s={};for(const t of l)s[t]=o[t];(Object(n.vb)(o.properties)&&o.properties||[i]).forEach((t=>{t!==i&&e.has(t)||e.set(t,s)}))}))}_animateOptions(t,e){const i=e.options,n=function(t,e){if(!e)return;let i=t.options;if(!i)return void(t.options=e);i.$shared&&(t.options=i=Object.assign({},i,{$shared:!1,$animations:{}}));return i}(t,i);if(!n)return[];const o=this._createAnimations(n,i);return i.$shared&&function(t,e){const i=[],n=Object.keys(e);for(let o=0;o<n.length;o++){const e=t[n[o]];e&&e.active()&&i.push(e.wait())}return Promise.all(i)}(t.options.$animations,i).then((()=>{t.options=i}),(()=>{})),o}_createAnimations(t,e){const i=this._properties,n=[],o=t.$animations||(t.$animations={}),s=Object.keys(e),a=Date.now();let l;for(l=s.length-1;l>=0;--l){const c=s[l];if(\"$\"===c.charAt(0))continue;if(\"options\"===c){n.push(...this._animateOptions(t,e));continue}const h=e[c];let d=o[c];const u=i.get(c);if(d){if(u&&d.active()){d.update(u,h,a);continue}d.cancel()}u&&u.duration?(o[c]=d=new r(u,t,c,h),n.push(d)):t[c]=h}return n}update(t,e){if(0===this._properties.size)return void Object.assign(t,e);const i=this._createAnimations(t,e);return i.length?(o.add(this._chart,i),!0):void 0}}function h(t,e){const i=t&&t.options||{},n=i.reverse,o=void 0===i.min?e:0,s=void 0===i.max?e:0;return{start:n?s:o,end:n?o:s}}function d(t,e){const i=[],n=t._getSortedDatasetMetas(e);let o,s;for(o=0,s=n.length;o<s;++o)i.push(n[o].index);return i}function u(t,e,i,o){const s=t.keys,a=\"single\"===o.mode;let r,l,c,h;if(null!==e){for(r=0,l=s.length;r<l;++r){if(c=+s[r],c===i){if(o.all)continue;break}h=t.values[c],Object(n.Ab)(h)&&(a||0===e||Object(n.Mb)(e)===Object(n.Mb)(h))&&(e+=h)}return e}}function g(t,e){const i=t&&t.options.stacked;return i||void 0===i&&void 0!==e.stack}function b(t,e,i){const n=t[e]||(t[e]={});return n[i]||(n[i]={})}function p(t,e,i){for(const n of e.getMatchingVisibleMetas(\"bar\").reverse()){const e=t[n.index];if(i&&e>0||!i&&e<0)return n.index}return null}function f(t,e){const{chart:i,_cachedMeta:n}=t,o=i._stacks||(i._stacks={}),{iScale:s,vScale:a,index:r}=n,l=s.axis,c=a.axis,h=function(t,e,i){return`${t.id}.${e.id}.${i.stack||i.type}`}(s,a,n),d=e.length;let u;for(let g=0;g<d;++g){const t=e[g],{[l]:i,[c]:n}=t;u=(t._stacks||(t._stacks={}))[c]=b(o,h,i),u[r]=n,u._top=p(u,a,!0),u._bottom=p(u,a,!1)}}function m(t,e){const i=t.scales;return Object.keys(i).filter((t=>i[t].axis===e)).shift()}function x(t,e){e=e||t._parsed;for(const i of e){const e=i._stacks;if(!e||void 0===e[t.vScale.id]||void 0===e[t.vScale.id][t.index])return;delete e[t.vScale.id][t.index]}}const _=t=>\"reset\"===t||\"none\"===t,y=(t,e)=>e?t:Object.assign({},t);class v{constructor(t,e){this.chart=t,this._ctx=t.ctx,this.index=e,this._cachedDataOpts={},this._cachedMeta=this.getMeta(),this._type=this._cachedMeta.type,this.options=void 0,this._parsing=!1,this._data=void 0,this._objectData=void 0,this._sharedOptions=void 0,this._drawStart=void 0,this._drawCount=void 0,this.enableOptionSharing=!1,this.$context=void 0,this._syncList=[],this.initialize()}initialize(){const t=this,e=t._cachedMeta;t.configure(),t.linkScales(),e._stacked=g(e.vScale,e),t.addElements()}updateIndex(t){this.index!==t&&x(this._cachedMeta),this.index=t}linkScales(){const t=this,e=t.chart,i=t._cachedMeta,o=t.getDataset(),s=(t,e,i,n)=>\"x\"===t?e:\"r\"===t?n:i,a=i.xAxisID=Object(n.Pb)(o.xAxisID,m(e,\"x\")),r=i.yAxisID=Object(n.Pb)(o.yAxisID,m(e,\"y\")),l=i.rAxisID=Object(n.Pb)(o.rAxisID,m(e,\"r\")),c=i.indexAxis,h=i.iAxisID=s(c,a,r,l),d=i.vAxisID=s(c,r,a,l);i.xScale=t.getScaleForId(a),i.yScale=t.getScaleForId(r),i.rScale=t.getScaleForId(l),i.iScale=t.getScaleForId(h),i.vScale=t.getScaleForId(d)}getDataset(){return this.chart.data.datasets[this.index]}getMeta(){return this.chart.getDatasetMeta(this.index)}getScaleForId(t){return this.chart.scales[t]}_getOtherScale(t){const e=this._cachedMeta;return t===e.iScale?e.vScale:e.iScale}reset(){this._update(\"reset\")}_destroy(){const t=this._cachedMeta;this._data&&Object(n.Ob)(this._data,this),t._stacked&&x(t)}_dataCheck(){const t=this,e=t.getDataset(),i=e.data||(e.data=[]),o=t._data;if(Object(n.Cb)(i))t._data=function(t){const e=Object.keys(t),i=new Array(e.length);let n,o,s;for(n=0,o=e.length;n<o;++n)s=e[n],i[n]={x:s,y:t[s]};return i}(i);else if(o!==i){if(o){Object(n.Ob)(o,t);const e=t._cachedMeta;x(e),e._parsed=[]}i&&Object.isExtensible(i)&&Object(n.Fb)(i,t),t._syncList=[],t._data=i}}addElements(){const t=this,e=t._cachedMeta;t._dataCheck(),t.datasetElementType&&(e.dataset=new t.datasetElementType)}buildOrUpdateElements(t){const e=this,i=e._cachedMeta,n=e.getDataset();let o=!1;e._dataCheck();const s=i._stacked;i._stacked=g(i.vScale,i),i.stack!==n.stack&&(o=!0,x(i),i.stack=n.stack),e._resyncElements(t),(o||s!==i._stacked)&&f(e,i._parsed)}configure(){const t=this,e=t.chart.config,i=e.datasetScopeKeys(t._type),n=e.getOptionScopes(t.getDataset(),i,!0);t.options=e.createResolver(n,t.getContext()),t._parsing=t.options.parsing}parse(t,e){const i=this,{_cachedMeta:o,_data:s}=i,{iScale:a,_stacked:r}=o,l=a.axis;let c,h,d,u=0===t&&e===s.length||o._sorted,g=t>0&&o._parsed[t-1];if(!1===i._parsing)o._parsed=s,o._sorted=!0,d=s;else{d=Object(n.vb)(s[t])?i.parseArrayData(o,s,t,e):Object(n.Cb)(s[t])?i.parseObjectData(o,s,t,e):i.parsePrimitiveData(o,s,t,e);const a=()=>null===h[l]||g&&h[l]<g[l];for(c=0;c<e;++c)o._parsed[c+t]=h=d[c],u&&(a()&&(u=!1),g=h);o._sorted=u}r&&f(i,d)}parsePrimitiveData(t,e,i,n){const{iScale:o,vScale:s}=t,a=o.axis,r=s.axis,l=o.getLabels(),c=o===s,h=new Array(n);let d,u,g;for(d=0,u=n;d<u;++d)g=d+i,h[d]={[a]:c||o.parse(l[g],g),[r]:s.parse(e[g],g)};return h}parseArrayData(t,e,i,n){const{xScale:o,yScale:s}=t,a=new Array(n);let r,l,c,h;for(r=0,l=n;r<l;++r)c=r+i,h=e[c],a[r]={x:o.parse(h[0],c),y:s.parse(h[1],c)};return a}parseObjectData(t,e,i,o){const{xScale:s,yScale:a}=t,{xAxisKey:r=\"x\",yAxisKey:l=\"y\"}=this._parsing,c=new Array(o);let h,d,u,g;for(h=0,d=o;h<d;++h)u=h+i,g=e[u],c[h]={x:s.parse(Object(n.zb)(g,r),u),y:a.parse(Object(n.zb)(g,l),u)};return c}getParsed(t){return this._cachedMeta._parsed[t]}getDataElement(t){return this._cachedMeta.data[t]}applyStack(t,e,i){const n=this.chart,o=this._cachedMeta,s=e[t.axis];return u({keys:d(n,!0),values:e._stacks[t.axis]},s,o.index,{mode:i})}updateRangeFromParsed(t,e,i,n){const o=i[e.axis];let s=null===o?NaN:o;const a=n&&i._stacks[e.axis];n&&a&&(n.values=a,t.min=Math.min(t.min,s),t.max=Math.max(t.max,s),s=u(n,o,this._cachedMeta.index,{all:!0})),t.min=Math.min(t.min,s),t.max=Math.max(t.max,s)}getMinMax(t,e){const i=this,o=i._cachedMeta,s=o._parsed,a=o._sorted&&t===o.iScale,r=s.length,l=i._getOtherScale(t),c=e&&o._stacked&&{keys:d(i.chart,!0),values:null},h={min:Number.POSITIVE_INFINITY,max:Number.NEGATIVE_INFINITY},{min:u,max:g}=function(t){const{min:e,max:i,minDefined:n,maxDefined:o}=t.getUserBounds();return{min:n?e:Number.NEGATIVE_INFINITY,max:o?i:Number.POSITIVE_INFINITY}}(l);let b,p,f,m;function x(){return f=s[b],p=f[t.axis],m=f[l.axis],!Object(n.Ab)(p)||u>m||g<m}for(b=0;b<r&&(x()||(i.updateRangeFromParsed(h,t,f,c),!a));++b);if(a)for(b=r-1;b>=0;--b)if(!x()){i.updateRangeFromParsed(h,t,f,c);break}return h}getAllParsedValues(t){const e=this._cachedMeta._parsed,i=[];let o,s,a;for(o=0,s=e.length;o<s;++o)a=e[o][t.axis],Object(n.Ab)(a)&&i.push(a);return i}getMaxOverflow(){return!1}getLabelAndValue(t){const e=this._cachedMeta,i=e.iScale,n=e.vScale,o=this.getParsed(t);return{label:i?\"\"+i.getLabelForValue(o[i.axis]):\"\",value:n?\"\"+n.getLabelForValue(o[n.axis]):\"\"}}_update(t){const e=this,i=e._cachedMeta;e.configure(),e._cachedDataOpts={},e.update(t||\"default\"),i._clip=function(t){let e,i,o,s;return Object(n.Cb)(t)?(e=t.top,i=t.right,o=t.bottom,s=t.left):e=i=o=s=t,{top:e,right:i,bottom:o,left:s}}(Object(n.Pb)(e.options.clip,function(t,e,i){if(!1===i)return!1;const n=h(t,i),o=h(e,i);return{top:o.end,right:n.end,bottom:o.start,left:n.start}}(i.xScale,i.yScale,e.getMaxOverflow())))}update(t){}draw(){const t=this,e=t._ctx,i=t.chart,n=t._cachedMeta,o=n.data||[],s=i.chartArea,a=[],r=t._drawStart||0,l=t._drawCount||o.length-r;let c;for(n.dataset&&n.dataset.draw(e,s,r,l),c=r;c<r+l;++c){const t=o[c];t.active?a.push(t):t.draw(e,s)}for(c=0;c<a.length;++c)a[c].draw(e,s)}getStyle(t,e){const i=e?\"active\":\"default\";return void 0===t&&this._cachedMeta.dataset?this.resolveDatasetElementOptions(i):this.resolveDataElementOptions(t||0,i)}getContext(t,e,i){const n=this,o=n.getDataset();let s;if(t>=0&&t<n._cachedMeta.data.length){const e=n._cachedMeta.data[t];s=e.$context||(e.$context=function(t,e,i){return Object.assign(Object.create(t),{active:!1,dataIndex:e,parsed:void 0,raw:void 0,element:i,index:e,mode:\"default\",type:\"data\"})}(n.getContext(),t,e)),s.parsed=n.getParsed(t),s.raw=o.data[t],s.index=s.dataIndex=t}else s=n.$context||(n.$context=function(t,e){return Object.assign(Object.create(t),{active:!1,dataset:void 0,datasetIndex:e,index:e,mode:\"default\",type:\"dataset\"})}(n.chart.getContext(),n.index)),s.dataset=o,s.index=s.datasetIndex=n.index;return s.active=!!e,s.mode=i,s}resolveDatasetElementOptions(t){return this._resolveElementOptions(this.datasetElementType.id,t)}resolveDataElementOptions(t,e){return this._resolveElementOptions(this.dataElementType.id,e,t)}_resolveElementOptions(t,e=\"default\",i){const o=this,s=\"active\"===e,a=o._cachedDataOpts,r=t+\"-\"+e,l=a[r],c=o.enableOptionSharing&&Object(n.Bb)(i);if(l)return y(l,c);const h=o.chart.config,d=h.datasetElementScopeKeys(o._type,t),u=s?[`${t}Hover`,\"hover\",t,\"\"]:[t,\"\"],g=h.getOptionScopes(o.getDataset(),d),b=Object.keys(n.xb.elements[t]),p=h.resolveNamedOptions(g,b,(()=>o.getContext(i,s)),u);return p.$shared&&(p.$shared=c,a[r]=Object.freeze(y(p,c))),p}_resolveAnimations(t,e,i){const n=this,o=n.chart,s=n._cachedDataOpts,a=`animation-${e}`,r=s[a];if(r)return r;let l;if(!1!==o.options.animation){const o=n.chart.config,s=o.datasetAnimationScopeKeys(n._type,e),a=o.getOptionScopes(n.getDataset(),s);l=o.createResolver(a,n.getContext(t,i,e))}const h=new c(o,l&&l.animations);return l&&l._cacheable&&(s[a]=Object.freeze(h)),h}getSharedOptions(t){if(t.$shared)return this._sharedOptions||(this._sharedOptions=Object.assign({},t))}includeOptions(t,e){return!e||_(t)||this.chart._animationsDisabled}updateElement(t,e,i,n){_(n)?Object.assign(t,i):this._resolveAnimations(e,n).update(t,i)}updateSharedOptions(t,e,i){t&&!_(e)&&this._resolveAnimations(void 0,e).update(t,i)}_setStyle(t,e,i,n){t.active=n;const o=this.getStyle(e,n);this._resolveAnimations(e,i,n).update(t,{options:!n&&this.getSharedOptions(o)||o})}removeHoverStyle(t,e,i){this._setStyle(t,i,\"active\",!1)}setHoverStyle(t,e,i){this._setStyle(t,i,\"active\",!0)}_removeDatasetHoverStyle(){const t=this._cachedMeta.dataset;t&&this._setStyle(t,void 0,\"active\",!1)}_setDatasetHoverStyle(){const t=this._cachedMeta.dataset;t&&this._setStyle(t,void 0,\"active\",!0)}_resyncElements(t){const e=this,i=e._data,n=e._cachedMeta.data;for(const[r,l,c]of e._syncList)e[r](l,c);e._syncList=[];const o=n.length,s=i.length,a=Math.min(s,o);s>o?e._insertElements(o,s-o,t):s<o&&e._removeElements(s,o-s),a&&e.parse(0,a)}_insertElements(t,e,i=!0){const n=this,o=n._cachedMeta,s=o.data,a=t+e;let r;const l=t=>{for(t.length+=e,r=t.length-1;r>=a;r--)t[r]=t[r-e]};for(l(s),r=t;r<a;++r)s[r]=new n.dataElementType;n._parsing&&l(o._parsed),n.parse(t,e),i&&n.updateElements(s,t,e,\"reset\")}updateElements(t,e,i,n){}_removeElements(t,e){const i=this._cachedMeta;if(this._parsing){const n=i._parsed.splice(t,e);i._stacked&&x(i,n)}i.data.splice(t,e)}_onDataPush(){const t=arguments.length;this._syncList.push([\"_insertElements\",this.getDataset().data.length-t,t])}_onDataPop(){this._syncList.push([\"_removeElements\",this._cachedMeta.data.length-1,1])}_onDataShift(){this._syncList.push([\"_removeElements\",0,1])}_onDataSplice(t,e){this._syncList.push([\"_removeElements\",t,e]),this._syncList.push([\"_insertElements\",t,arguments.length-2])}_onDataUnshift(){this._syncList.push([\"_insertElements\",0,arguments.length])}}function O(t){const e=function(t){if(!t._cache.$bar){const e=t.getMatchingVisibleMetas(\"bar\");let i=[];for(let n=0,o=e.length;n<o;n++)i=i.concat(e[n].controller.getAllParsedValues(t));t._cache.$bar=Object(n.B)(i.sort(((t,e)=>t-e)))}return t._cache.$bar}(t);let i,o,s,a,r=t._length;const l=()=>{32767!==s&&-32768!==s&&(Object(n.Bb)(a)&&(r=Math.min(r,Math.abs(s-a)||r)),a=s)};for(i=0,o=e.length;i<o;++i)s=t.getPixelForValue(e[i]),l();for(a=void 0,i=0,o=t.ticks.length;i<o;++i)s=t.getPixelForTick(i),l();return r}function j(t,e,i,o){return Object(n.vb)(t)?function(t,e,i,n){const o=i.parse(t[0],n),s=i.parse(t[1],n),a=Math.min(o,s),r=Math.max(o,s);let l=a,c=r;Math.abs(a)>Math.abs(r)&&(l=r,c=a),e[i.axis]=c,e._custom={barStart:l,barEnd:c,start:o,end:s,min:a,max:r}}(t,e,i,o):e[i.axis]=i.parse(t,o),e}function M(t,e,i,n){const o=t.iScale,s=t.vScale,a=o.getLabels(),r=o===s,l=[];let c,h,d,u;for(c=i,h=i+n;c<h;++c)u=e[c],d={},d[o.axis]=r||o.parse(a[c],c),l.push(j(u,d,s,c));return l}function w(t){return t&&void 0!==t.barStart&&void 0!==t.barEnd}v.defaults={},v.prototype.datasetElementType=null,v.prototype.dataElementType=null;class k extends v{parsePrimitiveData(t,e,i,n){return M(t,e,i,n)}parseArrayData(t,e,i,n){return M(t,e,i,n)}parseObjectData(t,e,i,o){const{iScale:s,vScale:a}=t,{xAxisKey:r=\"x\",yAxisKey:l=\"y\"}=this._parsing,c=\"x\"===s.axis?r:l,h=\"x\"===a.axis?r:l,d=[];let u,g,b,p;for(u=i,g=i+o;u<g;++u)p=e[u],b={},b[s.axis]=s.parse(Object(n.zb)(p,c),u),d.push(j(Object(n.zb)(p,h),b,a,u));return d}updateRangeFromParsed(t,e,i,n){super.updateRangeFromParsed(t,e,i,n);const o=i._custom;o&&e===this._cachedMeta.vScale&&(t.min=Math.min(t.min,o.min),t.max=Math.max(t.max,o.max))}getLabelAndValue(t){const e=this._cachedMeta,{iScale:i,vScale:n}=e,o=this.getParsed(t),s=o._custom,a=w(s)?\"[\"+s.start+\", \"+s.end+\"]\":\"\"+n.getLabelForValue(o[n.axis]);return{label:\"\"+i.getLabelForValue(o[i.axis]),value:a}}initialize(){const t=this;t.enableOptionSharing=!0,super.initialize();t._cachedMeta.stack=t.getDataset().stack}update(t){const e=this._cachedMeta;this.updateElements(e.data,0,e.data.length,t)}updateElements(t,e,i,o){const s=this,a=\"reset\"===o,r=s._cachedMeta.vScale,l=r.getBasePixel(),c=r.isHorizontal(),h=s._getRuler(),d=s.resolveDataElementOptions(e,o),u=s.getSharedOptions(d),g=s.includeOptions(o,u);s.updateSharedOptions(u,o,d);for(let b=e;b<e+i;b++){const e=s.getParsed(b),i=a||Object(n.Db)(e[r.axis])?{base:l,head:l}:s._calculateBarValuePixels(b),d=s._calculateBarIndexPixels(b,h),p=(e._stacks||{})[r.axis],f={horizontal:c,base:i.base,enableBorderRadius:!p||w(e._custom)||s.index===p._top||s.index===p._bottom,x:c?i.head:d.center,y:c?d.center:i.head,height:c?d.size:void 0,width:c?void 0:d.size};g&&(f.options=u||s.resolveDataElementOptions(b,o)),s.updateElement(t[b],b,f,o)}}_getStacks(t,e){const i=this._cachedMeta.iScale,o=i.getMatchingVisibleMetas(this._type),s=i.options.stacked,a=o.length,r=[];let l,c;for(l=0;l<a;++l){if(c=o[l],\"undefined\"!==typeof e){const t=c.controller.getParsed(e)[c.controller._cachedMeta.vScale.axis];if(Object(n.Db)(t)||isNaN(t))continue}if((!1===s||-1===r.indexOf(c.stack)||void 0===s&&void 0===c.stack)&&r.push(c.stack),c.index===t)break}return r.length||r.push(void 0),r}_getStackCount(t){return this._getStacks(void 0,t).length}_getStackIndex(t,e,i){const n=this._getStacks(t,i),o=void 0!==e?n.indexOf(e):-1;return-1===o?n.length-1:o}_getRuler(){const t=this,e=t.options,i=t._cachedMeta,n=i.iScale,o=[];let s,a;for(s=0,a=i.data.length;s<a;++s)o.push(n.getPixelForValue(t.getParsed(s)[n.axis],s));const r=e.barThickness;return{min:r||O(n),pixels:o,start:n._startPixel,end:n._endPixel,stackCount:t._getStackCount(),scale:n,grouped:e.grouped,ratio:r?1:e.categoryPercentage*e.barPercentage}}_calculateBarValuePixels(t){const e=this,{vScale:i,_stacked:o}=e._cachedMeta,{base:s,minBarLength:a}=e.options,r=e.getParsed(t),l=r._custom,c=w(l);let h,d,u=r[i.axis],g=0,b=o?e.applyStack(i,r,o):u;b!==u&&(g=b-u,b=u),c&&(u=l.barStart,b=l.barEnd-l.barStart,0!==u&&Object(n.Mb)(u)!==Object(n.Mb)(l.barEnd)&&(g=0),g+=u);const p=Object(n.Db)(s)||c?g:s;let f=i.getPixelForValue(p);h=this.chart.getDataVisibility(t)?i.getPixelForValue(g+b):f,d=h-f,void 0!==a&&Math.abs(d)<a&&(d=d<0?-a:a,0===u&&(f-=d/2),h=f+d);const m=s||0;if(f===i.getPixelForValue(m)){const t=i.getLineWidthForValue(m)/2;d>0?(f+=t,d-=t):d<0&&(f-=t,d+=t)}return{size:d,base:f,head:h,center:h+d/2}}_calculateBarIndexPixels(t,e){const i=this,o=e.scale,s=i.options,a=s.skipNull,r=Object(n.Pb)(s.maxBarThickness,1/0);let l,c;if(e.grouped){const o=a?i._getStackCount(t):e.stackCount,h=\"flex\"===s.barThickness?function(t,e,i,n){const o=e.pixels,s=o[t];let a=t>0?o[t-1]:null,r=t<o.length-1?o[t+1]:null;const l=i.categoryPercentage;null===a&&(a=s-(null===r?e.end-e.start:r-s)),null===r&&(r=s+s-a);const c=s-(s-Math.min(a,r))/2*l;return{chunk:Math.abs(r-a)/2*l/n,ratio:i.barPercentage,start:c}}(t,e,s,o):function(t,e,i,o){const s=i.barThickness;let a,r;return Object(n.Db)(s)?(a=e.min*i.categoryPercentage,r=i.barPercentage):(a=s*o,r=1),{chunk:a/o,ratio:r,start:e.pixels[t]-a/2}}(t,e,s,o),d=i._getStackIndex(i.index,i._cachedMeta.stack,a?t:void 0);l=h.start+h.chunk*d+h.chunk/2,c=Math.min(r,h.chunk*h.ratio)}else l=o.getPixelForValue(i.getParsed(t)[o.axis],t),c=Math.min(r,e.min*e.ratio);return{base:l-c/2,head:l+c/2,center:l,size:c}}draw(){const t=this,e=t.chart,i=t._cachedMeta,o=i.vScale,s=i.data,a=s.length;let r=0;for(Object(n.Eb)(e.ctx,e.chartArea);r<a;++r)null!==t.getParsed(r)[o.axis]&&s[r].draw(t._ctx);Object(n.Gb)(e.ctx)}}k.id=\"bar\",k.defaults={datasetElementType:!1,dataElementType:\"bar\",categoryPercentage:.8,barPercentage:.9,grouped:!0,animations:{numbers:{type:\"number\",properties:[\"x\",\"y\",\"base\",\"width\",\"height\"]}}},k.overrides={interaction:{mode:\"index\"},scales:{_index_:{type:\"category\",offset:!0,grid:{offset:!0}},_value_:{type:\"linear\",beginAtZero:!0}}};class D extends v{initialize(){this.enableOptionSharing=!0,super.initialize()}parseObjectData(t,e,i,o){const{xScale:s,yScale:a}=t,{xAxisKey:r=\"x\",yAxisKey:l=\"y\"}=this._parsing,c=[];let h,d,u;for(h=i,d=i+o;h<d;++h)u=e[h],c.push({x:s.parse(Object(n.zb)(u,r),h),y:a.parse(Object(n.zb)(u,l),h),_custom:u&&u.r&&+u.r});return c}getMaxOverflow(){const{data:t,_parsed:e}=this._cachedMeta;let i=0;for(let n=t.length-1;n>=0;--n)i=Math.max(i,t[n].size()/2,e[n]._custom);return i>0&&i}getLabelAndValue(t){const e=this._cachedMeta,{xScale:i,yScale:n}=e,o=this.getParsed(t),s=i.getLabelForValue(o.x),a=n.getLabelForValue(o.y),r=o._custom;return{label:e.label,value:\"(\"+s+\", \"+a+(r?\", \"+r:\"\")+\")\"}}update(t){const e=this._cachedMeta.data;this.updateElements(e,0,e.length,t)}updateElements(t,e,i,n){const o=this,s=\"reset\"===n,{iScale:a,vScale:r}=o._cachedMeta,l=o.resolveDataElementOptions(e,n),c=o.getSharedOptions(l),h=o.includeOptions(n,c),d=a.axis,u=r.axis;for(let g=e;g<e+i;g++){const e=t[g],i=!s&&o.getParsed(g),l={},c=l[d]=s?a.getPixelForDecimal(.5):a.getPixelForValue(i[d]),b=l[u]=s?r.getBasePixel():r.getPixelForValue(i[u]);l.skip=isNaN(c)||isNaN(b),h&&(l.options=o.resolveDataElementOptions(g,n),s&&(l.options.radius=0)),o.updateElement(e,g,l,n)}o.updateSharedOptions(c,n,l)}resolveDataElementOptions(t,e){const i=this.getParsed(t);let o=super.resolveDataElementOptions(t,e);o.$shared&&(o=Object.assign({},o,{$shared:!1}));const s=o.radius;return\"active\"!==e&&(o.radius=0),o.radius+=Object(n.Pb)(i&&i._custom,s),o}}D.id=\"bubble\",D.defaults={datasetElementType:!1,dataElementType:\"point\",animations:{numbers:{type:\"number\",properties:[\"x\",\"y\",\"borderWidth\",\"radius\"]}}},D.overrides={scales:{x:{type:\"linear\"},y:{type:\"linear\"}},plugins:{tooltip:{callbacks:{title:()=>\"\"}}}};class S extends v{constructor(t,e){super(t,e),this.enableOptionSharing=!0,this.innerRadius=void 0,this.outerRadius=void 0,this.offsetX=void 0,this.offsetY=void 0}linkScales(){}parse(t,e){const i=this.getDataset().data,n=this._cachedMeta;let o,s;for(o=t,s=t+e;o<s;++o)n._parsed[o]=+i[o]}_getRotation(){return Object(n.Nb)(this.options.rotation-90)}_getCircumference(){return Object(n.Nb)(this.options.circumference)}_getRotationExtents(){let t=n.u,e=-n.u;const i=this;for(let n=0;n<i.chart.data.datasets.length;++n)if(i.chart.isDatasetVisible(n)){const o=i.chart.getDatasetMeta(n).controller,s=o._getRotation(),a=o._getCircumference();t=Math.min(t,s),e=Math.max(e,s+a)}return{rotation:t,circumference:e-t}}update(t){const e=this,i=e.chart,{chartArea:o}=i,s=e._cachedMeta,a=s.data,r=e.getMaxBorderWidth()+e.getMaxOffset(a),l=Math.max((Math.min(o.width,o.height)-r)/2,0),c=Math.min(Object(n.Hb)(e.options.cutout,l),1),h=e._getRingWeight(e.index),{circumference:d,rotation:u}=e._getRotationExtents(),{ratioX:g,ratioY:b,offsetX:p,offsetY:f}=function(t,e,i){let o=1,s=1,a=0,r=0;if(e<n.u){const l=t,c=l+e,h=Math.cos(l),d=Math.sin(l),u=Math.cos(c),g=Math.sin(c),b=(t,e,o)=>Object(n.Kb)(t,l,c,!0)?1:Math.max(e,e*i,o,o*i),p=(t,e,o)=>Object(n.Kb)(t,l,c,!0)?-1:Math.min(e,e*i,o,o*i),f=b(0,h,u),m=b(n.i,d,g),x=p(n.q,h,u),_=p(n.q+n.i,d,g);o=(f-x)/2,s=(m-_)/2,a=-(f+x)/2,r=-(m+_)/2}return{ratioX:o,ratioY:s,offsetX:a,offsetY:r}}(u,d,c),m=(o.width-r)/g,x=(o.height-r)/b,_=Math.max(Math.min(m,x)/2,0),y=Object(n.Ib)(e.options.radius,_),v=(y-Math.max(y*c,0))/e._getVisibleDatasetWeightTotal();e.offsetX=p*y,e.offsetY=f*y,s.total=e.calculateTotal(),e.outerRadius=y-v*e._getRingWeightOffset(e.index),e.innerRadius=Math.max(e.outerRadius-v*h,0),e.updateElements(a,0,a.length,t)}_circumference(t,e){const i=this,o=i.options,s=i._cachedMeta,a=i._getCircumference();return e&&o.animation.animateRotate||!this.chart.getDataVisibility(t)||null===s._parsed[t]?0:i.calculateCircumference(s._parsed[t]*a/n.u)}updateElements(t,e,i,n){const o=this,s=\"reset\"===n,a=o.chart,r=a.chartArea,l=a.options.animation,c=(r.left+r.right)/2,h=(r.top+r.bottom)/2,d=s&&l.animateScale,u=d?0:o.innerRadius,g=d?0:o.outerRadius,b=o.resolveDataElementOptions(e,n),p=o.getSharedOptions(b),f=o.includeOptions(n,p);let m,x=o._getRotation();for(m=0;m<e;++m)x+=o._circumference(m,s);for(m=e;m<e+i;++m){const e=o._circumference(m,s),i=t[m],a={x:c+o.offsetX,y:h+o.offsetY,startAngle:x,endAngle:x+e,circumference:e,outerRadius:g,innerRadius:u};f&&(a.options=p||o.resolveDataElementOptions(m,n)),x+=e,o.updateElement(i,m,a,n)}o.updateSharedOptions(p,n,b)}calculateTotal(){const t=this._cachedMeta,e=t.data;let i,n=0;for(i=0;i<e.length;i++){const e=t._parsed[i];null!==e&&!isNaN(e)&&this.chart.getDataVisibility(i)&&(n+=Math.abs(e))}return n}calculateCircumference(t){const e=this._cachedMeta.total;return e>0&&!isNaN(t)?n.u*(Math.abs(t)/e):0}getLabelAndValue(t){const e=this._cachedMeta,i=this.chart,o=i.data.labels||[],s=Object(n.Jb)(e._parsed[t],i.options.locale);return{label:o[t]||\"\",value:s}}getMaxBorderWidth(t){const e=this;let i=0;const n=e.chart;let o,s,a,r,l;if(!t)for(o=0,s=n.data.datasets.length;o<s;++o)if(n.isDatasetVisible(o)){a=n.getDatasetMeta(o),t=a.data,r=a.controller,r!==e&&r.configure();break}if(!t)return 0;for(o=0,s=t.length;o<s;++o)l=r.resolveDataElementOptions(o),\"inner\"!==l.borderAlign&&(i=Math.max(i,l.borderWidth||0,l.hoverBorderWidth||0));return i}getMaxOffset(t){let e=0;for(let i=0,n=t.length;i<n;++i){const t=this.resolveDataElementOptions(i);e=Math.max(e,t.offset||0,t.hoverOffset||0)}return e}_getRingWeightOffset(t){let e=0;for(let i=0;i<t;++i)this.chart.isDatasetVisible(i)&&(e+=this._getRingWeight(i));return e}_getRingWeight(t){return Math.max(Object(n.Pb)(this.chart.data.datasets[t].weight,1),0)}_getVisibleDatasetWeightTotal(){return this._getRingWeightOffset(this.chart.data.datasets.length)||1}}S.id=\"doughnut\",S.defaults={datasetElementType:!1,dataElementType:\"arc\",animation:{animateRotate:!0,animateScale:!1},animations:{numbers:{type:\"number\",properties:[\"circumference\",\"endAngle\",\"innerRadius\",\"outerRadius\",\"startAngle\",\"x\",\"y\",\"offset\",\"borderWidth\"]}},cutout:\"50%\",rotation:0,circumference:360,radius:\"100%\",indexAxis:\"r\"},S.overrides={aspectRatio:1,plugins:{legend:{labels:{generateLabels(t){const e=t.data;return e.labels.length&&e.datasets.length?e.labels.map(((e,i)=>{const n=t.getDatasetMeta(0).controller.getStyle(i);return{text:e,fillStyle:n.backgroundColor,strokeStyle:n.borderColor,lineWidth:n.borderWidth,hidden:!t.getDataVisibility(i),index:i}})):[]}},onClick(t,e,i){i.chart.toggleDataVisibility(e.index),i.chart.update()}},tooltip:{callbacks:{title:()=>\"\",label(t){let e=t.label;const i=\": \"+t.formattedValue;return Object(n.vb)(e)?(e=e.slice(),e[0]+=i):e+=i,e}}}}};class P extends v{initialize(){this.enableOptionSharing=!0,super.initialize()}update(t){const e=this,i=e._cachedMeta,{dataset:o,data:s=[],_dataset:a}=i,r=e.chart._animationsDisabled;let{start:l,count:c}=function(t,e,i){const o=e.length;let s=0,a=o;if(t._sorted){const{iScale:r,_parsed:l}=t,c=r.axis,{min:h,max:d,minDefined:u,maxDefined:g}=r.getUserBounds();u&&(s=Object(n.Rb)(Math.min(Object(n.Sb)(l,r.axis,h).lo,i?o:Object(n.Sb)(e,c,r.getPixelForValue(h)).lo),0,o-1)),a=g?Object(n.Rb)(Math.max(Object(n.Sb)(l,r.axis,d).hi+1,i?0:Object(n.Sb)(e,c,r.getPixelForValue(d)).hi+1),s,o)-s:o-s}return{start:s,count:a}}(i,s,r);e._drawStart=l,e._drawCount=c,function(t){const{xScale:e,yScale:i,_scaleRanges:n}=t,o={xmin:e.min,xmax:e.max,ymin:i.min,ymax:i.max};if(!n)return t._scaleRanges=o,!0;const s=n.xmin!==e.min||n.xmax!==e.max||n.ymin!==i.min||n.ymax!==i.max;return Object.assign(n,o),s}(i)&&(l=0,c=s.length),o._decimated=!!a._decimated,o.points=s;const h=e.resolveDatasetElementOptions(t);e.options.showLine||(h.borderWidth=0),h.segment=e.options.segment,e.updateElement(o,void 0,{animated:!r,options:h},t),e.updateElements(s,l,c,t)}updateElements(t,e,i,o){const s=this,a=\"reset\"===o,{iScale:r,vScale:l,_stacked:c}=s._cachedMeta,h=s.resolveDataElementOptions(e,o),d=s.getSharedOptions(h),u=s.includeOptions(o,d),g=r.axis,b=l.axis,p=s.options.spanGaps,f=Object(n.Qb)(p)?p:Number.POSITIVE_INFINITY,m=s.chart._animationsDisabled||a||\"none\"===o;let x=e>0&&s.getParsed(e-1);for(let _=e;_<e+i;++_){const e=t[_],i=s.getParsed(_),h=m?e:{},p=Object(n.Db)(i[b]),y=h[g]=r.getPixelForValue(i[g],_),v=h[b]=a||p?l.getBasePixel():l.getPixelForValue(c?s.applyStack(l,i,c):i[b],_);h.skip=isNaN(y)||isNaN(v)||p,h.stop=_>0&&i[g]-x[g]>f,h.parsed=i,u&&(h.options=d||s.resolveDataElementOptions(_,o)),m||s.updateElement(e,_,h,o),x=i}s.updateSharedOptions(d,o,h)}getMaxOverflow(){const t=this,e=t._cachedMeta,i=e.dataset,n=i.options&&i.options.borderWidth||0,o=e.data||[];if(!o.length)return n;const s=o[0].size(t.resolveDataElementOptions(0)),a=o[o.length-1].size(t.resolveDataElementOptions(o.length-1));return Math.max(n,s,a)/2}draw(){const t=this._cachedMeta;t.dataset.updateControlPoints(this.chart.chartArea,t.iScale.axis),super.draw()}}P.id=\"line\",P.defaults={datasetElementType:\"line\",dataElementType:\"point\",showLine:!0,spanGaps:!1},P.overrides={scales:{_index_:{type:\"category\"},_value_:{type:\"linear\"}}};class C extends v{constructor(t,e){super(t,e),this.innerRadius=void 0,this.outerRadius=void 0}getLabelAndValue(t){const e=this._cachedMeta,i=this.chart,o=i.data.labels||[],s=Object(n.Jb)(e._parsed[t].r,i.options.locale);return{label:o[t]||\"\",value:s}}update(t){const e=this._cachedMeta.data;this._updateRadius(),this.updateElements(e,0,e.length,t)}_updateRadius(){const t=this,e=t.chart,i=e.chartArea,n=e.options,o=Math.min(i.right-i.left,i.bottom-i.top),s=Math.max(o/2,0),a=(s-Math.max(n.cutoutPercentage?s/100*n.cutoutPercentage:1,0))/e.getVisibleDatasetCount();t.outerRadius=s-a*t.index,t.innerRadius=t.outerRadius-a}updateElements(t,e,i,o){const s=this,a=\"reset\"===o,r=s.chart,l=s.getDataset(),c=r.options.animation,h=s._cachedMeta.rScale,d=h.xCenter,u=h.yCenter,g=h.getIndexAngle(0)-.5*n.q;let b,p=g;const f=360/s.countVisibleElements();for(b=0;b<e;++b)p+=s._computeAngle(b,o,f);for(b=e;b<e+i;b++){const e=t[b];let i=p,n=p+s._computeAngle(b,o,f),m=r.getDataVisibility(b)?h.getDistanceFromCenterForValue(l.data[b]):0;p=n,a&&(c.animateScale&&(m=0),c.animateRotate&&(i=n=g));const x={x:d,y:u,innerRadius:0,outerRadius:m,startAngle:i,endAngle:n,options:s.resolveDataElementOptions(b,o)};s.updateElement(e,b,x,o)}}countVisibleElements(){const t=this.getDataset(),e=this._cachedMeta;let i=0;return e.data.forEach(((e,n)=>{!isNaN(t.data[n])&&this.chart.getDataVisibility(n)&&i++})),i}_computeAngle(t,e,i){return this.chart.getDataVisibility(t)?Object(n.Nb)(this.resolveDataElementOptions(t,e).angle||i):0}}C.id=\"polarArea\",C.defaults={dataElementType:\"arc\",animation:{animateRotate:!0,animateScale:!0},animations:{numbers:{type:\"number\",properties:[\"x\",\"y\",\"startAngle\",\"endAngle\",\"innerRadius\",\"outerRadius\"]}},indexAxis:\"r\",startAngle:0},C.overrides={aspectRatio:1,plugins:{legend:{labels:{generateLabels(t){const e=t.data;return e.labels.length&&e.datasets.length?e.labels.map(((e,i)=>{const n=t.getDatasetMeta(0).controller.getStyle(i);return{text:e,fillStyle:n.backgroundColor,strokeStyle:n.borderColor,lineWidth:n.borderWidth,hidden:!t.getDataVisibility(i),index:i}})):[]}},onClick(t,e,i){i.chart.toggleDataVisibility(e.index),i.chart.update()}},tooltip:{callbacks:{title:()=>\"\",label:t=>t.chart.data.labels[t.dataIndex]+\": \"+t.formattedValue}}},scales:{r:{type:\"radialLinear\",angleLines:{display:!1},beginAtZero:!0,grid:{circular:!0},pointLabels:{display:!1},startAngle:0}}};class A extends S{}A.id=\"pie\",A.defaults={cutout:0,rotation:0,circumference:360,radius:\"100%\"};class L extends v{getLabelAndValue(t){const e=this._cachedMeta.vScale,i=this.getParsed(t);return{label:e.getLabels()[t],value:\"\"+e.getLabelForValue(i[e.axis])}}update(t){const e=this,i=e._cachedMeta,n=i.dataset,o=i.data||[],s=i.iScale.getLabels();if(n.points=o,\"resize\"!==t){const i=e.resolveDatasetElementOptions(t);e.options.showLine||(i.borderWidth=0);const a={_loop:!0,_fullLoop:s.length===o.length,options:i};e.updateElement(n,void 0,a,t)}e.updateElements(o,0,o.length,t)}updateElements(t,e,i,n){const o=this,s=o.getDataset(),a=o._cachedMeta.rScale,r=\"reset\"===n;for(let l=e;l<e+i;l++){const e=t[l],i=o.resolveDataElementOptions(l,n),c=a.getPointPositionForValue(l,s.data[l]),h=r?a.xCenter:c.x,d=r?a.yCenter:c.y,u={x:h,y:d,angle:c.angle,skip:isNaN(h)||isNaN(d),options:i};o.updateElement(e,l,u,n)}}}L.id=\"radar\",L.defaults={datasetElementType:\"line\",dataElementType:\"point\",indexAxis:\"r\",showLine:!0,elements:{line:{fill:\"start\"}}},L.overrides={aspectRatio:1,scales:{r:{type:\"radialLinear\"}}};class T extends P{}T.id=\"scatter\",T.defaults={showLine:!1,fill:!1},T.overrides={interaction:{mode:\"point\"},plugins:{tooltip:{callbacks:{title:()=>\"\",label:t=>\"(\"+t.label+\", \"+t.formattedValue+\")\"}}},scales:{x:{type:\"linear\"},y:{type:\"linear\"}}};var R=Object.freeze({__proto__:null,BarController:k,BubbleController:D,DoughnutController:S,LineController:P,PolarAreaController:C,PieController:A,RadarController:L,ScatterController:T});function E(){throw new Error(\"This method is not implemented: Check that a complete date adapter is provided.\")}class z{constructor(t){this.options=t||{}}formats(){return E()}parse(t,e){return E()}format(t,e){return E()}add(t,e,i){return E()}diff(t,e,i){return E()}startOf(t,e,i){return E()}endOf(t,e){return E()}}z.override=function(t){Object.assign(z.prototype,t)};var F={_date:z};function I(t,e){return\"native\"in t?{x:t.x,y:t.y}:Object(n.Tb)(t,e)}function V(t,e,i,o){const{controller:s,data:a,_sorted:r}=t,l=s._cachedMeta.iScale;if(l&&e===l.axis&&r&&a.length){const t=l._reversePixels?n.c:n.Sb;if(!o)return t(a,e,i);if(s._sharedOptions){const n=a[0],o=\"function\"===typeof n.getRange&&n.getRange(e);if(o){const n=t(a,e,i-o),s=t(a,e,i+o);return{lo:n.lo,hi:s.hi}}}}return{lo:0,hi:a.length-1}}function B(t,e,i,n,o){const s=t.getSortedVisibleDatasetMetas(),a=i[e];for(let r=0,l=s.length;r<l;++r){const{index:t,data:i}=s[r],{lo:l,hi:c}=V(s[r],e,a,o);for(let e=l;e<=c;++e){const o=i[e];o.skip||n(o,t,e)}}}function W(t,e,i,o){const s=[];if(!Object(n.b)(e,t.chartArea,t._minPadding))return s;return B(t,i,e,(function(t,i,n){t.inRange(e.x,e.y,o)&&s.push({element:t,datasetIndex:i,index:n})}),!0),s}function N(t,e,i,o,s){const a=function(t){const e=-1!==t.indexOf(\"x\"),i=-1!==t.indexOf(\"y\");return function(t,n){const o=e?Math.abs(t.x-n.x):0,s=i?Math.abs(t.y-n.y):0;return Math.sqrt(Math.pow(o,2)+Math.pow(s,2))}}(i);let r=Number.POSITIVE_INFINITY,l=[];if(!Object(n.b)(e,t.chartArea,t._minPadding))return l;return B(t,i,e,(function(t,i,n){if(o&&!t.inRange(e.x,e.y,s))return;const c=t.getCenterPoint(s),h=a(e,c);h<r?(l=[{element:t,datasetIndex:i,index:n}],r=h):h===r&&l.push({element:t,datasetIndex:i,index:n})})),l}function H(t,e,i,n){const o=I(e,t),s=[],a=i.axis,r=\"x\"===a?\"inXRange\":\"inYRange\";let l=!1;return function(t,e){const i=t.getSortedVisibleDatasetMetas();let n,o,s;for(let a=0,r=i.length;a<r;++a){({index:n,data:o}=i[a]);for(let t=0,i=o.length;t<i;++t)s=o[t],s.skip||e(s,n,t)}}(t,((t,e,i)=>{t[r](o[a],n)&&s.push({element:t,datasetIndex:e,index:i}),t.inRange(o.x,o.y,n)&&(l=!0)})),i.intersect&&!l?[]:s}var $={modes:{index(t,e,i,n){const o=I(e,t),s=i.axis||\"x\",a=i.intersect?W(t,o,s,n):N(t,o,s,!1,n),r=[];return a.length?(t.getSortedVisibleDatasetMetas().forEach((t=>{const e=a[0].index,i=t.data[e];i&&!i.skip&&r.push({element:i,datasetIndex:t.index,index:e})})),r):[]},dataset(t,e,i,n){const o=I(e,t),s=i.axis||\"xy\";let a=i.intersect?W(t,o,s,n):N(t,o,s,!1,n);if(a.length>0){const e=a[0].datasetIndex,i=t.getDatasetMeta(e).data;a=[];for(let t=0;t<i.length;++t)a.push({element:i[t],datasetIndex:e,index:t})}return a},point:(t,e,i,n)=>W(t,I(e,t),i.axis||\"xy\",n),nearest:(t,e,i,n)=>N(t,I(e,t),i.axis||\"xy\",i.intersect,n),x:(t,e,i,n)=>(i.axis=\"x\",H(t,e,i,n)),y:(t,e,i,n)=>(i.axis=\"y\",H(t,e,i,n))}};const U=[\"left\",\"top\",\"right\",\"bottom\"];function Y(t,e){return t.filter((t=>t.pos===e))}function X(t,e){return t.filter((t=>-1===U.indexOf(t.pos)&&t.box.axis===e))}function q(t,e){return t.sort(((t,i)=>{const n=e?i:t,o=e?t:i;return n.weight===o.weight?n.index-o.index:n.weight-o.weight}))}function K(t,e,i,n){return Math.max(t[i],e[i])+Math.max(t[n],e[n])}function G(t,e){t.top=Math.max(t.top,e.top),t.left=Math.max(t.left,e.left),t.bottom=Math.max(t.bottom,e.bottom),t.right=Math.max(t.right,e.right)}function J(t,e,i){const o=i.box,s=t.maxPadding;Object(n.Cb)(i.pos)||(i.size&&(t[i.pos]-=i.size),i.size=i.horizontal?o.height:o.width,t[i.pos]+=i.size),o.getPadding&&G(s,o.getPadding());const a=Math.max(0,e.outerWidth-K(s,t,\"left\",\"right\")),r=Math.max(0,e.outerHeight-K(s,t,\"top\",\"bottom\")),l=a!==t.w,c=r!==t.h;return t.w=a,t.h=r,i.horizontal?{same:l,other:c}:{same:c,other:l}}function Q(t,e){const i=e.maxPadding;function n(t){const n={left:0,top:0,right:0,bottom:0};return t.forEach((t=>{n[t]=Math.max(e[t],i[t])})),n}return n(t?[\"left\",\"right\"]:[\"top\",\"bottom\"])}function Z(t,e,i){const n=[];let o,s,a,r,l,c;for(o=0,s=t.length,l=0;o<s;++o){a=t[o],r=a.box,r.update(a.width||e.w,a.height||e.h,Q(a.horizontal,e));const{same:s,other:h}=J(e,i,a);l|=s&&n.length,c=c||h,r.fullSize||n.push(a)}return l&&Z(n,e,i)||c}function tt(t,e,i){const n=i.padding;let o,s,a,r,l=e.x,c=e.y;for(o=0,s=t.length;o<s;++o)a=t[o],r=a.box,a.horizontal?(r.left=r.fullSize?n.left:e.left,r.right=r.fullSize?i.outerWidth-n.right:e.left+e.w,r.top=c,r.bottom=c+r.height,r.width=r.right-r.left,c=r.bottom):(r.left=l,r.right=l+r.width,r.top=r.fullSize?n.top:e.top,r.bottom=r.fullSize?i.outerHeight-n.right:e.top+e.h,r.height=r.bottom-r.top,l=r.right);e.x=l,e.y=c}n.xb.set(\"layout\",{padding:{top:0,right:0,bottom:0,left:0}});var et={addBox(t,e){t.boxes||(t.boxes=[]),e.fullSize=e.fullSize||!1,e.position=e.position||\"top\",e.weight=e.weight||0,e._layers=e._layers||function(){return[{z:0,draw(t){e.draw(t)}}]},t.boxes.push(e)},removeBox(t,e){const i=t.boxes?t.boxes.indexOf(e):-1;-1!==i&&t.boxes.splice(i,1)},configure(t,e,i){e.fullSize=i.fullSize,e.position=i.position,e.weight=i.weight},update(t,e,i,o){if(!t)return;const s=Object(n.d)(t.options.layout.padding),a=Math.max(e-s.width,0),r=Math.max(i-s.height,0),l=function(t){const e=function(t){const e=[];let i,n,o;for(i=0,n=(t||[]).length;i<n;++i)o=t[i],e.push({index:i,box:o,pos:o.position,horizontal:o.isHorizontal(),weight:o.weight});return e}(t),i=q(e.filter((t=>t.box.fullSize)),!0),n=q(Y(e,\"left\"),!0),o=q(Y(e,\"right\")),s=q(Y(e,\"top\"),!0),a=q(Y(e,\"bottom\")),r=X(e,\"x\"),l=X(e,\"y\");return{fullSize:i,leftAndTop:n.concat(s),rightAndBottom:o.concat(l).concat(a).concat(r),chartArea:Y(e,\"chartArea\"),vertical:n.concat(o).concat(l),horizontal:s.concat(a).concat(r)}}(t.boxes),c=l.vertical,h=l.horizontal;Object(n.e)(t.boxes,(t=>{\"function\"===typeof t.beforeLayout&&t.beforeLayout()}));const d=c.reduce(((t,e)=>e.box.options&&!1===e.box.options.display?t:t+1),0)||1,u=Object.freeze({outerWidth:e,outerHeight:i,padding:s,availableWidth:a,availableHeight:r,vBoxMaxWidth:a/2/d,hBoxMaxHeight:r/2}),g=Object.assign({},s);G(g,Object(n.d)(o));const b=Object.assign({maxPadding:g,w:a,h:r,x:s.left,y:s.top},s);!function(t,e){let i,n,o;for(i=0,n=t.length;i<n;++i)o=t[i],o.horizontal?(o.width=o.box.fullSize&&e.availableWidth,o.height=e.hBoxMaxHeight):(o.width=e.vBoxMaxWidth,o.height=o.box.fullSize&&e.availableHeight)}(c.concat(h),u),Z(l.fullSize,b,u),Z(c,b,u),Z(h,b,u)&&Z(c,b,u),function(t){const e=t.maxPadding;function i(i){const n=Math.max(e[i]-t[i],0);return t[i]+=n,n}t.y+=i(\"top\"),t.x+=i(\"left\"),i(\"right\"),i(\"bottom\")}(b),tt(l.leftAndTop,b,u),b.x+=b.w,b.y+=b.h,tt(l.rightAndBottom,b,u),t.chartArea={left:b.left,top:b.top,right:b.left+b.w,bottom:b.top+b.h,height:b.h,width:b.w},Object(n.e)(l.chartArea,(e=>{const i=e.box;Object.assign(i,t.chartArea),i.update(b.w,b.h)}))}};class it{acquireContext(t,e){}releaseContext(t){return!1}addEventListener(t,e,i){}removeEventListener(t,e,i){}getDevicePixelRatio(){return 1}getMaximumSize(t,e,i,n){return e=Math.max(0,e||t.width),i=i||t.height,{width:e,height:Math.max(0,n?Math.floor(e/n):i)}}isAttached(t){return!0}}class nt extends it{acquireContext(t){return t&&t.getContext&&t.getContext(\"2d\")||null}}const ot={touchstart:\"mousedown\",touchmove:\"mousemove\",touchend:\"mouseup\",pointerenter:\"mouseenter\",pointerdown:\"mousedown\",pointermove:\"mousemove\",pointerup:\"mouseup\",pointerleave:\"mouseout\",pointerout:\"mouseout\"},st=t=>null===t||\"\"===t;const at=!!n.k&&{passive:!0};function rt(t,e,i){t.canvas.removeEventListener(e,i,at)}function lt(t,e,i){const o=t.canvas,s=o&&Object(n.g)(o)||o,a=new MutationObserver((t=>{const e=Object(n.g)(s);t.forEach((t=>{for(let n=0;n<t.addedNodes.length;n++){const o=t.addedNodes[n];o!==s&&o!==e||i(t.target)}}))}));return a.observe(document,{childList:!0,subtree:!0}),a}function ct(t,e,i){const o=t.canvas,s=o&&Object(n.g)(o);if(!s)return;const a=new MutationObserver((t=>{t.forEach((t=>{for(let e=0;e<t.removedNodes.length;e++)if(t.removedNodes[e]===o){i();break}}))}));return a.observe(s,{childList:!0}),a}const ht=new Map;let dt=0;function ut(){const t=window.devicePixelRatio;t!==dt&&(dt=t,ht.forEach(((e,i)=>{i.currentDevicePixelRatio!==t&&e()})))}function gt(t,e,i){const o=t.canvas,s=o&&Object(n.g)(o);if(!s)return;const a=Object(n.j)(((t,e)=>{const n=s.clientWidth;i(t,e),n<s.clientWidth&&i()}),window),r=new ResizeObserver((t=>{const e=t[0],i=e.contentRect.width,n=e.contentRect.height;0===i&&0===n||a(i,n)}));return r.observe(s),function(t,e){ht.size||window.addEventListener(\"resize\",ut),ht.set(t,e)}(t,a),r}function bt(t,e,i){i&&i.disconnect(),\"resize\"===e&&function(t){ht.delete(t),ht.size||window.removeEventListener(\"resize\",ut)}(t)}function pt(t,e,i){const o=t.canvas,s=Object(n.j)((e=>{null!==t.ctx&&i(function(t,e){const i=ot[t.type]||t.type,{x:o,y:s}=Object(n.Tb)(t,e);return{type:i,chart:e,native:t,x:void 0!==o?o:null,y:void 0!==s?s:null}}(e,t))}),t,(t=>{const e=t[0];return[e,e.offsetX,e.offsetY]}));return function(t,e,i){t.addEventListener(e,i,at)}(o,e,s),s}class ft extends it{acquireContext(t,e){const i=t&&t.getContext&&t.getContext(\"2d\");return i&&i.canvas===t?(function(t,e){const i=t.style,o=t.getAttribute(\"height\"),s=t.getAttribute(\"width\");if(t.$chartjs={initial:{height:o,width:s,style:{display:i.display,height:i.height,width:i.width}}},i.display=i.display||\"block\",i.boxSizing=i.boxSizing||\"border-box\",st(s)){const e=Object(n.h)(t,\"width\");void 0!==e&&(t.width=e)}if(st(o))if(\"\"===t.style.height)t.height=t.width/(e||2);else{const e=Object(n.h)(t,\"height\");void 0!==e&&(t.height=e)}}(t,e),i):null}releaseContext(t){const e=t.canvas;if(!e.$chartjs)return!1;const i=e.$chartjs.initial;[\"height\",\"width\"].forEach((t=>{const o=i[t];Object(n.Db)(o)?e.removeAttribute(t):e.setAttribute(t,o)}));const o=i.style||{};return Object.keys(o).forEach((t=>{e.style[t]=o[t]})),e.width=e.width,delete e.$chartjs,!0}addEventListener(t,e,i){this.removeEventListener(t,e);const n=t.$proxies||(t.$proxies={}),o={attach:lt,detach:ct,resize:gt}[e]||pt;n[e]=o(t,e,i)}removeEventListener(t,e){const i=t.$proxies||(t.$proxies={}),n=i[e];if(!n)return;({attach:bt,detach:bt,resize:bt}[e]||rt)(t,e,n),i[e]=void 0}getDevicePixelRatio(){return window.devicePixelRatio}getMaximumSize(t,e,i,o){return Object(n.f)(t,e,i,o)}isAttached(t){const e=Object(n.g)(t);return!(!e||!Object(n.g)(e))}}class mt{constructor(){this.x=void 0,this.y=void 0,this.active=!1,this.options=void 0,this.$animations=void 0}tooltipPosition(t){const{x:e,y:i}=this.getProps([\"x\",\"y\"],t);return{x:e,y:i}}hasValue(){return Object(n.Qb)(this.x)&&Object(n.Qb)(this.y)}getProps(t,e){const i=this,n=this.$animations;if(!e||!n)return i;const o={};return t.forEach((t=>{o[t]=n[t]&&n[t].active()?n[t]._to:i[t]})),o}}mt.defaults={},mt.defaultRoutes=void 0;const xt={values:t=>Object(n.vb)(t)?t:\"\"+t,numeric(t,e,i){if(0===t)return\"0\";const o=this.chart.options.locale;let s,a=t;if(i.length>1){const e=Math.max(Math.abs(i[0].value),Math.abs(i[i.length-1].value));(e<1e-4||e>1e15)&&(s=\"scientific\"),a=function(t,e){let i=e.length>3?e[2].value-e[1].value:e[1].value-e[0].value;Math.abs(i)>=1&&t!==Math.floor(t)&&(i=t-Math.floor(t));return i}(t,i)}const r=Object(n.l)(Math.abs(a)),l=Math.max(Math.min(-1*Math.floor(r),20),0),c={notation:s,minimumFractionDigits:l,maximumFractionDigits:l};return Object.assign(c,this.options.ticks.format),Object(n.Jb)(t,o,c)},logarithmic(t,e,i){if(0===t)return\"0\";const o=t/Math.pow(10,Math.floor(Object(n.l)(t)));return 1===o||2===o||5===o?xt.numeric.call(this,t,e,i):\"\"}};var _t={formatters:xt};function yt(t,e){const i=t.options.ticks,o=i.maxTicksLimit||function(t){const e=t.options.offset,i=t._tickSize(),n=t._length/i+(e?0:1),o=t._maxLength/i;return Math.floor(Math.min(n,o))}(t),s=i.major.enabled?function(t){const e=[];let i,n;for(i=0,n=t.length;i<n;i++)t[i].major&&e.push(i);return e}(e):[],a=s.length,r=s[0],l=s[a-1],c=[];if(a>o)return function(t,e,i,n){let o,s=0,a=i[0];for(n=Math.ceil(n),o=0;o<t.length;o++)o===a&&(e.push(t[o]),s++,a=i[s*n])}(e,c,s,a/o),c;const h=function(t,e,i){const o=function(t){const e=t.length;let i,n;if(e<2)return!1;for(n=t[0],i=1;i<e;++i)if(t[i]-t[i-1]!==n)return!1;return n}(t),s=e.length/i;if(!o)return Math.max(s,1);const a=Object(n.m)(o);for(let n=0,r=a.length-1;n<r;n++){const t=a[n];if(t>s)return t}return Math.max(s,1)}(s,e,o);if(a>0){let t,i;const o=a>1?Math.round((l-r)/(a-1)):null;for(vt(e,c,h,Object(n.Db)(o)?0:r-o,r),t=0,i=a-1;t<i;t++)vt(e,c,h,s[t],s[t+1]);return vt(e,c,h,l,Object(n.Db)(o)?e.length:l+o),c}return vt(e,c,h),c}function vt(t,e,i,o,s){const a=Object(n.Pb)(o,0),r=Math.min(Object(n.Pb)(s,t.length),t.length);let l,c,h,d=0;for(i=Math.ceil(i),s&&(l=s-o,i=l/Math.floor(l/i)),h=a;h<0;)d++,h=Math.round(a+d*i);for(c=Math.max(a,0);c<r;c++)c===h&&(e.push(t[c]),d++,h=Math.round(a+d*i))}n.xb.set(\"scale\",{display:!0,offset:!1,reverse:!1,beginAtZero:!1,bounds:\"ticks\",grace:0,grid:{display:!0,lineWidth:1,drawBorder:!0,drawOnChartArea:!0,drawTicks:!0,tickLength:8,tickWidth:(t,e)=>e.lineWidth,tickColor:(t,e)=>e.color,offset:!1,borderDash:[],borderDashOffset:0,borderWidth:1},title:{display:!1,text:\"\",padding:{top:4,bottom:4}},ticks:{minRotation:0,maxRotation:50,mirror:!1,textStrokeWidth:0,textStrokeColor:\"\",padding:3,display:!0,autoSkip:!0,autoSkipPadding:3,labelOffset:0,callback:_t.formatters.values,minor:{},major:{},align:\"center\",crossAlign:\"near\",showLabelBackdrop:!1,backdropColor:\"rgba(255, 255, 255, 0.75)\",backdropPadding:2}}),n.xb.route(\"scale.ticks\",\"color\",\"\",\"color\"),n.xb.route(\"scale.grid\",\"color\",\"\",\"borderColor\"),n.xb.route(\"scale.grid\",\"borderColor\",\"\",\"borderColor\"),n.xb.route(\"scale.title\",\"color\",\"\",\"color\"),n.xb.describe(\"scale\",{_fallback:!1,_scriptable:t=>!t.startsWith(\"before\")&&!t.startsWith(\"after\")&&\"callback\"!==t&&\"parser\"!==t,_indexable:t=>\"borderDash\"!==t&&\"tickBorderDash\"!==t}),n.xb.describe(\"scales\",{_fallback:\"scale\"});const Ot=(t,e,i)=>\"top\"===e||\"left\"===e?t[e]+i:t[e]-i;function jt(t,e){const i=[],n=t.length/e,o=t.length;let s=0;for(;s<o;s+=n)i.push(t[Math.floor(s)]);return i}function Mt(t,e,i){const n=t.ticks.length,o=Math.min(e,n-1),s=t._startPixel,a=t._endPixel,r=1e-6;let l,c=t.getPixelForTick(o);if(!(i&&(l=1===n?Math.max(c-s,a-c):0===e?(t.getPixelForTick(1)-c)/2:(c-t.getPixelForTick(o-1))/2,c+=o<e?l:-l,c<s-r||c>a+r)))return c}function wt(t){return t.drawTicks?t.tickLength:0}function kt(t,e){if(!t.display)return 0;const i=Object(n.x)(t.font,e),o=Object(n.d)(t.padding);return(Object(n.vb)(t.text)?t.text.length:1)*i.lineHeight+o.height}function Dt(t,e,i){let o=Object(n.y)(t);return(i&&\"right\"!==e||!i&&\"right\"===e)&&(o=(t=>\"left\"===t?\"right\":\"right\"===t?\"left\":t)(o)),o}class St extends mt{constructor(t){super(),this.id=t.id,this.type=t.type,this.options=void 0,this.ctx=t.ctx,this.chart=t.chart,this.top=void 0,this.bottom=void 0,this.left=void 0,this.right=void 0,this.width=void 0,this.height=void 0,this._margins={left:0,right:0,top:0,bottom:0},this.maxWidth=void 0,this.maxHeight=void 0,this.paddingTop=void 0,this.paddingBottom=void 0,this.paddingLeft=void 0,this.paddingRight=void 0,this.axis=void 0,this.labelRotation=void 0,this.min=void 0,this.max=void 0,this._range=void 0,this.ticks=[],this._gridLineItems=null,this._labelItems=null,this._labelSizes=null,this._length=0,this._maxLength=0,this._longestTextCache={},this._startPixel=void 0,this._endPixel=void 0,this._reversePixels=!1,this._userMax=void 0,this._userMin=void 0,this._suggestedMax=void 0,this._suggestedMin=void 0,this._ticksLength=0,this._borderValue=0,this._cache={},this._dataLimitsCached=!1,this.$context=void 0}init(t){const e=this;e.options=t.setContext(e.getContext()),e.axis=t.axis,e._userMin=e.parse(t.min),e._userMax=e.parse(t.max),e._suggestedMin=e.parse(t.suggestedMin),e._suggestedMax=e.parse(t.suggestedMax)}parse(t,e){return t}getUserBounds(){let{_userMin:t,_userMax:e,_suggestedMin:i,_suggestedMax:o}=this;return t=Object(n.n)(t,Number.POSITIVE_INFINITY),e=Object(n.n)(e,Number.NEGATIVE_INFINITY),i=Object(n.n)(i,Number.POSITIVE_INFINITY),o=Object(n.n)(o,Number.NEGATIVE_INFINITY),{min:Object(n.n)(t,i),max:Object(n.n)(e,o),minDefined:Object(n.Ab)(t),maxDefined:Object(n.Ab)(e)}}getMinMax(t){const e=this;let i,{min:o,max:s,minDefined:a,maxDefined:r}=e.getUserBounds();if(a&&r)return{min:o,max:s};const l=e.getMatchingVisibleMetas();for(let n=0,c=l.length;n<c;++n)i=l[n].controller.getMinMax(e,t),a||(o=Math.min(o,i.min)),r||(s=Math.max(s,i.max));return{min:Object(n.n)(o,Object(n.n)(s,o)),max:Object(n.n)(s,Object(n.n)(o,s))}}getPadding(){const t=this;return{left:t.paddingLeft||0,top:t.paddingTop||0,right:t.paddingRight||0,bottom:t.paddingBottom||0}}getTicks(){return this.ticks}getLabels(){const t=this.chart.data;return this.options.labels||(this.isHorizontal()?t.xLabels:t.yLabels)||t.labels||[]}beforeLayout(){this._cache={},this._dataLimitsCached=!1}beforeUpdate(){Object(n.o)(this.options.beforeUpdate,[this])}update(t,e,i){const o=this,s=o.options.ticks,a=s.sampleSize;o.beforeUpdate(),o.maxWidth=t,o.maxHeight=e,o._margins=i=Object.assign({left:0,right:0,top:0,bottom:0},i),o.ticks=null,o._labelSizes=null,o._gridLineItems=null,o._labelItems=null,o.beforeSetDimensions(),o.setDimensions(),o.afterSetDimensions(),o._maxLength=o.isHorizontal()?o.width+i.left+i.right:o.height+i.top+i.bottom,o._dataLimitsCached||(o.beforeDataLimits(),o.determineDataLimits(),o.afterDataLimits(),o._range=Object(n.p)(o,o.options.grace),o._dataLimitsCached=!0),o.beforeBuildTicks(),o.ticks=o.buildTicks()||[],o.afterBuildTicks();const r=a<o.ticks.length;o._convertTicksToLabels(r?jt(o.ticks,a):o.ticks),o.configure(),o.beforeCalculateLabelRotation(),o.calculateLabelRotation(),o.afterCalculateLabelRotation(),s.display&&(s.autoSkip||\"auto\"===s.source)&&(o.ticks=yt(o,o.ticks),o._labelSizes=null),r&&o._convertTicksToLabels(o.ticks),o.beforeFit(),o.fit(),o.afterFit(),o.afterUpdate()}configure(){const t=this;let e,i,n=t.options.reverse;t.isHorizontal()?(e=t.left,i=t.right):(e=t.top,i=t.bottom,n=!n),t._startPixel=e,t._endPixel=i,t._reversePixels=n,t._length=i-e,t._alignToPixels=t.options.alignToPixels}afterUpdate(){Object(n.o)(this.options.afterUpdate,[this])}beforeSetDimensions(){Object(n.o)(this.options.beforeSetDimensions,[this])}setDimensions(){const t=this;t.isHorizontal()?(t.width=t.maxWidth,t.left=0,t.right=t.width):(t.height=t.maxHeight,t.top=0,t.bottom=t.height),t.paddingLeft=0,t.paddingTop=0,t.paddingRight=0,t.paddingBottom=0}afterSetDimensions(){Object(n.o)(this.options.afterSetDimensions,[this])}_callHooks(t){const e=this;e.chart.notifyPlugins(t,e.getContext()),Object(n.o)(e.options[t],[e])}beforeDataLimits(){this._callHooks(\"beforeDataLimits\")}determineDataLimits(){}afterDataLimits(){this._callHooks(\"afterDataLimits\")}beforeBuildTicks(){this._callHooks(\"beforeBuildTicks\")}buildTicks(){return[]}afterBuildTicks(){this._callHooks(\"afterBuildTicks\")}beforeTickToLabelConversion(){Object(n.o)(this.options.beforeTickToLabelConversion,[this])}generateTickLabels(t){const e=this,i=e.options.ticks;let o,s,a;for(o=0,s=t.length;o<s;o++)a=t[o],a.label=Object(n.o)(i.callback,[a.value,o,t],e);for(o=0;o<s;o++)Object(n.Db)(t[o].label)&&(t.splice(o,1),s--,o--)}afterTickToLabelConversion(){Object(n.o)(this.options.afterTickToLabelConversion,[this])}beforeCalculateLabelRotation(){Object(n.o)(this.options.beforeCalculateLabelRotation,[this])}calculateLabelRotation(){const t=this,e=t.options,i=e.ticks,o=t.ticks.length,s=i.minRotation||0,a=i.maxRotation;let r,l,c,h=s;if(!t._isVisible()||!i.display||s>=a||o<=1||!t.isHorizontal())return void(t.labelRotation=s);const d=t._getLabelSizes(),u=d.widest.width,g=d.highest.height,b=Object(n.Rb)(t.chart.width-u,0,t.maxWidth);r=e.offset?t.maxWidth/o:b/(o-1),u+6>r&&(r=b/(o-(e.offset?.5:1)),l=t.maxHeight-wt(e.grid)-i.padding-kt(e.title,t.chart.options.font),c=Math.sqrt(u*u+g*g),h=Object(n.r)(Math.min(Math.asin(Math.min((d.highest.height+6)/r,1)),Math.asin(Math.min(l/c,1))-Math.asin(g/c))),h=Math.max(s,Math.min(a,h))),t.labelRotation=h}afterCalculateLabelRotation(){Object(n.o)(this.options.afterCalculateLabelRotation,[this])}beforeFit(){Object(n.o)(this.options.beforeFit,[this])}fit(){const t=this,e={width:0,height:0},{chart:i,options:{ticks:o,title:s,grid:a}}=t,r=t._isVisible(),l=t.isHorizontal();if(r){const r=kt(s,i.options.font);if(l?(e.width=t.maxWidth,e.height=wt(a)+r):(e.height=t.maxHeight,e.width=wt(a)+r),o.display&&t.ticks.length){const{first:i,last:s,widest:a,highest:r}=t._getLabelSizes(),c=2*o.padding,h=Object(n.Nb)(t.labelRotation),d=Math.cos(h),u=Math.sin(h);if(l){const i=o.mirror?0:u*a.width+d*r.height;e.height=Math.min(t.maxHeight,e.height+i+c)}else{const i=o.mirror?0:d*a.width+u*r.height;e.width=Math.min(t.maxWidth,e.width+i+c)}t._calculatePadding(i,s,u,d)}}t._handleMargins(),l?(t.width=t._length=i.width-t._margins.left-t._margins.right,t.height=e.height):(t.width=e.width,t.height=t._length=i.height-t._margins.top-t._margins.bottom)}_calculatePadding(t,e,i,n){const o=this,{ticks:{align:s,padding:a},position:r}=o.options,l=0!==o.labelRotation,c=\"top\"!==r&&\"x\"===o.axis;if(o.isHorizontal()){const r=o.getPixelForTick(0)-o.left,h=o.right-o.getPixelForTick(o.ticks.length-1);let d=0,u=0;l?c?(d=n*t.width,u=i*e.height):(d=i*t.height,u=n*e.width):\"start\"===s?u=e.width:\"end\"===s?d=t.width:(d=t.width/2,u=e.width/2),o.paddingLeft=Math.max((d-r+a)*o.width/(o.width-r),0),o.paddingRight=Math.max((u-h+a)*o.width/(o.width-h),0)}else{let i=e.height/2,n=t.height/2;\"start\"===s?(i=0,n=t.height):\"end\"===s&&(i=e.height,n=0),o.paddingTop=i+a,o.paddingBottom=n+a}}_handleMargins(){const t=this;t._margins&&(t._margins.left=Math.max(t.paddingLeft,t._margins.left),t._margins.top=Math.max(t.paddingTop,t._margins.top),t._margins.right=Math.max(t.paddingRight,t._margins.right),t._margins.bottom=Math.max(t.paddingBottom,t._margins.bottom))}afterFit(){Object(n.o)(this.options.afterFit,[this])}isHorizontal(){const{axis:t,position:e}=this.options;return\"top\"===e||\"bottom\"===e||\"x\"===t}isFullSize(){return this.options.fullSize}_convertTicksToLabels(t){const e=this;e.beforeTickToLabelConversion(),e.generateTickLabels(t),e.afterTickToLabelConversion()}_getLabelSizes(){const t=this;let e=t._labelSizes;if(!e){const i=t.options.ticks.sampleSize;let n=t.ticks;i<n.length&&(n=jt(n,i)),t._labelSizes=e=t._computeLabelSizes(n,n.length)}return e}_computeLabelSizes(t,e){const{ctx:i,_longestTextCache:o}=this,s=[],a=[];let r,l,c,h,d,u,g,b,p,f,m,x=0,_=0;for(r=0;r<e;++r){if(h=t[r].label,d=this._resolveTickFontOptions(r),i.font=u=d.string,g=o[u]=o[u]||{data:{},gc:[]},b=d.lineHeight,p=f=0,Object(n.Db)(h)||Object(n.vb)(h)){if(Object(n.vb)(h))for(l=0,c=h.length;l<c;++l)m=h[l],Object(n.Db)(m)||Object(n.vb)(m)||(p=Object(n.s)(i,g.data,g.gc,p,m),f+=b)}else p=Object(n.s)(i,g.data,g.gc,p,h),f=b;s.push(p),a.push(f),x=Math.max(p,x),_=Math.max(f,_)}!function(t,e){Object(n.e)(t,(t=>{const i=t.gc,n=i.length/2;let o;if(n>e){for(o=0;o<n;++o)delete t.data[i[o]];i.splice(0,n)}}))}(o,e);const y=s.indexOf(x),v=a.indexOf(_),O=t=>({width:s[t]||0,height:a[t]||0});return{first:O(0),last:O(e-1),widest:O(y),highest:O(v),widths:s,heights:a}}getLabelForValue(t){return t}getPixelForValue(t,e){return NaN}getValueForPixel(t){}getPixelForTick(t){const e=this.ticks;return t<0||t>e.length-1?null:this.getPixelForValue(e[t].value)}getPixelForDecimal(t){const e=this;e._reversePixels&&(t=1-t);const i=e._startPixel+t*e._length;return Object(n.t)(e._alignToPixels?Object(n.v)(e.chart,i,0):i)}getDecimalForPixel(t){const e=(t-this._startPixel)/this._length;return this._reversePixels?1-e:e}getBasePixel(){return this.getPixelForValue(this.getBaseValue())}getBaseValue(){const{min:t,max:e}=this;return t<0&&e<0?e:t>0&&e>0?t:0}getContext(t){const e=this,i=e.ticks||[];if(t>=0&&t<i.length){const n=i[t];return n.$context||(n.$context=function(t,e,i){return Object.assign(Object.create(t),{tick:i,index:e,type:\"tick\"})}(e.getContext(),t,n))}return e.$context||(e.$context=(n=e.chart.getContext(),o=e,Object.assign(Object.create(n),{scale:o,type:\"scale\"})));var n,o}_tickSize(){const t=this,e=t.options.ticks,i=Object(n.Nb)(t.labelRotation),o=Math.abs(Math.cos(i)),s=Math.abs(Math.sin(i)),a=t._getLabelSizes(),r=e.autoSkipPadding||0,l=a?a.widest.width+r:0,c=a?a.highest.height+r:0;return t.isHorizontal()?c*o>l*s?l/o:c/s:c*s<l*o?c/o:l/s}_isVisible(){const t=this.options.display;return\"auto\"!==t?!!t:this.getMatchingVisibleMetas().length>0}_computeGridLineItems(t){const e=this,i=e.axis,o=e.chart,s=e.options,{grid:a,position:r}=s,l=a.offset,c=e.isHorizontal(),h=e.ticks.length+(l?1:0),d=wt(a),u=[],g=a.setContext(e.getContext()),b=g.drawBorder?g.borderWidth:0,p=b/2,f=function(t){return Object(n.v)(o,t,b)};let m,x,_,y,v,O,j,M,w,k,D,S;if(\"top\"===r)m=f(e.bottom),O=e.bottom-d,M=m-p,k=f(t.top)+p,S=t.bottom;else if(\"bottom\"===r)m=f(e.top),k=t.top,S=f(t.bottom)-p,O=m+p,M=e.top+d;else if(\"left\"===r)m=f(e.right),v=e.right-d,j=m-p,w=f(t.left)+p,D=t.right;else if(\"right\"===r)m=f(e.left),w=t.left,D=f(t.right)-p,v=m+p,j=e.left+d;else if(\"x\"===i){if(\"center\"===r)m=f((t.top+t.bottom)/2+.5);else if(Object(n.Cb)(r)){const t=Object.keys(r)[0],i=r[t];m=f(e.chart.scales[t].getPixelForValue(i))}k=t.top,S=t.bottom,O=m+p,M=O+d}else if(\"y\"===i){if(\"center\"===r)m=f((t.left+t.right)/2);else if(Object(n.Cb)(r)){const t=Object.keys(r)[0],i=r[t];m=f(e.chart.scales[t].getPixelForValue(i))}v=m-p,j=v-d,w=t.left,D=t.right}for(x=0;x<h;++x){const t=a.setContext(e.getContext(x)),i=t.lineWidth,s=t.color,r=a.borderDash||[],h=t.borderDashOffset,d=t.tickWidth,g=t.tickColor,b=t.tickBorderDash||[],p=t.tickBorderDashOffset;_=Mt(e,x,l),void 0!==_&&(y=Object(n.v)(o,_,i),c?v=j=w=D=y:O=M=k=S=y,u.push({tx1:v,ty1:O,tx2:j,ty2:M,x1:w,y1:k,x2:D,y2:S,width:i,color:s,borderDash:r,borderDashOffset:h,tickWidth:d,tickColor:g,tickBorderDash:b,tickBorderDashOffset:p}))}return e._ticksLength=h,e._borderValue=m,u}_computeLabelItems(t){const e=this,i=e.axis,o=e.options,{position:s,ticks:a}=o,r=e.isHorizontal(),l=e.ticks,{align:c,crossAlign:h,padding:d,mirror:u}=a,g=wt(o.grid),b=g+d,p=u?-d:b,f=-Object(n.Nb)(e.labelRotation),m=[];let x,_,y,v,O,j,M,w,k,D,S,P,C=\"middle\";if(\"top\"===s)j=e.bottom-p,M=e._getXAxisLabelAlignment();else if(\"bottom\"===s)j=e.top+p,M=e._getXAxisLabelAlignment();else if(\"left\"===s){const t=e._getYAxisLabelAlignment(g);M=t.textAlign,O=t.x}else if(\"right\"===s){const t=e._getYAxisLabelAlignment(g);M=t.textAlign,O=t.x}else if(\"x\"===i){if(\"center\"===s)j=(t.top+t.bottom)/2+b;else if(Object(n.Cb)(s)){const t=Object.keys(s)[0],i=s[t];j=e.chart.scales[t].getPixelForValue(i)+b}M=e._getXAxisLabelAlignment()}else if(\"y\"===i){if(\"center\"===s)O=(t.left+t.right)/2-b;else if(Object(n.Cb)(s)){const t=Object.keys(s)[0],i=s[t];O=e.chart.scales[t].getPixelForValue(i)}M=e._getYAxisLabelAlignment(g).textAlign}\"y\"===i&&(\"start\"===c?C=\"top\":\"end\"===c&&(C=\"bottom\"));const A=e._getLabelSizes();for(x=0,_=l.length;x<_;++x){y=l[x],v=y.label;const t=a.setContext(e.getContext(x));w=e.getPixelForTick(x)+a.labelOffset,k=e._resolveTickFontOptions(x),D=k.lineHeight,S=Object(n.vb)(v)?v.length:1;const i=S/2,o=t.color,c=t.textStrokeColor,d=t.textStrokeWidth;let g;if(r?(O=w,P=\"top\"===s?\"near\"===h||0!==f?-S*D+D/2:\"center\"===h?-A.highest.height/2-i*D+D:-A.highest.height+D/2:\"near\"===h||0!==f?D/2:\"center\"===h?A.highest.height/2-i*D:A.highest.height-S*D,u&&(P*=-1)):(j=w,P=(1-S)*D/2),t.showLabelBackdrop){const e=Object(n.d)(t.backdropPadding),i=A.heights[x],o=A.widths[x];let s=j+P-e.top,a=O-e.left;switch(C){case\"middle\":s-=i/2;break;case\"bottom\":s-=i}switch(M){case\"center\":a-=o/2;break;case\"right\":a-=o}g={left:a,top:s,width:o+e.width,height:i+e.height,color:t.backdropColor}}m.push({rotation:f,label:v,font:k,color:o,strokeColor:c,strokeWidth:d,textOffset:P,textAlign:M,textBaseline:C,translation:[O,j],backdrop:g})}return m}_getXAxisLabelAlignment(){const{position:t,ticks:e}=this.options;if(-Object(n.Nb)(this.labelRotation))return\"top\"===t?\"left\":\"right\";let i=\"center\";return\"start\"===e.align?i=\"left\":\"end\"===e.align&&(i=\"right\"),i}_getYAxisLabelAlignment(t){const e=this,{position:i,ticks:{crossAlign:n,mirror:o,padding:s}}=e.options,a=t+s,r=e._getLabelSizes().widest.width;let l,c;return\"left\"===i?o?(l=\"left\",c=e.right+s):(c=e.right-a,\"near\"===n?l=\"right\":\"center\"===n?(l=\"center\",c-=r/2):(l=\"left\",c=e.left)):\"right\"===i?o?(l=\"right\",c=e.left+s):(c=e.left+a,\"near\"===n?l=\"left\":\"center\"===n?(l=\"center\",c+=r/2):(l=\"right\",c=e.right)):l=\"right\",{textAlign:l,x:c}}_computeLabelArea(){const t=this;if(t.options.ticks.mirror)return;const e=t.chart,i=t.options.position;return\"left\"===i||\"right\"===i?{top:0,left:t.left,bottom:e.height,right:t.right}:\"top\"===i||\"bottom\"===i?{top:t.top,left:0,bottom:t.bottom,right:e.width}:void 0}drawBackground(){const{ctx:t,options:{backgroundColor:e},left:i,top:n,width:o,height:s}=this;e&&(t.save(),t.fillStyle=e,t.fillRect(i,n,o,s),t.restore())}getLineWidthForValue(t){const e=this,i=e.options.grid;if(!e._isVisible()||!i.display)return 0;const n=e.ticks.findIndex((e=>e.value===t));if(n>=0){return i.setContext(e.getContext(n)).lineWidth}return 0}drawGrid(t){const e=this,i=e.options.grid,n=e.ctx,o=e._gridLineItems||(e._gridLineItems=e._computeGridLineItems(t));let s,a;const r=(t,e,i)=>{i.width&&i.color&&(n.save(),n.lineWidth=i.width,n.strokeStyle=i.color,n.setLineDash(i.borderDash||[]),n.lineDashOffset=i.borderDashOffset,n.beginPath(),n.moveTo(t.x,t.y),n.lineTo(e.x,e.y),n.stroke(),n.restore())};if(i.display)for(s=0,a=o.length;s<a;++s){const t=o[s];i.drawOnChartArea&&r({x:t.x1,y:t.y1},{x:t.x2,y:t.y2},t),i.drawTicks&&r({x:t.tx1,y:t.ty1},{x:t.tx2,y:t.ty2},{color:t.tickColor,width:t.tickWidth,borderDash:t.tickBorderDash,borderDashOffset:t.tickBorderDashOffset})}}drawBorder(){const t=this,{chart:e,ctx:i,options:{grid:o}}=t,s=o.setContext(t.getContext()),a=o.drawBorder?s.borderWidth:0;if(!a)return;const r=o.setContext(t.getContext(0)).lineWidth,l=t._borderValue;let c,h,d,u;t.isHorizontal()?(c=Object(n.v)(e,t.left,a)-a/2,h=Object(n.v)(e,t.right,r)+r/2,d=u=l):(d=Object(n.v)(e,t.top,a)-a/2,u=Object(n.v)(e,t.bottom,r)+r/2,c=h=l),i.save(),i.lineWidth=s.borderWidth,i.strokeStyle=s.borderColor,i.beginPath(),i.moveTo(c,d),i.lineTo(h,u),i.stroke(),i.restore()}drawLabels(t){const e=this;if(!e.options.ticks.display)return;const i=e.ctx,o=e._computeLabelArea();o&&Object(n.Eb)(i,o);const s=e._labelItems||(e._labelItems=e._computeLabelItems(t));let a,r;for(a=0,r=s.length;a<r;++a){const t=s[a],e=t.font,o=t.label;t.backdrop&&(i.fillStyle=t.backdrop.color,i.fillRect(t.backdrop.left,t.backdrop.top,t.backdrop.width,t.backdrop.height));let r=t.textOffset;Object(n.w)(i,o,0,r,e,t)}o&&Object(n.Gb)(i)}drawTitle(){const{ctx:t,options:{position:e,title:i,reverse:o}}=this;if(!i.display)return;const s=Object(n.x)(i.font),a=Object(n.d)(i.padding),r=i.align;let l=s.lineHeight/2;\"bottom\"===e?(l+=a.bottom,Object(n.vb)(i.text)&&(l+=s.lineHeight*(i.text.length-1))):l+=a.top;const{titleX:c,titleY:h,maxWidth:d,rotation:u}=function(t,e,i,o){const{top:s,left:a,bottom:r,right:l}=t;let c,h,d,u=0;return t.isHorizontal()?(h=Object(n.z)(o,a,l),d=Ot(t,i,e),c=l-a):(h=Ot(t,i,e),d=Object(n.z)(o,r,s),u=\"left\"===i?-n.i:n.i),{titleX:h,titleY:d,maxWidth:c,rotation:u}}(this,l,e,r);Object(n.w)(t,i.text,0,0,s,{color:i.color,maxWidth:d,rotation:u,textAlign:Dt(r,e,o),textBaseline:\"middle\",translation:[c,h]})}draw(t){const e=this;e._isVisible()&&(e.drawBackground(),e.drawGrid(t),e.drawBorder(),e.drawTitle(),e.drawLabels(t))}_layers(){const t=this,e=t.options,i=e.ticks&&e.ticks.z||0,n=e.grid&&e.grid.z||0;return t._isVisible()&&t.draw===St.prototype.draw?[{z:n,draw(e){t.drawBackground(),t.drawGrid(e),t.drawTitle()}},{z:n+1,draw(){t.drawBorder()}},{z:i,draw(e){t.drawLabels(e)}}]:[{z:i,draw(e){t.draw(e)}}]}getMatchingVisibleMetas(t){const e=this,i=e.chart.getSortedVisibleDatasetMetas(),n=e.axis+\"AxisID\",o=[];let s,a;for(s=0,a=i.length;s<a;++s){const a=i[s];a[n]!==e.id||t&&a.type!==t||o.push(a)}return o}_resolveTickFontOptions(t){const e=this.options.ticks.setContext(this.getContext(t));return Object(n.x)(e.font)}_maxDigits(){const t=this,e=t._resolveTickFontOptions(0).lineHeight;return(t.isHorizontal()?t.width:t.height)/e}}class Pt{constructor(t,e,i){this.type=t,this.scope=e,this.override=i,this.items=Object.create(null)}isForType(t){return Object.prototype.isPrototypeOf.call(this.type.prototype,t.prototype)}register(t){const e=this,i=Object.getPrototypeOf(t);let o;(function(t){return\"id\"in t&&\"defaults\"in t})(i)&&(o=e.register(i));const s=e.items,a=t.id,r=e.scope+\".\"+a;if(!a)throw new Error(\"class does not have id: \"+t);return a in s||(s[a]=t,function(t,e,i){const o=Object(n.a)(Object.create(null),[i?n.xb.get(i):{},n.xb.get(e),t.defaults]);n.xb.set(e,o),t.defaultRoutes&&function(t,e){Object.keys(e).forEach((i=>{const o=i.split(\".\"),s=o.pop(),a=[t].concat(o).join(\".\"),r=e[i].split(\".\"),l=r.pop(),c=r.join(\".\");n.xb.route(a,s,c,l)}))}(e,t.defaultRoutes);t.descriptors&&n.xb.describe(e,t.descriptors)}(t,r,o),e.override&&n.xb.override(t.id,t.overrides)),r}get(t){return this.items[t]}unregister(t){const e=this.items,i=t.id,o=this.scope;i in e&&delete e[i],o&&i in n.xb[o]&&(delete n.xb[o][i],this.override&&delete n.A[i])}}var Ct=new class{constructor(){this.controllers=new Pt(v,\"datasets\",!0),this.elements=new Pt(mt,\"elements\"),this.plugins=new Pt(Object,\"plugins\"),this.scales=new Pt(St,\"scales\"),this._typedRegistries=[this.controllers,this.scales,this.elements]}add(...t){this._each(\"register\",t)}remove(...t){this._each(\"unregister\",t)}addControllers(...t){this._each(\"register\",t,this.controllers)}addElements(...t){this._each(\"register\",t,this.elements)}addPlugins(...t){this._each(\"register\",t,this.plugins)}addScales(...t){this._each(\"register\",t,this.scales)}getController(t){return this._get(t,this.controllers,\"controller\")}getElement(t){return this._get(t,this.elements,\"element\")}getPlugin(t){return this._get(t,this.plugins,\"plugin\")}getScale(t){return this._get(t,this.scales,\"scale\")}removeControllers(...t){this._each(\"unregister\",t,this.controllers)}removeElements(...t){this._each(\"unregister\",t,this.elements)}removePlugins(...t){this._each(\"unregister\",t,this.plugins)}removeScales(...t){this._each(\"unregister\",t,this.scales)}_each(t,e,i){const o=this;[...e].forEach((e=>{const s=i||o._getRegistryForType(e);i||s.isForType(e)||s===o.plugins&&e.id?o._exec(t,s,e):Object(n.e)(e,(e=>{const n=i||o._getRegistryForType(e);o._exec(t,n,e)}))}))}_exec(t,e,i){const o=Object(n.D)(t);Object(n.o)(i[\"before\"+o],[],i),e[t](i),Object(n.o)(i[\"after\"+o],[],i)}_getRegistryForType(t){for(let e=0;e<this._typedRegistries.length;e++){const i=this._typedRegistries[e];if(i.isForType(t))return i}return this.plugins}_get(t,e,i){const n=e.get(t);if(void 0===n)throw new Error('\"'+t+'\" is not a registered '+i+\".\");return n}};class At{constructor(){this._init=[]}notify(t,e,i,n){const o=this;\"beforeInit\"===e&&(o._init=o._createDescriptors(t,!0),o._notify(o._init,t,\"install\"));const s=n?o._descriptors(t).filter(n):o._descriptors(t),a=o._notify(s,t,e,i);return\"destroy\"===e&&(o._notify(s,t,\"stop\"),o._notify(o._init,t,\"uninstall\")),a}_notify(t,e,i,o){o=o||{};for(const s of t){const t=s.plugin,a=t[i],r=[e,o,s.options];if(!1===Object(n.o)(a,r,t)&&o.cancelable)return!1}return!0}invalidate(){Object(n.Db)(this._cache)||(this._oldCache=this._cache,this._cache=void 0)}_descriptors(t){if(this._cache)return this._cache;const e=this._cache=this._createDescriptors(t);return this._notifyStateChanges(t),e}_createDescriptors(t,e){const i=t&&t.config,o=Object(n.Pb)(i.options&&i.options.plugins,{}),s=function(t){const e=[],i=Object.keys(Ct.plugins.items);for(let o=0;o<i.length;o++)e.push(Ct.getPlugin(i[o]));const n=t.plugins||[];for(let o=0;o<n.length;o++){const t=n[o];-1===e.indexOf(t)&&e.push(t)}return e}(i);return!1!==o||e?function(t,e,i,n){const o=[],s=t.getContext();for(let a=0;a<e.length;a++){const r=e[a],l=Lt(i[r.id],n);null!==l&&o.push({plugin:r,options:Tt(t.config,r,l,s)})}return o}(t,s,o,e):[]}_notifyStateChanges(t){const e=this._oldCache||[],i=this._cache,n=(t,e)=>t.filter((t=>!e.some((e=>t.plugin.id===e.plugin.id))));this._notify(n(e,i),t,\"stop\"),this._notify(n(i,e),t,\"start\")}}function Lt(t,e){return e||!1!==t?!0===t?{}:t:null}function Tt(t,e,i,n){const o=t.pluginScopeKeys(e),s=t.getOptionScopes(i,o);return t.createResolver(s,n,[\"\"],{scriptable:!1,indexable:!1,allKeys:!0})}function Rt(t,e){const i=n.xb.datasets[t]||{};return((e.datasets||{})[t]||{}).indexAxis||e.indexAxis||i.indexAxis||\"x\"}function Et(t,e){return\"x\"===t||\"y\"===t?t:e.axis||(\"top\"===(i=e.position)||\"bottom\"===i?\"x\":\"left\"===i||\"right\"===i?\"y\":void 0)||t.charAt(0).toLowerCase();var i}function zt(t){const e=t.options||(t.options={});e.plugins=Object(n.Pb)(e.plugins,{}),e.scales=function(t,e){const i=n.A[t.type]||{scales:{}},o=e.scales||{},s=Rt(t.type,e),a=Object.create(null),r=Object.create(null);return Object.keys(o).forEach((t=>{const e=o[t],l=Et(t,e),c=function(t,e){return t===e?\"_index_\":\"_value_\"}(l,s),h=i.scales||{};a[l]=a[l]||t,r[t]=Object(n.J)(Object.create(null),[{axis:l},e,h[l],h[c]])})),t.data.datasets.forEach((i=>{const s=i.type||t.type,l=i.indexAxis||Rt(s,e),c=(n.A[s]||{}).scales||{};Object.keys(c).forEach((t=>{const e=function(t,e){let i=t;return\"_index_\"===t?i=e:\"_value_\"===t&&(i=\"x\"===e?\"y\":\"x\"),i}(t,l),s=i[e+\"AxisID\"]||a[e]||e;r[s]=r[s]||Object.create(null),Object(n.J)(r[s],[{axis:e},o[s],c[t]])}))})),Object.keys(r).forEach((t=>{const e=r[t];Object(n.J)(e,[n.xb.scales[e.type],n.xb.scale])})),r}(t,e)}function Ft(t){return(t=t||{}).datasets=t.datasets||[],t.labels=t.labels||[],t}const It=new Map,Vt=new Set;function Bt(t,e){let i=It.get(t);return i||(i=e(),It.set(t,i),Vt.add(i)),i}const Wt=(t,e,i)=>{const o=Object(n.zb)(e,i);void 0!==o&&t.add(o)};class Nt{constructor(t){this._config=function(t){return(t=t||{}).data=Ft(t.data),zt(t),t}(t),this._scopeCache=new Map,this._resolverCache=new Map}get type(){return this._config.type}set type(t){this._config.type=t}get data(){return this._config.data}set data(t){this._config.data=Ft(t)}get options(){return this._config.options}set options(t){this._config.options=t}get plugins(){return this._config.plugins}update(){const t=this._config;this.clearCache(),zt(t)}clearCache(){this._scopeCache.clear(),this._resolverCache.clear()}datasetScopeKeys(t){return Bt(t,(()=>[[`datasets.${t}`,\"\"]]))}datasetAnimationScopeKeys(t,e){return Bt(`${t}.transition.${e}`,(()=>[[`datasets.${t}.transitions.${e}`,`transitions.${e}`],[`datasets.${t}`,\"\"]]))}datasetElementScopeKeys(t,e){return Bt(`${t}-${e}`,(()=>[[`datasets.${t}.elements.${e}`,`datasets.${t}`,`elements.${e}`,\"\"]]))}pluginScopeKeys(t){const e=t.id;return Bt(`${this.type}-plugin-${e}`,(()=>[[`plugins.${e}`,...t.additionalOptionScopes||[]]]))}_cachedScopes(t,e){const i=this._scopeCache;let n=i.get(t);return n&&!e||(n=new Map,i.set(t,n)),n}getOptionScopes(t,e,i){const{options:o,type:s}=this,a=this._cachedScopes(t,i),r=a.get(e);if(r)return r;const l=new Set;e.forEach((e=>{t&&(l.add(t),e.forEach((e=>Wt(l,t,e)))),e.forEach((t=>Wt(l,o,t))),e.forEach((t=>Wt(l,n.A[s]||{},t))),e.forEach((t=>Wt(l,n.xb,t))),e.forEach((t=>Wt(l,n.E,t)))}));const c=[...l];return Vt.has(e)&&a.set(e,c),c}chartOptionScopes(){const{options:t,type:e}=this;return[t,n.A[e]||{},n.xb.datasets[e]||{},{type:e},n.xb,n.E]}resolveNamedOptions(t,e,i,o=[\"\"]){const s={$shared:!0},{resolver:a,subPrefixes:r}=Ht(this._resolverCache,t,o);let l=a;if(function(t,e){const{isScriptable:i,isIndexable:o}=Object(n.I)(t);for(const s of e)if(i(s)&&Object(n.F)(t[s])||o(s)&&Object(n.vb)(t[s]))return!0;return!1}(a,e)){s.$shared=!1,i=Object(n.F)(i)?i():i;const e=this.createResolver(t,i,r);l=Object(n.G)(a,i,e)}for(const n of e)s[n]=l[n];return s}createResolver(t,e,i=[\"\"],o){const{resolver:s}=Ht(this._resolverCache,t,i);return Object(n.Cb)(e)?Object(n.G)(s,e,void 0,o):s}}function Ht(t,e,i){let o=t.get(e);o||(o=new Map,t.set(e,o));const s=i.join();let a=o.get(s);if(!a){a={resolver:Object(n.H)(e,i),subPrefixes:i.filter((t=>!t.toLowerCase().includes(\"hover\")))},o.set(s,a)}return a}const $t=[\"top\",\"bottom\",\"left\",\"right\",\"chartArea\"];function Ut(t,e){return\"top\"===t||\"bottom\"===t||-1===$t.indexOf(t)&&\"x\"===e}function Yt(t,e){return function(i,n){return i[t]===n[t]?i[e]-n[e]:i[t]-n[t]}}function Xt(t){const e=t.chart,i=e.options.animation;e.notifyPlugins(\"afterRender\"),Object(n.o)(i&&i.onComplete,[t],e)}function qt(t){const e=t.chart,i=e.options.animation;Object(n.o)(i&&i.onProgress,[t],e)}function Kt(){return\"undefined\"!==typeof window&&\"undefined\"!==typeof document}function Gt(t){return Kt()&&\"string\"===typeof t?t=document.getElementById(t):t&&t.length&&(t=t[0]),t&&t.canvas&&(t=t.canvas),t}const Jt={},Qt=t=>{const e=Gt(t);return Object.values(Jt).filter((t=>t.canvas===e)).pop()};class Zt{constructor(t,e){const i=this;this.config=e=new Nt(e);const s=Gt(t),a=Qt(s);if(a)throw new Error(\"Canvas is already in use. Chart with ID '\"+a.id+\"' must be destroyed before the canvas can be reused.\");const r=e.createResolver(e.chartOptionScopes(),i.getContext());this.platform=i._initializePlatform(s,e);const l=i.platform.acquireContext(s,r.aspectRatio),c=l&&l.canvas,h=c&&c.height,d=c&&c.width;this.id=Object(n.K)(),this.ctx=l,this.canvas=c,this.width=d,this.height=h,this._options=r,this._aspectRatio=this.aspectRatio,this._layers=[],this._metasets=[],this._stacks=void 0,this.boxes=[],this.currentDevicePixelRatio=void 0,this.chartArea=void 0,this._active=[],this._lastEvent=void 0,this._listeners={},this._responsiveListeners=void 0,this._sortedMetasets=[],this.scales={},this.scale=void 0,this._plugins=new At,this.$proxies={},this._hiddenIndices={},this.attached=!1,this._animationsDisabled=void 0,this.$context=void 0,this._doResize=Object(n.L)((()=>this.update(\"resize\")),r.resizeDelay||0),Jt[i.id]=i,l&&c?(o.listen(i,\"complete\",Xt),o.listen(i,\"progress\",qt),i._initialize(),i.attached&&i.update()):console.error(\"Failed to create chart: can't acquire context from the given item\")}get aspectRatio(){const{options:{aspectRatio:t,maintainAspectRatio:e},width:i,height:o,_aspectRatio:s}=this;return Object(n.Db)(t)?e&&s?s:o?i/o:null:t}get data(){return this.config.data}set data(t){this.config.data=t}get options(){return this._options}set options(t){this.config.options=t}_initialize(){const t=this;return t.notifyPlugins(\"beforeInit\"),t.options.responsive?t.resize():Object(n.M)(t,t.options.devicePixelRatio),t.bindEvents(),t.notifyPlugins(\"afterInit\"),t}_initializePlatform(t,e){return e.platform?new e.platform:!Kt()||\"undefined\"!==typeof OffscreenCanvas&&t instanceof OffscreenCanvas?new nt:new ft}clear(){return Object(n.V)(this.canvas,this.ctx),this}stop(){return o.stop(this),this}resize(t,e){o.running(this)?this._resizeBeforeDraw={width:t,height:e}:this._resize(t,e)}_resize(t,e){const i=this,o=i.options,s=i.canvas,a=o.maintainAspectRatio&&i.aspectRatio,r=i.platform.getMaximumSize(s,t,e,a),l=o.devicePixelRatio||i.platform.getDevicePixelRatio();i.width=r.width,i.height=r.height,i._aspectRatio=i.aspectRatio,Object(n.M)(i,l,!0)&&(i.notifyPlugins(\"resize\",{size:r}),Object(n.o)(o.onResize,[i,r],i),i.attached&&i._doResize()&&i.render())}ensureScalesHaveIDs(){const t=this.options.scales||{};Object(n.e)(t,((t,e)=>{t.id=e}))}buildOrUpdateScales(){const t=this,e=t.options,i=e.scales,o=t.scales,s=Object.keys(o).reduce(((t,e)=>(t[e]=!1,t)),{});let a=[];i&&(a=a.concat(Object.keys(i).map((t=>{const e=i[t],n=Et(t,e),o=\"r\"===n,s=\"x\"===n;return{options:e,dposition:o?\"chartArea\":s?\"bottom\":\"left\",dtype:o?\"radialLinear\":s?\"category\":\"linear\"}})))),Object(n.e)(a,(i=>{const a=i.options,r=a.id,l=Et(r,a),c=Object(n.Pb)(a.type,i.dtype);void 0!==a.position&&Ut(a.position,l)===Ut(i.dposition)||(a.position=i.dposition),s[r]=!0;let h=null;if(r in o&&o[r].type===c)h=o[r];else{h=new(Ct.getScale(c))({id:r,type:c,ctx:t.ctx,chart:t}),o[h.id]=h}h.init(a,e)})),Object(n.e)(s,((t,e)=>{t||delete o[e]})),Object(n.e)(o,(e=>{et.configure(t,e,e.options),et.addBox(t,e)}))}_updateMetasetIndex(t,e){const i=this._metasets,n=t.index;n!==e&&(i[n]=i[e],i[e]=t,t.index=e)}_updateMetasets(){const t=this,e=t._metasets,i=t.data.datasets.length,n=e.length;if(n>i){for(let e=i;e<n;++e)t._destroyDatasetMeta(e);e.splice(i,n-i)}t._sortedMetasets=e.slice(0).sort(Yt(\"order\",\"index\"))}_removeUnreferencedMetasets(){const t=this,{_metasets:e,data:{datasets:i}}=t;e.length>i.length&&delete t._stacks,e.forEach(((e,n)=>{0===i.filter((t=>t===e._dataset)).length&&t._destroyDatasetMeta(n)}))}buildOrUpdateControllers(){const t=this,e=[],i=t.data.datasets;let o,s;for(t._removeUnreferencedMetasets(),o=0,s=i.length;o<s;o++){const s=i[o];let a=t.getDatasetMeta(o);const r=s.type||t.config.type;if(a.type&&a.type!==r&&(t._destroyDatasetMeta(o),a=t.getDatasetMeta(o)),a.type=r,a.indexAxis=s.indexAxis||Rt(r,t.options),a.order=s.order||0,t._updateMetasetIndex(a,o),a.label=\"\"+s.label,a.visible=t.isDatasetVisible(o),a.controller)a.controller.updateIndex(o),a.controller.linkScales();else{const i=Ct.getController(r),{datasetElementType:s,dataElementType:l}=n.xb.datasets[r];Object.assign(i.prototype,{dataElementType:Ct.getElement(l),datasetElementType:s&&Ct.getElement(s)}),a.controller=new i(t,o),e.push(a.controller)}}return t._updateMetasets(),e}_resetElements(){const t=this;Object(n.e)(t.data.datasets,((e,i)=>{t.getDatasetMeta(i).controller.reset()}),t)}reset(){this._resetElements(),this.notifyPlugins(\"reset\")}update(t){const e=this,i=e.config;i.update(),e._options=i.createResolver(i.chartOptionScopes(),e.getContext()),Object(n.e)(e.scales,(t=>{et.removeBox(e,t)}));const o=e._animationsDisabled=!e.options.animation;e.ensureScalesHaveIDs(),e.buildOrUpdateScales();const s=new Set(Object.keys(e._listeners)),a=new Set(e.options.events);if(Object(n.W)(s,a)&&!!this._responsiveListeners===e.options.responsive||(e.unbindEvents(),e.bindEvents()),e._plugins.invalidate(),!1===e.notifyPlugins(\"beforeUpdate\",{mode:t,cancelable:!0}))return;const r=e.buildOrUpdateControllers();e.notifyPlugins(\"beforeElementsUpdate\");let l=0;for(let n=0,c=e.data.datasets.length;n<c;n++){const{controller:t}=e.getDatasetMeta(n),i=!o&&-1===r.indexOf(t);t.buildOrUpdateElements(i),l=Math.max(+t.getMaxOverflow(),l)}e._minPadding=l,e._updateLayout(l),o||Object(n.e)(r,(t=>{t.reset()})),e._updateDatasets(t),e.notifyPlugins(\"afterUpdate\",{mode:t}),e._layers.sort(Yt(\"z\",\"_idx\")),e._lastEvent&&e._eventHandler(e._lastEvent,!0),e.render()}_updateLayout(t){const e=this;if(!1===e.notifyPlugins(\"beforeLayout\",{cancelable:!0}))return;et.update(e,e.width,e.height,t);const i=e.chartArea,o=i.width<=0||i.height<=0;e._layers=[],Object(n.e)(e.boxes,(t=>{o&&\"chartArea\"===t.position||(t.configure&&t.configure(),e._layers.push(...t._layers()))}),e),e._layers.forEach(((t,e)=>{t._idx=e})),e.notifyPlugins(\"afterLayout\")}_updateDatasets(t){const e=this,i=\"function\"===typeof t;if(!1!==e.notifyPlugins(\"beforeDatasetsUpdate\",{mode:t,cancelable:!0})){for(let n=0,o=e.data.datasets.length;n<o;++n)e._updateDataset(n,i?t({datasetIndex:n}):t);e.notifyPlugins(\"afterDatasetsUpdate\",{mode:t})}}_updateDataset(t,e){const i=this,n=i.getDatasetMeta(t),o={meta:n,index:t,mode:e,cancelable:!0};!1!==i.notifyPlugins(\"beforeDatasetUpdate\",o)&&(n.controller._update(e),o.cancelable=!1,i.notifyPlugins(\"afterDatasetUpdate\",o))}render(){const t=this;!1!==t.notifyPlugins(\"beforeRender\",{cancelable:!0})&&(o.has(t)?t.attached&&!o.running(t)&&o.start(t):(t.draw(),Xt({chart:t})))}draw(){const t=this;let e;if(t._resizeBeforeDraw){const{width:e,height:i}=t._resizeBeforeDraw;t._resize(e,i),t._resizeBeforeDraw=null}if(t.clear(),t.width<=0||t.height<=0)return;if(!1===t.notifyPlugins(\"beforeDraw\",{cancelable:!0}))return;const i=t._layers;for(e=0;e<i.length&&i[e].z<=0;++e)i[e].draw(t.chartArea);for(t._drawDatasets();e<i.length;++e)i[e].draw(t.chartArea);t.notifyPlugins(\"afterDraw\")}_getSortedDatasetMetas(t){const e=this._sortedMetasets,i=[];let n,o;for(n=0,o=e.length;n<o;++n){const o=e[n];t&&!o.visible||i.push(o)}return i}getSortedVisibleDatasetMetas(){return this._getSortedDatasetMetas(!0)}_drawDatasets(){const t=this;if(!1===t.notifyPlugins(\"beforeDatasetsDraw\",{cancelable:!0}))return;const e=t.getSortedVisibleDatasetMetas();for(let i=e.length-1;i>=0;--i)t._drawDataset(e[i]);t.notifyPlugins(\"afterDatasetsDraw\")}_drawDataset(t){const e=this,i=e.ctx,o=t._clip,s=e.chartArea,a={meta:t,index:t.index,cancelable:!0};!1!==e.notifyPlugins(\"beforeDatasetDraw\",a)&&(Object(n.Eb)(i,{left:!1===o.left?0:s.left-o.left,right:!1===o.right?e.width:s.right+o.right,top:!1===o.top?0:s.top-o.top,bottom:!1===o.bottom?e.height:s.bottom+o.bottom}),t.controller.draw(),Object(n.Gb)(i),a.cancelable=!1,e.notifyPlugins(\"afterDatasetDraw\",a))}getElementsAtEventForMode(t,e,i,n){const o=$.modes[e];return\"function\"===typeof o?o(this,t,i,n):[]}getDatasetMeta(t){const e=this.data.datasets[t],i=this._metasets;let n=i.filter((t=>t&&t._dataset===e)).pop();return n||(n=i[t]={type:null,data:[],dataset:null,controller:null,hidden:null,xAxisID:null,yAxisID:null,order:e&&e.order||0,index:t,_dataset:e,_parsed:[],_sorted:!1}),n}getContext(){return this.$context||(this.$context={chart:this,type:\"chart\"})}getVisibleDatasetCount(){return this.getSortedVisibleDatasetMetas().length}isDatasetVisible(t){const e=this.data.datasets[t];if(!e)return!1;const i=this.getDatasetMeta(t);return\"boolean\"===typeof i.hidden?!i.hidden:!e.hidden}setDatasetVisibility(t,e){this.getDatasetMeta(t).hidden=!e}toggleDataVisibility(t){this._hiddenIndices[t]=!this._hiddenIndices[t]}getDataVisibility(t){return!this._hiddenIndices[t]}_updateDatasetVisibility(t,e){const i=this,n=e?\"show\":\"hide\",o=i.getDatasetMeta(t),s=o.controller._resolveAnimations(void 0,n);i.setDatasetVisibility(t,e),s.update(o,{visible:e}),i.update((e=>e.datasetIndex===t?n:void 0))}hide(t){this._updateDatasetVisibility(t,!1)}show(t){this._updateDatasetVisibility(t,!0)}_destroyDatasetMeta(t){const e=this,i=e._metasets&&e._metasets[t];i&&i.controller&&(i.controller._destroy(),delete e._metasets[t])}destroy(){const t=this,{canvas:e,ctx:i}=t;let s,a;for(t.stop(),o.remove(t),s=0,a=t.data.datasets.length;s<a;++s)t._destroyDatasetMeta(s);t.config.clearCache(),e&&(t.unbindEvents(),Object(n.V)(e,i),t.platform.releaseContext(i),t.canvas=null,t.ctx=null),t.notifyPlugins(\"destroy\"),delete Jt[t.id]}toBase64Image(...t){return this.canvas.toDataURL(...t)}bindEvents(){this.bindUserEvents(),this.options.responsive?this.bindResponsiveEvents():this.attached=!0}bindUserEvents(){const t=this,e=t._listeners,i=t.platform,o=function(e,i,n){e.offsetX=i,e.offsetY=n,t._eventHandler(e)};Object(n.e)(t.options.events,(n=>((n,o)=>{i.addEventListener(t,n,o),e[n]=o})(n,o)))}bindResponsiveEvents(){const t=this;t._responsiveListeners||(t._responsiveListeners={});const e=t._responsiveListeners,i=t.platform,n=(n,o)=>{i.addEventListener(t,n,o),e[n]=o},o=(n,o)=>{e[n]&&(i.removeEventListener(t,n,o),delete e[n])},s=(e,i)=>{t.canvas&&t.resize(e,i)};let a;const r=()=>{o(\"attach\",r),t.attached=!0,t.resize(),n(\"resize\",s),n(\"detach\",a)};a=()=>{t.attached=!1,o(\"resize\",s),n(\"attach\",r)},i.isAttached(t.canvas)?r():a()}unbindEvents(){const t=this;Object(n.e)(t._listeners,((e,i)=>{t.platform.removeEventListener(t,i,e)})),t._listeners={},Object(n.e)(t._responsiveListeners,((e,i)=>{t.platform.removeEventListener(t,i,e)})),t._responsiveListeners=void 0}updateHoverStyle(t,e,i){const n=i?\"set\":\"remove\";let o,s,a,r;for(\"dataset\"===e&&(o=this.getDatasetMeta(t[0].datasetIndex),o.controller[\"_\"+n+\"DatasetHoverStyle\"]()),a=0,r=t.length;a<r;++a){s=t[a];const e=s&&this.getDatasetMeta(s.datasetIndex).controller;e&&e[n+\"HoverStyle\"](s.element,s.datasetIndex,s.index)}}getActiveElements(){return this._active||[]}setActiveElements(t){const e=this,i=e._active||[],o=t.map((({datasetIndex:t,index:i})=>{const n=e.getDatasetMeta(t);if(!n)throw new Error(\"No dataset found at index \"+t);return{datasetIndex:t,element:n.data[i],index:i}}));!Object(n.X)(o,i)&&(e._active=o,e._updateHoverStyles(o,i))}notifyPlugins(t,e,i){return this._plugins.notify(this,t,e,i)}_updateHoverStyles(t,e,i){const n=this,o=n.options.hover,s=(t,e)=>t.filter((t=>!e.some((e=>t.datasetIndex===e.datasetIndex&&t.index===e.index)))),a=s(e,t),r=i?t:s(t,e);a.length&&n.updateHoverStyle(a,o.mode,!1),r.length&&o.mode&&n.updateHoverStyle(r,o.mode,!0)}_eventHandler(t,e){const i=this,n={event:t,replay:e,cancelable:!0},o=e=>(e.options.events||this.options.events).includes(t.type);if(!1===i.notifyPlugins(\"beforeEvent\",n,o))return;const s=i._handleEvent(t,e);return n.cancelable=!1,i.notifyPlugins(\"afterEvent\",n,o),(s||n.changed)&&i.render(),i}_handleEvent(t,e){const i=this,{_active:o=[],options:s}=i,a=s.hover,r=e;let l=[],c=!1,h=null;return\"mouseout\"!==t.type&&(l=i.getElementsAtEventForMode(t,a.mode,a,r),h=\"click\"===t.type?i._lastEvent:t),i._lastEvent=null,Object(n.b)(t,i.chartArea,i._minPadding)&&(Object(n.o)(s.onHover,[t,l,i],i),\"mouseup\"!==t.type&&\"click\"!==t.type&&\"contextmenu\"!==t.type||Object(n.o)(s.onClick,[t,l,i],i)),c=!Object(n.X)(l,o),(c||e)&&(i._active=l,i._updateHoverStyles(l,o,e)),i._lastEvent=h,c}}const te=()=>Object(n.e)(Zt.instances,(t=>t._plugins.invalidate())),ee=!0;function ie(t,e){const{startAngle:i,endAngle:o,pixelMargin:s,x:a,y:r,outerRadius:l,innerRadius:c}=e;let h=s/l;t.beginPath(),t.arc(a,r,l,i-h,o+h),c>s?(h=s/c,t.arc(a,r,c,o+h,i-h,!0)):t.arc(a,r,s,o+n.i,i-n.i),t.closePath(),t.clip()}function ne(t,e,i,o){const s=(a=t.options.borderRadius,Object(n.Z)(a,[\"outerStart\",\"outerEnd\",\"innerStart\",\"innerEnd\"]));var a;const r=(i-e)/2,l=Math.min(r,o*e/2),c=t=>{const e=(i-Math.min(r,t))*o/2;return Object(n.Rb)(t,0,Math.min(r,e))};return{outerStart:c(s.outerStart),outerEnd:c(s.outerEnd),innerStart:Object(n.Rb)(s.innerStart,0,l),innerEnd:Object(n.Rb)(s.innerEnd,0,l)}}function oe(t,e,i,n){return{x:i+t*Math.cos(e),y:n+t*Math.sin(e)}}function se(t,e,i){const{x:o,y:s,startAngle:a,endAngle:r,pixelMargin:l,innerRadius:c}=e,h=Math.max(e.outerRadius+i-l,0),d=c>0?c+i+l:0,u=r-a,g=(u-Math.max(.001,u*h-i/n.q)/h)/2,b=a+g,p=r-g,{outerStart:f,outerEnd:m,innerStart:x,innerEnd:_}=ne(e,d,h,p-b),y=h-f,v=h-m,O=b+f/y,j=p-m/v,M=d+x,w=d+_,k=b+x/M,D=p-_/w;if(t.beginPath(),t.arc(o,s,h,O,j),m>0){const e=oe(v,j,o,s);t.arc(e.x,e.y,m,j,p+n.i)}const S=oe(w,p,o,s);if(t.lineTo(S.x,S.y),_>0){const e=oe(w,D,o,s);t.arc(e.x,e.y,_,p+n.i,D+Math.PI)}if(t.arc(o,s,d,p-_/d,b+x/d,!0),x>0){const e=oe(M,k,o,s);t.arc(e.x,e.y,x,k+Math.PI,b-n.i)}const P=oe(y,b,o,s);if(t.lineTo(P.x,P.y),f>0){const e=oe(y,O,o,s);t.arc(e.x,e.y,f,b-n.i,O)}t.closePath()}function ae(t,e,i){const{options:o}=e,s=\"inner\"===o.borderAlign;o.borderWidth&&(s?(t.lineWidth=2*o.borderWidth,t.lineJoin=\"round\"):(t.lineWidth=o.borderWidth,t.lineJoin=\"bevel\"),e.fullCircles&&function(t,e,i){const{x:o,y:s,startAngle:a,endAngle:r,pixelMargin:l}=e,c=Math.max(e.outerRadius-l,0),h=e.innerRadius+l;let d;for(i&&(e.endAngle=e.startAngle+n.u,ie(t,e),e.endAngle=r,e.endAngle===e.startAngle&&(e.endAngle+=n.u,e.fullCircles--)),t.beginPath(),t.arc(o,s,h,a+n.u,a,!0),d=0;d<e.fullCircles;++d)t.stroke();for(t.beginPath(),t.arc(o,s,c,a,a+n.u),d=0;d<e.fullCircles;++d)t.stroke()}(t,e,s),s&&ie(t,e),se(t,e,i),t.stroke())}Object.defineProperties(Zt,{defaults:{enumerable:ee,value:n.xb},instances:{enumerable:ee,value:Jt},overrides:{enumerable:ee,value:n.A},registry:{enumerable:ee,value:Ct},version:{enumerable:ee,value:\"3.3.0\"},getChart:{enumerable:ee,value:Qt},register:{enumerable:ee,value:(...t)=>{Ct.add(...t),te()}},unregister:{enumerable:ee,value:(...t)=>{Ct.remove(...t),te()}}});class re extends mt{constructor(t){super(),this.options=void 0,this.circumference=void 0,this.startAngle=void 0,this.endAngle=void 0,this.innerRadius=void 0,this.outerRadius=void 0,this.pixelMargin=0,this.fullCircles=0,t&&Object.assign(this,t)}inRange(t,e,i){const o=this.getProps([\"x\",\"y\"],i),{angle:s,distance:a}=Object(n.Y)(o,{x:t,y:e}),{startAngle:r,endAngle:l,innerRadius:c,outerRadius:h,circumference:d}=this.getProps([\"startAngle\",\"endAngle\",\"innerRadius\",\"outerRadius\",\"circumference\"],i);return(d>=n.u||Object(n.Kb)(s,r,l))&&(a>=c&&a<=h)}getCenterPoint(t){const{x:e,y:i,startAngle:n,endAngle:o,innerRadius:s,outerRadius:a}=this.getProps([\"x\",\"y\",\"startAngle\",\"endAngle\",\"innerRadius\",\"outerRadius\"],t),r=(n+o)/2,l=(s+a)/2;return{x:e+Math.cos(r)*l,y:i+Math.sin(r)*l}}tooltipPosition(t){return this.getCenterPoint(t)}draw(t){const e=this,i=e.options,o=(i.offset||0)/2;if(e.pixelMargin=\"inner\"===i.borderAlign?.33:0,e.fullCircles=Math.floor(e.circumference/n.u),0===e.circumference||e.innerRadius<0||e.outerRadius<0)return;t.save();let s=0;if(o){s=o/2;const i=(e.startAngle+e.endAngle)/2;t.translate(Math.cos(i)*s,Math.sin(i)*s),e.circumference>=n.q&&(s=o)}t.fillStyle=i.backgroundColor,t.strokeStyle=i.borderColor,function(t,e,i){if(e.fullCircles){e.endAngle=e.startAngle+n.u,se(t,e,i);for(let i=0;i<e.fullCircles;++i)t.fill()}isNaN(e.circumference)||(e.endAngle=e.startAngle+e.circumference%n.u),se(t,e,i),t.fill()}(t,e,s),ae(t,e,s),t.restore()}}function le(t,e,i=e){t.lineCap=Object(n.Pb)(i.borderCapStyle,e.borderCapStyle),t.setLineDash(Object(n.Pb)(i.borderDash,e.borderDash)),t.lineDashOffset=Object(n.Pb)(i.borderDashOffset,e.borderDashOffset),t.lineJoin=Object(n.Pb)(i.borderJoinStyle,e.borderJoinStyle),t.lineWidth=Object(n.Pb)(i.borderWidth,e.borderWidth),t.strokeStyle=Object(n.Pb)(i.borderColor,e.borderColor)}function ce(t,e,i){t.lineTo(i.x,i.y)}function he(t,e,i={}){const n=t.length,{start:o=0,end:s=n-1}=i,{start:a,end:r}=e,l=Math.max(o,a),c=Math.min(s,r),h=o<a&&s<a||o>r&&s>r;return{count:n,start:l,loop:e.loop,ilen:c<l&&!h?n+c-l:c-l}}function de(t,e,i,o){const{points:s,options:a}=e,{count:r,start:l,loop:c,ilen:h}=he(s,i,o),d=function(t){return t.stepped?n.gb:t.tension||\"monotone\"===t.cubicInterpolationMode?n.hb:ce}(a);let u,g,b,{move:p=!0,reverse:f}=o||{};for(u=0;u<=h;++u)g=s[(l+(f?h-u:u))%r],g.skip||(p?(t.moveTo(g.x,g.y),p=!1):d(t,b,g,f,a.stepped),b=g);return c&&(g=s[(l+(f?h:0))%r],d(t,b,g,f,a.stepped)),!!c}function ue(t,e,i,n){const o=e.points,{count:s,start:a,ilen:r}=he(o,i,n),{move:l=!0,reverse:c}=n||{};let h,d,u,g,b,p,f=0,m=0;const x=t=>(a+(c?r-t:t))%s,_=()=>{g!==b&&(t.lineTo(f,b),t.lineTo(f,g),t.lineTo(f,p))};for(l&&(d=o[x(0)],t.moveTo(d.x,d.y)),h=0;h<=r;++h){if(d=o[x(h)],d.skip)continue;const e=d.x,i=d.y,n=0|e;n===u?(i<g?g=i:i>b&&(b=i),f=(m*f+e)/++m):(_(),t.lineTo(e,i),u=n,m=0,g=b=i),p=i}_()}function ge(t){const e=t.options,i=e.borderDash&&e.borderDash.length;return!t._decimated&&!t._loop&&!e.tension&&\"monotone\"!==e.cubicInterpolationMode&&!e.stepped&&!i?ue:de}re.id=\"arc\",re.defaults={borderAlign:\"center\",borderColor:\"#fff\",borderRadius:0,borderWidth:2,offset:0,angle:void 0},re.defaultRoutes={backgroundColor:\"backgroundColor\"};const be=\"function\"===typeof Path2D;function pe(t,e,i,n){be&&1===e.segments.length?function(t,e,i,n){let o=e._path;o||(o=e._path=new Path2D,e.path(o,i,n)&&o.closePath()),le(t,e.options),t.stroke(o)}(t,e,i,n):function(t,e,i,n){const{segments:o,options:s}=e,a=ge(e);for(const r of o)le(t,s,r.style),t.beginPath(),a(t,e,r,{start:i,end:i+n-1})&&t.closePath(),t.stroke()}(t,e,i,n)}class fe extends mt{constructor(t){super(),this.animated=!0,this.options=void 0,this._loop=void 0,this._fullLoop=void 0,this._path=void 0,this._points=void 0,this._segments=void 0,this._decimated=!1,this._pointsUpdated=!1,t&&Object.assign(this,t)}updateControlPoints(t,e){const i=this,o=i.options;if((o.tension||\"monotone\"===o.cubicInterpolationMode)&&!o.stepped&&!i._pointsUpdated){const s=o.spanGaps?i._loop:i._fullLoop;Object(n.ab)(i._points,o,t,s,e),i._pointsUpdated=!0}}set points(t){const e=this;e._points=t,delete e._segments,delete e._path,e._pointsUpdated=!1}get points(){return this._points}get segments(){return this._segments||(this._segments=Object(n.bb)(this,this.options.segment))}first(){const t=this.segments,e=this.points;return t.length&&e[t[0].start]}last(){const t=this.segments,e=this.points,i=t.length;return i&&e[t[i-1].end]}interpolate(t,e){const i=this,o=i.options,s=t[e],a=i.points,r=Object(n.cb)(i,{property:e,start:s,end:s});if(!r.length)return;const l=[],c=function(t){return t.stepped?n.db:t.tension||\"monotone\"===t.cubicInterpolationMode?n.eb:n.fb}(o);let h,d;for(h=0,d=r.length;h<d;++h){const{start:i,end:n}=r[h],d=a[i],u=a[n];if(d===u){l.push(d);continue}const g=c(d,u,Math.abs((s-d[e])/(u[e]-d[e])),o.stepped);g[e]=t[e],l.push(g)}return 1===l.length?l[0]:l}pathSegment(t,e,i){return ge(this)(t,this,e,i)}path(t,e,i){const n=this,o=n.segments,s=ge(n);let a=n._loop;e=e||0,i=i||n.points.length-e;for(const r of o)a&=s(t,n,r,{start:e,end:e+i-1});return!!a}draw(t,e,i,n){const o=this,s=o.options||{};(o.points||[]).length&&s.borderWidth&&(t.save(),pe(t,o,i,n),t.restore(),o.animated&&(o._pointsUpdated=!1,o._path=void 0))}}function me(t,e,i,n){const o=t.options,{[i]:s}=t.getProps([i],n);return Math.abs(e-s)<o.radius+o.hitRadius}fe.id=\"line\",fe.defaults={borderCapStyle:\"butt\",borderDash:[],borderDashOffset:0,borderJoinStyle:\"miter\",borderWidth:3,capBezierPoints:!0,cubicInterpolationMode:\"default\",fill:!1,spanGaps:!1,stepped:!1,tension:0},fe.defaultRoutes={backgroundColor:\"backgroundColor\",borderColor:\"borderColor\"},fe.descriptors={_scriptable:!0,_indexable:t=>\"borderDash\"!==t&&\"fill\"!==t};class xe extends mt{constructor(t){super(),this.options=void 0,this.parsed=void 0,this.skip=void 0,this.stop=void 0,t&&Object.assign(this,t)}inRange(t,e,i){const n=this.options,{x:o,y:s}=this.getProps([\"x\",\"y\"],i);return Math.pow(t-o,2)+Math.pow(e-s,2)<Math.pow(n.hitRadius+n.radius,2)}inXRange(t,e){return me(this,t,\"x\",e)}inYRange(t,e){return me(this,t,\"y\",e)}getCenterPoint(t){const{x:e,y:i}=this.getProps([\"x\",\"y\"],t);return{x:e,y:i}}size(t){let e=(t=t||this.options||{}).radius||0;e=Math.max(e,e&&t.hoverRadius||0);return 2*(e+(e&&t.borderWidth||0))}draw(t){const e=this,i=e.options;e.skip||i.radius<.1||(t.strokeStyle=i.borderColor,t.lineWidth=i.borderWidth,t.fillStyle=i.backgroundColor,Object(n.ib)(t,i,e.x,e.y))}getRange(){const t=this.options||{};return t.radius+t.hitRadius}}function _e(t,e){const{x:i,y:n,base:o,width:s,height:a}=t.getProps([\"x\",\"y\",\"base\",\"width\",\"height\"],e);let r,l,c,h,d;return t.horizontal?(d=a/2,r=Math.min(i,o),l=Math.max(i,o),c=n-d,h=n+d):(d=s/2,r=i-d,l=i+d,c=Math.min(n,o),h=Math.max(n,o)),{left:r,top:c,right:l,bottom:h}}function ye(t){let e=t.options.borderSkipped;const i={};return e?(e=t.horizontal?ve(e,\"left\",\"right\",t.base>t.x):ve(e,\"bottom\",\"top\",t.base<t.y),i[e]=!0,i):i}function ve(t,e,i,n){var o,s,a;return n?(a=i,t=Oe(t=(o=t)===(s=e)?a:o===a?s:o,i,e)):t=Oe(t,e,i),t}function Oe(t,e,i){return\"start\"===t?e:\"end\"===t?i:t}function je(t,e,i,n){return t?0:Math.max(Math.min(e,n),i)}function Me(t){const e=_e(t),i=e.right-e.left,o=e.bottom-e.top,s=function(t,e,i){const o=t.options.borderWidth,s=ye(t),a=Object(n.kb)(o);return{t:je(s.top,a.top,0,i),r:je(s.right,a.right,0,e),b:je(s.bottom,a.bottom,0,i),l:je(s.left,a.left,0,e)}}(t,i/2,o/2),a=function(t,e,i){const{enableBorderRadius:o}=t.getProps([\"enableBorderRadius\"]),s=t.options.borderRadius,a=Object(n.lb)(s),r=Math.min(e,i),l=ye(t),c=o||Object(n.Cb)(s);return{topLeft:je(!c||l.top||l.left,a.topLeft,0,r),topRight:je(!c||l.top||l.right,a.topRight,0,r),bottomLeft:je(!c||l.bottom||l.left,a.bottomLeft,0,r),bottomRight:je(!c||l.bottom||l.right,a.bottomRight,0,r)}}(t,i/2,o/2);return{outer:{x:e.left,y:e.top,w:i,h:o,radius:a},inner:{x:e.left+s.l,y:e.top+s.t,w:i-s.l-s.r,h:o-s.t-s.b,radius:{topLeft:Math.max(0,a.topLeft-Math.max(s.t,s.l)),topRight:Math.max(0,a.topRight-Math.max(s.t,s.r)),bottomLeft:Math.max(0,a.bottomLeft-Math.max(s.b,s.l)),bottomRight:Math.max(0,a.bottomRight-Math.max(s.b,s.r))}}}}function we(t,e,i,n){const o=null===e,s=null===i,a=t&&!(o&&s)&&_e(t,n);return a&&(o||e>=a.left&&e<=a.right)&&(s||i>=a.top&&i<=a.bottom)}function ke(t,e){t.rect(e.x,e.y,e.w,e.h)}xe.id=\"point\",xe.defaults={borderWidth:1,hitRadius:1,hoverBorderWidth:1,hoverRadius:4,pointStyle:\"circle\",radius:3,rotation:0},xe.defaultRoutes={backgroundColor:\"backgroundColor\",borderColor:\"borderColor\"};class De extends mt{constructor(t){super(),this.options=void 0,this.horizontal=void 0,this.base=void 0,this.width=void 0,this.height=void 0,t&&Object.assign(this,t)}draw(t){const e=this.options,{inner:i,outer:o}=Me(this),s=(a=o.radius).topLeft||a.topRight||a.bottomLeft||a.bottomRight?n.jb:ke;var a;t.save(),o.w===i.w&&o.h===i.h||(t.beginPath(),s(t,o),t.clip(),s(t,i),t.fillStyle=e.borderColor,t.fill(\"evenodd\")),t.beginPath(),s(t,i),t.fillStyle=e.backgroundColor,t.fill(),t.restore()}inRange(t,e,i){return we(this,t,e,i)}inXRange(t,e){return we(this,t,null,e)}inYRange(t,e){return we(this,null,t,e)}getCenterPoint(t){const{x:e,y:i,base:n,horizontal:o}=this.getProps([\"x\",\"y\",\"base\",\"horizontal\"],t);return{x:o?(e+n)/2:e,y:o?i:(i+n)/2}}getRange(t){return\"x\"===t?this.width/2:this.height/2}}De.id=\"bar\",De.defaults={borderSkipped:\"start\",borderWidth:0,borderRadius:0,enableBorderRadius:!0,pointStyle:void 0},De.defaultRoutes={backgroundColor:\"backgroundColor\",borderColor:\"borderColor\"};var Se=Object.freeze({__proto__:null,ArcElement:re,LineElement:fe,PointElement:xe,BarElement:De});function Pe(t){if(t._decimated){const e=t._data;delete t._decimated,delete t._data,Object.defineProperty(t,\"data\",{value:e})}}function Ce(t){t.data.datasets.forEach((t=>{Pe(t)}))}var Ae={id:\"decimation\",defaults:{algorithm:\"min-max\",enabled:!1},beforeElementsUpdate:(t,e,i)=>{if(!i.enabled)return void Ce(t);const o=t.width;t.data.datasets.forEach(((e,s)=>{const{_data:a,indexAxis:r}=e,l=t.getDatasetMeta(s),c=a||e.data;if(\"y\"===Object(n.C)([r,t.options.indexAxis]))return;if(\"line\"!==l.type)return;const h=t.scales[l.xAxisID];if(\"linear\"!==h.type&&\"time\"!==h.type)return;if(t.options.parsing)return;let d,{start:u,count:g}=function(t,e){const i=e.length;let o,s=0;const{iScale:a}=t,{min:r,max:l,minDefined:c,maxDefined:h}=a.getUserBounds();return c&&(s=Object(n.Rb)(Object(n.Sb)(e,a.axis,r).lo,0,i-1)),o=h?Object(n.Rb)(Object(n.Sb)(e,a.axis,l).hi+1,s,i)-s:i-s,{start:s,count:o}}(l,c);if(g<=4*o)Pe(e);else{switch(Object(n.Db)(a)&&(e._data=c,delete e.data,Object.defineProperty(e,\"data\",{configurable:!0,enumerable:!0,get:function(){return this._decimated},set:function(t){this._data=t}})),i.algorithm){case\"lttb\":d=function(t,e,i,n,o){const s=o.samples||n;if(s>=i)return t.slice(e,e+i);const a=[],r=(i-2)/(s-2);let l=0;const c=e+i-1;let h,d,u,g,b,p=e;for(a[l++]=t[p],h=0;h<s-2;h++){let n,o=0,s=0;const c=Math.floor((h+1)*r)+1+e,f=Math.min(Math.floor((h+2)*r)+1,i)+e,m=f-c;for(n=c;n<f;n++)o+=t[n].x,s+=t[n].y;o/=m,s/=m;const x=Math.floor(h*r)+1+e,_=Math.floor((h+1)*r)+1+e,{x:y,y:v}=t[p];for(u=g=-1,n=x;n<_;n++)g=.5*Math.abs((y-o)*(t[n].y-v)-(y-t[n].x)*(s-v)),g>u&&(u=g,d=t[n],b=n);a[l++]=d,p=b}return a[l++]=t[c],a}(c,u,g,o,i);break;case\"min-max\":d=function(t,e,i,o){let s,a,r,l,c,h,d,u,g,b,p=0,f=0;const m=[],x=e+i-1,_=t[e].x,y=t[x].x-_;for(s=e;s<e+i;++s){a=t[s],r=(a.x-_)/y*o,l=a.y;const e=0|r;if(e===c)l<g?(g=l,h=s):l>b&&(b=l,d=s),p=(f*p+a.x)/++f;else{const i=s-1;if(!Object(n.Db)(h)&&!Object(n.Db)(d)){const e=Math.min(h,d),n=Math.max(h,d);e!==u&&e!==i&&m.push({...t[e],x:p}),n!==u&&n!==i&&m.push({...t[n],x:p})}s>0&&i!==u&&m.push(t[i]),m.push(a),c=e,f=0,g=b=l,h=d=u=s}}return m}(c,u,g,o);break;default:throw new Error(`Unsupported decimation algorithm '${i.algorithm}'`)}e._decimated=d}}))},destroy(t){Ce(t)}};function Le(t,e,i){const o=function(t){const e=t.options,i=e.fill;let o=Object(n.Pb)(i&&i.target,i);return void 0===o&&(o=!!e.backgroundColor),!1!==o&&null!==o&&(!0===o?\"origin\":o)}(t);if(Object(n.Cb)(o))return!isNaN(o.value)&&o;let s=parseFloat(o);return Object(n.Ab)(s)&&Math.floor(s)===s?(\"-\"!==o[0]&&\"+\"!==o[0]||(s=e+s),!(s===e||s<0||s>=i)&&s):[\"origin\",\"start\",\"end\",\"stack\"].indexOf(o)>=0&&o}class Te{constructor(t){this.x=t.x,this.y=t.y,this.radius=t.radius}pathSegment(t,e,i){const{x:o,y:s,radius:a}=this;return e=e||{start:0,end:n.u},t.arc(o,s,a,e.end,e.start,!0),!i.bounds}interpolate(t){const{x:e,y:i,radius:n}=this,o=t.angle;return{x:e+Math.cos(o)*n,y:i+Math.sin(o)*n,angle:o}}}function Re(t){return(t.scale||{}).getPointPositionForValue?function(t){const{scale:e,fill:i}=t,o=e.options,s=e.getLabels().length,a=[],r=o.reverse?e.max:e.min,l=o.reverse?e.min:e.max;let c,h,d;if(d=\"start\"===i?r:\"end\"===i?l:Object(n.Cb)(i)?i.value:e.getBaseValue(),o.grid.circular)return h=e.getPointPositionForValue(0,r),new Te({x:h.x,y:h.y,radius:e.getDistanceFromCenterForValue(d)});for(c=0;c<s;++c)a.push(e.getPointPositionForValue(c,d));return a}(t):function(t){const{scale:e={},fill:i}=t;let o,s=null;return\"start\"===i?s=e.bottom:\"end\"===i?s=e.top:Object(n.Cb)(i)?s=e.getPixelForValue(i.value):e.getBasePixel&&(s=e.getBasePixel()),Object(n.Ab)(s)?(o=e.isHorizontal(),{x:o?s:null,y:o?null:s}):null}(t)}function Ee(t){const{chart:e,scale:i,index:n,line:o}=t,s=[],a=o.segments,r=o.points,l=function(t,e){const i=[],n=t.getSortedVisibleDatasetMetas();for(let o=0;o<n.length;o++){const t=n[o];if(t.index===e)break;ze(t)&&i.unshift(t.dataset)}return i}(e,n);l.push(Ve({x:null,y:i.bottom},o));for(let c=0;c<a.length;c++){const t=a[c];for(let e=t.start;e<=t.end;e++)Fe(s,r[e],l)}return new fe({points:s,options:{}})}const ze=t=>\"line\"===t.type&&!t.hidden;function Fe(t,e,i){const n=[];for(let o=0;o<i.length;o++){const s=i[o],{first:a,last:r,point:l}=Ie(s,e,\"x\");if(!(!l||a&&r))if(a)n.unshift(l);else if(t.push(l),!r)break}t.push(...n)}function Ie(t,e,i){const n=t.interpolate(e,i);if(!n)return{};const o=n[i],s=t.segments,a=t.points;let r=!1,l=!1;for(let c=0;c<s.length;c++){const t=s[c],e=a[t.start][i],n=a[t.end][i];if(o>=e&&o<=n){r=o===e,l=o===n;break}}return{first:r,last:l,point:n}}function Ve(t,e){let i=[],o=!1;return Object(n.vb)(t)?(o=!0,i=t):i=function(t,e){const{x:i=null,y:n=null}=t||{},o=e.points,s=[];return e.segments.forEach((t=>{const e=o[t.start],a=o[t.end];null!==n?(s.push({x:e.x,y:n}),s.push({x:a.x,y:n})):null!==i&&(s.push({x:i,y:e.y}),s.push({x:i,y:a.y}))})),s}(t,e),i.length?new fe({points:i,options:{tension:0},_loop:o,_fullLoop:o}):null}function Be(t,e,i){let o=t[e].fill;const s=[e];let a;if(!i)return o;for(;!1!==o&&-1===s.indexOf(o);){if(!Object(n.Ab)(o))return o;if(a=t[o],!a)return!1;if(a.visible)return o;s.push(o),o=a.fill}return!1}function We(t,e,i){t.beginPath(),e.path(t),t.lineTo(e.last().x,i),t.lineTo(e.first().x,i),t.closePath(),t.clip()}function Ne(t,e,i,o){if(o)return;let s=e[t],a=i[t];return\"angle\"===t&&(s=Object(n.nb)(s),a=Object(n.nb)(a)),{property:t,start:s,end:a}}function He(t,e,i,n){return t&&e?n(t[i],e[i]):t?t[i]:e?e[i]:0}function $e(t,e,i){const{top:n,bottom:o}=e.chart.chartArea,{property:s,start:a,end:r}=i||{};\"x\"===s&&(t.beginPath(),t.rect(a,n,r-a,o-n),t.clip())}function Ue(t,e,i,n){const o=e.interpolate(i,n);o&&t.lineTo(o.x,o.y)}function Ye(t,e){const{line:i,target:o,property:s,color:a,scale:r}=e,l=function(t,e,i){const o=t.segments,s=t.points,a=e.points,r=[];for(const l of o){const t=Ne(i,s[l.start],s[l.end],l.loop);if(!e.segments){r.push({source:l,target:t,start:s[l.start],end:s[l.end]});continue}const o=Object(n.cb)(e,t);for(const e of o){const o=Ne(i,a[e.start],a[e.end],e.loop),c=Object(n.mb)(l,s,o);for(const n of c)r.push({source:n,target:e,start:{[i]:He(t,o,\"start\",Math.max)},end:{[i]:He(t,o,\"end\",Math.min)}})}}return r}(i,o,s);for(const{source:n,target:c,start:h,end:d}of l){const{style:{backgroundColor:e=a}={}}=n;t.save(),t.fillStyle=e,$e(t,r,Ne(s,h,d)),t.beginPath();const l=!!i.pathSegment(t,n);l?t.closePath():Ue(t,o,d,s);const u=!!o.pathSegment(t,c,{move:l,reverse:!0}),g=l&&u;g||Ue(t,o,h,s),t.closePath(),t.fill(g?\"evenodd\":\"nonzero\"),t.restore()}}function Xe(t,e,i){const o=function(t){const{chart:e,fill:i,line:o}=t;if(Object(n.Ab)(i))return function(t,e){const i=t.getDatasetMeta(e);return i&&t.isDatasetVisible(e)?i.dataset:null}(e,i);if(\"stack\"===i)return Ee(t);const s=Re(t);return s instanceof Te?s:Ve(s,o)}(e),{line:s,scale:a,axis:r}=e,l=s.options,c=l.fill,h=l.backgroundColor,{above:d=h,below:u=h}=c||{};o&&s.points.length&&(Object(n.Eb)(t,i),function(t,e){const{line:i,target:n,above:o,below:s,area:a,scale:r}=e,l=i._loop?\"angle\":e.axis;t.save(),\"x\"===l&&s!==o&&(We(t,n,a.top),Ye(t,{line:i,target:n,color:o,scale:r,property:l}),t.restore(),t.save(),We(t,n,a.bottom)),Ye(t,{line:i,target:n,color:s,scale:r,property:l}),t.restore()}(t,{line:s,target:o,above:d,below:u,area:i,scale:a,axis:r}),Object(n.Gb)(t))}var qe={id:\"filler\",afterDatasetsUpdate(t,e,i){const n=(t.data.datasets||[]).length,o=[];let s,a,r,l;for(a=0;a<n;++a)s=t.getDatasetMeta(a),r=s.dataset,l=null,r&&r.options&&r instanceof fe&&(l={visible:t.isDatasetVisible(a),index:a,fill:Le(r,a,n),chart:t,axis:s.controller.options.indexAxis,scale:s.vScale,line:r}),s.$filler=l,o.push(l);for(a=0;a<n;++a)l=o[a],l&&!1!==l.fill&&(l.fill=Be(o,a,i.propagate))},beforeDraw(t,e,i){const n=\"beforeDraw\"===i.drawTime,o=t.getSortedVisibleDatasetMetas(),s=t.chartArea;for(let a=o.length-1;a>=0;--a){const e=o[a].$filler;e&&(e.line.updateControlPoints(s,e.axis),n&&Xe(t.ctx,e,s))}},beforeDatasetsDraw(t,e,i){if(\"beforeDatasetsDraw\"!==i.drawTime)return;const n=t.getSortedVisibleDatasetMetas();for(let o=n.length-1;o>=0;--o){const e=n[o].$filler;e&&Xe(t.ctx,e,t.chartArea)}},beforeDatasetDraw(t,e,i){const n=e.meta.$filler;n&&!1!==n.fill&&\"beforeDatasetDraw\"===i.drawTime&&Xe(t.ctx,n,t.chartArea)},defaults:{propagate:!0,drawTime:\"beforeDatasetDraw\"}};const Ke=(t,e)=>{let{boxHeight:i=e,boxWidth:n=e}=t;return t.usePointStyle&&(i=Math.min(i,e),n=Math.min(n,e)),{boxWidth:n,boxHeight:i,itemHeight:Math.max(e,i)}};class Ge extends mt{constructor(t){super(),this._added=!1,this.legendHitBoxes=[],this._hoveredItem=null,this.doughnutMode=!1,this.chart=t.chart,this.options=t.options,this.ctx=t.ctx,this.legendItems=void 0,this.columnSizes=void 0,this.lineWidths=void 0,this.maxHeight=void 0,this.maxWidth=void 0,this.top=void 0,this.bottom=void 0,this.left=void 0,this.right=void 0,this.height=void 0,this.width=void 0,this._margins=void 0,this.position=void 0,this.weight=void 0,this.fullSize=void 0}update(t,e,i){const n=this;n.maxWidth=t,n.maxHeight=e,n._margins=i,n.setDimensions(),n.buildLabels(),n.fit()}setDimensions(){const t=this;t.isHorizontal()?(t.width=t.maxWidth,t.left=0,t.right=t.width):(t.height=t.maxHeight,t.top=0,t.bottom=t.height)}buildLabels(){const t=this,e=t.options.labels||{};let i=Object(n.o)(e.generateLabels,[t.chart],t)||[];e.filter&&(i=i.filter((i=>e.filter(i,t.chart.data)))),e.sort&&(i=i.sort(((i,n)=>e.sort(i,n,t.chart.data)))),t.options.reverse&&i.reverse(),t.legendItems=i}fit(){const t=this,{options:e,ctx:i}=t;if(!e.display)return void(t.width=t.height=0);const o=e.labels,s=Object(n.x)(o.font),a=s.size,r=t._computeTitleHeight(),{boxWidth:l,itemHeight:c}=Ke(o,a);let h,d;i.font=s.string,t.isHorizontal()?(h=t.maxWidth,d=t._fitRows(r,a,l,c)+10):(d=t.maxHeight,h=t._fitCols(r,a,l,c)+10),t.width=Math.min(h,e.maxWidth||t.maxWidth),t.height=Math.min(d,e.maxHeight||t.maxHeight)}_fitRows(t,e,i,n){const o=this,{ctx:s,maxWidth:a,options:{labels:{padding:r}}}=o,l=o.legendHitBoxes=[],c=o.lineWidths=[0],h=n+r;let d=t;s.textAlign=\"left\",s.textBaseline=\"middle\";let u=-1,g=-h;return o.legendItems.forEach(((t,o)=>{const b=i+e/2+s.measureText(t.text).width;(0===o||c[c.length-1]+b+2*r>a)&&(d+=h,c[c.length-(o>0?0:1)]=0,g+=h,u++),l[o]={left:0,top:g,row:u,width:b,height:n},c[c.length-1]+=b+r})),d}_fitCols(t,e,i,n){const o=this,{ctx:s,maxHeight:a,options:{labels:{padding:r}}}=o,l=o.legendHitBoxes=[],c=o.columnSizes=[],h=a-t;let d=r,u=0,g=0,b=0,p=0,f=0;return o.legendItems.forEach(((t,o)=>{const a=i+e/2+s.measureText(t.text).width;o>0&&g+e+2*r>h&&(d+=u+r,c.push({width:u,height:g}),b+=u+r,f++,p=0,u=g=0),u=Math.max(u,a),g+=e+r,l[o]={left:b,top:p,col:f,width:a,height:n},p+=n+r})),d+=u,c.push({width:u,height:g}),d}adjustHitBoxes(){const t=this;if(!t.options.display)return;const e=t._computeTitleHeight(),{legendHitBoxes:i,options:{align:o,labels:{padding:s}}}=t;if(this.isHorizontal()){let a=0,r=Object(n.z)(o,t.left+s,t.right-t.lineWidths[a]);for(const l of i)a!==l.row&&(a=l.row,r=Object(n.z)(o,t.left+s,t.right-t.lineWidths[a])),l.top+=t.top+e+s,l.left=r,r+=l.width+s}else{let a=0,r=Object(n.z)(o,t.top+e+s,t.bottom-t.columnSizes[a].height);for(const l of i)l.col!==a&&(a=l.col,r=Object(n.z)(o,t.top+e+s,t.bottom-t.columnSizes[a].height)),l.top=r,l.left+=t.left+s,r+=l.height+s}}isHorizontal(){return\"top\"===this.options.position||\"bottom\"===this.options.position}draw(){const t=this;if(t.options.display){const e=t.ctx;Object(n.Eb)(e,t),t._draw(),Object(n.Gb)(e)}}_draw(){const t=this,{options:e,columnSizes:i,lineWidths:o,ctx:s}=t,{align:a,labels:r}=e,l=n.xb.color,c=Object(n.ob)(e.rtl,t.left,t.width),h=Object(n.x)(r.font),{color:d,padding:u}=r,g=h.size,b=g/2;let p;t.drawTitle(),s.textAlign=c.textAlign(\"left\"),s.textBaseline=\"middle\",s.lineWidth=.5,s.font=h.string;const{boxWidth:f,boxHeight:m,itemHeight:x}=Ke(r,g),_=t.isHorizontal(),y=this._computeTitleHeight();p=_?{x:Object(n.z)(a,t.left+u,t.right-o[0]),y:t.top+u+y,line:0}:{x:t.left+u,y:Object(n.z)(a,t.top+y+u,t.bottom-i[0].height),line:0},Object(n.pb)(t.ctx,e.textDirection);const v=x+u;t.legendItems.forEach(((e,O)=>{s.strokeStyle=e.fontColor||d,s.fillStyle=e.fontColor||d;const j=s.measureText(e.text).width,M=c.textAlign(e.textAlign||(e.textAlign=r.textAlign)),w=f+g/2+j;let k=p.x,D=p.y;c.setWidth(t.width),_?O>0&&k+w+u>t.right&&(D=p.y+=v,p.line++,k=p.x=Object(n.z)(a,t.left+u,t.right-o[p.line])):O>0&&D+v>t.bottom&&(k=p.x=k+i[p.line].width+u,p.line++,D=p.y=Object(n.z)(a,t.top+y+u,t.bottom-i[p.line].height));!function(t,e,i){if(isNaN(f)||f<=0||isNaN(m)||m<0)return;s.save();const o=Object(n.Pb)(i.lineWidth,1);if(s.fillStyle=Object(n.Pb)(i.fillStyle,l),s.lineCap=Object(n.Pb)(i.lineCap,\"butt\"),s.lineDashOffset=Object(n.Pb)(i.lineDashOffset,0),s.lineJoin=Object(n.Pb)(i.lineJoin,\"miter\"),s.lineWidth=o,s.strokeStyle=Object(n.Pb)(i.strokeStyle,l),s.setLineDash(Object(n.Pb)(i.lineDash,[])),r.usePointStyle){const a={radius:f*Math.SQRT2/2,pointStyle:i.pointStyle,rotation:i.rotation,borderWidth:o},r=c.xPlus(t,f/2),l=e+b;Object(n.ib)(s,a,r,l)}else{const a=e+Math.max((g-m)/2,0),r=c.leftForLtr(t,f),l=Object(n.lb)(i.borderRadius);s.beginPath(),Object.values(l).some((t=>0!==t))?Object(n.jb)(s,{x:r,y:a,w:f,h:m,radius:l}):s.rect(r,a,f,m),s.fill(),0!==o&&s.stroke()}s.restore()}(c.x(k),D,e),k=Object(n.qb)(M,k+f+b,t.right),function(t,e,i){Object(n.w)(s,i.text,t,e+x/2,h,{strikethrough:i.hidden,textAlign:i.textAlign})}(c.x(k),D,e),_?p.x+=w+u:p.y+=v})),Object(n.rb)(t.ctx,e.textDirection)}drawTitle(){const t=this,e=t.options,i=e.title,o=Object(n.x)(i.font),s=Object(n.d)(i.padding);if(!i.display)return;const a=Object(n.ob)(e.rtl,t.left,t.width),r=t.ctx,l=i.position,c=o.size/2,h=s.top+c;let d,u=t.left,g=t.width;if(this.isHorizontal())g=Math.max(...t.lineWidths),d=t.top+h,u=Object(n.z)(e.align,u,t.right-g);else{const i=t.columnSizes.reduce(((t,e)=>Math.max(t,e.height)),0);d=h+Object(n.z)(e.align,t.top,t.bottom-i-e.labels.padding-t._computeTitleHeight())}const b=Object(n.z)(l,u,u+g);r.textAlign=a.textAlign(Object(n.y)(l)),r.textBaseline=\"middle\",r.strokeStyle=i.color,r.fillStyle=i.color,r.font=o.string,Object(n.w)(r,i.text,b,d,o)}_computeTitleHeight(){const t=this.options.title,e=Object(n.x)(t.font),i=Object(n.d)(t.padding);return t.display?e.lineHeight+i.height:0}_getLegendItemAt(t,e){const i=this;let n,o,s;if(t>=i.left&&t<=i.right&&e>=i.top&&e<=i.bottom)for(s=i.legendHitBoxes,n=0;n<s.length;++n)if(o=s[n],t>=o.left&&t<=o.left+o.width&&e>=o.top&&e<=o.top+o.height)return i.legendItems[n];return null}handleEvent(t){const e=this,i=e.options;if(!function(t,e){if(\"mousemove\"===t&&(e.onHover||e.onLeave))return!0;if(e.onClick&&(\"click\"===t||\"mouseup\"===t))return!0;return!1}(t.type,i))return;const o=e._getLegendItemAt(t.x,t.y);if(\"mousemove\"===t.type){const r=e._hoveredItem,l=(a=o,null!==(s=r)&&null!==a&&s.datasetIndex===a.datasetIndex&&s.index===a.index);r&&!l&&Object(n.o)(i.onLeave,[t,r,e],e),e._hoveredItem=o,o&&!l&&Object(n.o)(i.onHover,[t,o,e],e)}else o&&Object(n.o)(i.onClick,[t,o,e],e);var s,a}}var Je={id:\"legend\",_element:Ge,start(t,e,i){const n=t.legend=new Ge({ctx:t.ctx,options:i,chart:t});et.configure(t,n,i),et.addBox(t,n)},stop(t){et.removeBox(t,t.legend),delete t.legend},beforeUpdate(t,e,i){const n=t.legend;et.configure(t,n,i),n.options=i},afterUpdate(t){const e=t.legend;e.buildLabels(),e.adjustHitBoxes()},afterEvent(t,e){e.replay||t.legend.handleEvent(e.event)},defaults:{display:!0,position:\"top\",align:\"center\",fullSize:!0,reverse:!1,weight:1e3,onClick(t,e,i){const n=e.datasetIndex,o=i.chart;o.isDatasetVisible(n)?(o.hide(n),e.hidden=!0):(o.show(n),e.hidden=!1)},onHover:null,onLeave:null,labels:{color:t=>t.chart.options.color,boxWidth:40,padding:10,generateLabels(t){const e=t.data.datasets,{labels:{usePointStyle:i,pointStyle:o,textAlign:s,color:a}}=t.legend.options;return t._getSortedDatasetMetas().map((t=>{const r=t.controller.getStyle(i?0:void 0),l=Object(n.d)(r.borderWidth);return{text:e[t.index].label,fillStyle:r.backgroundColor,fontColor:a,hidden:!t.visible,lineCap:r.borderCapStyle,lineDash:r.borderDash,lineDashOffset:r.borderDashOffset,lineJoin:r.borderJoinStyle,lineWidth:(l.width+l.height)/4,strokeStyle:r.borderColor,pointStyle:o||r.pointStyle,rotation:r.rotation,textAlign:s||r.textAlign,borderRadius:0,datasetIndex:t.index}}),this)}},title:{color:t=>t.chart.options.color,display:!1,position:\"center\",text:\"\"}},descriptors:{_scriptable:t=>!t.startsWith(\"on\"),labels:{_scriptable:t=>![\"generateLabels\",\"filter\",\"sort\"].includes(t)}}};class Qe extends mt{constructor(t){super(),this.chart=t.chart,this.options=t.options,this.ctx=t.ctx,this._padding=void 0,this.top=void 0,this.bottom=void 0,this.left=void 0,this.right=void 0,this.width=void 0,this.height=void 0,this.position=void 0,this.weight=void 0,this.fullSize=void 0}update(t,e){const i=this,o=i.options;if(i.left=0,i.top=0,!o.display)return void(i.width=i.height=i.right=i.bottom=0);i.width=i.right=t,i.height=i.bottom=e;const s=Object(n.vb)(o.text)?o.text.length:1;i._padding=Object(n.d)(o.padding);const a=s*Object(n.x)(o.font).lineHeight+i._padding.height;i.isHorizontal()?i.height=a:i.width=a}isHorizontal(){const t=this.options.position;return\"top\"===t||\"bottom\"===t}_drawArgs(t){const{top:e,left:i,bottom:o,right:s,options:a}=this,r=a.align;let l,c,h,d=0;return this.isHorizontal()?(c=Object(n.z)(r,i,s),h=e+t,l=s-i):(\"left\"===a.position?(c=i+t,h=Object(n.z)(r,o,e),d=-.5*n.q):(c=s-t,h=Object(n.z)(r,e,o),d=.5*n.q),l=o-e),{titleX:c,titleY:h,maxWidth:l,rotation:d}}draw(){const t=this,e=t.ctx,i=t.options;if(!i.display)return;const o=Object(n.x)(i.font),s=o.lineHeight/2+t._padding.top,{titleX:a,titleY:r,maxWidth:l,rotation:c}=t._drawArgs(s);Object(n.w)(e,i.text,0,0,o,{color:i.color,maxWidth:l,rotation:c,textAlign:Object(n.y)(i.align),textBaseline:\"middle\",translation:[a,r]})}}var Ze={id:\"title\",_element:Qe,start(t,e,i){!function(t,e){const i=new Qe({ctx:t.ctx,options:e,chart:t});et.configure(t,i,e),et.addBox(t,i),t.titleBlock=i}(t,i)},stop(t){const e=t.titleBlock;et.removeBox(t,e),delete t.titleBlock},beforeUpdate(t,e,i){const n=t.titleBlock;et.configure(t,n,i),n.options=i},defaults:{align:\"center\",display:!1,font:{weight:\"bold\"},fullSize:!0,padding:10,position:\"top\",text:\"\",weight:2e3},defaultRoutes:{color:\"color\"},descriptors:{_scriptable:!0,_indexable:!1}};const ti={average(t){if(!t.length)return!1;let e,i,n=0,o=0,s=0;for(e=0,i=t.length;e<i;++e){const i=t[e].element;if(i&&i.hasValue()){const t=i.tooltipPosition();n+=t.x,o+=t.y,++s}}return{x:n/s,y:o/s}},nearest(t,e){if(!t.length)return!1;let i,o,s,a=e.x,r=e.y,l=Number.POSITIVE_INFINITY;for(i=0,o=t.length;i<o;++i){const o=t[i].element;if(o&&o.hasValue()){const t=o.getCenterPoint(),i=Object(n.tb)(e,t);i<l&&(l=i,s=o)}}if(s){const t=s.tooltipPosition();a=t.x,r=t.y}return{x:a,y:r}}};function ei(t,e){return e&&(Object(n.vb)(e)?Array.prototype.push.apply(t,e):t.push(e)),t}function ii(t){return(\"string\"===typeof t||t instanceof String)&&t.indexOf(\"\\n\")>-1?t.split(\"\\n\"):t}function ni(t,e){const{element:i,datasetIndex:n,index:o}=e,s=t.getDatasetMeta(n).controller,{label:a,value:r}=s.getLabelAndValue(o);return{chart:t,label:a,parsed:s.getParsed(o),raw:t.data.datasets[n].data[o],formattedValue:r,dataset:s.getDataset(),dataIndex:o,datasetIndex:n,element:i}}function oi(t,e){const i=t._chart.ctx,{body:o,footer:s,title:a}=t,{boxWidth:r,boxHeight:l}=e,c=Object(n.x)(e.bodyFont),h=Object(n.x)(e.titleFont),d=Object(n.x)(e.footerFont),u=a.length,g=s.length,b=o.length,p=Object(n.d)(e.padding);let f=p.height,m=0,x=o.reduce(((t,e)=>t+e.before.length+e.lines.length+e.after.length),0);if(x+=t.beforeBody.length+t.afterBody.length,u&&(f+=u*h.lineHeight+(u-1)*e.titleSpacing+e.titleMarginBottom),x){f+=b*(e.displayColors?Math.max(l,c.lineHeight):c.lineHeight)+(x-b)*c.lineHeight+(x-1)*e.bodySpacing}g&&(f+=e.footerMarginTop+g*d.lineHeight+(g-1)*e.footerSpacing);let _=0;const y=function(t){m=Math.max(m,i.measureText(t).width+_)};return i.save(),i.font=h.string,Object(n.e)(t.title,y),i.font=c.string,Object(n.e)(t.beforeBody.concat(t.afterBody),y),_=e.displayColors?r+2:0,Object(n.e)(o,(t=>{Object(n.e)(t.before,y),Object(n.e)(t.lines,y),Object(n.e)(t.after,y)})),_=0,i.font=d.string,Object(n.e)(t.footer,y),i.restore(),m+=p.width,{width:m,height:f}}function si(t,e,i,n){const{x:o,width:s}=i,{width:a,chartArea:{left:r,right:l}}=t;let c=\"center\";return\"center\"===n?c=o<=(r+l)/2?\"left\":\"right\":o<=s/2?c=\"left\":o>=a-s/2&&(c=\"right\"),function(t,e,i,n){const{x:o,width:s}=n,a=i.caretSize+i.caretPadding;return\"left\"===t&&o+s+a>e.width||\"right\"===t&&o-s-a<0||void 0}(c,t,e,i)&&(c=\"center\"),c}function ai(t,e,i){const n=e.yAlign||function(t,e){const{y:i,height:n}=e;return i<n/2?\"top\":i>t.height-n/2?\"bottom\":\"center\"}(t,i);return{xAlign:e.xAlign||si(t,e,i,n),yAlign:n}}function ri(t,e,i,o){const{caretSize:s,caretPadding:a,cornerRadius:r}=t,{xAlign:l,yAlign:c}=i,h=s+a,d=r+a;let u=function(t,e){let{x:i,width:n}=t;return\"right\"===e?i-=n:\"center\"===e&&(i-=n/2),i}(e,l);const g=function(t,e,i){let{y:n,height:o}=t;return\"top\"===e?n+=i:n-=\"bottom\"===e?o+i:o/2,n}(e,c,h);return\"center\"===c?\"left\"===l?u+=h:\"right\"===l&&(u-=h):\"left\"===l?u-=d:\"right\"===l&&(u+=d),{x:Object(n.Rb)(u,0,o.width-e.width),y:Object(n.Rb)(g,0,o.height-e.height)}}function li(t,e,i){const o=Object(n.d)(i.padding);return\"center\"===e?t.x+t.width/2:\"right\"===e?t.x+t.width-o.right:t.x+o.left}function ci(t){return ei([],ii(t))}function hi(t,e){const i=e&&e.dataset&&e.dataset.tooltip&&e.dataset.tooltip.callbacks;return i?t.override(i):t}class di extends mt{constructor(t){super(),this.opacity=0,this._active=[],this._chart=t._chart,this._eventPosition=void 0,this._size=void 0,this._cachedAnimations=void 0,this._tooltipItems=[],this.$animations=void 0,this.$context=void 0,this.options=t.options,this.dataPoints=void 0,this.title=void 0,this.beforeBody=void 0,this.body=void 0,this.afterBody=void 0,this.footer=void 0,this.xAlign=void 0,this.yAlign=void 0,this.x=void 0,this.y=void 0,this.height=void 0,this.width=void 0,this.caretX=void 0,this.caretY=void 0,this.labelColors=void 0,this.labelPointStyles=void 0,this.labelTextColors=void 0}initialize(t){this.options=t,this._cachedAnimations=void 0,this.$context=void 0}_resolveAnimations(){const t=this,e=t._cachedAnimations;if(e)return e;const i=t._chart,n=t.options.setContext(t.getContext()),o=n.enabled&&i.options.animation&&n.animations,s=new c(t._chart,o);return o._cacheable&&(t._cachedAnimations=Object.freeze(s)),s}getContext(){const t=this;return t.$context||(t.$context=(e=t._chart.getContext(),i=t,n=t._tooltipItems,Object.assign(Object.create(e),{tooltip:i,tooltipItems:n,type:\"tooltip\"})));var e,i,n}getTitle(t,e){const i=this,{callbacks:n}=e,o=n.beforeTitle.apply(i,[t]),s=n.title.apply(i,[t]),a=n.afterTitle.apply(i,[t]);let r=[];return r=ei(r,ii(o)),r=ei(r,ii(s)),r=ei(r,ii(a)),r}getBeforeBody(t,e){return ci(e.callbacks.beforeBody.apply(this,[t]))}getBody(t,e){const i=this,{callbacks:o}=e,s=[];return Object(n.e)(t,(t=>{const e={before:[],lines:[],after:[]},n=hi(o,t);ei(e.before,ii(n.beforeLabel.call(i,t))),ei(e.lines,n.label.call(i,t)),ei(e.after,ii(n.afterLabel.call(i,t))),s.push(e)})),s}getAfterBody(t,e){return ci(e.callbacks.afterBody.apply(this,[t]))}getFooter(t,e){const i=this,{callbacks:n}=e,o=n.beforeFooter.apply(i,[t]),s=n.footer.apply(i,[t]),a=n.afterFooter.apply(i,[t]);let r=[];return r=ei(r,ii(o)),r=ei(r,ii(s)),r=ei(r,ii(a)),r}_createItems(t){const e=this,i=e._active,o=e._chart.data,s=[],a=[],r=[];let l,c,h=[];for(l=0,c=i.length;l<c;++l)h.push(ni(e._chart,i[l]));return t.filter&&(h=h.filter(((e,i,n)=>t.filter(e,i,n,o)))),t.itemSort&&(h=h.sort(((e,i)=>t.itemSort(e,i,o)))),Object(n.e)(h,(i=>{const n=hi(t.callbacks,i);s.push(n.labelColor.call(e,i)),a.push(n.labelPointStyle.call(e,i)),r.push(n.labelTextColor.call(e,i))})),e.labelColors=s,e.labelPointStyles=a,e.labelTextColors=r,e.dataPoints=h,h}update(t,e){const i=this,n=i.options.setContext(i.getContext()),o=i._active;let s,a=[];if(o.length){const t=ti[n.position].call(i,o,i._eventPosition);a=i._createItems(n),i.title=i.getTitle(a,n),i.beforeBody=i.getBeforeBody(a,n),i.body=i.getBody(a,n),i.afterBody=i.getAfterBody(a,n),i.footer=i.getFooter(a,n);const e=i._size=oi(i,n),r=Object.assign({},t,e),l=ai(i._chart,n,r),c=ri(n,r,l,i._chart);i.xAlign=l.xAlign,i.yAlign=l.yAlign,s={opacity:1,x:c.x,y:c.y,width:e.width,height:e.height,caretX:t.x,caretY:t.y}}else 0!==i.opacity&&(s={opacity:0});i._tooltipItems=a,i.$context=void 0,s&&i._resolveAnimations().update(i,s),t&&n.external&&n.external.call(i,{chart:i._chart,tooltip:i,replay:e})}drawCaret(t,e,i,n){const o=this.getCaretPosition(t,i,n);e.lineTo(o.x1,o.y1),e.lineTo(o.x2,o.y2),e.lineTo(o.x3,o.y3)}getCaretPosition(t,e,i){const{xAlign:n,yAlign:o}=this,{cornerRadius:s,caretSize:a}=i,{x:r,y:l}=t,{width:c,height:h}=e;let d,u,g,b,p,f;return\"center\"===o?(p=l+h/2,\"left\"===n?(d=r,u=d-a,b=p+a,f=p-a):(d=r+c,u=d+a,b=p-a,f=p+a),g=d):(u=\"left\"===n?r+s+a:\"right\"===n?r+c-s-a:this.caretX,\"top\"===o?(b=l,p=b-a,d=u-a,g=u+a):(b=l+h,p=b+a,d=u+a,g=u-a),f=b),{x1:d,x2:u,x3:g,y1:b,y2:p,y3:f}}drawTitle(t,e,i){const o=this,s=o.title,a=s.length;let r,l,c;if(a){const h=Object(n.ob)(i.rtl,o.x,o.width);for(t.x=li(o,i.titleAlign,i),e.textAlign=h.textAlign(i.titleAlign),e.textBaseline=\"middle\",r=Object(n.x)(i.titleFont),l=i.titleSpacing,e.fillStyle=i.titleColor,e.font=r.string,c=0;c<a;++c)e.fillText(s[c],h.x(t.x),t.y+r.lineHeight/2),t.y+=r.lineHeight+l,c+1===a&&(t.y+=i.titleMarginBottom-l)}}_drawColorBox(t,e,i,o,s){const a=this,r=a.labelColors[i],l=a.labelPointStyles[i],{boxHeight:c,boxWidth:h}=s,d=Object(n.x)(s.bodyFont),u=li(a,\"left\",s),g=o.x(u),b=c<d.lineHeight?(d.lineHeight-c)/2:0,p=e.y+b;if(s.usePointStyle){const e={radius:Math.min(h,c)/2,pointStyle:l.pointStyle,rotation:l.rotation,borderWidth:1},i=o.leftForLtr(g,h)+h/2,a=p+c/2;t.strokeStyle=s.multiKeyBackground,t.fillStyle=s.multiKeyBackground,Object(n.ib)(t,e,i,a),t.strokeStyle=r.borderColor,t.fillStyle=r.backgroundColor,Object(n.ib)(t,e,i,a)}else{t.lineWidth=r.borderWidth||1,t.strokeStyle=r.borderColor,t.setLineDash(r.borderDash||[]),t.lineDashOffset=r.borderDashOffset||0;const e=o.leftForLtr(g,h),i=o.leftForLtr(o.xPlus(g,1),h-2),a=Object(n.lb)(r.borderRadius);Object.values(a).some((t=>0!==t))?(t.beginPath(),t.fillStyle=s.multiKeyBackground,Object(n.jb)(t,{x:e,y:p,w:h,h:c,radius:a}),t.fill(),t.stroke(),t.fillStyle=r.backgroundColor,t.beginPath(),Object(n.jb)(t,{x:i,y:p+1,w:h-2,h:c-2,radius:a}),t.fill()):(t.fillStyle=s.multiKeyBackground,t.fillRect(e,p,h,c),t.strokeRect(e,p,h,c),t.fillStyle=r.backgroundColor,t.fillRect(i,p+1,h-2,c-2))}t.fillStyle=a.labelTextColors[i]}drawBody(t,e,i){const o=this,{body:s}=o,{bodySpacing:a,bodyAlign:r,displayColors:l,boxHeight:c,boxWidth:h}=i,d=Object(n.x)(i.bodyFont);let u=d.lineHeight,g=0;const b=Object(n.ob)(i.rtl,o.x,o.width),p=function(i){e.fillText(i,b.x(t.x+g),t.y+u/2),t.y+=u+a},f=b.textAlign(r);let m,x,_,y,v,O,j;for(e.textAlign=r,e.textBaseline=\"middle\",e.font=d.string,t.x=li(o,f,i),e.fillStyle=i.bodyColor,Object(n.e)(o.beforeBody,p),g=l&&\"right\"!==f?\"center\"===r?h/2+1:h+2:0,y=0,O=s.length;y<O;++y){for(m=s[y],x=o.labelTextColors[y],e.fillStyle=x,Object(n.e)(m.before,p),_=m.lines,l&&_.length&&(o._drawColorBox(e,t,y,b,i),u=Math.max(d.lineHeight,c)),v=0,j=_.length;v<j;++v)p(_[v]),u=d.lineHeight;Object(n.e)(m.after,p)}g=0,u=d.lineHeight,Object(n.e)(o.afterBody,p),t.y-=a}drawFooter(t,e,i){const o=this,s=o.footer,a=s.length;let r,l;if(a){const c=Object(n.ob)(i.rtl,o.x,o.width);for(t.x=li(o,i.footerAlign,i),t.y+=i.footerMarginTop,e.textAlign=c.textAlign(i.footerAlign),e.textBaseline=\"middle\",r=Object(n.x)(i.footerFont),e.fillStyle=i.footerColor,e.font=r.string,l=0;l<a;++l)e.fillText(s[l],c.x(t.x),t.y+r.lineHeight/2),t.y+=r.lineHeight+i.footerSpacing}}drawBackground(t,e,i,n){const{xAlign:o,yAlign:s}=this,{x:a,y:r}=t,{width:l,height:c}=i,h=n.cornerRadius;e.fillStyle=n.backgroundColor,e.strokeStyle=n.borderColor,e.lineWidth=n.borderWidth,e.beginPath(),e.moveTo(a+h,r),\"top\"===s&&this.drawCaret(t,e,i,n),e.lineTo(a+l-h,r),e.quadraticCurveTo(a+l,r,a+l,r+h),\"center\"===s&&\"right\"===o&&this.drawCaret(t,e,i,n),e.lineTo(a+l,r+c-h),e.quadraticCurveTo(a+l,r+c,a+l-h,r+c),\"bottom\"===s&&this.drawCaret(t,e,i,n),e.lineTo(a+h,r+c),e.quadraticCurveTo(a,r+c,a,r+c-h),\"center\"===s&&\"left\"===o&&this.drawCaret(t,e,i,n),e.lineTo(a,r+h),e.quadraticCurveTo(a,r,a+h,r),e.closePath(),e.fill(),n.borderWidth>0&&e.stroke()}_updateAnimationTarget(t){const e=this,i=e._chart,n=e.$animations,o=n&&n.x,s=n&&n.y;if(o||s){const n=ti[t.position].call(e,e._active,e._eventPosition);if(!n)return;const a=e._size=oi(e,t),r=Object.assign({},n,e._size),l=ai(i,t,r),c=ri(t,r,l,i);o._to===c.x&&s._to===c.y||(e.xAlign=l.xAlign,e.yAlign=l.yAlign,e.width=a.width,e.height=a.height,e.caretX=n.x,e.caretY=n.y,e._resolveAnimations().update(e,c))}}draw(t){const e=this,i=e.options.setContext(e.getContext());let o=e.opacity;if(!o)return;e._updateAnimationTarget(i);const s={width:e.width,height:e.height},a={x:e.x,y:e.y};o=Math.abs(o)<.001?0:o;const r=Object(n.d)(i.padding),l=e.title.length||e.beforeBody.length||e.body.length||e.afterBody.length||e.footer.length;i.enabled&&l&&(t.save(),t.globalAlpha=o,e.drawBackground(a,t,s,i),Object(n.pb)(t,i.textDirection),a.y+=r.top,e.drawTitle(a,t,i),e.drawBody(a,t,i),e.drawFooter(a,t,i),Object(n.rb)(t,i.textDirection),t.restore())}getActiveElements(){return this._active||[]}setActiveElements(t,e){const i=this,o=i._active,s=t.map((({datasetIndex:t,index:e})=>{const n=i._chart.getDatasetMeta(t);if(!n)throw new Error(\"Cannot find a dataset at index \"+t);return{datasetIndex:t,element:n.data[e],index:e}})),a=!Object(n.X)(o,s),r=i._positionChanged(s,e);(a||r)&&(i._active=s,i._eventPosition=e,i.update(!0))}handleEvent(t,e){const i=this,o=i.options,s=i._active||[];let a=!1,r=[];\"mouseout\"!==t.type&&(r=i._chart.getElementsAtEventForMode(t,o.mode,o,e),o.reverse&&r.reverse());const l=i._positionChanged(r,t);return a=e||!Object(n.X)(r,s)||l,a&&(i._active=r,(o.enabled||o.external)&&(i._eventPosition={x:t.x,y:t.y},i.update(!0,e))),a}_positionChanged(t,e){const{caretX:i,caretY:n,options:o}=this,s=ti[o.position].call(this,t,e);return!1!==s&&(i!==s.x||n!==s.y)}}di.positioners=ti;var ui={id:\"tooltip\",_element:di,positioners:ti,afterInit(t,e,i){i&&(t.tooltip=new di({_chart:t,options:i}))},beforeUpdate(t,e,i){t.tooltip&&t.tooltip.initialize(i)},reset(t,e,i){t.tooltip&&t.tooltip.initialize(i)},afterDraw(t){const e=t.tooltip,i={tooltip:e};!1!==t.notifyPlugins(\"beforeTooltipDraw\",i)&&(e&&e.draw(t.ctx),t.notifyPlugins(\"afterTooltipDraw\",i))},afterEvent(t,e){if(t.tooltip){const i=e.replay;t.tooltip.handleEvent(e.event,i)&&(e.changed=!0)}},defaults:{enabled:!0,external:null,position:\"average\",backgroundColor:\"rgba(0,0,0,0.8)\",titleColor:\"#fff\",titleFont:{weight:\"bold\"},titleSpacing:2,titleMarginBottom:6,titleAlign:\"left\",bodyColor:\"#fff\",bodySpacing:2,bodyFont:{},bodyAlign:\"left\",footerColor:\"#fff\",footerSpacing:2,footerMarginTop:6,footerFont:{weight:\"bold\"},footerAlign:\"left\",padding:6,caretPadding:2,caretSize:5,cornerRadius:6,boxHeight:(t,e)=>e.bodyFont.size,boxWidth:(t,e)=>e.bodyFont.size,multiKeyBackground:\"#fff\",displayColors:!0,borderColor:\"rgba(0,0,0,0)\",borderWidth:0,animation:{duration:400,easing:\"easeOutQuart\"},animations:{numbers:{type:\"number\",properties:[\"x\",\"y\",\"width\",\"height\",\"caretX\",\"caretY\"]},opacity:{easing:\"linear\",duration:200}},callbacks:{beforeTitle:n.sb,title(t){if(t.length>0){const e=t[0],i=e.chart.data.labels,n=i?i.length:0;if(this&&this.options&&\"dataset\"===this.options.mode)return e.dataset.label||\"\";if(e.label)return e.label;if(n>0&&e.dataIndex<n)return i[e.dataIndex]}return\"\"},afterTitle:n.sb,beforeBody:n.sb,beforeLabel:n.sb,label(t){if(this&&this.options&&\"dataset\"===this.options.mode)return t.label+\": \"+t.formattedValue||t.formattedValue;let e=t.dataset.label||\"\";e&&(e+=\": \");const i=t.formattedValue;return Object(n.Db)(i)||(e+=i),e},labelColor(t){const e=t.chart.getDatasetMeta(t.datasetIndex).controller.getStyle(t.dataIndex);return{borderColor:e.borderColor,backgroundColor:e.backgroundColor,borderWidth:e.borderWidth,borderDash:e.borderDash,borderDashOffset:e.borderDashOffset,borderRadius:0}},labelTextColor(){return this.options.bodyColor},labelPointStyle(t){const e=t.chart.getDatasetMeta(t.datasetIndex).controller.getStyle(t.dataIndex);return{pointStyle:e.pointStyle,rotation:e.rotation}},afterLabel:n.sb,afterBody:n.sb,beforeFooter:n.sb,footer:n.sb,afterFooter:n.sb}},defaultRoutes:{bodyFont:\"font\",footerFont:\"font\",titleFont:\"font\"},descriptors:{_scriptable:t=>\"filter\"!==t&&\"itemSort\"!==t&&\"external\"!==t,_indexable:!1,callbacks:{_scriptable:!1,_indexable:!1},animation:{_fallback:!1},animations:{_fallback:\"animation\"}},additionalOptionScopes:[\"interaction\"]},gi=Object.freeze({__proto__:null,Decimation:Ae,Filler:qe,Legend:Je,Title:Ze,Tooltip:ui});function bi(t,e,i){const n=t.indexOf(e);if(-1===n)return((t,e,i)=>\"string\"===typeof e?t.push(e)-1:isNaN(e)?null:i)(t,e,i);return n!==t.lastIndexOf(e)?i:n}class pi extends St{constructor(t){super(t),this._startValue=void 0,this._valueRange=0}parse(t,e){if(Object(n.Db)(t))return null;const i=this.getLabels();return((t,e)=>null===t?null:Object(n.Rb)(Math.round(t),0,e))(e=isFinite(e)&&i[e]===t?e:bi(i,t,Object(n.Pb)(e,t)),i.length-1)}determineDataLimits(){const t=this,{minDefined:e,maxDefined:i}=t.getUserBounds();let{min:n,max:o}=t.getMinMax(!0);\"ticks\"===t.options.bounds&&(e||(n=0),i||(o=t.getLabels().length-1)),t.min=n,t.max=o}buildTicks(){const t=this,e=t.min,i=t.max,n=t.options.offset,o=[];let s=t.getLabels();s=0===e&&i===s.length-1?s:s.slice(e,i+1),t._valueRange=Math.max(s.length-(n?0:1),1),t._startValue=t.min-(n?.5:0);for(let a=e;a<=i;a++)o.push({value:a});return o}getLabelForValue(t){const e=this.getLabels();return t>=0&&t<e.length?e[t]:t}configure(){const t=this;super.configure(),t.isHorizontal()||(t._reversePixels=!t._reversePixels)}getPixelForValue(t){const e=this;return\"number\"!==typeof t&&(t=e.parse(t)),null===t?NaN:e.getPixelForDecimal((t-e._startValue)/e._valueRange)}getPixelForTick(t){const e=this.ticks;return t<0||t>e.length-1?null:this.getPixelForValue(e[t].value)}getValueForPixel(t){const e=this;return Math.round(e._startValue+e.getDecimalForPixel(t)*e._valueRange)}getBasePixel(){return this.bottom}}function fi(t,e,{horizontal:i,minRotation:o}){const s=Object(n.Nb)(o),a=(i?Math.sin(s):Math.cos(s))||.001,r=.75*e*(\"\"+t).length;return Math.min(e/a,r)}pi.id=\"category\",pi.defaults={ticks:{callback:pi.prototype.getLabelForValue}};class mi extends St{constructor(t){super(t),this.start=void 0,this.end=void 0,this._startValue=void 0,this._endValue=void 0,this._valueRange=0}parse(t,e){return Object(n.Db)(t)||(\"number\"===typeof t||t instanceof Number)&&!isFinite(+t)?null:+t}handleTickRangeOptions(){const t=this,{beginAtZero:e}=t.options,{minDefined:i,maxDefined:o}=t.getUserBounds();let{min:s,max:a}=t;const r=t=>s=i?s:t,l=t=>a=o?a:t;if(e){const t=Object(n.Mb)(s),e=Object(n.Mb)(a);t<0&&e<0?l(0):t>0&&e>0&&r(0)}s===a&&(l(a+1),e||r(s-1)),t.min=s,t.max=a}getTickLimit(){const t=this,e=t.options.ticks;let i,{maxTicksLimit:n,stepSize:o}=e;return o?i=Math.ceil(t.max/o)-Math.floor(t.min/o)+1:(i=t.computeTickLimit(),n=n||11),n&&(i=Math.min(n,i)),i}computeTickLimit(){return Number.POSITIVE_INFINITY}buildTicks(){const t=this,e=t.options,i=e.ticks;let o=t.getTickLimit();o=Math.max(2,o);const s=function(t,e){const i=[],{step:o,min:s,max:a,precision:r,count:l,maxTicks:c,maxDigits:h,includeBounds:d}=t,u=o||1,g=c-1,{min:b,max:p}=e,f=!Object(n.Db)(s),m=!Object(n.Db)(a),x=!Object(n.Db)(l),_=(p-b)/(h+1);let y,v,O,j,M=Object(n.N)((p-b)/g/u)*u;if(M<1e-14&&!f&&!m)return[{value:b},{value:p}];j=Math.ceil(p/M)-Math.floor(b/M),j>g&&(M=Object(n.N)(j*M/g/u)*u),Object(n.Db)(r)||(y=Math.pow(10,r),M=Math.ceil(M*y)/y),v=Math.floor(b/M)*M,O=Math.ceil(p/M)*M,f&&m&&o&&Object(n.O)((a-s)/o,M/1e3)?(j=Math.min((a-s)/M,c),M=(a-s)/j,v=s,O=a):x?(v=f?s:v,O=m?a:O,j=l-1,M=(O-v)/j):(j=(O-v)/M,j=Object(n.P)(j,Math.round(j),M/1e3)?Math.round(j):Math.ceil(j));const w=Math.max(Object(n.Q)(M),Object(n.Q)(v));y=Math.pow(10,Object(n.Db)(r)?w:r),v=Math.round(v*y)/y,O=Math.round(O*y)/y;let k=0;for(f&&(d&&v!==s?(i.push({value:s}),v<s&&k++,Object(n.P)(Math.round((v+k*M)*y)/y,s,fi(s,_,t))&&k++):v<s&&k++);k<j;++k)i.push({value:Math.round((v+k*M)*y)/y});return m&&d&&O!==a?Object(n.P)(i[i.length-1].value,a,fi(a,_,t))?i[i.length-1].value=a:i.push({value:a}):m&&O!==a||i.push({value:O}),i}({maxTicks:o,min:e.min,max:e.max,precision:i.precision,step:i.stepSize,count:i.count,maxDigits:t._maxDigits(),horizontal:t.isHorizontal(),minRotation:i.minRotation||0,includeBounds:!1!==i.includeBounds},t._range||t);return\"ticks\"===e.bounds&&Object(n.ub)(s,t,\"value\"),e.reverse?(s.reverse(),t.start=t.max,t.end=t.min):(t.start=t.min,t.end=t.max),s}configure(){const t=this,e=t.ticks;let i=t.min,n=t.max;if(super.configure(),t.options.offset&&e.length){const t=(n-i)/Math.max(e.length-1,1)/2;i-=t,n+=t}t._startValue=i,t._endValue=n,t._valueRange=n-i}getLabelForValue(t){return Object(n.Jb)(t,this.chart.options.locale)}}class xi extends mi{determineDataLimits(){const t=this,{min:e,max:i}=t.getMinMax(!0);t.min=Object(n.Ab)(e)?e:0,t.max=Object(n.Ab)(i)?i:1,t.handleTickRangeOptions()}computeTickLimit(){const t=this,e=t.isHorizontal(),i=e?t.width:t.height,o=Object(n.Nb)(t.options.ticks.minRotation),s=(e?Math.sin(o):Math.cos(o))||.001,a=t._resolveTickFontOptions(0);return Math.ceil(i/Math.min(40,a.lineHeight/s))}getPixelForValue(t){return null===t?NaN:this.getPixelForDecimal((t-this._startValue)/this._valueRange)}getValueForPixel(t){return this._startValue+this.getDecimalForPixel(t)*this._valueRange}}function _i(t){return 1===t/Math.pow(10,Math.floor(Object(n.l)(t)))}xi.id=\"linear\",xi.defaults={ticks:{callback:_t.formatters.numeric}};class yi extends St{constructor(t){super(t),this.start=void 0,this.end=void 0,this._startValue=void 0,this._valueRange=0}parse(t,e){const i=mi.prototype.parse.apply(this,[t,e]);if(0!==i)return Object(n.Ab)(i)&&i>0?i:null;this._zero=!0}determineDataLimits(){const t=this,{min:e,max:i}=t.getMinMax(!0);t.min=Object(n.Ab)(e)?Math.max(0,e):null,t.max=Object(n.Ab)(i)?Math.max(0,i):null,t.options.beginAtZero&&(t._zero=!0),t.handleTickRangeOptions()}handleTickRangeOptions(){const t=this,{minDefined:e,maxDefined:i}=t.getUserBounds();let o=t.min,s=t.max;const a=t=>o=e?o:t,r=t=>s=i?s:t,l=(t,e)=>Math.pow(10,Math.floor(Object(n.l)(t))+e);o===s&&(o<=0?(a(1),r(10)):(a(l(o,-1)),r(l(s,1)))),o<=0&&a(l(s,-1)),s<=0&&r(l(o,1)),t._zero&&t.min!==t._suggestedMin&&o===l(t.min,0)&&a(l(o,-1)),t.min=o,t.max=s}buildTicks(){const t=this,e=t.options,i=function(t,e){const i=Math.floor(Object(n.l)(e.max)),o=Math.ceil(e.max/Math.pow(10,i)),s=[];let a=Object(n.n)(t.min,Math.pow(10,Math.floor(Object(n.l)(e.min)))),r=Math.floor(Object(n.l)(a)),l=Math.floor(a/Math.pow(10,r)),c=r<0?Math.pow(10,Math.abs(r)):1;do{s.push({value:a,major:_i(a)}),++l,10===l&&(l=1,++r,c=r>=0?1:c),a=Math.round(l*Math.pow(10,r)*c)/c}while(r<i||r===i&&l<o);const h=Object(n.n)(t.max,a);return s.push({value:h,major:_i(a)}),s}({min:t._userMin,max:t._userMax},t);return\"ticks\"===e.bounds&&Object(n.ub)(i,t,\"value\"),e.reverse?(i.reverse(),t.start=t.max,t.end=t.min):(t.start=t.min,t.end=t.max),i}getLabelForValue(t){return void 0===t?\"0\":Object(n.Jb)(t,this.chart.options.locale)}configure(){const t=this,e=t.min;super.configure(),t._startValue=Object(n.l)(e),t._valueRange=Object(n.l)(t.max)-Object(n.l)(e)}getPixelForValue(t){const e=this;return void 0!==t&&0!==t||(t=e.min),null===t||isNaN(t)?NaN:e.getPixelForDecimal(t===e.min?0:(Object(n.l)(t)-e._startValue)/e._valueRange)}getValueForPixel(t){const e=this,i=e.getDecimalForPixel(t);return Math.pow(10,e._startValue+i*e._valueRange)}}function vi(t){const e=t.ticks;if(e.display&&t.display){const t=Object(n.d)(e.backdropPadding);return Object(n.Pb)(e.font&&e.font.size,n.xb.font.size)+t.height}return 0}function Oi(t,e,i,n,o){return t===n||t===o?{start:e-i/2,end:e+i/2}:t<n||t>o?{start:e-i,end:e}:{start:e,end:e+i}}function ji(t){return 0===t||180===t?\"center\":t<180?\"left\":\"right\"}function Mi(t,e,i){90===t||270===t?i.y-=e.h/2:(t>270||t<90)&&(i.y-=e.h)}function wi(t,e,i,o){const{ctx:s}=t;if(i)s.arc(t.xCenter,t.yCenter,e,0,n.u);else{let i=t.getPointPosition(0,e);s.moveTo(i.x,i.y);for(let n=1;n<o;n++)i=t.getPointPosition(n,e),s.lineTo(i.x,i.y)}}function ki(t){return Object(n.Qb)(t)?t:0}yi.id=\"logarithmic\",yi.defaults={ticks:{callback:_t.formatters.logarithmic,major:{enabled:!0}}};class Di extends mi{constructor(t){super(t),this.xCenter=void 0,this.yCenter=void 0,this.drawingArea=void 0,this._pointLabels=[],this._pointLabelItems=[]}setDimensions(){const t=this;t.width=t.maxWidth,t.height=t.maxHeight,t.paddingTop=vi(t.options)/2,t.xCenter=Math.floor(t.width/2),t.yCenter=Math.floor((t.height-t.paddingTop)/2),t.drawingArea=Math.min(t.height-t.paddingTop,t.width)/2}determineDataLimits(){const t=this,{min:e,max:i}=t.getMinMax(!1);t.min=Object(n.Ab)(e)&&!isNaN(e)?e:0,t.max=Object(n.Ab)(i)&&!isNaN(i)?i:0,t.handleTickRangeOptions()}computeTickLimit(){return Math.ceil(this.drawingArea/vi(this.options))}generateTickLabels(t){const e=this;mi.prototype.generateTickLabels.call(e,t),e._pointLabels=e.getLabels().map(((t,i)=>{const o=Object(n.o)(e.options.pointLabels.callback,[t,i],e);return o||0===o?o:\"\"}))}fit(){const t=this,e=t.options;e.display&&e.pointLabels.display?function(t){const e={l:0,r:t.width,t:0,b:t.height-t.paddingTop},i={};let o,s,a;const r=[],l=[],c=t.getLabels().length;for(o=0;o<c;o++){const c=t.options.pointLabels.setContext(t.getContext(o));l[o]=c.padding,a=t.getPointPosition(o,t.drawingArea+l[o]);const g=Object(n.x)(c.font);t.ctx.font=g.string,h=t.ctx,d=g.lineHeight,u=t._pointLabels[o],s=Object(n.vb)(u)?{w:Object(n.R)(h,h.font,u),h:u.length*d}:{w:h.measureText(u).width,h:d},r[o]=s;const b=t.getIndexAngle(o),p=Object(n.r)(b),f=Oi(p,a.x,s.w,0,180),m=Oi(p,a.y,s.h,90,270);f.start<e.l&&(e.l=f.start,i.l=b),f.end>e.r&&(e.r=f.end,i.r=b),m.start<e.t&&(e.t=m.start,i.t=b),m.end>e.b&&(e.b=m.end,i.b=b)}var h,d,u;t._setReductions(t.drawingArea,e,i),t._pointLabelItems=[];const g=t.options,b=vi(g),p=t.getDistanceFromCenterForValue(g.ticks.reverse?t.min:t.max);for(o=0;o<c;o++){const e=0===o?b/2:0,i=t.getPointPosition(o,p+e+l[o]),s=Object(n.r)(t.getIndexAngle(o)),a=r[o];Mi(s,a,i);const c=ji(s);let h;h=\"left\"===c?i.x:\"center\"===c?i.x-a.w/2:i.x-a.w;const d=h+a.w;t._pointLabelItems[o]={x:i.x,y:i.y,textAlign:c,left:h,top:i.y,right:d,bottom:i.y+a.h}}}(t):t.setCenterPoint(0,0,0,0)}_setReductions(t,e,i){const n=this;let o=e.l/Math.sin(i.l),s=Math.max(e.r-n.width,0)/Math.sin(i.r),a=-e.t/Math.cos(i.t),r=-Math.max(e.b-(n.height-n.paddingTop),0)/Math.cos(i.b);o=ki(o),s=ki(s),a=ki(a),r=ki(r),n.drawingArea=Math.max(t/2,Math.min(Math.floor(t-(o+s)/2),Math.floor(t-(a+r)/2))),n.setCenterPoint(o,s,a,r)}setCenterPoint(t,e,i,n){const o=this,s=o.width-e-o.drawingArea,a=t+o.drawingArea,r=i+o.drawingArea,l=o.height-o.paddingTop-n-o.drawingArea;o.xCenter=Math.floor((a+s)/2+o.left),o.yCenter=Math.floor((r+l)/2+o.top+o.paddingTop)}getIndexAngle(t){const e=n.u/this.getLabels().length,i=this.options.startAngle||0;return Object(n.nb)(t*e+Object(n.Nb)(i))}getDistanceFromCenterForValue(t){const e=this;if(Object(n.Db)(t))return NaN;const i=e.drawingArea/(e.max-e.min);return e.options.reverse?(e.max-t)*i:(t-e.min)*i}getValueForDistanceFromCenter(t){if(Object(n.Db)(t))return NaN;const e=this,i=t/(e.drawingArea/(e.max-e.min));return e.options.reverse?e.max-i:e.min+i}getPointPosition(t,e){const i=this,o=i.getIndexAngle(t)-n.i;return{x:Math.cos(o)*e+i.xCenter,y:Math.sin(o)*e+i.yCenter,angle:o}}getPointPositionForValue(t,e){return this.getPointPosition(t,this.getDistanceFromCenterForValue(e))}getBasePosition(t){return this.getPointPositionForValue(t||0,this.getBaseValue())}getPointLabelPosition(t){const{left:e,top:i,right:n,bottom:o}=this._pointLabelItems[t];return{left:e,top:i,right:n,bottom:o}}drawBackground(){const t=this,{backgroundColor:e,grid:{circular:i}}=t.options;if(e){const n=t.ctx;n.save(),n.beginPath(),wi(t,t.getDistanceFromCenterForValue(t._endValue),i,t.getLabels().length),n.closePath(),n.fillStyle=e,n.fill(),n.restore()}}drawGrid(){const t=this,e=t.ctx,i=t.options,{angleLines:o,grid:s}=i,a=t.getLabels().length;let r,l,c;if(i.pointLabels.display&&function(t,e){const{ctx:i,options:{pointLabels:o}}=t;for(let s=e-1;s>=0;s--){const e=o.setContext(t.getContext(s)),a=Object(n.x)(e.font),{x:r,y:l,textAlign:c,left:h,top:d,right:u,bottom:g}=t._pointLabelItems[s],{backdropColor:b}=e;if(!Object(n.Db)(b)){const t=Object(n.d)(e.backdropPadding);i.fillStyle=b,i.fillRect(h-t.left,d-t.top,u-h+t.width,g-d+t.height)}Object(n.w)(i,t._pointLabels[s],r,l+a.lineHeight/2,a,{color:e.color,textAlign:c,textBaseline:\"middle\"})}}(t,a),s.display&&t.ticks.forEach(((e,i)=>{if(0!==i){l=t.getDistanceFromCenterForValue(e.value);const n=s.setContext(t.getContext(i-1));!function(t,e,i,n){const o=t.ctx,s=e.circular,{color:a,lineWidth:r}=e;!s&&!n||!a||!r||i<0||(o.save(),o.strokeStyle=a,o.lineWidth=r,o.setLineDash(e.borderDash),o.lineDashOffset=e.borderDashOffset,o.beginPath(),wi(t,i,s,n),o.closePath(),o.stroke(),o.restore())}(t,n,l,a)}})),o.display){for(e.save(),r=t.getLabels().length-1;r>=0;r--){const n=o.setContext(t.getContext(r)),{color:s,lineWidth:a}=n;a&&s&&(e.lineWidth=a,e.strokeStyle=s,e.setLineDash(n.borderDash),e.lineDashOffset=n.borderDashOffset,l=t.getDistanceFromCenterForValue(i.ticks.reverse?t.min:t.max),c=t.getPointPosition(r,l),e.beginPath(),e.moveTo(t.xCenter,t.yCenter),e.lineTo(c.x,c.y),e.stroke())}e.restore()}}drawBorder(){}drawLabels(){const t=this,e=t.ctx,i=t.options,o=i.ticks;if(!o.display)return;const s=t.getIndexAngle(0);let a,r;e.save(),e.translate(t.xCenter,t.yCenter),e.rotate(s),e.textAlign=\"center\",e.textBaseline=\"middle\",t.ticks.forEach(((s,l)=>{if(0===l&&!i.reverse)return;const c=o.setContext(t.getContext(l)),h=Object(n.x)(c.font);if(a=t.getDistanceFromCenterForValue(t.ticks[l].value),c.showLabelBackdrop){r=e.measureText(s.label).width,e.fillStyle=c.backdropColor;const t=Object(n.d)(c.backdropPadding);e.fillRect(-r/2-t.left,-a-h.size/2-t.top,r+t.width,h.size+t.height)}Object(n.w)(e,s.label,0,-a,h,{color:c.color})})),e.restore()}drawTitle(){}}Di.id=\"radialLinear\",Di.defaults={display:!0,animate:!0,position:\"chartArea\",angleLines:{display:!0,lineWidth:1,borderDash:[],borderDashOffset:0},grid:{circular:!1},startAngle:0,ticks:{showLabelBackdrop:!0,callback:_t.formatters.numeric},pointLabels:{backdropColor:void 0,backdropPadding:2,display:!0,font:{size:10},callback:t=>t,padding:5}},Di.defaultRoutes={\"angleLines.color\":\"borderColor\",\"pointLabels.color\":\"color\",\"ticks.color\":\"color\"},Di.descriptors={angleLines:{_fallback:\"grid\"}};const Si={millisecond:{common:!0,size:1,steps:1e3},second:{common:!0,size:1e3,steps:60},minute:{common:!0,size:6e4,steps:60},hour:{common:!0,size:36e5,steps:24},day:{common:!0,size:864e5,steps:30},week:{common:!1,size:6048e5,steps:4},month:{common:!0,size:2628e6,steps:12},quarter:{common:!1,size:7884e6,steps:4},year:{common:!0,size:3154e7}},Pi=Object.keys(Si);function Ci(t,e){return t-e}function Ai(t,e){if(Object(n.Db)(e))return null;const i=t._adapter,{parser:o,round:s,isoWeekday:a}=t._parseOpts;let r=e;return\"function\"===typeof o&&(r=o(r)),Object(n.Ab)(r)||(r=\"string\"===typeof o?i.parse(r,o):i.parse(r)),null===r?null:(s&&(r=\"week\"!==s||!Object(n.Qb)(a)&&!0!==a?i.startOf(r,s):i.startOf(r,\"isoWeek\",a)),+r)}function Li(t,e,i,n){const o=Pi.length;for(let s=Pi.indexOf(t);s<o-1;++s){const t=Si[Pi[s]],o=t.steps?t.steps:Number.MAX_SAFE_INTEGER;if(t.common&&Math.ceil((i-e)/(o*t.size))<=n)return Pi[s]}return Pi[o-1]}function Ti(t,e,i){if(i){if(i.length){const{lo:o,hi:s}=Object(n.T)(i,e);t[i[o]>=e?i[o]:i[s]]=!0}}else t[e]=!0}function Ri(t,e,i){const n=[],o={},s=e.length;let a,r;for(a=0;a<s;++a)r=e[a],o[r]=a,n.push({value:r,major:!1});return 0!==s&&i?function(t,e,i,n){const o=t._adapter,s=+o.startOf(e[0].value,n),a=e[e.length-1].value;let r,l;for(r=s;r<=a;r=+o.add(r,1,n))l=i[r],l>=0&&(e[l].major=!0);return e}(t,n,o,i):n}class Ei extends St{constructor(t){super(t),this._cache={data:[],labels:[],all:[]},this._unit=\"day\",this._majorUnit=void 0,this._offsets={},this._normalized=!1,this._parseOpts=void 0}init(t,e){const i=t.time||(t.time={}),o=this._adapter=new F._date(t.adapters.date);Object(n.J)(i.displayFormats,o.formats()),this._parseOpts={parser:i.parser,round:i.round,isoWeekday:i.isoWeekday},super.init(t),this._normalized=e.normalized}parse(t,e){return void 0===t?null:Ai(this,t)}beforeLayout(){super.beforeLayout(),this._cache={data:[],labels:[],all:[]}}determineDataLimits(){const t=this,e=t.options,i=t._adapter,o=e.time.unit||\"day\";let{min:s,max:a,minDefined:r,maxDefined:l}=t.getUserBounds();function c(t){r||isNaN(t.min)||(s=Math.min(s,t.min)),l||isNaN(t.max)||(a=Math.max(a,t.max))}r&&l||(c(t._getLabelBounds()),\"ticks\"===e.bounds&&\"labels\"===e.ticks.source||c(t.getMinMax(!1))),s=Object(n.Ab)(s)&&!isNaN(s)?s:+i.startOf(Date.now(),o),a=Object(n.Ab)(a)&&!isNaN(a)?a:+i.endOf(Date.now(),o)+1,t.min=Math.min(s,a-1),t.max=Math.max(s+1,a)}_getLabelBounds(){const t=this.getLabelTimestamps();let e=Number.POSITIVE_INFINITY,i=Number.NEGATIVE_INFINITY;return t.length&&(e=t[0],i=t[t.length-1]),{min:e,max:i}}buildTicks(){const t=this,e=t.options,i=e.time,o=e.ticks,s=\"labels\"===o.source?t.getLabelTimestamps():t._generate();\"ticks\"===e.bounds&&s.length&&(t.min=t._userMin||s[0],t.max=t._userMax||s[s.length-1]);const a=t.min,r=t.max,l=Object(n.S)(s,a,r);return t._unit=i.unit||(o.autoSkip?Li(i.minUnit,t.min,t.max,t._getLabelCapacity(a)):function(t,e,i,n,o){for(let s=Pi.length-1;s>=Pi.indexOf(i);s--){const i=Pi[s];if(Si[i].common&&t._adapter.diff(o,n,i)>=e-1)return i}return Pi[i?Pi.indexOf(i):0]}(t,l.length,i.minUnit,t.min,t.max)),t._majorUnit=o.major.enabled&&\"year\"!==t._unit?function(t){for(let e=Pi.indexOf(t)+1,i=Pi.length;e<i;++e)if(Si[Pi[e]].common)return Pi[e]}(t._unit):void 0,t.initOffsets(s),e.reverse&&l.reverse(),Ri(t,l,t._majorUnit)}initOffsets(t){const e=this;let i,o,s=0,a=0;e.options.offset&&t.length&&(i=e.getDecimalForValue(t[0]),s=1===t.length?1-i:(e.getDecimalForValue(t[1])-i)/2,o=e.getDecimalForValue(t[t.length-1]),a=1===t.length?o:(o-e.getDecimalForValue(t[t.length-2]))/2);const r=t.length<3?.5:.25;s=Object(n.Rb)(s,0,r),a=Object(n.Rb)(a,0,r),e._offsets={start:s,end:a,factor:1/(s+1+a)}}_generate(){const t=this,e=t._adapter,i=t.min,o=t.max,s=t.options,a=s.time,r=a.unit||Li(a.minUnit,i,o,t._getLabelCapacity(i)),l=Object(n.Pb)(a.stepSize,1),c=\"week\"===r&&a.isoWeekday,h=Object(n.Qb)(c)||!0===c,d={};let u,g,b=i;if(h&&(b=+e.startOf(b,\"isoWeek\",c)),b=+e.startOf(b,h?\"day\":r),e.diff(o,i,r)>1e5*l)throw new Error(i+\" and \"+o+\" are too far apart with stepSize of \"+l+\" \"+r);const p=\"data\"===s.ticks.source&&t.getDataTimestamps();for(u=b,g=0;u<o;u=+e.add(u,l,r),g++)Ti(d,u,p);return u!==o&&\"ticks\"!==s.bounds&&1!==g||Ti(d,u,p),Object.keys(d).sort(((t,e)=>t-e)).map((t=>+t))}getLabelForValue(t){const e=this._adapter,i=this.options.time;return i.tooltipFormat?e.format(t,i.tooltipFormat):e.format(t,i.displayFormats.datetime)}_tickFormatFunction(t,e,i,o){const s=this,a=s.options,r=a.time.displayFormats,l=s._unit,c=s._majorUnit,h=l&&r[l],d=c&&r[c],u=i[e],g=c&&d&&u&&u.major,b=s._adapter.format(t,o||(g?d:h)),p=a.ticks.callback;return p?Object(n.o)(p,[b,e,i],s):b}generateTickLabels(t){let e,i,n;for(e=0,i=t.length;e<i;++e)n=t[e],n.label=this._tickFormatFunction(n.value,e,t)}getDecimalForValue(t){const e=this;return null===t?NaN:(t-e.min)/(e.max-e.min)}getPixelForValue(t){const e=this,i=e._offsets,n=e.getDecimalForValue(t);return e.getPixelForDecimal((i.start+n)*i.factor)}getValueForPixel(t){const e=this,i=e._offsets,n=e.getDecimalForPixel(t)/i.factor-i.end;return e.min+n*(e.max-e.min)}_getLabelSize(t){const e=this,i=e.options.ticks,o=e.ctx.measureText(t).width,s=Object(n.Nb)(e.isHorizontal()?i.maxRotation:i.minRotation),a=Math.cos(s),r=Math.sin(s),l=e._resolveTickFontOptions(0).size;return{w:o*a+l*r,h:o*r+l*a}}_getLabelCapacity(t){const e=this,i=e.options.time,n=i.displayFormats,o=n[i.unit]||n.millisecond,s=e._tickFormatFunction(t,0,Ri(e,[t],e._majorUnit),o),a=e._getLabelSize(s),r=Math.floor(e.isHorizontal()?e.width/a.w:e.height/a.h)-1;return r>0?r:1}getDataTimestamps(){const t=this;let e,i,n=t._cache.data||[];if(n.length)return n;const o=t.getMatchingVisibleMetas();if(t._normalized&&o.length)return t._cache.data=o[0].controller.getAllParsedValues(t);for(e=0,i=o.length;e<i;++e)n=n.concat(o[e].controller.getAllParsedValues(t));return t._cache.data=t.normalize(n)}getLabelTimestamps(){const t=this,e=t._cache.labels||[];let i,n;if(e.length)return e;const o=t.getLabels();for(i=0,n=o.length;i<n;++i)e.push(Ai(t,o[i]));return t._cache.labels=t._normalized?e:t.normalize(e)}normalize(t){return Object(n.B)(t.sort(Ci))}}function zi(t,e,i){let o,s,a,r;if(i)o=Math.floor(e),s=Math.ceil(e),a=t[o],r=t[s];else{const i=Object(n.T)(t,e);a=i.lo,r=i.hi,o=t[a],s=t[r]}const l=s-o;return l?a+(r-a)*(e-o)/l:a}Ei.id=\"time\",Ei.defaults={bounds:\"data\",adapters:{},time:{parser:!1,unit:!1,round:!1,isoWeekday:!1,minUnit:\"millisecond\",displayFormats:{}},ticks:{source:\"auto\",major:{enabled:!1}}};class Fi extends Ei{constructor(t){super(t),this._table=[],this._maxIndex=void 0}initOffsets(){const t=this,e=t._getTimestampsForTable();t._table=t.buildLookupTable(e),t._maxIndex=t._table.length-1,super.initOffsets(e)}buildLookupTable(t){const{min:e,max:i}=this;if(!t.length)return[{time:e,pos:0},{time:i,pos:1}];const n=[e];let o,s,a;for(o=0,s=t.length;o<s;++o)a=t[o],a>e&&a<i&&n.push(a);return n.push(i),n}_getTimestampsForTable(){const t=this;let e=t._cache.all||[];if(e.length)return e;const i=t.getDataTimestamps(),n=t.getLabelTimestamps();return e=i.length&&n.length?t.normalize(i.concat(n)):i.length?i:n,e=t._cache.all=e,e}getPixelForValue(t,e){const i=this,o=i._offsets,s=i._normalized&&i._maxIndex>0&&!Object(n.Db)(e)?e/i._maxIndex:i.getDecimalForValue(t);return i.getPixelForDecimal((o.start+s)*o.factor)}getDecimalForValue(t){return zi(this._table,t)/this._maxIndex}getValueForPixel(t){const e=this,i=e._offsets,n=e.getDecimalForPixel(t)/i.factor-i.end;return zi(e._table,n*this._maxIndex,!0)}}Fi.id=\"timeseries\",Fi.defaults=Ei.defaults;const Ii=[R,Se,gi,Object.freeze({__proto__:null,CategoryScale:pi,LinearScale:xi,LogarithmicScale:yi,RadialLinearScale:Di,TimeScale:Ei,TimeSeriesScale:Fi})]}}]);","map":{"version":3,"sources":["static/chunks/36bcf0ca.067350ce6e1a91741f09.js"],"names":["window","push","m0r1","module","__webpack_exports__","__webpack_require__","d","Animations","ArcElement","BarElement","Chart","Element","PointElement","registerables","_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__","animator","[object Object]","this","_request","_charts","Map","_running","_lastDate","undefined","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","me","call","_update","_refresh","Date","now","remaining","running","items","length","item","i","draw","_active","_total","tick","pop","_notify","charts","get","complete","progress","set","event","cb","_getAnims","reduce","acc","cur","max","_duration","cancel","delete","transparent","interpolators","boolean","from","to","factor","c0","Object","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","_fn","_easing","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","elapsed","remain","promises","Promise","res","rej","resolved","method","animationOptions","keys","animation","describe","_fallback","_indexable","_scriptable","name","colors","properties","numbers","active","resize","show","animations","visible","hide","v","config","_chart","_properties","configure","animatedProps","getOwnPropertyNames","key","option","has","values","newOptions","options","$shared","assign","$animations","resolveTargetOptions","_createAnimations","anim","wait","all","awaitAll","then","props","charAt","_animateOptions","value","update","size","add","scaleClip","scale","allowedOverflow","opts","reverse","end","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","isStacked","meta","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","indexScale","valueScale","id","getStackKey","_top","_bottom","getFirstScaleId","scales","filter","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","$context","_syncList","initialize","linkScales","_stacked","addElements","dataset","getDataset","chooseId","x","y","r","xid","xAxisID","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","data","datasets","getDatasetMeta","scaleID","adata","Array","convertObjectDataToArray","isExtensible","_dataCheck","datasetElementType","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","parse","xAxisKey","yAxisKey","range","parsedValue","NaN","canStack","otherScale","_getOtherScale","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","updateRangeFromParsed","getParsed","label","getLabelForValue","_clip","t","b","l","top","right","bottom","left","toClip","clip","defaultClip","getMaxOverflow","elements","area","chartArea","element","resolveDatasetElementOptions","resolveDataElementOptions","context","parent","create","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","dataElementType","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","transition","datasetAnimationScopeKeys","_cacheable","sharedOptions","_animationsDisabled","_resolveAnimations","getStyle","getSharedOptions","_setStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","arguments","computeMinSampleSize","_cache","$bar","metas","concat","getAllParsedValues","sort","a","getAllScaleValues","curr","_length","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","defaults","prototype","BarController","iAxisKey","vAxisKey","obj","super","bars","reset","base","getBasePixel","horizontal","isHorizontal","ruler","_getRuler","firstOpts","includeOptions","updateSharedOptions","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","enableBorderRadius","center","height","width","updateElement","last","val","isNaN","indexOf","_getStacks","pixels","barThickness","_startPixel","_endPixel","stackCount","_getStackCount","grouped","ratio","categoryPercentage","barPercentage","baseValue","minBarLength","floating","getDataVisibility","actualBase","halfGrid","getLineWidthForValue","skipNull","maxBarThickness","Infinity","next","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","_getStackIndex","rects","overrides","interaction","_index_","offset","grid","_value_","beginAtZero","BubbleController","points","point","iPixel","getPixelForDecimal","vPixel","skip","radius","plugins","tooltip","title","DoughnutController","innerRadius","outerRadius","offsetX","offsetY","rotation","circumference","isDatasetVisible","_getRotation","_getCircumference","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","_getRotationExtents","ratioX","ratioY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","_circumference","arc","metaData","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","aspectRatio","legend","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","hidden","e","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","slice","LineController","line","_dataset","animationsDisabled","pointCount","lo","hi","getStartAndCountOfVisiblePoints","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","scaleRangesChanged","_decimated","showLine","segment","animated","spanGaps","maxGapLength","directUpdate","prevParsed","nullData","stop","border","firstPoint","lastPoint","updateControlPoints","PolarAreaController","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","fill","ScatterController","controllers","__proto__","abstract","Error","DateAdapter","format","timestamp","amount","unit","weekday","override","members","adapters","_date","getRelativePosition","binarySearch","metaset","intersect","lookupMethod","_reversePixels","el","getRange","optimizedEvaluateItems","position","handler","getSortedVisibleDatasetMetas","j","getIntersectItems","useFinalPosition","_minPadding","inRange","getNearestItems","distanceMetric","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getDistanceMetricForAxis","minDistance","getCenterPoint","distance","getAxisItems","rangeMethod","intersectsItem","jlen","evaluateAllVisibleItems","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","v1","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","params","layout","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","w","heightChanged","h","same","other","getMargins","marginForPositions","positions","margin","fitBoxes","boxes","refitBoxes","refit","fullSize","placeBoxes","userPadding","padding","layouts","_layers","z","layoutItem","minPadding","availableWidth","availableHeight","layoutBoxes","wrapBoxes","wrap","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","vBoxMaxWidth","hBoxMaxHeight","setLayoutDims","updatePos","change","handleMaxPadding","BasePlatform","canvas","listener","BasicPlatform","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","passive","removeListener","removeEventListener","createAttachObserver","observer","MutationObserver","entries","addedNodes","added","observe","document","childList","subtree","createDetachObserver","container","removedNodes","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","currentDevicePixelRatio","createResizeObserver","clientWidth","ResizeObserver","contentRect","addEventListener","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","proxy","native","fromNativeEvent","args","node","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","getProps","final","ret","defaultRoutes","formatters","tickValue","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","numeric","Ticks","autoSkip","tickOpts","ticksLimit","maxTicksLimit","tickLength","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","majorIndices","major","enabled","result","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","len","diff","getEvenSpacing","factors","calculateSpacing","avgMajorSpacing","round","majorStart","majorEnd","bounds","grace","drawBorder","drawOnChartArea","drawTicks","tickWidth","tickColor","color","borderDash","borderDashOffset","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkipPadding","labelOffset","callback","minor","align","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","offsetFromEdge","edge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","getTickMarkLength","getTitleHeight","fallback","font","lineHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","getMinMax","xLabels","yLabels","beforeUpdate","margins","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","beforeFit","fit","afterFit","afterUpdate","startPixel","endPixel","reversePixels","_alignToPixels","alignToPixels","notifyPlugins","_callHooks","beforeTickToLabelConversion","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","generateTickLabels","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","string","gc","gcLen","garbageCollect","valueAt","idx","pixel","decimal","getBaseValue","createTickContext","optionTicks","rot","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","strokeColor","strokeWidth","backdrop","labelPadding","translation","save","fillRect","restore","findIndex","_computeGridLineItems","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","lastLineWidth","_computeLabelArea","_computeLabelItems","titleX","titleY","titleArgs","drawBackground","drawGrid","drawTitle","drawLabels","tz","gz","axisID","fontSize","TypedRegistry","scope","isPrototypeOf","proto","getPrototypeOf","parentScope","isIChartComponent","register","itemDefaults","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","routeDefaults","descriptors","registerDefaults","registry","_typedRegistries","_each","_get","typedRegistry","arg","reg","_getRegistryForType","isForType","_exec","itemReg","component","camelMethod","PluginService","_init","hook","_createDescriptors","_descriptors","descriptor","plugin","cancelable","_oldCache","_notifyStateChanges","getPlugin","local","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","toLowerCase","initOptions","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","mainScope","resetCache","keyLists","_cachedScopes","resolver","subPrefixes","getResolver","isScriptable","isIndexable","needContext","subResolver","descriptorDefaults","resolverCache","p","includes","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","isDomSupported","getCanvas","getElementById","instances","getChart","c","initialCanvas","existingChart","chartOptionScopes","platform","_initializePlatform","acquireContext","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","listen","_initialize","console","error","maintainAspectRatio","responsive","bindEvents","OffscreenCanvas","_resizeBeforeDraw","_resize","newSize","getMaximumSize","newRatio","getDevicePixelRatio","onResize","render","scalesOptions","axisOptions","scaleOpts","updated","isRadial","dposition","dtype","scaleType","getScale","init","hasUpdated","addBox","oldIndex","_destroyDatasetMeta","newControllers","_removeUnreferencedMetasets","order","_updateMetasetIndex","updateIndex","ControllerClass","getController","getElement","_updateMetasets","_resetElements","removeBox","animsDisabled","ensureScalesHaveIDs","buildOrUpdateScales","existingEvents","newEvents","events","unbindEvents","invalidate","buildOrUpdateControllers","buildOrUpdateElements","_updateLayout","_updateDatasets","_eventHandler","noArea","_idx","isFunction","_updateDataset","layers","_drawDatasets","_drawDataset","setDatasetVisibility","_updateDatasetVisibility","_destroy","remove","releaseContext","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","isAttached","prefix","activeElements","lastActive","_updateHoverStyles","notify","replay","hoverOptions","hover","deactivated","activated","updateHoverStyle","eventFilter","_handleEvent","lastEvent","getElementsAtEventForMode","onHover","onClick","invalidatePlugins","enumerable","clipArc","pixelMargin","angleMargin","closePath","parseBorderRadius$1","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","alpha","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","PI","p8","inner","lineJoin","fullCircles","drawFullCircleBorders","defineProperties","version","unregister","chartX","chartY","halfAngle","halfRadius","radiusOffset","translate","drawArc","setStyle","lineCap","borderCapStyle","borderJoinStyle","previous","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","tension","cubicInterpolationMode","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","segments","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","capBezierPoints","mouseX","mouseY","hoverRadius","getBarBounds","bar","half","parseBorderSkipped","borderSkipped","parseEdge","orig","v2","startEnd","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","rect","pointStyle","addRectPath","cleanDecimatedDataset","defineProperty","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","decimated","getStartAndCountOfVisiblePointsSimplified","configurable","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","decodeFill","fillOption","parseFillOption","parseFloat","simpleArc","computeBoundary","computeCircularBoundary","computeLinearBoundary","buildStackLine","sourcePoints","linesBelow","below","isLineAndNotInHideAnimation","unshift","getLinesBelow","createBoundaryLine","addPointsBelow","sourcePoint","postponed","findPoint","interpolate","pointValue","linePoints","firstValue","lastValue","boundary","pointsFromSegments","resolveTarget","sources","propagate","visited","clipY","getBounds","_getEdge","clipBounds","interpolatedLineTo","interpolatedPoint","_fill","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","lineLoop","targetLoop","drawfill","getLineByIndex","getTarget","lineOpts","above","doFill","plugin_filler","_args","$filler","drawTime","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","generateLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","heightLimit","totalWidth","currentColWidth","currentColHeight","col","hitbox","_draw","defaultColor","rtlHelper","rtl","fontColor","halfFontSize","cursor","textDirection","textWidth","setWidth","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","leftForLtr","drawLegendBox","strikethrough","fillText","titleFont","titlePadding","topPaddingPlusHalfFontSize","hitBox","lh","onLeave","isListened","hoveredItem","_getLegendItemAt","sameItem","plugin_legend","_element","adjustHitBoxes","handleEvent","ci","Title","_padding","textSize","fontOpts","_drawArgs","plugin_title","titleBlock","createTitle","positioners","hasValue","tooltipPosition","eventPosition","nearestElement","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","getLabelAndValue","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","lines","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","cornerRadius","paddingAndSize","radiusAndPadding","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","tooltipItems","beforeTitle","afterTitle","bodyItems","scoped","beforeLabel","afterLabel","beforeFooter","afterFooter","itemSort","labelColor","labelPointStyle","labelTextColor","_createItems","getTitle","getBeforeBody","getBody","getAfterBody","getFooter","positionAndSize","backgroundPoint","external","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","_drawColorBox","footerAlign","footerColor","tooltipSize","drawCaret","quadraticCurveTo","animX","animY","_updateAnimationTarget","hasTooltipContent","globalAlpha","drawBody","drawFooter","positionChanged","_positionChanged","plugin_tooltip","labelCount","Decimation","Filler","findOrAddLabel","addIfString","lastIndexOf","CategoryScale","_startValue","_valueRange","isFinite","getDecimalForPixel","relativeLabelSize","minSpacing","rad","LinearScaleBase","_endValue","setMin","setMax","minSign","maxSign","maxTicks","stepSize","computeTickLimit","getTickLimit","generationOptions","dataRange","step","precision","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","decimalPlaces","generateTicks$1","_maxDigits","LinearScale","handleTickRangeOptions","isMajor","tickVal","LogarithmicScale","_zero","exp","m","endExp","endSignificand","significand","lastTick","generateTicks","getTickBackdropHeight","determineLimits","getTextAlignForAngle","adjustPointPositionForLabelHeight","pathRadiusLine","getPointPosition","numberOrZero","param","logarithmic","RadialLinearScale","drawingArea","_pointLabels","_pointLabelItems","furthestLimits","furthestAngles","valueCount","plFont","hLimits","vLimits","_setReductions","tickBackdropHeight","outerDistance","extra","pointLabelPosition","fitWithPointLabels","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","scalingFactor","scaledDistance","distanceFromCenter","drawPointLabels","gridLineOpts","drawRadiusLine","rotate","animate","angleLines.color","pointLabels.color","ticks.color","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","startOf","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","formats","normalized","_applyBounds","_getLabelBounds","endOf","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","getDecimalForValue","limit","hasWeekday","getDataTimestamps","tooltipFormat","datetime","minorFormat","majorFormat","formatter","_tickFormatFunction","offsets","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","_getLabelSize","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_maxIndex","_getTimestampsForTable","buildLookupTable"],"mappings":"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"},"name":"static/chunks/36bcf0ca.067350ce6e1a91741f09.js","input":"(window[\"webpackJsonp_N_E\"] = window[\"webpackJsonp_N_E\"] || []).push([[5],{\n\n/***/ \"m0r1\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export Animation */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Animations; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return ArcElement; });\n/* unused harmony export BarController */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return BarElement; });\n/* unused harmony export BasePlatform */\n/* unused harmony export BasicPlatform */\n/* unused harmony export BubbleController */\n/* unused harmony export CategoryScale */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return Chart; });\n/* unused harmony export DatasetController */\n/* unused harmony export Decimation */\n/* unused harmony export DomPlatform */\n/* unused harmony export DoughnutController */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return Element; });\n/* unused harmony export Filler */\n/* unused harmony export Interaction */\n/* unused harmony export Legend */\n/* unused harmony export LineController */\n/* unused harmony export LineElement */\n/* unused harmony export LinearScale */\n/* unused harmony export LogarithmicScale */\n/* unused harmony export PieController */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return PointElement; });\n/* unused harmony export PolarAreaController */\n/* unused harmony export RadarController */\n/* unused harmony export RadialLinearScale */\n/* unused harmony export Scale */\n/* unused harmony export ScatterController */\n/* unused harmony export Ticks */\n/* unused harmony export TimeScale */\n/* unused harmony export TimeSeriesScale */\n/* unused harmony export Title */\n/* unused harmony export Tooltip */\n/* unused harmony export _adapters */\n/* unused harmony export animator */\n/* unused harmony export controllers */\n/* unused harmony export elements */\n/* unused harmony export layouts */\n/* unused harmony export plugins */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return registerables; });\n/* unused harmony export registry */\n/* unused harmony export scales */\n/* harmony import */ var _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"3T2N\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[\"xb\"]; });\n\n/*!\n * Chart.js v3.3.0\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\n\n\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    const me = this;\n    if (me._request) {\n      return;\n    }\n    me._running = true;\n    me._request = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* r */ \"Lb\"].call(window, () => {\n      me._update();\n      me._request = null;\n      if (me._running) {\n        me._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    const me = this;\n    let remaining = 0;\n    me._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        me._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        me._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    me._lastDate = date;\n    if (remaining === 0) {\n      me._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* c */ \"wb\"])(from || transparent);\n    const c1 = c0.valid && Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* c */ \"wb\"])(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a */ \"C\"])([cfg.to, to, currentValue, cfg.from]);\n    const from = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a */ \"C\"])([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* e */ \"yb\"][cfg.easing] || _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* e */ \"yb\"].linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    const me = this;\n    if (me._active) {\n      me._notify(false);\n      const currentValue = me._target[me._prop];\n      const elapsed = date - me._start;\n      const remain = me._duration - elapsed;\n      me._start = date;\n      me._duration = Math.floor(Math.max(remain, cfg.duration));\n      me._total += elapsed;\n      me._loop = !!cfg.loop;\n      me._to = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a */ \"C\"])([cfg.to, to, currentValue, cfg.from]);\n      me._from = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a */ \"C\"])([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    const me = this;\n    if (me._active) {\n      me.tick(Date.now());\n      me._active = false;\n      me._notify(false);\n    }\n  }\n  tick(date) {\n    const me = this;\n    const elapsed = date - me._start;\n    const duration = me._duration;\n    const prop = me._prop;\n    const from = me._from;\n    const loop = me._loop;\n    const to = me._to;\n    let factor;\n    me._active = from !== to && (loop || (elapsed < duration));\n    if (!me._active) {\n      me._target[prop] = to;\n      me._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      me._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = me._easing(Math.min(1, Math.max(0, factor)));\n    me._target[prop] = me._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"].set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"].animation);\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"].describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"].set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"].describe('animations', {\n  _fallback: 'animation',\n});\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"].set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Cb\"])(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Cb\"])(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"vb\"])(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Cb\"])(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Ab\"])(otherValue) && (singleMode || (value === 0 || Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* s */ \"Mb\"])(value) === Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* s */ \"Mb\"])(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive) {\n  for (const meta of vScale.getMatchingVisibleMetas('bar').reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true);\n    stack._bottom = getLastIndexInStack(stack, vScale, false);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return Object.assign(Object.create(parent),\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[meta.vScale.id] === undefined || stacks[meta.vScale.id][meta.index] === undefined) {\n      return;\n    }\n    delete stacks[meta.vScale.id][meta.index];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    me.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Pb\"])(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Pb\"])(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Pb\"])(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = me.getScaleForId(xid);\n    meta.yScale = me.getScaleForId(yid);\n    meta.rScale = me.getScaleForId(rid);\n    meta.iScale = me.getScaleForId(iid);\n    meta.vScale = me.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* u */ \"Ob\"])(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const me = this;\n    const dataset = me.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = me._data;\n    if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Cb\"])(data)) {\n      me._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* u */ \"Ob\"])(_data, me);\n        const meta = me._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* l */ \"Fb\"])(data, me);\n      }\n      me._syncList = [];\n      me._data = data;\n    }\n  }\n  addElements() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me._dataCheck();\n    if (me.datasetElementType) {\n      meta.dataset = new me.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    let stackChanged = false;\n    me._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    me._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(me, meta._parsed);\n    }\n  }\n  configure() {\n    const me = this;\n    const config = me.chart.config;\n    const scopeKeys = config.datasetScopeKeys(me._type);\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\n    me.options = config.createResolver(scopes, me.getContext());\n    me._parsing = me.options.parsing;\n  }\n  parse(start, count) {\n    const me = this;\n    const {_cachedMeta: meta, _data: data} = me;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (me._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"vb\"])(data[start])) {\n        parsed = me.parseArrayData(meta, data, start, count);\n      } else if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Cb\"])(data[start])) {\n        parsed = me.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = me.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(me, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* f */ \"zb\"])(item, xAxisKey), index),\n        y: yScale.parse(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* f */ \"zb\"])(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n      value = applyStack(stack, parsedValue, this._cachedMeta.index, {all: true});\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = me._getOtherScale(scale);\n    const stack = canStack && meta._stacked && {keys: getSortedDatasetIndices(me.chart, true), values: null};\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, value, parsed, otherValue;\n    function _skip() {\n      parsed = _parsed[i];\n      value = parsed[scale.axis];\n      otherValue = parsed[otherScale.axis];\n      return !Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Ab\"])(value) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      me.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        me.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Ab\"])(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me._cachedDataOpts = {};\n    me.update(mode || 'default');\n    meta._clip = toClip(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Pb\"])(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const me = this;\n    const ctx = me._ctx;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = me._drawStart || 0;\n    const count = me._drawCount || (elements.length - start);\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.active) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    let context;\n    if (index >= 0 && index < me._cachedMeta.data.length) {\n      const element = me._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(me.getContext(), index, element));\n      context.parsed = me.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = me.$context ||\n        (me.$context = createDatasetContext(me.chart.getContext(), me.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = me.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const me = this;\n    const active = mode === 'active';\n    const cache = me._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = me.enableOptionSharing && Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* h */ \"Bb\"])(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = me.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n    const names = Object.keys(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"].elements[elementType]);\n    const context = () => me.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const me = this;\n    const chart = me.chart;\n    const cache = me._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = me.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\n      const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, me.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const me = this;\n    const data = me._data;\n    const elements = me._cachedMeta.data;\n    for (const [method, arg1, arg2] of me._syncList) {\n      me[method](arg1, arg2);\n    }\n    me._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (numData > numMeta) {\n      me._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      me._removeElements(numData, numMeta - numData);\n    }\n    if (count) {\n      me.parse(0, count);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new me.dataElementType();\n    }\n    if (me._parsing) {\n      move(meta._parsed);\n    }\n    me.parse(start, count);\n    if (resetNewElements) {\n      me.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const me = this;\n    const meta = me._cachedMeta;\n    if (me._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._syncList.push(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._syncList.push(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._syncList.push(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    this._syncList.push(['_removeElements', start, count]);\n    this._syncList.push(['_insertElements', start, arguments.length - 2]);\n  }\n  _onDataUnshift() {\n    this._syncList.push(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale) {\n  if (!scale._cache.$bar) {\n    const metas = scale.getMatchingVisibleMetas('bar');\n    let values = [];\n    for (let i = 0, ilen = metas.length; i < ilen; i++) {\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* _ */ \"B\"])(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(scale) {\n  const values = getAllScaleValues(scale);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* h */ \"Bb\"])(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Db\"])(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"vb\"])(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* f */ \"zb\"])(obj, iAxisKey), i);\n      parsed.push(parseValue(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* f */ \"zb\"])(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    const me = this;\n    me.enableOptionSharing = true;\n    super.initialize();\n    const meta = me._cachedMeta;\n    meta.stack = me.getDataset().stack;\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const vScale = me._cachedMeta.vScale;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = me._getRuler();\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = me.getParsed(i);\n      const vpixels = reset || Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Db\"])(parsed[vScale.axis]) ? {base, head: base} : me._calculateBarValuePixels(i);\n      const ipixels = me._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (me.index === stack._top || me.index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : undefined,\n        width: horizontal ? undefined : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      me.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(me._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Db\"])(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(iScale);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: me._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const me = this;\n    const {vScale, _stacked} = me._cachedMeta;\n    const {base: baseValue, minBarLength} = me.options;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* s */ \"Mb\"])(value) !== Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* s */ \"Mb\"])(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Db\"])(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n      size = size < 0 ? -minBarLength : minBarLength;\n      if (value === 0) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    const actualBase = baseValue || 0;\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = vScale.getLineWidthForValue(actualBase) / 2;\n      if (size > 0) {\n        base += halfGrid;\n        size -= halfGrid;\n      } else if (size < 0) {\n        base -= halfGrid;\n        size += halfGrid;\n      }\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const me = this;\n    const scale = ruler.scale;\n    const options = me.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Pb\"])(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? me._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* k */ \"Eb\"])(chart.ctx, chart.chartArea);\n    for (; i < ilen; ++i) {\n      if (me.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(me._ctx);\n      }\n    }\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* m */ \"Gb\"])(chart.ctx);\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  interaction: {\n    mode: 'index'\n  },\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = [];\n    let i, ilen, item;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      item = data[i];\n      parsed.push({\n        x: xScale.parse(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* f */ \"zb\"])(item, xAxisKey), i),\n        y: yScale.parse(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* f */ \"zb\"])(item, yAxisKey), i),\n        _custom: item && item.r && +item.r\n      });\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const {data, _parsed} = this._cachedMeta;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = me.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const me = this;\n    const points = me._cachedMeta.data;\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {iScale, vScale} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && me.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = me.resolveDataElementOptions(i, mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      me.updateElement(point, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Pb\"])(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"]) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* q */ \"Kb\"])(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* q */ \"Kb\"])(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* H */ \"i\"], startY, endY);\n    const minX = calcMin(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* P */ \"q\"], startX, endX);\n    const minY = calcMin(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* P */ \"q\"] + _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* H */ \"i\"], startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    let i, ilen;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      meta._parsed[i] = +data[i];\n    }\n  }\n  _getRotation() {\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* t */ \"Nb\"])(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* t */ \"Nb\"])(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"];\n    let max = -_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"];\n    const me = this;\n    for (let i = 0; i < me.chart.data.datasets.length; ++i) {\n      if (me.chart.isDatasetVisible(i)) {\n        const controller = me.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const me = this;\n    const chart = me.chart;\n    const {chartArea} = chart;\n    const meta = me._cachedMeta;\n    const arcs = meta.data;\n    const spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs);\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* n */ \"Hb\"])(me.options.cutout, maxSize), 1);\n    const chartWeight = me._getRingWeight(me.index);\n    const {circumference, rotation} = me._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* o */ \"Ib\"])(me.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\n    me.offsetX = offsetX * outerRadius;\n    me.offsetY = offsetY * outerRadius;\n    meta.total = me.calculateTotal();\n    me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\n    me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\n    me.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const circumference = me._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null) {\n      return 0;\n    }\n    return me.calculateCircumference(meta._parsed[i] * circumference / _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"]);\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : me.innerRadius;\n    const outerRadius = animateScale ? 0 : me.outerRadius;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    let startAngle = me._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += me._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = me._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + me.offsetX,\n        y: centerY + me.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      startAngle += circumference;\n      me.updateElement(arc, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i)) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"] * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* p */ \"Jb\"])(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    const me = this;\n    let max = 0;\n    const chart = me.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          if (controller !== me) {\n            controller.configure();\n          }\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Pb\"])(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  indexAxis: 'r',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"vb\"])(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = me.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    me._drawStart = start;\n    me._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = me.resolveDatasetElementOptions(mode);\n    if (!me.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = me.options.segment;\n    me.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    me.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const spanGaps = me.options.spanGaps;\n    const maxGapLength = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* w */ \"Qb\"])(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && me.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = me.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Db\"])(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? me.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n      properties.parsed = parsed;\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      if (!directUpdate) {\n        me.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(me.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* x */ \"Rb\"])(Math.min(\n        Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* y */ \"Sb\"])(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* y */ \"Sb\"])(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* x */ \"Rb\"])(Math.max(\n        Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* y */ \"Sb\"])(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* y */ \"Sb\"])(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* p */ \"Jb\"])(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const me = this;\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    me.outerRadius = outerRadius - (radiusLength * me.index);\n    me.innerRadius = me.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const dataset = me.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = me._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* P */ \"q\"];\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / me.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += me._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + me._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: me.resolveDataElementOptions(i, mode)\n      };\n      me.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* t */ \"Nb\"])(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const me = this;\n    const vScale = me._cachedMeta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = me.resolveDatasetElementOptions(mode);\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      me.updateElement(line, undefined, properties, mode);\n    }\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    const scale = me._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = me.resolveDataElementOptions(i, mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      me.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* z */ \"Tb\"])(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* B */ \"c\"] : _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* y */ \"Sb\"];\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* A */ \"b\"])(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  let items = [];\n  if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* A */ \"b\"])(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos: box.position,\n      horizontal: box.isHorizontal(),\n      weight: box.weight\n    });\n  }\n  return layoutBoxes;\n}\nfunction setLayoutDims(layouts, params) {\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    if (layout.horizontal) {\n      layout.width = layout.box.fullSize && params.availableWidth;\n      layout.height = params.hBoxMaxHeight;\n    } else {\n      layout.width = params.vBoxMaxWidth;\n      layout.height = layout.box.fullSize && params.availableHeight;\n    }\n  }\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout) {\n  const box = layout.box;\n  const maxPadding = chartArea.maxPadding;\n  if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Cb\"])(layout.pos)) {\n    if (layout.size) {\n      chartArea[layout.pos] -= layout.size;\n    }\n    layout.size = layout.horizontal ? box.height : box.width;\n    chartArea[layout.pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params) || changed;\n}\nfunction placeBoxes(boxes, chartArea, params) {\n  const userPadding = params.padding;\n  let x = chartArea.x;\n  let y = chartArea.y;\n  let i, ilen, layout, box;\n  for (i = 0, ilen = boxes.length; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    if (layout.horizontal) {\n      box.left = box.fullSize ? userPadding.left : chartArea.left;\n      box.right = box.fullSize ? params.outerWidth - userPadding.right : chartArea.left + chartArea.w;\n      box.top = y;\n      box.bottom = y + box.height;\n      box.width = box.right - box.left;\n      y = box.bottom;\n    } else {\n      box.left = x;\n      box.right = x + box.width;\n      box.top = box.fullSize ? userPadding.top : chartArea.top;\n      box.bottom = box.fullSize ? params.outerHeight - userPadding.right : chartArea.top + chartArea.h;\n      box.height = box.bottom - box.top;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"].set('layout', {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* C */ \"d\"])(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* C */ \"d\"])(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params);\n    fitBoxes(verticalBoxes, chartArea, params);\n    if (fitBoxes(horizontalBoxes, chartArea, params)) {\n      fitBoxes(verticalBoxes, chartArea, params);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* G */ \"h\"])(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* G */ \"h\"])(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* J */ \"k\"] ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* z */ \"Tb\"])(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* F */ \"g\"])(canvas);\n  const element = container || canvas;\n  const observer = new MutationObserver(entries => {\n    const parent = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* F */ \"g\"])(element);\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.addedNodes.length; i++) {\n        const added = entry.addedNodes[i];\n        if (added === element || added === parent) {\n          listener(entry.target);\n        }\n      }\n    });\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* F */ \"g\"])(canvas);\n  if (!container) {\n    return;\n  }\n  const observer = new MutationObserver(entries => {\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.removedNodes.length; i++) {\n        if (entry.removedNodes[i] === canvas) {\n          listener();\n          break;\n        }\n      }\n    });\n  });\n  observer.observe(container, {childList: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* F */ \"g\"])(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* I */ \"j\"])((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* I */ \"j\"])((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Db\"])(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* E */ \"f\"])(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* F */ \"g\"])(canvas);\n    return !!(container && Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* F */ \"g\"])(container));\n  }\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* w */ \"Qb\"])(this.x) && Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* w */ \"Qb\"])(this.y);\n  }\n  getProps(props, final) {\n    const me = this;\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return me;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"vb\"])(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* K */ \"l\"])(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* p */ \"Jb\"])(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* K */ \"l\"])(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"].set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"].route('scale.ticks', 'color', '', 'color');\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"].route('scale.grid', 'color', '', 'borderColor');\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"].route('scale.grid', 'borderColor', '', 'borderColor');\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"].route('scale.title', 'color', '', 'color');\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"].describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"].describe('scales', {\n  _fallback: 'scale',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Db\"])(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Db\"])(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* L */ \"m\"])(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Pb\"])(majorStart, 0);\n  const end = Math.min(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Pb\"])(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(options.font, fallback);\n  const padding = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* C */ \"d\"])(options.padding);\n  const lines = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"vb\"])(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return Object.assign(Object.create(parent), {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return Object.assign(Object.create(parent), {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* X */ \"y\"])(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right} = scale;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  if (scale.isHorizontal()) {\n    titleX = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(align, left, right);\n    titleY = offsetFromEdge(scale, position, offset);\n    maxWidth = right - left;\n  } else {\n    titleX = offsetFromEdge(scale, position, offset);\n    titleY = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(align, bottom, top);\n    rotation = position === 'left' ? -_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* H */ \"i\"] : _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* H */ \"i\"];\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    const me = this;\n    me.options = options.setContext(me.getContext());\n    me.axis = options.axis;\n    me._userMin = me.parse(options.min);\n    me._userMax = me.parse(options.max);\n    me._suggestedMin = me.parse(options.suggestedMin);\n    me._suggestedMax = me.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(_userMin, _suggestedMin),\n      max: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(_userMax, _suggestedMax),\n      minDefined: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Ab\"])(_userMin),\n      maxDefined: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Ab\"])(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    const me = this;\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = me.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(me, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    return {\n      min: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(min, Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(max, min)),\n      max: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(max, Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(min, max))\n    };\n  }\n  getPadding() {\n    const me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    const sampleSize = tickOpts.sampleSize;\n    me.beforeUpdate();\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.ticks = null;\n    me._labelSizes = null;\n    me._gridLineItems = null;\n    me._labelItems = null;\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions();\n    me._maxLength = me.isHorizontal()\n      ? me.width + margins.left + margins.right\n      : me.height + margins.top + margins.bottom;\n    if (!me._dataLimitsCached) {\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits();\n      me._range = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* O */ \"p\"])(me, me.options.grace);\n      me._dataLimitsCached = true;\n    }\n    me.beforeBuildTicks();\n    me.ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    const samplingEnabled = sampleSize < me.ticks.length;\n    me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\n    me.configure();\n    me.beforeCalculateLabelRotation();\n    me.calculateLabelRotation();\n    me.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      me.ticks = autoSkip(me, me.ticks);\n      me._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      me._convertTicksToLabels(me.ticks);\n    }\n    me.beforeFit();\n    me.fit();\n    me.afterFit();\n    me.afterUpdate();\n  }\n  configure() {\n    const me = this;\n    let reversePixels = me.options.reverse;\n    let startPixel, endPixel;\n    if (me.isHorizontal()) {\n      startPixel = me.left;\n      endPixel = me.right;\n    } else {\n      startPixel = me.top;\n      endPixel = me.bottom;\n      reversePixels = !reversePixels;\n    }\n    me._startPixel = startPixel;\n    me._endPixel = endPixel;\n    me._reversePixels = reversePixels;\n    me._length = endPixel - startPixel;\n    me._alignToPixels = me.options.alignToPixels;\n  }\n  afterUpdate() {\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    const me = this;\n    me.chart.notifyPlugins(name, me.getContext());\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(me.options[name], [me]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(tickOpts.callback, [tick.value, i, ticks], me);\n    }\n    for (i = 0; i < ilen; i++) {\n      if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Db\"])(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n  }\n  afterTickToLabelConversion() {\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const me = this;\n    const options = me.options;\n    const tickOpts = options.ticks;\n    const numTicks = me.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\n      me.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = me._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* x */ \"Rb\"])(me.chart.width - maxLabelWidth, 0, me.maxWidth);\n    tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = me.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Q */ \"r\"])(Math.min(\n        Math.asin(Math.min((labelSizes.highest.height + 6) / tickWidth, 1)),\n        Math.asin(Math.min(maxHeight / maxLabelDiagonal, 1)) - Math.asin(maxLabelHeight / maxLabelDiagonal)\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    me.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const me = this;\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = me;\n    const display = me._isVisible();\n    const isHorizontal = me.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = me.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = me.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && me.ticks.length) {\n        const {first, last, widest, highest} = me._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* t */ \"Nb\"])(me.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        me._calculatePadding(first, last, sin, cos);\n      }\n    }\n    me._handleMargins();\n    if (isHorizontal) {\n      me.width = me._length = chart.width - me._margins.left - me._margins.right;\n      me.height = minSize.height;\n    } else {\n      me.width = minSize.width;\n      me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const me = this;\n    const {ticks: {align, padding}, position} = me.options;\n    const isRotated = me.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && me.axis === 'x';\n    if (me.isHorizontal()) {\n      const offsetLeft = me.getPixelForTick(0) - me.left;\n      const offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\n      me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      me.paddingTop = paddingTop + padding;\n      me.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    const me = this;\n    if (me._margins) {\n      me._margins.left = Math.max(me.paddingLeft, me._margins.left);\n      me._margins.top = Math.max(me.paddingTop, me._margins.top);\n      me._margins.right = Math.max(me.paddingRight, me._margins.right);\n      me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\n    }\n  }\n  afterFit() {\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    const me = this;\n    me.beforeTickToLabelConversion();\n    me.generateTickLabels(ticks);\n    me.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    const me = this;\n    let labelSizes = me._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = me.options.ticks.sampleSize;\n      let ticks = me.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Db\"])(label) && !Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"vb\"])(label)) {\n        width = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* R */ \"s\"])(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"vb\"])(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Db\"])(nestedLabel) && !Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"vb\"])(nestedLabel)) {\n            width = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* R */ \"s\"])(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    const me = this;\n    if (me._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = me._startPixel + decimal * me._length;\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* S */ \"t\"])(me._alignToPixels ? Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* U */ \"v\"])(me.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const me = this;\n    const ticks = me.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(me.getContext(), index, tick));\n    }\n    return me.$context ||\n\t\t\t(me.$context = createScaleContext(me.chart.getContext(), me));\n  }\n  _tickSize() {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    const rot = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* t */ \"Nb\"])(me.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = me._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return me.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const chart = me.chart;\n    const options = me.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* U */ \"v\"])(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(me.bottom);\n      ty1 = me.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(me.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = me.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(me.right);\n      tx1 = me.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(me.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = me.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Cb\"])(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Cb\"])(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    for (i = 0; i < ticksLength; ++i) {\n      const optsAtIndex = grid.setContext(me.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(me, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* U */ \"v\"])(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    me._ticksLength = ticksLength;\n    me._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const options = me.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* t */ \"Nb\"])(me.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = me.bottom - hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = me.top + hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Cb\"])(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Cb\"])(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = me.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = me._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = me._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(me.getContext(i));\n      pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\n      font = me._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"vb\"])(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* C */ \"d\"])(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const me = this;\n    const {position, ticks} = me.options;\n    const rotation = -Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* t */ \"Nb\"])(me.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const me = this;\n    const {position, ticks: {crossAlign, mirror, padding}} = me.options;\n    const labelSizes = me._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        textAlign = 'left';\n        x = me.right + padding;\n      } else {\n        x = me.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = me.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        textAlign = 'right';\n        x = me.left + padding;\n      } else {\n        x = me.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = me.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    const me = this;\n    if (me.options.ticks.mirror) {\n      return;\n    }\n    const chart = me.chart;\n    const position = me.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: me.left, bottom: chart.height, right: me.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: me.top, left: 0, bottom: me.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const me = this;\n    const grid = me.options.grid;\n    if (!me._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = me.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(me.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const me = this;\n    const grid = me.options.grid;\n    const ctx = me.ctx;\n    const items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const me = this;\n    const {chart, ctx, options: {grid}} = me;\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(me.getContext(0)).lineWidth;\n    const borderValue = me._borderValue;\n    let x1, x2, y1, y2;\n    if (me.isHorizontal()) {\n      x1 = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* U */ \"v\"])(chart, me.left, axisWidth) - axisWidth / 2;\n      x2 = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* U */ \"v\"])(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* U */ \"v\"])(chart, me.top, axisWidth) - axisWidth / 2;\n      y2 = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* U */ \"v\"])(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = me.ctx;\n    const area = me._computeLabelArea();\n    if (area) {\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* k */ \"Eb\"])(ctx, area);\n    }\n    const items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* V */ \"w\"])(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* m */ \"Gb\"])(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(title.font);\n    const padding = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* C */ \"d\"])(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom') {\n      offset += padding.bottom;\n      if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"vb\"])(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* V */ \"w\"])(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    const me = this;\n    if (!me._isVisible()) {\n      return;\n    }\n    me.drawBackground();\n    me.drawGrid(chartArea);\n    me.drawBorder();\n    me.drawTitle();\n    me.drawLabels(chartArea);\n  }\n  _layers() {\n    const me = this;\n    const opts = me.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = opts.grid && opts.grid.z || 0;\n    if (!me._isVisible() || me.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw(chartArea) {\n          me.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw(chartArea) {\n        me.drawBackground();\n        me.drawGrid(chartArea);\n        me.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw() {\n        me.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw(chartArea) {\n        me.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const me = this;\n    const metas = me.chart.getSortedVisibleDatasetMetas();\n    const axisID = me.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === me.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(opts.font);\n  }\n  _maxDigits() {\n    const me = this;\n    const fontSize = me._resolveTickFontOptions(0).lineHeight;\n    return (me.isHorizontal() ? me.width : me.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const me = this;\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = me.register(proto);\n    }\n    const items = me.items;\n    const id = item.id;\n    const scope = me.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (me.override) {\n      _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"].override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"][scope]) {\n      delete _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"][scope][id];\n      if (this.override) {\n        delete _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Z */ \"A\"][id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* $ */ \"a\"])(Object.create(null), [\n    parentScope ? _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"].get(parentScope) : {},\n    _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"].get(scope),\n    item.defaults\n  ]);\n  _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"].set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"].describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"].route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    const me = this;\n    [...args].forEach(arg => {\n      const reg = typedRegistry || me._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === me.plugins && arg.id)) {\n        me._exec(method, reg, arg);\n      } else {\n        Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(arg, item => {\n          const itemReg = typedRegistry || me._getRegistryForType(item);\n          me._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a0 */ \"D\"])(method);\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(component['before' + camelMethod], [], component);\n    registry[method](component);\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    const me = this;\n    if (hook === 'beforeInit') {\n      me._init = me._createDescriptors(chart, true);\n      me._notify(me._init, chart, 'install');\n    }\n    const descriptors = filter ? me._descriptors(chart).filter(filter) : me._descriptors(chart);\n    const result = me._notify(descriptors, chart, hook, args);\n    if (hook === 'destroy') {\n      me._notify(descriptors, chart, 'stop');\n      me._notify(me._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Db\"])(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Pb\"])(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"].datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Z */ \"A\"][config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a6 */ \"J\"])(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Z */ \"A\"][type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a6 */ \"J\"])(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a6 */ \"J\"])(scale, [_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"].scales[scale.type], _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"].scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Pb\"])(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* f */ \"zb\"])(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Z */ \"A\"][type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"], key));\n      keys.forEach(key => addIfFound(scopes, _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a1 */ \"E\"], key));\n    });\n    const array = [...scopes];\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Z */ \"A\"][type] || {},\n      _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"].datasets[type] || {},\n      {type},\n      _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"],\n      _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a1 */ \"E\"]\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a2 */ \"F\"])(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a3 */ \"G\"])(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Cb\"])(context)\n      ? Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a3 */ \"G\"])(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a4 */ \"H\"])(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a5 */ \"I\"])(proxy);\n  for (const prop of names) {\n    if ((isScriptable(prop) && Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a2 */ \"F\"])(proxy[prop]))\n      || (isIndexable(prop) && Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"vb\"])(proxy[prop]))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.3.0\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction getCanvas(item) {\n  if (isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nclass Chart {\n  constructor(item, config) {\n    const me = this;\n    this.config = config = new Config(config);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    this.platform = me._initializePlatform(initialCanvas, config);\n    const context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a7 */ \"K\"])();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this.scale = undefined;\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a8 */ \"L\"])(() => this.update('resize'), options.resizeDelay || 0);\n    instances[me.id] = me;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(me, 'complete', onAnimationsComplete);\n    animator.listen(me, 'progress', onAnimationProgress);\n    me._initialize();\n    if (me.attached) {\n      me.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Db\"])(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    const me = this;\n    me.notifyPlugins('beforeInit');\n    if (me.options.responsive) {\n      me.resize();\n    } else {\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a9 */ \"M\"])(me, me.options.devicePixelRatio);\n    }\n    me.bindEvents();\n    me.notifyPlugins('afterInit');\n    return me;\n  }\n  _initializePlatform(canvas, config) {\n    if (config.platform) {\n      return new config.platform();\n    } else if (!isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n      return new BasicPlatform();\n    }\n    return new DomPlatform();\n  }\n  clear() {\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aa */ \"V\"])(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const me = this;\n    const options = me.options;\n    const canvas = me.canvas;\n    const aspectRatio = options.maintainAspectRatio && me.aspectRatio;\n    const newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\n    me.width = newSize.width;\n    me.height = newSize.height;\n    me._aspectRatio = me.aspectRatio;\n    if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a9 */ \"M\"])(me, newRatio, true)) {\n      return;\n    }\n    me.notifyPlugins('resize', {size: newSize});\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(options.onResize, [me, newSize], me);\n    if (me.attached) {\n      if (me._doResize()) {\n        me.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const me = this;\n    const options = me.options;\n    const scaleOpts = options.scales;\n    const scales = me.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Pb\"])(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: me.ctx,\n          chart: me\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(scales, (scale) => {\n      layouts.configure(me, scale, scale.options);\n      layouts.addBox(me, scale);\n    });\n  }\n  _updateMetasetIndex(meta, index) {\n    const metasets = this._metasets;\n    const oldIndex = meta.index;\n    if (oldIndex !== index) {\n      metasets[oldIndex] = metasets[index];\n      metasets[index] = meta;\n      meta.index = index;\n    }\n  }\n  _updateMetasets() {\n    const me = this;\n    const metasets = me._metasets;\n    const numData = me.data.datasets.length;\n    const numMeta = metasets.length;\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        me._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const me = this;\n    const {_metasets: metasets, data: {datasets}} = me;\n    if (metasets.length > datasets.length) {\n      delete me._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        me._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const me = this;\n    const newControllers = [];\n    const datasets = me.data.datasets;\n    let i, ilen;\n    me._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = me.getDatasetMeta(i);\n      const type = dataset.type || me.config.type;\n      if (meta.type && meta.type !== type) {\n        me._destroyDatasetMeta(i);\n        meta = me.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\n      meta.order = dataset.order || 0;\n      me._updateMetasetIndex(meta, i);\n      meta.label = '' + dataset.label;\n      meta.visible = me.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"].datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(me, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    me._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    const me = this;\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(me.data.datasets, (dataset, datasetIndex) => {\n      me.getDatasetMeta(datasetIndex).controller.reset();\n    }, me);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const me = this;\n    const config = me.config;\n    config.update();\n    me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(me.scales, (scale) => {\n      layouts.removeBox(me, scale);\n    });\n    const animsDisabled = me._animationsDisabled = !me.options.animation;\n    me.ensureScalesHaveIDs();\n    me.buildOrUpdateScales();\n    const existingEvents = new Set(Object.keys(me._listeners));\n    const newEvents = new Set(me.options.events);\n    if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ab */ \"W\"])(existingEvents, newEvents) || !!this._responsiveListeners !== me.options.responsive) {\n      me.unbindEvents();\n      me.bindEvents();\n    }\n    me._plugins.invalidate();\n    if (me.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = me.buildOrUpdateControllers();\n    me.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\n      const {controller} = me.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    me._minPadding = minPadding;\n    me._updateLayout(minPadding);\n    if (!animsDisabled) {\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    me._updateDatasets(mode);\n    me.notifyPlugins('afterUpdate', {mode});\n    me._layers.sort(compare2Level('z', '_idx'));\n    if (me._lastEvent) {\n      me._eventHandler(me._lastEvent, true);\n    }\n    me.render();\n  }\n  _updateLayout(minPadding) {\n    const me = this;\n    if (me.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(me, me.width, me.height, minPadding);\n    const area = me.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    me._layers = [];\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(me.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      me._layers.push(...box._layers());\n    }, me);\n    me._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    me.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    const me = this;\n    const isFunction = typeof mode === 'function';\n    if (me.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._updateDataset(i, isFunction ? mode({datasetIndex: i}) : mode);\n    }\n    me.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const me = this;\n    const meta = me.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    const me = this;\n    if (me.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(me)) {\n      if (me.attached && !animator.running(me)) {\n        animator.start(me);\n      }\n    } else {\n      me.draw();\n      onAnimationsComplete({chart: me});\n    }\n  }\n  draw() {\n    const me = this;\n    let i;\n    if (me._resizeBeforeDraw) {\n      const {width, height} = me._resizeBeforeDraw;\n      me._resize(width, height);\n      me._resizeBeforeDraw = null;\n    }\n    me.clear();\n    if (me.width <= 0 || me.height <= 0) {\n      return;\n    }\n    if (me.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = me._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const me = this;\n    const metasets = me._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    const me = this;\n    if (me.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = me.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      me._drawDataset(metasets[i]);\n    }\n    me.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const me = this;\n    const ctx = me.ctx;\n    const clip = meta._clip;\n    const area = me.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* k */ \"Eb\"])(ctx, {\n      left: clip.left === false ? 0 : area.left - clip.left,\n      right: clip.right === false ? me.width : area.right + clip.right,\n      top: clip.top === false ? 0 : area.top - clip.top,\n      bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\n    });\n    meta.controller.draw();\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* m */ \"Gb\"])(ctx);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const me = this;\n    const dataset = me.data.datasets[datasetIndex];\n    const metasets = me._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = metasets[datasetIndex] = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = {chart: this, type: 'chart'});\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateDatasetVisibility(datasetIndex, visible) {\n    const me = this;\n    const mode = visible ? 'show' : 'hide';\n    const meta = me.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    me.setDatasetVisibility(datasetIndex, visible);\n    anims.update(meta, {visible});\n    me.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n  }\n  hide(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, false);\n  }\n  show(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const me = this;\n    const meta = me._metasets && me._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n      delete me._metasets[datasetIndex];\n    }\n  }\n  destroy() {\n    const me = this;\n    const {canvas, ctx} = me;\n    let i, ilen;\n    me.stop();\n    animator.remove(me);\n    for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._destroyDatasetMeta(i);\n    }\n    me.config.clearCache();\n    if (canvas) {\n      me.unbindEvents();\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aa */ \"V\"])(canvas, ctx);\n      me.platform.releaseContext(ctx);\n      me.canvas = null;\n      me.ctx = null;\n    }\n    me.notifyPlugins('destroy');\n    delete instances[me.id];\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = function(e, x, y) {\n      e.offsetX = x;\n      e.offsetY = y;\n      me._eventHandler(e);\n    };\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(me.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    const me = this;\n    if (!me._responsiveListeners) {\n      me._responsiveListeners = {};\n    }\n    const listeners = me._responsiveListeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(me, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (me.canvas) {\n        me.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      me.attached = true;\n      me.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      me.attached = false;\n      _remove('resize', listener);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(me.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    const me = this;\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(me._listeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._listeners = {};\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(me._responsiveListeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const me = this;\n    const lastActive = me._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ac */ \"X\"])(active, lastActive);\n    if (changed) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const me = this;\n    const hoverOptions = me.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      me.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      me.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const me = this;\n    const args = {event: e, replay, cancelable: true};\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.type);\n    if (me.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = me._handleEvent(e, replay);\n    args.cancelable = false;\n    me.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      me.render();\n    }\n    return me;\n  }\n  _handleEvent(e, replay) {\n    const me = this;\n    const {_active: lastActive = [], options} = me;\n    const hoverOptions = options.hover;\n    const useFinalPosition = replay;\n    let active = [];\n    let changed = false;\n    let lastEvent = null;\n    if (e.type !== 'mouseout') {\n      active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n      lastEvent = e.type === 'click' ? me._lastEvent : e;\n    }\n    me._lastEvent = null;\n    if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* A */ \"b\"])(e, me.chartArea, me._minPadding)) {\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(options.onHover, [e, active, me], me);\n      if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n        Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(options.onClick, [e, active, me], me);\n      }\n    }\n    changed = !Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ac */ \"X\"])(active, lastActive);\n    if (changed || replay) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive, replay);\n    }\n    me._lastEvent = lastEvent;\n    return changed;\n  }\n}\nconst invalidatePlugins = () => Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"]\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Z */ \"A\"]\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element) {\n  const {startAngle, endAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* H */ \"i\"], startAngle - _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* H */ \"i\"]);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ae */ \"Z\"])(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* x */ \"Rb\"])(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* x */ \"Rb\"])(o.innerStart, 0, innerLimit),\n    innerEnd: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* x */ \"Rb\"])(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset) {\n  const {x, y, startAngle: start, endAngle: end, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + offset + pixelMargin : 0;\n  const alpha = end - start;\n  const beta = Math.max(0.001, alpha * outerRadius - offset / _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* P */ \"q\"]) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset;\n  const endAngle = end - angleOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* H */ \"i\"]);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* H */ \"i\"], innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* H */ \"i\"]);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* H */ \"i\"], outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset) {\n  if (element.fullCircles) {\n    element.endAngle = element.startAngle + _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"];\n    pathArc(ctx, element, offset);\n    for (let i = 0; i < element.fullCircles; ++i) {\n      ctx.fill();\n    }\n  }\n  if (!isNaN(element.circumference)) {\n    element.endAngle = element.startAngle + element.circumference % _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"];\n  }\n  pathArc(ctx, element, offset);\n  ctx.fill();\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, endAngle, pixelMargin} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    element.endAngle = element.startAngle + _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"];\n    clipArc(ctx, element);\n    element.endAngle = endAngle;\n    if (element.endAngle === element.startAngle) {\n      element.endAngle += _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"];\n      element.fullCircles--;\n    }\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"], startAngle, true);\n  for (i = 0; i < element.fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"]);\n  for (i = 0; i < element.fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset) {\n  const {options} = element;\n  const inner = options.borderAlign === 'inner';\n  if (!options.borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element);\n  }\n  pathArc(ctx, element, offset);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ad */ \"Y\"])(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const betweenAngles = circumference >= _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"] || Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* q */ \"Kb\"])(angle, startAngle, endAngle);\n    const withinRadius = (distance >= innerRadius && distance <= outerRadius);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options;\n    const offset = (options.offset || 0) / 2;\n    me.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    me.fullCircles = Math.floor(me.circumference / _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"]);\n    if (me.circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (me.startAngle + me.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (me.circumference >= _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* P */ \"q\"]) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    drawArc(ctx, me, radiusOffset);\n    drawBorder(ctx, me, radiusOffset);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Pb\"])(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Pb\"])(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Pb\"])(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Pb\"])(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Pb\"])(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Pb\"])(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* al */ \"gb\"];\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* am */ \"hb\"];\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ai */ \"db\"];\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aj */ \"eb\"];\n  }\n  return _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ak */ \"fb\"];\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && line.segments.length === 1) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const me = this;\n    const options = me.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !me._pointsUpdated) {\n      const loop = options.spanGaps ? me._loop : me._fullLoop;\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* af */ \"ab\"])(me._points, options, chartArea, loop, indexAxis);\n      me._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    const me = this;\n    me._points = points;\n    delete me._segments;\n    delete me._path;\n    me._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ag */ \"bb\"])(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const me = this;\n    const options = me.options;\n    const value = point[property];\n    const points = me.points;\n    const segments = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ah */ \"cb\"])(me, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const me = this;\n    const segments = me.segments;\n    const segmentMethod = _getSegmentMethod(me);\n    let loop = me._loop;\n    start = start || 0;\n    count = count || (me.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, me, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const me = this;\n    const options = me.options || {};\n    const points = me.points || [];\n    if (!points.length || !options.borderWidth) {\n      return;\n    }\n    ctx.save();\n    draw(ctx, me, start, count);\n    ctx.restore();\n    if (me.animated) {\n      me._pointsUpdated = false;\n      me._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options;\n    if (me.skip || options.radius < 0.1) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* an */ \"ib\"])(ctx, options, me.x, me.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction parseBorderSkipped(bar) {\n  let edge = bar.options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    return res;\n  }\n  edge = bar.horizontal\n    ? parseEdge(edge, 'left', 'right', bar.base > bar.x)\n    : parseEdge(edge, 'bottom', 'top', bar.base < bar.y);\n  res[edge] = true;\n  return res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : Math.max(Math.min(value, max), min);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = parseBorderSkipped(bar);\n  const o = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ap */ \"kb\"])(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aq */ \"lb\"])(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = parseBorderSkipped(bar);\n  const enableBorder = enableBorderRadius || Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Cb\"])(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const options = this.options;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ao */ \"jb\"] : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, outer);\n      ctx.clip();\n      addRectPath(ctx, inner);\n      ctx.fillStyle = options.borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inner);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  enableBorderRadius: true,\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Db\"])(minIndex) && !Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Db\"])(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* x */ \"Rb\"])(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* y */ \"Sb\"])(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* x */ \"Rb\"])(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* y */ \"Sb\"])(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a */ \"C\"])([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      if (count <= 4 * availableWidth) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Db\"])(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Pb\"])(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Cb\"])(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Ab\"])(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Cb\"])(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Ab\"])(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"]};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Cb\"])(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach((segment) => {\n    const first = linePoints[segment.start];\n    const last = linePoints[segment.end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {chart, scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(chart, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nconst isLineAndNotInHideAnimation = (meta) => meta.type === 'line' && !meta.hidden;\nfunction getLinesBelow(chart, index) {\n  const below = [];\n  const metas = chart.getSortedVisibleDatasetMetas();\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (isLineAndNotInHideAnimation(meta)) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Ab\"])(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"vb\"])(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Ab\"])(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* as */ \"nb\"])(start);\n    end = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* as */ \"nb\"])(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    const bounds = getBounds(property, points[segment.start], points[segment.end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[segment.start],\n        end: points[segment.end]\n      });\n      continue;\n    }\n    const targetSegments = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ah */ \"cb\"])(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ar */ \"mb\"])(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      interpolatedLineTo(ctx, target, end, property);\n    }\n    const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n    const loop = lineLoop && targetLoop;\n    if (!loop) {\n      interpolatedLineTo(ctx, target, start, property);\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* k */ \"Eb\"])(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* m */ \"Gb\"])(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins;\n    me.setDimensions();\n    me.buildLabels();\n    me.fit();\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n  }\n  buildLabels() {\n    const me = this;\n    const labelOpts = me.options.labels || {};\n    let legendItems = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(labelOpts.generateLabels, [me.chart], me) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, me.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, me.chart.data));\n    }\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n    me.legendItems = legendItems;\n  }\n  fit() {\n    const me = this;\n    const {options, ctx} = me;\n    if (!options.display) {\n      me.width = me.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = me._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (me.isHorizontal()) {\n      width = me.maxWidth;\n      height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = me.maxHeight;\n      width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    me.width = Math.min(width, options.maxWidth || me.maxWidth);\n    me.height = Math.min(height, options.maxHeight || me.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxWidth, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const lineWidths = me.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxHeight, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const columnSizes = me.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let top = 0;\n    let col = 0;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + fontSize + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        top = 0;\n        currentColWidth = currentColHeight = 0;\n      }\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += fontSize + padding;\n      hitboxes[i] = {left, top, col, width: itemWidth, height: itemHeight};\n      top += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    const me = this;\n    if (!me.options.display) {\n      return;\n    }\n    const titleHeight = me._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}}} = me;\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(align, me.left + padding, me.right - me.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(align, me.left + padding, me.right - me.lineWidths[row]);\n        }\n        hitbox.top += me.top + titleHeight + padding;\n        hitbox.left = left;\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += me.left + padding;\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    const me = this;\n    if (me.options.display) {\n      const ctx = me.ctx;\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* k */ \"Eb\"])(ctx, me);\n      me._draw();\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* m */ \"Gb\"])(ctx);\n    }\n  }\n  _draw() {\n    const me = this;\n    const {options: opts, columnSizes, lineWidths, ctx} = me;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"].color;\n    const rtlHelper = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* at */ \"ob\"])(opts.rtl, me.left, me.width);\n    const labelFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    me.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Pb\"])(legendItem.lineWidth, 1);\n      ctx.fillStyle = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Pb\"])(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Pb\"])(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Pb\"])(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Pb\"])(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Pb\"])(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Pb\"])(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* an */ \"ib\"])(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aq */ \"lb\"])(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ao */ \"jb\"])(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* V */ \"w\"])(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: legendItem.textAlign\n      });\n    };\n    const isHorizontal = me.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(align, me.left + padding, me.right - lineWidths[0]),\n        y: me.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: me.left + padding,\n        y: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* au */ \"pb\"])(me.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    me.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + (fontSize / 2) + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(me.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > me.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(align, me.left + padding, me.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > me.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* av */ \"qb\"])(textAlign, x + boxWidth + halfFontSize, me.right);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aw */ \"rb\"])(me.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const me = this;\n    const opts = me.options;\n    const titleOpts = opts.title;\n    const titleFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(titleOpts.font);\n    const titlePadding = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* C */ \"d\"])(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* at */ \"ob\"])(opts.rtl, me.left, me.width);\n    const ctx = me.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = me.left;\n    let maxWidth = me.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...me.lineWidths);\n      y = me.top + topPaddingPlusHalfFontSize;\n      left = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(opts.align, left, me.right - maxWidth);\n    } else {\n      const maxHeight = me.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\n    }\n    const x = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* X */ \"y\"])(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* V */ \"w\"])(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(titleOpts.font);\n    const titlePadding = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* C */ \"d\"])(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    const me = this;\n    let i, hitBox, lh;\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      lh = me.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          return me.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const me = this;\n    const opts = me.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = me._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = me._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(opts.onLeave, [e, previous, me], me);\n      }\n      me._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(opts.onHover, [e, hoveredItem, me], me);\n      }\n    } else if (hoveredItem) {\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(opts.onClick, [e, hoveredItem, me], me);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* C */ \"d\"])(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const me = this;\n    const opts = me.options;\n    me.left = 0;\n    me.top = 0;\n    if (!opts.display) {\n      me.width = me.height = me.right = me.bottom = 0;\n      return;\n    }\n    me.width = me.right = maxWidth;\n    me.height = me.bottom = maxHeight;\n    const lineCount = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"vb\"])(opts.text) ? opts.text.length : 1;\n    me._padding = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* C */ \"d\"])(opts.padding);\n    const textSize = lineCount * Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(opts.font).lineHeight + me._padding.height;\n    if (me.isHorizontal()) {\n      me.height = textSize;\n    } else {\n      me.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(align, bottom, top);\n        rotation = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* P */ \"q\"] * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(align, top, bottom);\n        rotation = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* P */ \"q\"] * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + me._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = me._drawArgs(offset);\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* V */ \"w\"])(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* X */ \"y\"])(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ay */ \"tb\"])(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"vb\"])(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip._chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(options.bodyFont);\n  const titleFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(options.titleFont);\n  const footerFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* C */ \"d\"])(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2) : 0;\n  Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(body, (bodyItem) => {\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(bodyItem.before, maxLineWidth);\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(bodyItem.lines, maxLineWidth);\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const radiusAndPadding = cornerRadius + caretPadding;\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n  return {\n    x: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* x */ \"Rb\"])(x, 0, chart.width - size.width),\n    y: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* x */ \"Rb\"])(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* C */ \"d\"])(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return Object.assign(Object.create(parent), {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._chart = config._chart;\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const me = this;\n    const cached = me._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = me._chart;\n    const options = me.options.setContext(me.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(me._chart, opts);\n    if (opts._cacheable) {\n      me._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    const me = this;\n    return me.$context ||\n\t\t\t(me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\n  }\n  getTitle(context, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(me, [context]);\n    const title = callbacks.title.apply(me, [context]);\n    const afterTitle = callbacks.afterTitle.apply(me, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const bodyItems = [];\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\n    const footer = callbacks.footer.apply(me, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const me = this;\n    const active = me._active;\n    const data = me._chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(me._chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(me, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(me, context));\n      labelTextColors.push(scoped.labelTextColor.call(me, context));\n    });\n    me.labelColors = labelColors;\n    me.labelPointStyles = labelPointStyles;\n    me.labelTextColors = labelTextColors;\n    me.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    const active = me._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (me.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(me, active, me._eventPosition);\n      tooltipItems = me._createItems(options);\n      me.title = me.getTitle(tooltipItems, options);\n      me.beforeBody = me.getBeforeBody(tooltipItems, options);\n      me.body = me.getBody(tooltipItems, options);\n      me.afterBody = me.getAfterBody(tooltipItems, options);\n      me.footer = me.getFooter(tooltipItems, options);\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(me._chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\n      me.xAlign = alignment.xAlign;\n      me.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    me._tooltipItems = tooltipItems;\n    me.$context = undefined;\n    if (properties) {\n      me._resolveAnimations().update(me, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(me, {chart: me._chart, tooltip: me, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {cornerRadius, caretSize} = options;\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const me = this;\n    const title = me.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* at */ \"ob\"])(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const me = this;\n    const labelColors = me.labelColors[i];\n    const labelPointStyle = me.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(options.bodyFont);\n    const colorX = getAlignedX(me, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* an */ \"ib\"])(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* an */ \"ib\"])(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aq */ \"lb\"])(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ao */ \"jb\"])(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ao */ \"jb\"])(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = me.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const me = this;\n    const {body} = me;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth} = options;\n    const bodyFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* at */ \"ob\"])(options.rtl, me.x, me.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(me, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(me.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + 1) : (boxWidth + 2)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = me.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        me._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(me.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const me = this;\n    const footer = me.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* at */ \"ob\"])(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const radius = options.cornerRadius;\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const me = this;\n    const chart = me._chart;\n    const anims = me.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(me, me._active, me._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, me._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        me.xAlign = alignment.xAlign;\n        me.yAlign = alignment.yAlign;\n        me.width = size.width;\n        me.height = size.height;\n        me.caretX = position.x;\n        me.caretY = position.y;\n        me._resolveAnimations().update(me, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    let opacity = me.opacity;\n    if (!opacity) {\n      return;\n    }\n    me._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: me.width,\n      height: me.height\n    };\n    const pt = {\n      x: me.x,\n      y: me.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* C */ \"d\"])(options.padding);\n    const hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      me.drawBackground(pt, ctx, tooltipSize, options);\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* au */ \"pb\"])(ctx, options.textDirection);\n      pt.y += padding.top;\n      me.drawTitle(pt, ctx, options);\n      me.drawBody(pt, ctx, options);\n      me.drawFooter(pt, ctx, options);\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aw */ \"rb\"])(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const me = this;\n    const lastActive = me._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me._chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ac */ \"X\"])(lastActive, active);\n    const positionChanged = me._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      me._active = active;\n      me._eventPosition = eventPosition;\n      me.update(true);\n    }\n  }\n  handleEvent(e, replay) {\n    const me = this;\n    const options = me.options;\n    const lastActive = me._active || [];\n    let changed = false;\n    let active = [];\n    if (e.type !== 'mouseout') {\n      active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n    }\n    const positionChanged = me._positionChanged(active, e);\n    changed = replay || !Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ac */ \"X\"])(active, lastActive) || positionChanged;\n    if (changed) {\n      me._active = active;\n      if (options.enabled || options.external) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({_chart: chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ax */ \"sb\"],\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ax */ \"sb\"],\n      beforeBody: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ax */ \"sb\"],\n      beforeLabel: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ax */ \"sb\"],\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Db\"])(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ax */ \"sb\"],\n      afterBody: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ax */ \"sb\"],\n      beforeFooter: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ax */ \"sb\"],\n      footer: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ax */ \"sb\"],\n      afterFooter: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ax */ \"sb\"]\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index) => typeof raw === 'string'\n  ? labels.push(raw) - 1\n  : isNaN(raw) ? null : index;\nfunction findOrAddLabel(labels, raw, index) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* x */ \"Rb\"])(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Db\"])(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Pb\"])(index, raw));\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me.getMinMax(true);\n    if (me.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = me.getLabels().length - 1;\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const min = me.min;\n    const max = me.max;\n    const offset = me.options.offset;\n    const ticks = [];\n    let labels = me.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    me._startValue = me.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const labels = me.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    const me = this;\n    super.configure();\n    if (!me.isHorizontal()) {\n      me._reversePixels = !me._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (typeof value !== 'number') {\n      value = me.parse(value);\n    }\n    return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\n  }\n  getPixelForTick(index) {\n    const me = this;\n    const ticks = me.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return me.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Db\"])(min);\n  const maxDefined = !Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Db\"])(max);\n  const countDefined = !Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Db\"])(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aA */ \"N\"])((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aA */ \"N\"])(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Db\"])(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  niceMin = Math.floor(rmin / spacing) * spacing;\n  niceMax = Math.ceil(rmax / spacing) * spacing;\n  if (minDefined && maxDefined && step && Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aB */ \"O\"])((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.min((max - min) / spacing, maxTicks);\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aC */ \"P\"])(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aD */ \"Q\"])(spacing),\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aD */ \"Q\"])(niceMin),\n  );\n  factor = Math.pow(10, Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Db\"])(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aC */ \"P\"])(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aC */ \"P\"])(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* t */ \"Nb\"])(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Db\"])(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {beginAtZero} = me.options;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* s */ \"Mb\"])(min);\n      const maxSign = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* s */ \"Mb\"])(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      setMax(max + 1);\n      if (!beginAtZero) {\n        setMin(min - 1);\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  getTickLimit() {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n    } else {\n      maxTicks = me.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = me.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: me._maxDigits(),\n      horizontal: me.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = me._range || me;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* az */ \"ub\"])(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const me = this;\n    const ticks = me.ticks;\n    let start = me.min;\n    let end = me.max;\n    super.configure();\n    if (me.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    me._startValue = start;\n    me._endValue = end;\n    me._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* p */ \"Jb\"])(value, this.chart.options.locale);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Ab\"])(min) ? min : 0;\n    me.max = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Ab\"])(max) ? max : 1;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const me = this;\n    const horizontal = me.isHorizontal();\n    const length = horizontal ? me.width : me.height;\n    const minRotation = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* t */ \"Nb\"])(me.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = me._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* K */ \"l\"])(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* K */ \"l\"])(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(generationOptions.min, Math.pow(10, Math.floor(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* K */ \"l\"])(dataRange.min))));\n  let exp = Math.floor(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* K */ \"l\"])(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Ab\"])(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Ab\"])(min) ? Math.max(0, min) : null;\n    me.max = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Ab\"])(max) ? Math.max(0, max) : null;\n    if (me.options.beginAtZero) {\n      me._zero = true;\n    }\n    me.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let min = me.min;\n    let max = me.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* K */ \"l\"])(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const generationOptions = {\n      min: me._userMin,\n      max: me._userMax\n    };\n    const ticks = generateTicks(generationOptions, me);\n    if (opts.bounds === 'ticks') {\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* az */ \"ub\"])(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined ? '0' : Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* p */ \"Jb\"])(value, this.chart.options.locale);\n  }\n  configure() {\n    const me = this;\n    const start = me.min;\n    super.configure();\n    me._startValue = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* K */ \"l\"])(start);\n    me._valueRange = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* K */ \"l\"])(me.max) - Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* K */ \"l\"])(start);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (value === undefined || value === 0) {\n      value = me.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return me.getPixelForDecimal(value === me.min\n      ? 0\n      : (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* K */ \"l\"])(value) - me._startValue) / me._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const decimal = me.getDecimalForPixel(pixel);\n    return Math.pow(10, me._startValue + decimal * me._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* C */ \"d\"])(tickOpts.backdropPadding);\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Pb\"])(tickOpts.font && tickOpts.font.size, _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"xb\"].font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, lineHeight, label) {\n  if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"vb\"])(label)) {\n    return {\n      w: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aE */ \"R\"])(ctx, ctx.font, label),\n      h: label.length * lineHeight\n    };\n  }\n  return {\n    w: ctx.measureText(label).width,\n    h: lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  const furthestAngles = {};\n  let i, textSize, pointPosition;\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale.getLabels().length;\n  for (i = 0; i < valueCount; i++) {\n    const opts = scale.options.pointLabels.setContext(scale.getContext(i));\n    padding[i] = opts.padding;\n    pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    const plFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(opts.font);\n    scale.ctx.font = plFont.string;\n    textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = scale.getIndexAngle(i);\n    const angle = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Q */ \"r\"])(angleRadians);\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  scale._pointLabelItems = [];\n  const opts = scale.options;\n  const tickBackdropHeight = getTickBackdropHeight(opts);\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n  for (i = 0; i < valueCount; i++) {\n    const extra = (i === 0 ? tickBackdropHeight / 2 : 0);\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    const angle = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Q */ \"r\"])(scale.getIndexAngle(i));\n    const size = labelSizes[i];\n    adjustPointPositionForLabelHeight(angle, size, pointLabelPosition);\n    const textAlign = getTextAlignForAngle(angle);\n    let left;\n    if (textAlign === 'left') {\n      left = pointLabelPosition.x;\n    } else if (textAlign === 'center') {\n      left = pointLabelPosition.x - (size.w / 2);\n    } else {\n      left = pointLabelPosition.x - size.w;\n    }\n    const right = left + size.w;\n    scale._pointLabelItems[i] = {\n      x: pointLabelPosition.x,\n      y: pointLabelPosition.y,\n      textAlign,\n      left,\n      top: pointLabelPosition.y,\n      right,\n      bottom: pointLabelPosition.y + size.h,\n    };\n  }\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n  if (angle === 90 || angle === 270) {\n    position.y -= (textSize.h / 2);\n  } else if (angle > 270 || angle < 90) {\n    position.y -= textSize.h;\n  }\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getContext(i));\n    const plFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Db\"])(backdropColor)) {\n      const padding = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* C */ \"d\"])(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* V */ \"w\"])(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"]);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction numberOrZero(param) {\n  return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* w */ \"Qb\"])(param) ? param : 0;\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const me = this;\n    me.width = me.maxWidth;\n    me.height = me.maxHeight;\n    me.paddingTop = getTickBackdropHeight(me.options) / 2;\n    me.xCenter = Math.floor(me.width / 2);\n    me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n    me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(false);\n    me.min = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Ab\"])(min) && !isNaN(min) ? min : 0;\n    me.max = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Ab\"])(max) && !isNaN(max) ? max : 0;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\n    me._pointLabels = me.getLabels().map((value, index) => {\n      const label = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(me.options.pointLabels.callback, [value, index], me);\n      return label || label === 0 ? label : '';\n    });\n  }\n  fit() {\n    const me = this;\n    const opts = me.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(me);\n    } else {\n      me.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n    const me = this;\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n    let radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\n    radiusReductionRight = numberOrZero(radiusReductionRight);\n    radiusReductionTop = numberOrZero(radiusReductionTop);\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\n    me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(\n      Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n      Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n    me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    const me = this;\n    const maxRight = me.width - rightMovement - me.drawingArea;\n    const maxLeft = leftMovement + me.drawingArea;\n    const maxTop = topMovement + me.drawingArea;\n    const maxBottom = (me.height - me.paddingTop) - bottomMovement - me.drawingArea;\n    me.xCenter = Math.floor(((maxLeft + maxRight) / 2) + me.left);\n    me.yCenter = Math.floor(((maxTop + maxBottom) / 2) + me.top + me.paddingTop);\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"] / this.getLabels().length;\n    const startAngle = this.options.startAngle || 0;\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* as */ \"nb\"])(index * angleMultiplier + Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* t */ \"Nb\"])(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    const me = this;\n    if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Db\"])(value)) {\n      return NaN;\n    }\n    const scalingFactor = me.drawingArea / (me.max - me.min);\n    if (me.options.reverse) {\n      return (me.max - value) * scalingFactor;\n    }\n    return (value - me.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Db\"])(distance)) {\n      return NaN;\n    }\n    const me = this;\n    const scaledDistance = distance / (me.drawingArea / (me.max - me.min));\n    return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\n  }\n  getPointPosition(index, distanceFromCenter) {\n    const me = this;\n    const angle = me.getIndexAngle(index) - _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* H */ \"i\"];\n    return {\n      x: Math.cos(angle) * distanceFromCenter + me.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + me.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const me = this;\n    const {backgroundColor, grid: {circular}} = me.options;\n    if (backgroundColor) {\n      const ctx = me.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const {angleLines, grid} = opts;\n    const labelCount = me.getLabels().length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(me, labelCount);\n    }\n    if (grid.display) {\n      me.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = me.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(me.getContext(index - 1));\n          drawRadiusLine(me, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = me.getLabels().length - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(me.getContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\n        position = me.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(me.xCenter, me.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = me.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(me.xCenter, me.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    me.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(me.getContext(index));\n      const tickFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(optsAtIndex.font);\n      offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* C */ \"d\"])(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* V */ \"w\"])(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Db\"])(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Ab\"])(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* w */ \"Qb\"])(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aG */ \"T\"])(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a6 */ \"J\"])(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const me = this;\n    const options = me.options;\n    const adapter = me._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(me._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(me.getMinMax(false));\n      }\n    }\n    min = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Ab\"])(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Ab\"])(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    me.min = Math.min(min, max - 1);\n    me.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const me = this;\n    const options = me.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      me.min = me._userMin || timestamps[0];\n      me.max = me._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = me.min;\n    const max = me.max;\n    const ticks = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aF */ \"S\"])(timestamps, min, max);\n    me._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min))\n      : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\n    me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined\n      : determineMajorUnit(me._unit);\n    me.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(me, ticks, me._majorUnit);\n  }\n  initOffsets(timestamps) {\n    const me = this;\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (me.options.offset && timestamps.length) {\n      first = me.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* x */ \"Rb\"])(start, 0, limit);\n    end = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* x */ \"Rb\"])(end, 0, limit);\n    me._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const me = this;\n    const adapter = me._adapter;\n    const min = me.min;\n    const max = me.max;\n    const options = me.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\n    const stepSize = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"Pb\"])(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* w */ \"Qb\"])(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const adapter = me._adapter;\n    const timeOpts = me.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const me = this;\n    const options = me.options;\n    const formats = options.time.displayFormats;\n    const unit = me._unit;\n    const majorUnit = me._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(formatter, [label, index, ticks], me) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    const me = this;\n    return value === null ? NaN : (value - me.min) / (me.max - me.min);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return me.min + pos * (me.max - me.min);\n  }\n  _getLabelSize(label) {\n    const me = this;\n    const ticksOpts = me.options.ticks;\n    const tickLabelWidth = me.ctx.measureText(label).width;\n    const angle = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* t */ \"Nb\"])(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = me._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const me = this;\n    const timeOpts = me.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\n    const size = me._getLabelSize(exampleLabel);\n    const capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    const me = this;\n    let timestamps = me._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = me.getMatchingVisibleMetas();\n    if (me._normalized && metas.length) {\n      return (me._cache.data = metas[0].controller.getAllParsedValues(me));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\n    }\n    return (me._cache.data = me.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const me = this;\n    const timestamps = me._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = me.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(me, labels[i]));\n    }\n    return (me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps));\n  }\n  normalize(values) {\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* _ */ \"B\"])(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    prevSource = Math.floor(val);\n    nextSource = Math.ceil(val);\n    prevTarget = table[prevSource];\n    nextTarget = table[nextSource];\n  } else {\n    const result = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aG */ \"T\"])(table, val);\n    prevTarget = result.lo;\n    nextTarget = result.hi;\n    prevSource = table[prevTarget];\n    nextSource = table[nextTarget];\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._maxIndex = undefined;\n  }\n  initOffsets() {\n    const me = this;\n    const timestamps = me._getTimestampsForTable();\n    me._table = me.buildLookupTable(timestamps);\n    me._maxIndex = me._table.length - 1;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const me = this;\n    const {min, max} = me;\n    if (!timestamps.length) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    const items = [min];\n    let i, ilen, curr;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n    items.push(max);\n    return items;\n  }\n  _getTimestampsForTable() {\n    const me = this;\n    let timestamps = me._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = me.getDataTimestamps();\n    const label = me.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = me.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = me._cache.all = timestamps;\n    return timestamps;\n  }\n  getPixelForValue(value, index) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me._normalized && me._maxIndex > 0 && !Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Db\"])(index)\n      ? index / me._maxIndex : me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getDecimalForValue(value) {\n    return interpolate(this._table, value) / this._maxIndex;\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(me._table, decimal * this._maxIndex, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\n\n\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/home/runner/work/mapa-vacinacao-c19/mapa-vacinacao-c19/node_modules/chart.js/dist/chart.esm.js"],"names":[],"mappings":";;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACs3D;AAC1zD;;AAE5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,qEAAgB;AAClC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,QAAQ;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,eAAe,6EAAK;AACpB,2BAA2B,6EAAK;AAChC;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,4EAAO;AAChB,iBAAiB,4EAAO;AACxB;AACA;AACA,mBAAmB,qEAAO,gBAAgB,qEAAO;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,4EAAO;AACtB,iBAAiB,4EAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,SAAS;AAC9B,KAAK;AACL;AACA;AACA;AACA;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA,qEAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,qCAAqC,qEAAQ;AAC7C,qEAAQ;AACR;AACA;AACA;AACA,CAAC;AACD,qEAAQ;AACR;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH,CAAC;AACD,qEAAQ;AACR;AACA,CAAC;AACD,qEAAQ;AACR;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,6EAAQ;AACjB;AACA;AACA;AACA;AACA;AACA,WAAW,6EAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,6EAAO;AACd;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE;AACA;AACA;AACA,8BAA8B,QAAQ;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,YAAY,gCAAgC;AAC3F;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,6EAAQ;AACd;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,UAAU;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,UAAU;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,6EAAc,+CAA+C,6EAAI,YAAY,6EAAI;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,UAAU;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,cAAc,GAAG,cAAc,GAAG,wBAAwB;AACtE;AACA;AACA,SAAS,iCAAiC;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,yBAAyB;AAClC,qDAAqD;AACrD,SAAS,oCAAoC;AAC7C;AACA;AACA;AACA;AACA;AACA,iBAAiB,UAAU;AAC3B;AACA,WAAW,+BAA+B;AAC1C,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+EAA+E;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,6EAAc;AAC7C,+BAA+B,6EAAc;AAC7C,+BAA+B,6EAAc;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,6EAAmB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,6EAAQ;AAChB;AACA,KAAK;AACL;AACA,QAAQ,6EAAmB;AAC3B;AACA;AACA;AACA;AACA;AACA,QAAQ,6EAAiB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,+BAA+B;AAC1C,WAAW,iBAAiB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,UAAU,6EAAO;AACjB;AACA,OAAO,UAAU,6EAAQ;AACzB;AACA,OAAO;AACP;AACA;AACA;AACA,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,UAAU;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA;AACA,6BAA6B,UAAU;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,+BAA+B;AAC1C;AACA;AACA,6BAA6B,UAAU;AACvC;AACA;AACA;AACA,wBAAwB,6EAAgB;AACxC,wBAAwB,6EAAgB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,KAAK;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,UAAU;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD,mBAAmB;AACnB,WAAW,6BAA6B;AACxC;AACA;AACA;AACA;AACA;AACA,cAAc,6EAAc;AAC5B;AACA,eAAe,UAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,QAAQ;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,UAAU;AAC/C;AACA,UAAU,6EAAc;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,6EAAc;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,eAAe,mBAAmB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,6EAAO;AACrD;AACA;AACA;AACA;AACA;AACA,kCAAkC,YAAY;AAC9C;AACA,8BAA8B,qEAAQ;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,WAAW;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,UAAU;AACxC;AACA;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wCAAwC,UAAU;AAClD;AACA;AACA,wBAAwB,4EAAY;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,6EAAO;AACf;AACA;AACA;AACA;AACA,mCAAmC,UAAU;AAC7C;AACA;AACA;AACA;AACA,wCAAwC,UAAU;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,6EAAa;AACnB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,6EAAO;AACb;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,UAAU;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,+BAA+B;AAC1C;AACA;AACA;AACA;AACA,yCAAyC,UAAU;AACnD;AACA;AACA,uCAAuC,6EAAgB;AACvD,6BAA6B,6EAAgB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA,+BAA+B,6EAAa,yBAAyB,iBAAiB;AACtF;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,UAAU;AACzB;AACA;AACA;AACA;AACA;AACA,YAAY,6EAAa;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,UAAU;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,8BAA8B;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,6EAAI,YAAY,6EAAI;AAC7C;AACA;AACA;AACA;AACA,wBAAwB,6EAAa;AACrC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,6EAAc;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,6EAAQ;AACZ,UAAU,UAAU;AACpB;AACA;AACA;AACA;AACA,IAAI,6EAAU;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,+BAA+B;AAC1C;AACA;AACA,yCAAyC,UAAU;AACnD;AACA;AACA,wBAAwB,6EAAgB;AACxC,wBAAwB,6EAAgB;AACxC;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA,iCAAiC,QAAQ;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA;AACA;AACA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,WAAW,eAAe;AACzD;AACA;AACA;AACA;AACA;AACA,qBAAqB,6EAAc;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAsB,oEAAG;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,6EAAa;AAClD,qCAAqC,6EAAa;AAClD;AACA,yBAAyB,oEAAO;AAChC,yBAAyB,oEAAE;AAC3B,yBAAyB,oEAAE,GAAG,oEAAO;AACrC;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,UAAU;AACnD;AACA;AACA;AACA;AACA,WAAW,6EAAS;AACpB;AACA;AACA,WAAW,6EAAS;AACpB;AACA;AACA,cAAc,oEAAG;AACjB,eAAe,oEAAG;AAClB;AACA,mBAAmB,mCAAmC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA,4BAA4B,6EAAY;AACxC;AACA,WAAW,wBAAwB;AACnC,WAAW,iCAAiC;AAC5C;AACA;AACA;AACA,wBAAwB,6EAAW;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,oEAAG;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,qBAAqB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,oEAAG;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,6EAAY;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,UAAU;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,UAAU;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,UAAU;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,6EAAc;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,cAAc,6EAAO;AACrB;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,2CAA2C;AACtD;AACA,SAAS,aAAa;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,WAAW,yBAAyB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,6EAAQ;AACjC;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA,uBAAuB,6EAAa;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA,WAAW,iCAAiC;AAC5C;AACA,cAAc,6EAAW;AACzB,QAAQ,6EAAY;AACpB,0CAA0C,6EAAY;AACtD;AACA;AACA;AACA,cAAc,6EAAW;AACzB,QAAQ,6EAAY;AACpB,iCAAiC,6EAAY;AAC7C;AACA,KAAK;AACL;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,SAAS,6BAA6B;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,6EAAY;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,oEAAE;AAC/D;AACA;AACA;AACA,eAAe,WAAW;AAC1B;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,QAAQ,6EAAS;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mBAAmqB;AAC9B;AACA;AACA;AACA;AACA,yCAAyC,UAAU;AACnD,MAAM,YAAY;AAClB,uCAAuC,UAAU;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,0BAA0B;AACnC;AACA;AACA,iDAAiD,oEAAa,GAAG,qEAAY;AAC7E;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,yCAAyC,UAAU;AACnD,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,4EAAc;AACrB;AACA;AACA;AACA;AACA,kBAAkB,6BAA6B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,4EAAc;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,6BAA6B;AAC7C;AACA,KAAK;AACL,kBAAkB,6BAA6B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,6BAA6B;AAC/C;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,yCAAyC;AAClE;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC,sBAAsB,yCAAyC;AAC/D;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,0CAA0C,UAAU;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,oCAAoC,UAAU;AAC9C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,6EAAQ;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,UAAU;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,UAAU;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,oBAAoB,4EAAS;AAC7B;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAI;AACR;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,uCAAuC;AACvC,iCAAiC,4EAAS;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAI;AACR;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,4EAAY;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,4BAA4B,4EAAY;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,oEAA4B,IAAI,cAAc;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,KAAK,GAAG,6EAAqB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4EAAc;AAC5C;AACA;AACA,mBAAmB,4EAAc;AACjC;AACA,qBAAqB,6BAA6B;AAClD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH,8BAA8B,+BAA+B;AAC7D;AACA;AACA;AACA;AACA,8BAA8B,4EAAc;AAC5C;AACA;AACA;AACA;AACA;AACA,qBAAqB,+BAA+B;AACpD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH,+BAA+B,gBAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4EAAc;AAC5C;AACA;AACA;AACA,iBAAiB,4EAAS;AAC1B;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,4EAAS;AACzB;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,6EAAa;AACvB;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4EAAc;AACzB;AACA;AACA,sBAAsB,4EAAc;AACpC,2BAA2B,4EAAc;AACzC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,YAAY;AACZ;AACA;AACA,WAAW,6EAAQ,YAAY,6EAAQ;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,6EAAO;AAClB,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,4EAAK;AAC1B;AACA,qBAAqB;AACrB;AACA,WAAW,6EAAY;AACvB,GAAG;AACH;AACA;AACA;AACA;AACA,wDAAwD,4EAAK;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb,qEAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,qEAAQ;AACR,qEAAQ;AACR,qEAAQ;AACR,qEAAQ;AACR,qEAAQ;AACR;AACA;AACA;AACA,CAAC;AACD,qEAAQ;AACR;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,6EAAa;AAChD,2CAA2C,UAAU;AACrD;AACA;AACA,yCAAyC,6EAAa;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,4EAAU;AAC5B,4CAA4C,UAAU;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,UAAU;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,kBAAkB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,6EAAc;AAC9B,uBAAuB,6EAAc;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,SAAS;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,SAAS;AACrC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,SAAS;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,4EAAI;AACN;AACA;AACA;AACA;AACA,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,4EAAM;AACrB,kBAAkB,4EAAS;AAC3B,gBAAgB,6EAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,YAAY,4EAAkB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,yBAAyB;AAClC;AACA;AACA;AACA,aAAa,4EAAc;AAC3B;AACA;AACA,GAAG;AACH;AACA,aAAa,4EAAc;AAC3B,sCAAsC,oEAAO,GAAG,oEAAO;AACvD;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iDAAiD;AAC1D,eAAe,4EAAe;AAC9B,eAAe,4EAAe;AAC9B,oBAAoB,4EAAe;AACnC,oBAAoB,4EAAe;AACnC;AACA,WAAW,4EAAe;AAC1B,WAAW,4EAAe;AAC1B,kBAAkB,6EAAc;AAChC,kBAAkB,6EAAc;AAChC;AACA;AACA;AACA;AACA,SAAS,iCAAiC;AAC1C;AACA;AACA,cAAc;AACd;AACA;AACA,wCAAwC,UAAU;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4EAAe,MAAM,4EAAe;AAC/C,WAAW,4EAAe,MAAM,4EAAe;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAQ;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,4EAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAQ;AACZ;AACA;AACA,IAAI,4EAAQ;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAQ;AACZ;AACA;AACA;AACA;AACA,IAAI,4EAAQ;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAQ;AACZ;AACA;AACA;AACA;AACA;AACA,oCAAoC,UAAU;AAC9C;AACA,mBAAmB,4EAAQ;AAC3B;AACA,eAAe,UAAU;AACzB,UAAU,6EAAa;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAQ;AACZ;AACA;AACA,IAAI,4EAAQ;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,6EAAW;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,4EAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAQ;AACZ;AACA;AACA,IAAI,4EAAQ;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iBAAiB,mDAAmD;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,eAAe,6BAA6B;AAC5C;AACA,6BAA6B,6EAAS;AACtC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ,eAAe,WAAW;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAQ;AACZ;AACA;AACA,WAAW,eAAe;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,+BAA+B;AAC1C;AACA;AACA;AACA;AACA;AACA,eAAe,YAAY;AAC3B;AACA;AACA;AACA,0DAA0D,QAAQ;AAClE;AACA;AACA,WAAW,6EAAa,YAAY,6EAAO;AAC3C,gBAAgB,4EAAY;AAC5B;AACA,OAAO,UAAU,6EAAO;AACxB,wCAAwC,UAAU;AAClD;AACA,eAAe,6EAAa,kBAAkB,6EAAO;AACrD,oBAAoB,4EAAY;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,mDAAmD;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4EAAW,qBAAqB,4EAAW;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,6EAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,4EAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO,UAAU,6EAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO,UAAU,6EAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,4EAAW;AACpC;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,6BAA6B;AACxC;AACA;AACA,WAAW,mCAAmC;AAC9C;AACA;AACA;AACA,sBAAsB,6EAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO,UAAU,6EAAQ;AACzB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO,UAAU,6EAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,oCAAoC,UAAU;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,6EAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,6BAA6B,4EAAS;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,sBAAsB,6EAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,kBAAkB,6BAA6B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,KAAK;AACL,cAAc;AACd;AACA;AACA;AACA,WAAW,eAAe,gBAAgB,2BAA2B;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,UAAU;AAChD;AACA;AACA;AACA,aAAa,uBAAuB;AACpC,aAAa,uBAAuB;AACpC;AACA;AACA;AACA;AACA;AACA,aAAa,yBAAyB;AACtC,aAAa,yBAAyB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sBAAsB,MAAM;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4EAAW;AACtB,WAAW,4EAAW;AACtB;AACA,KAAK;AACL,WAAW,4EAAW;AACtB,WAAW,4EAAW;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,6EAAQ;AACd;AACA;AACA;AACA,oCAAoC,UAAU;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,4EAAU;AAChB;AACA;AACA,MAAM,6EAAU;AAChB;AACA;AACA;AACA,WAAW,eAAe,0BAA0B;AACpD;AACA;AACA;AACA,iBAAiB,4EAAM;AACvB,oBAAoB,4EAAS;AAC7B;AACA;AACA;AACA;AACA,UAAU,6EAAO;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA,WAAW,mCAAmC;AAC9C,IAAI,4EAAU;AACd;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,UAAU;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4EAAM;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,qEAAQ;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,qEAAQ;AAC/B,aAAa,qEAAQ;AACrB;AACA,eAAe,oEAAS;AACxB;AACA;AACA;AACA;AACA;AACA,uBAAuB,4EAAK;AAC5B,kBAAkB,qEAAQ,sBAAsB;AAChD,IAAI,qEAAQ;AACZ;AACA;AACA,EAAE,qEAAQ;AACV;AACA;AACA;AACA;AACA,IAAI,qEAAQ;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,qEAAQ;AACZ,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,QAAQ,4EAAI;AACZ;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA,wBAAwB,6EAAW;AACnC,IAAI,4EAAQ;AACZ;AACA,IAAI,4EAAQ;AACZ;AACA;AACA,mBAAmB,kCAAkC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,4EAAQ;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,6EAAa;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,6EAAc,6CAA6C;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,oBAAoB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,mDAAmD;AAC1G;;AAEA;AACA,0BAA0B,qEAAQ;AAClC,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,oEAAS,kBAAkB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,6EAAO,wBAAwB,KAAK;AACrD,GAAG;AACH;AACA;AACA;AACA,4BAA4B,oEAAS;AACrC;AACA;AACA;AACA;AACA;AACA,MAAM,6EAAO,eAAe,KAAK;AACjC,KAAK;AACL,GAAG;AACH;AACA;AACA,IAAI,6EAAO,SAAS,qEAAQ,qBAAqB,qEAAQ;AACzD,GAAG;AACH;AACA;AACA;AACA,wDAAwD;AACxD,oBAAoB,6EAAc,oBAAoB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,6EAAgB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,YAAY;AAChC;AACA;AACA;AACA;AACA,yBAAyB,YAAY,cAAc,WAAW;AAC9D;AACA;AACA,sBAAsB,YAAY,eAAe,WAAW;AAC5D,yBAAyB,WAAW;AACpC;AACA;AACA,sBAAsB,YAAY;AAClC;AACA;AACA;AACA;AACA;AACA,yBAAyB,YAAY,GAAG,YAAY;AACpD;AACA,oBAAoB,YAAY,YAAY,YAAY;AACxD,oBAAoB,YAAY;AAChC,oBAAoB,YAAY;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,KAAK,UAAU,GAAG;AAC3C;AACA,mBAAmB,GAAG;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,oEAAS,YAAY;AAClE,6CAA6C,qEAAQ;AACrD,6CAA6C,qEAAW;AACxD,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA;AACA,MAAM,oEAAS,YAAY;AAC3B,MAAM,qEAAQ,qBAAqB;AACnC,OAAO,KAAK;AACZ,MAAM,qEAAQ;AACd,MAAM,qEAAW;AACjB;AACA;AACA;AACA,oBAAoB;AACpB,WAAW,sBAAsB;AACjC;AACA;AACA;AACA,gBAAgB,6EAAU;AAC1B;AACA,gBAAgB,6EAAc;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,6EAAQ;AACnB,QAAQ,6EAAc;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,6EAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,0BAA0B,GAAG,6EAAY;AAClD;AACA,+BAA+B,6EAAU;AACzC,+BAA+B,6EAAO;AACtC;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,4EAAQ;AACV;AACA;AACA;AACA;AACA,EAAE,4EAAQ;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,6EAAG;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,6EAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU,iCAAiC,8BAA8B;AACpF,SAAS,6EAAa;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,MAAM,6EAAW;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAI,6EAAW;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,6EAAW;AACpB;AACA;AACA,gCAAgC,cAAc;AAC9C,IAAI,4EAAQ;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAI;AACR;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,IAAI;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,IAAI,4EAAI;AACR;AACA;AACA;AACA,wBAAwB,6EAAc;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL,IAAI,4EAAI;AACR;AACA;AACA;AACA,KAAK;AACL,IAAI,4EAAI;AACR;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,aAAa;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4BAA4B,UAAU;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,UAAU;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,eAAe,oCAAoC,GAAG,qEAAQ;AAC9D;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAI;AACR;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAI;AACR;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS,6EAAS;AAClB;AACA;AACA;AACA;AACA,0CAA0C,uBAAuB;AACjE;AACA;AACA;AACA;AACA;AACA,mDAAmD,UAAU;AAC7D,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,4EAAI;AACV;AACA,OAAO;AACP;AACA;AACA,qCAAqC,KAAK;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,iBAAiB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAI;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,kDAAkD,uBAAuB;AACzE;AACA;AACA,mDAAmD,UAAU;AAC7D,8CAA8C,gBAAgB;AAC9D;AACA,6CAA6C,KAAK;AAClD;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,iBAAiB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,4BAA4B,UAAU;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,iBAAiB;AACzD;AACA;AACA;AACA,eAAe,uCAAuC;AACtD;AACA;AACA;AACA,UAAU,mBAAmB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,UAAU;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,iBAAiB;AACjE;AACA;AACA;AACA,qCAAqC,QAAQ;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,6EAAQ;AACZ;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,IAAI,6EAAU;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,2BAA2B;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,QAAQ;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA,+CAA+C,UAAU;AACzD;AACA;AACA;AACA;AACA;AACA,MAAM,6EAAW;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAI;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAI;AACR;AACA,KAAK;AACL;AACA,IAAI,4EAAI;AACR;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,UAAU;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,qBAAqB,6EAAc;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,kCAAkC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,4EAAc;AACtB,MAAM,4EAAQ;AACd;AACA,QAAQ,4EAAQ;AAChB;AACA;AACA,eAAe,6EAAc;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,4EAAI;AACpC;AACA;AACA;AACA;AACA,WAAW,qEAAQ;AACnB,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,WAAW,oEAAS;AACpB,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,SAAS,kEAAkE;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,0CAA0C,oEAAO,eAAe,oEAAO;AACvE;AACA;AACA;AACA;AACA;AACA,SAAS,6EAAiB;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,6EAAW;AACtB;AACA;AACA;AACA;AACA,gBAAgB,6EAAW;AAC3B,cAAc,6EAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,yEAAyE;AAClF;AACA;AACA;AACA,8DAA8D,oEAAE;AAChE;AACA;AACA;AACA,SAAS,2CAA2C;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E,oEAAO;AACrF;AACA;AACA;AACA;AACA;AACA,uDAAuD,oEAAO;AAC9D;AACA;AACA;AACA;AACA,8FAA8F,oEAAO;AACrG;AACA;AACA;AACA;AACA;AACA,2DAA2D,oEAAO;AAClE;AACA;AACA;AACA;AACA;AACA,4CAA4C,oEAAG;AAC/C;AACA,mBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA;AACA,oEAAoE,oEAAG;AACvE;AACA;AACA;AACA;AACA;AACA,SAAS,wCAAwC;AACjD;AACA;AACA;AACA;AACA,4CAA4C,oEAAG;AAC/C;AACA;AACA;AACA,0BAA0B,oEAAG;AAC7B;AACA;AACA;AACA;AACA,0CAA0C,oEAAG;AAC7C,aAAa,yBAAyB;AACtC;AACA;AACA;AACA,sDAAsD,oEAAG;AACzD,aAAa,yBAAyB;AACtC;AACA;AACA;AACA;AACA,SAAS,QAAQ;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB,GAAG,6EAAiB,SAAS,qBAAqB;AAC7E,WAAW,8DAA8D;AACzE;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,oEAAG,IAAI,6EAAa;AAC/D;AACA;AACA;AACA;AACA,WAAW,qDAAqD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,oEAAG;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,oEAAE;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,6EAAc;AAC9B,kBAAkB,6EAAc;AAChC,uBAAuB,6EAAc;AACrC,iBAAiB,6EAAc;AAC/B,kBAAkB,6EAAc;AAChC,oBAAoB,6EAAc;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sEAAc;AACzB;AACA;AACA,WAAW,sEAAc;AACzB;AACA;AACA;AACA,8CAA8C;AAC9C;AACA,SAAS,mDAAmD;AAC5D,SAAS,qCAAqC;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,gBAAgB;AACzB,SAAS,yBAAyB;AAClC;AACA,OAAO,qBAAqB;AAC5B;AACA,aAAa,WAAW;AACxB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,mBAAmB;AAC5B,SAAS,qBAAqB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sEAAqB;AAChC;AACA;AACA,WAAW,sEAAoB;AAC/B;AACA,SAAS,sEAAY;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,kBAAkB;AAC3B;AACA;AACA;AACA;AACA,2CAA2C,8BAA8B;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,8EAA0B;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,8EAAgB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,8EAAc,MAAM,mCAAmC;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,UAAU;AACjD,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,8BAA8B;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS,cAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,8EAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS,0BAA0B;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,8EAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,mBAAmB;AAC5B;AACA,YAAY,8EAAa;AACzB;AACA;AACA,6CAA6C,6EAAQ;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,kDAAkD,sEAAkB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uBAAuB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uBAAuB;AAClC;AACA,uBAAuB,aAAa;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,WAAW,6EAAa,eAAe,6EAAa;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,YAAY;AACxD;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO;AAChB,SAAS,iCAAiC;AAC1C;AACA,YAAY,6EAAW,CAAC,6EAAY;AACpC;AACA;AACA,YAAY,6EAAW,CAAC,6EAAY;AACpC,GAAG;AACH;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA,UAAU,4EAAO;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB;AACA;AACA;AACA;AACA,UAAU,6EAAa;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,kBAAkB;AAC/E;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,6EAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,6EAAQ;AACd;AACA;AACA;AACA,MAAM,6EAAc;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,UAAU,OAAO;AAC1B;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG,UAAU,6EAAQ;AACrB;AACA,GAAG;AACH;AACA;AACA,MAAM,6EAAc;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,wBAAwB,eAAe,oEAAG;AAC1C;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,YAAY;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG,UAAU,6EAAQ;AACrB;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,mBAAmB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,cAAc;AACjC,mBAAmB,aAAa;AAChC,KAAK;AACL,mBAAmB,cAAc;AACjC,mBAAmB,aAAa;AAChC;AACA,GAAG;AACH;AACA;AACA;AACA,SAAS,0BAA0B;AACnC;AACA;AACA;AACA;AACA,sCAAsC,yBAAyB;AAC/D,iBAAiB,qBAAqB;AACtC;AACA,+BAA+B,kBAAkB;AACjD;AACA;AACA;AACA,0BAA0B,oBAAoB;AAC9C;AACA;AACA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,uBAAuB;AACxC;AACA,WAAW,mBAAmB;AAC9B;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,SAAS,kBAAkB;AAC3B,MAAM,6EAAc;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,6EAAO;AACb;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,6EAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,8EAAe;AAC3B,UAAU,8EAAe;AACzB;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,2BAA2B,8EAAc;AACzC;AACA;AACA,0BAA0B,8EAAa;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,YAAY;AACrB,SAAS,qBAAqB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,qCAAqC;AAC9C;AACA,cAAc,qCAAqC;AACnD,WAAW,QAAQ,wBAAwB,MAAM;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,uDAAuD,8BAA8B;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,wCAAwC;AACjD;AACA;AACA;AACA;AACA,gBAAgB,4CAA4C;AAC5D;AACA;AACA;AACA;AACA,cAAc,4CAA4C;AAC1D;AACA;AACA;AACA;AACA,SAAS,kBAAkB;AAC3B;AACA;AACA;AACA,SAAS,6BAA6B;AACtC;AACA,IAAI,6EAAQ;AACZ,iBAAiB,8CAA8C;AAC/D,IAAI,6EAAU;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,qCAAqC,QAAQ;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,qCAAqC,QAAQ;AAC7C;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO,0CAA0C;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,4EAAQ;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA,sBAAsB,4EAAM;AAC5B;AACA;AACA,WAAW,qBAAqB;AAChC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,yBAAyB,SAAS,UAAU;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,WAAW,0BAA0B,SAAS,UAAU;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,iDAAiD;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,KAAK;AACL;AACA,sBAAsB,iDAAiD;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,oCAAoC,gBAAgB,UAAU;AACzE;AACA;AACA,iBAAiB,4EAAc;AAC/B;AACA;AACA;AACA,iBAAiB,4EAAc;AAC/B;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,gBAAgB,4EAAc;AAC9B;AACA;AACA;AACA,gBAAgB,4EAAc;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,6EAAQ;AACd;AACA,MAAM,6EAAU;AAChB;AACA;AACA;AACA;AACA,WAAW,4CAA4C;AACvD,WAAW,yBAAyB;AACpC,yBAAyB,qEAAQ;AACjC,sBAAsB,8EAAa;AACnC,sBAAsB,4EAAM;AAC5B,WAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gCAAgC;AAC3C;AACA;AACA;AACA;AACA;AACA,wBAAwB,6EAAc;AACtC,sBAAsB,6EAAc;AACpC,oBAAoB,6EAAc;AAClC,2BAA2B,6EAAc;AACzC,qBAAqB,6EAAc;AACnC;AACA,wBAAwB,6EAAc;AACtC,sBAAsB,6EAAc;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,8EAAS;AACjB,OAAO;AACP;AACA;AACA,6BAA6B,8EAAa;AAC1C;AACA;AACA,UAAU,8EAAkB;AAC5B;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,4EAAU;AAChB;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW,4EAAc;AACzB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,WAAW,4EAAc;AACzB;AACA;AACA;AACA,IAAI,8EAAqB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,4EAAc;AACvC;AACA,OAAO;AACP;AACA;AACA,uBAAuB,4EAAc;AACrC;AACA;AACA;AACA,UAAU,8EAAM;AAChB;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL,IAAI,8EAAoB;AACxB;AACA;AACA;AACA;AACA;AACA,sBAAsB,4EAAM;AAC5B,yBAAyB,4EAAS;AAClC;AACA;AACA;AACA,sBAAsB,8EAAa;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,4EAAc;AAC3B,KAAK;AACL;AACA,uCAAuC,4EAAc;AACrD;AACA,cAAc,4EAAc;AAC5B,wCAAwC,4EAAkB;AAC1D;AACA;AACA;AACA;AACA,IAAI,4EAAU;AACd;AACA;AACA;AACA,sBAAsB,4EAAM;AAC5B,yBAAyB,4EAAS;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,4EAAQ;AAChB;AACA;AACA;AACA,QAAQ,4EAAQ;AAChB;AACA,KAAK;AACL,MAAM,4EAAQ;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,+BAA+B;AAC7E;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS,6CAA6C;AACrE;AACA;AACA,8BAA8B,4EAAS;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,6EAAO;AAC7B,kBAAkB,4EAAS;AAC3B,iCAAiC,4EAAM;AACvC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,kCAAkC;AAC7C;AACA;AACA;AACA;AACA,eAAe,4EAAc;AAC7B;AACA;AACA,KAAK;AACL;AACA;AACA,iBAAiB,4EAAc;AAC/B,mBAAmB,oEAAE;AACrB,OAAO;AACP;AACA,iBAAiB,4EAAc;AAC/B,mBAAmB,oEAAE;AACrB;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,4EAAM;AAC3B;AACA;AACA,WAAW,mCAAmC;AAC9C,IAAI,4EAAU;AACd;AACA;AACA;AACA,iBAAiB,4EAAkB;AACnC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,SAAS;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,SAAS;AAC5C;AACA;AACA;AACA,kBAAkB,8EAAqB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,6EAAO;AACf;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,6BAA6B;AACtC;AACA,SAAS,aAAa;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,oBAAoB;AAC7B,SAAS,oBAAoB;AAC7B,mBAAmB,4EAAM;AACzB,oBAAoB,4EAAM;AAC1B,qBAAqB,4EAAM;AAC3B;AACA;AACA;AACA,kBAAkB,4EAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,4EAAI;AACN;AACA,EAAE,4EAAI;AACN;AACA,EAAE,4EAAI;AACN,IAAI,4EAAI;AACR,IAAI,4EAAI;AACR,IAAI,4EAAI;AACR,GAAG;AACH;AACA;AACA,EAAE,4EAAI;AACN;AACA;AACA,UAAU;AACV;AACA;AACA,SAAS,UAAU;AACnB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,SAAS,SAAS;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,SAAS;AAClB,SAAS,+BAA+B,aAAa;AACrD;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAAS;AAChB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,OAAO,UAAU;AACjB;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,SAAS,sCAAsC;AAC/C,SAAS,eAAe;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA,OAAO,6EAAW;AAClB,OAAO,6EAAW;AAClB;AACA;AACA;AACA,kBAAkB,4EAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA,IAAI,4EAAI;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,SAAS;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAI;AACR;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,sCAAsC;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,wBAAwB;AACnC,WAAW,eAAe;AAC1B,WAAW,cAAc;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,8EAAa;AACrC;AACA;AACA;AACA,kBAAkB,4EAAM;AACxB;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,oBAAoB;AAC/B,qBAAqB,4EAAM;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,8EAAS;AACf;AACA;AACA,MAAM,8EAAS;AACf,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,8EAAa;AACxC;AACA;AACA;AACA,QAAQ,8EAAkB;AAC1B;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,QAAQ,8EAAkB;AAC1B;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,2DAA2D;AACtE,qBAAqB,4EAAM;AAC3B;AACA;AACA,sBAAsB,8EAAa;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAI;AACR;AACA;AACA;AACA,mCAAmC,UAAU;AAC7C;AACA;AACA;AACA,MAAM,4EAAI;AACV;AACA;AACA;AACA;AACA;AACA,sCAAsC,UAAU;AAChD;AACA;AACA;AACA,MAAM,4EAAI;AACV;AACA;AACA;AACA,IAAI,4EAAI;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,8EAAa;AACrC;AACA;AACA;AACA;AACA,mBAAmB,4EAAM;AACzB;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,KAAK;AAChB,WAAW,cAAc;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,4EAAS;AAC7B;AACA;AACA;AACA;AACA;AACA,MAAM,8EAAqB;AAC3B;AACA;AACA;AACA;AACA,MAAM,8EAAoB;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,qBAAqB,6EAAc;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,6EAAc;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wBAAwB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,uBAAuB;AAC1D;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,mBAAmB,sEAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,OAAO;AACP,kBAAkB,sEAAI;AACtB,kBAAkB,sEAAI;AACtB,mBAAmB,sEAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,6EAAa;AAC1B;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,kBAAkB,sEAAI;AACtB,iBAAiB,sEAAI;AACrB,oBAAoB,sEAAI;AACxB,cAAc,sEAAI;AAClB,mBAAmB,sEAAI;AACvB;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,6EAAW;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,6EAAa;AACrB;AACA;AACA;AACA;AACA,oCAAoC,6EAAc;AAClD;AACA;AACA;AACA;AACA,WAAW,uBAAuB;AAClC,SAAS,SAAS;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,cAAc;AACvC,kBAAkB,MAAM;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS,qEAAqE;AAC9E;AACA;AACA,SAAS,qBAAqB;AAC9B,sBAAsB,6EAAa;AACnC,sBAAsB,6EAAa;AACnC,wBAAwB,6EAAa;AACrC;AACA,gBAAgB,6EAAO;AACvB;AACA;AACA,aAAa,YAAY,GAAG,YAAY;AACxC;AACA;AACA;AACA,cAAc,6EAAO;AACrB;AACA,OAAO,6EAAa;AACpB;AACA;AACA;AACA;AACA;AACA,0CAA0C,6EAAW;AACrD;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,QAAQ,6EAAY;AACpB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,6EAAc;AAClB,IAAI,6EAAc;AAClB;AACA,wBAAwB,6EAAa;AACrC;AACA;AACA;AACA;AACA;AACA,kBAAkB,WAAW;AAC7B;AACA;AACA;AACA,UAAU,6EAAY;AACtB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,QAAQ,eAAe;AACvB,gBAAgB,6DAA6D;AAC7E;AACA;AACA,QAAQ,6EAAY;AACpB;AACA,KAAK;AACL,kBAAkB,WAAW;AAC7B;AACA,GAAG;AACH,gBAAgB,eAAe;AAC/B;AACA;AACA;AACA,+CAA+C,wBAAwB;AACvE,cAAc,6EAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,6EAAa;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,uBAAuB;AAClC,SAAS,SAAS;AAClB;AACA;AACA;AACA,sBAAsB,6EAAI;AAC1B,sBAAsB,6EAAI;AAC1B;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,wBAAwB;AACjC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,8EAAkB;AACxB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,6EAAY;AACvB;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,6EAAc;AAC3B,aAAa,6EAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,6EAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oDAAoD,4EAAK;AACzD;AACA;AACA;AACA,4BAA4B,4EAAK;AACjC;AACA;AACA,gBAAgB,4EAAe,gDAAgD,4EAAK;AACpF,uBAAuB,4EAAK;AAC5B;AACA;AACA;AACA,gBAAgB,wCAAwC;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,mBAAmB,4EAAe;AAClC,cAAc,yCAAyC;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,6EAAc;AACzB;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,6EAAc;AAC3B,aAAa,6EAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uBAAuB;AAClC;AACA;AACA;AACA;AACA,kDAAkD,4EAAK;AACvD;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,8EAAkB;AACxB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,6EAAY;AACnD;AACA;AACA;AACA;AACA;AACA,qBAAqB,4EAAK;AAC1B,qBAAqB,4EAAK,WAAW,4EAAK;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,4EAAK;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,4EAAS;AAC7B,WAAW,6EAAc,sCAAsC,qEAAQ;AACvE;AACA;AACA;AACA;AACA,MAAM,6EAAO;AACb;AACA,SAAS,6EAAY;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA,mBAAmB,4EAAM;AACzB;AACA;AACA;AACA;AACA,kBAAkB,4EAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,gBAAgB;AAC7B;AACA;AACA,kBAAkB,4EAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,SAAS,eAAe,aAAa;AACrC,8BAA8B,QAAQ;AACtC;AACA,mBAAmB,4EAAM;AACzB,WAAW,0CAA0C;AACrD,WAAW,cAAc;AACzB,SAAS,6EAAa;AACtB,sBAAsB,4EAAS;AAC/B;AACA;AACA;AACA,IAAI,4EAAU;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,IAAI;AACb;AACA,qDAAqD,oEAAG;AACxD,GAAG;AACH;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iBAAiB;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,6EAAQ;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,6EAAc;AAC3B,aAAa,6EAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,4EAAQ;AAC5B;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,oEAAG;AAC/B;AACA,WAAW,8EAAe,2BAA2B,6EAAS;AAC9D;AACA;AACA;AACA,QAAQ,6EAAa;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,6EAAa;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,oEAAO;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,yBAAyB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wBAAwB,UAAU;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,yCAAyC,QAAQ;AACjD;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4EAAM;AAC7B;AACA;AACA;AACA;AACA,wBAAwB,4EAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,4EAAU;AAChB;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,mCAAmC;AACnD,WAAW,oCAAoC;AAC/C,WAAW,qCAAqC;AAChD,SAAS,uCAAuC;AAChD,QAAQ,wCAAwC;AAChD,SAAS,yCAAyC;AAClD,UAAU,uCAAuC;AACjD,YAAY,uCAAuC;AACnD,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,6EAAa;AACnB;AACA;AACA;AACA,SAAS,0BAA0B;AACnC;AACA;AACA;AACA;AACA,OAAO,6EAAc;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,6EAAQ;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,cAAc;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,6BAA6B;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,UAAU;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,WAAW,OAAO,GAAG,6EAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA,IAAI,6EAAO;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iCAAiC;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,6EAAc;AACxB,UAAU,6EAAc;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,6EAAc;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,YAAY,6EAAW;AACvB,UAAU,6EAAW;AACrB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,6EAAc;AACnC;AACA,uBAAuB,6EAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,YAAY;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4EAAQ;AAC/B;AACA;AACA;AACA,oCAAoC,UAAU;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,6EAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,UAAU;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,UAAU;AAC/C;AACA;AACA;AACA;AACA;AACA,WAAW,4EAAY;AACvB;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,mBAAmB,6EAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA,SAAS,kBAAkB;AAC3B,SAAS;AACT;AACA;AACA;AACA;AACA,yCAAyC,UAAU;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,6EAAa;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEspB","file":"x","sourcesContent":["/*!\n * Chart.js v3.3.0\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, b as isArray, d as defaults, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as isNullOrUndef, k as clipArea, m as unclipArea, _ as _arrayUnique, t as toRadians, n as toPercentage, o as toDimension, T as TAU, p as formatNumber, q as _angleBetween, H as HALF_PI, P as PI, w as isNumber, x as _limitValue, y as _lookupByKey, z as getRelativePosition$1, A as _isPointInArea, B as _rlookupByKey, C as toPadding, D as each, E as getMaximumSize, F as _getParentNode, G as readUsedSize, I as throttled, J as supportsEventListenerOptions, K as log10, L as _factorize, M as finiteOrDefault, N as callback, O as _addGrace, Q as toDegrees, R as _measureText, S as _int16Range, U as _alignPixel, V as renderText, W as toFont, X as _toLeftRightCenter, Y as _alignStartEnd, Z as overrides, $ as merge, a0 as _capitalize, a1 as descriptors, a2 as isFunction, a3 as _attachContext, a4 as _createResolver, a5 as _descriptors, a6 as mergeIf, a7 as uid, a8 as debounce, a9 as retinaScale, aa as clearCanvas, ab as setsEqual, ac as _elementsEqual, ad as getAngleFromPoint, ae as _readValueToProps, af as _updateBezierControlPoints, ag as _computeSegments, ah as _boundSegments, ai as _steppedInterpolation, aj as _bezierInterpolation, ak as _pointInLine, al as _steppedLineTo, am as _bezierCurveTo, an as drawPoint, ao as addRoundedRectPath, ap as toTRBL, aq as toTRBLCorners, ar as _boundSegment, as as _normalizeAngle, at as getRtlAdapter, au as overrideTextDirection, av as _textX, aw as restoreTextDirection, ax as noop, ay as distanceBetweenPoints, az as _setMinAndMaxByKey, aA as niceNum, aB as almostWhole, aC as almostEquals, aD as _decimalPlaces, aE as _longestText, aF as _filterBetween, aG as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    const me = this;\n    if (me._request) {\n      return;\n    }\n    me._running = true;\n    me._request = requestAnimFrame.call(window, () => {\n      me._update();\n      me._request = null;\n      if (me._running) {\n        me._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    const me = this;\n    let remaining = 0;\n    me._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        me._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        me._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    me._lastDate = date;\n    if (remaining === 0) {\n      me._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    const me = this;\n    if (me._active) {\n      me._notify(false);\n      const currentValue = me._target[me._prop];\n      const elapsed = date - me._start;\n      const remain = me._duration - elapsed;\n      me._start = date;\n      me._duration = Math.floor(Math.max(remain, cfg.duration));\n      me._total += elapsed;\n      me._loop = !!cfg.loop;\n      me._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      me._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    const me = this;\n    if (me._active) {\n      me.tick(Date.now());\n      me._active = false;\n      me._notify(false);\n    }\n  }\n  tick(date) {\n    const me = this;\n    const elapsed = date - me._start;\n    const duration = me._duration;\n    const prop = me._prop;\n    const from = me._from;\n    const loop = me._loop;\n    const to = me._to;\n    let factor;\n    me._active = from !== to && (loop || (elapsed < duration));\n    if (!me._active) {\n      me._target[prop] = to;\n      me._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      me._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = me._easing(Math.min(1, Math.max(0, factor)));\n    me._target[prop] = me._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive) {\n  for (const meta of vScale.getMatchingVisibleMetas('bar').reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true);\n    stack._bottom = getLastIndexInStack(stack, vScale, false);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return Object.assign(Object.create(parent),\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[meta.vScale.id] === undefined || stacks[meta.vScale.id][meta.index] === undefined) {\n      return;\n    }\n    delete stacks[meta.vScale.id][meta.index];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    me.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = me.getScaleForId(xid);\n    meta.yScale = me.getScaleForId(yid);\n    meta.rScale = me.getScaleForId(rid);\n    meta.iScale = me.getScaleForId(iid);\n    meta.vScale = me.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const me = this;\n    const dataset = me.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = me._data;\n    if (isObject(data)) {\n      me._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, me);\n        const meta = me._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, me);\n      }\n      me._syncList = [];\n      me._data = data;\n    }\n  }\n  addElements() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me._dataCheck();\n    if (me.datasetElementType) {\n      meta.dataset = new me.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    let stackChanged = false;\n    me._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    me._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(me, meta._parsed);\n    }\n  }\n  configure() {\n    const me = this;\n    const config = me.chart.config;\n    const scopeKeys = config.datasetScopeKeys(me._type);\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\n    me.options = config.createResolver(scopes, me.getContext());\n    me._parsing = me.options.parsing;\n  }\n  parse(start, count) {\n    const me = this;\n    const {_cachedMeta: meta, _data: data} = me;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (me._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = me.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = me.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = me.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(me, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n      value = applyStack(stack, parsedValue, this._cachedMeta.index, {all: true});\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = me._getOtherScale(scale);\n    const stack = canStack && meta._stacked && {keys: getSortedDatasetIndices(me.chart, true), values: null};\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, value, parsed, otherValue;\n    function _skip() {\n      parsed = _parsed[i];\n      value = parsed[scale.axis];\n      otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      me.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        me.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me._cachedDataOpts = {};\n    me.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const me = this;\n    const ctx = me._ctx;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = me._drawStart || 0;\n    const count = me._drawCount || (elements.length - start);\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.active) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    let context;\n    if (index >= 0 && index < me._cachedMeta.data.length) {\n      const element = me._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(me.getContext(), index, element));\n      context.parsed = me.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = me.$context ||\n        (me.$context = createDatasetContext(me.chart.getContext(), me.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = me.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const me = this;\n    const active = mode === 'active';\n    const cache = me._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = me.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = me.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => me.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const me = this;\n    const chart = me.chart;\n    const cache = me._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = me.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\n      const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, me.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const me = this;\n    const data = me._data;\n    const elements = me._cachedMeta.data;\n    for (const [method, arg1, arg2] of me._syncList) {\n      me[method](arg1, arg2);\n    }\n    me._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (numData > numMeta) {\n      me._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      me._removeElements(numData, numMeta - numData);\n    }\n    if (count) {\n      me.parse(0, count);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new me.dataElementType();\n    }\n    if (me._parsing) {\n      move(meta._parsed);\n    }\n    me.parse(start, count);\n    if (resetNewElements) {\n      me.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const me = this;\n    const meta = me._cachedMeta;\n    if (me._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._syncList.push(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._syncList.push(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._syncList.push(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    this._syncList.push(['_removeElements', start, count]);\n    this._syncList.push(['_insertElements', start, arguments.length - 2]);\n  }\n  _onDataUnshift() {\n    this._syncList.push(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale) {\n  if (!scale._cache.$bar) {\n    const metas = scale.getMatchingVisibleMetas('bar');\n    let values = [];\n    for (let i = 0, ilen = metas.length; i < ilen; i++) {\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(scale) {\n  const values = getAllScaleValues(scale);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    const me = this;\n    me.enableOptionSharing = true;\n    super.initialize();\n    const meta = me._cachedMeta;\n    meta.stack = me.getDataset().stack;\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const vScale = me._cachedMeta.vScale;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = me._getRuler();\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = me.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : me._calculateBarValuePixels(i);\n      const ipixels = me._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (me.index === stack._top || me.index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : undefined,\n        width: horizontal ? undefined : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      me.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(me._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(iScale);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: me._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const me = this;\n    const {vScale, _stacked} = me._cachedMeta;\n    const {base: baseValue, minBarLength} = me.options;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n      size = size < 0 ? -minBarLength : minBarLength;\n      if (value === 0) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    const actualBase = baseValue || 0;\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = vScale.getLineWidthForValue(actualBase) / 2;\n      if (size > 0) {\n        base += halfGrid;\n        size -= halfGrid;\n      } else if (size < 0) {\n        base -= halfGrid;\n        size += halfGrid;\n      }\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const me = this;\n    const scale = ruler.scale;\n    const options = me.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? me._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    clipArea(chart.ctx, chart.chartArea);\n    for (; i < ilen; ++i) {\n      if (me.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(me._ctx);\n      }\n    }\n    unclipArea(chart.ctx);\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  interaction: {\n    mode: 'index'\n  },\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = [];\n    let i, ilen, item;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      item = data[i];\n      parsed.push({\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\n        _custom: item && item.r && +item.r\n      });\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const {data, _parsed} = this._cachedMeta;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = me.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const me = this;\n    const points = me._cachedMeta.data;\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {iScale, vScale} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && me.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = me.resolveDataElementOptions(i, mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      me.updateElement(point, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    let i, ilen;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      meta._parsed[i] = +data[i];\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    const me = this;\n    for (let i = 0; i < me.chart.data.datasets.length; ++i) {\n      if (me.chart.isDatasetVisible(i)) {\n        const controller = me.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const me = this;\n    const chart = me.chart;\n    const {chartArea} = chart;\n    const meta = me._cachedMeta;\n    const arcs = meta.data;\n    const spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs);\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(me.options.cutout, maxSize), 1);\n    const chartWeight = me._getRingWeight(me.index);\n    const {circumference, rotation} = me._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(me.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\n    me.offsetX = offsetX * outerRadius;\n    me.offsetY = offsetY * outerRadius;\n    meta.total = me.calculateTotal();\n    me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\n    me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\n    me.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const circumference = me._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null) {\n      return 0;\n    }\n    return me.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : me.innerRadius;\n    const outerRadius = animateScale ? 0 : me.outerRadius;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    let startAngle = me._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += me._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = me._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + me.offsetX,\n        y: centerY + me.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      startAngle += circumference;\n      me.updateElement(arc, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i)) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    const me = this;\n    let max = 0;\n    const chart = me.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          if (controller !== me) {\n            controller.configure();\n          }\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  indexAxis: 'r',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = me.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    me._drawStart = start;\n    me._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = me.resolveDatasetElementOptions(mode);\n    if (!me.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = me.options.segment;\n    me.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    me.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const spanGaps = me.options.spanGaps;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && me.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = me.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? me.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n      properties.parsed = parsed;\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      if (!directUpdate) {\n        me.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(me.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const me = this;\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    me.outerRadius = outerRadius - (radiusLength * me.index);\n    me.innerRadius = me.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const dataset = me.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = me._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / me.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += me._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + me._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: me.resolveDataElementOptions(i, mode)\n      };\n      me.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const me = this;\n    const vScale = me._cachedMeta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = me.resolveDatasetElementOptions(mode);\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      me.updateElement(line, undefined, properties, mode);\n    }\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    const scale = me._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = me.resolveDataElementOptions(i, mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      me.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  let items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos: box.position,\n      horizontal: box.isHorizontal(),\n      weight: box.weight\n    });\n  }\n  return layoutBoxes;\n}\nfunction setLayoutDims(layouts, params) {\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    if (layout.horizontal) {\n      layout.width = layout.box.fullSize && params.availableWidth;\n      layout.height = params.hBoxMaxHeight;\n    } else {\n      layout.width = params.vBoxMaxWidth;\n      layout.height = layout.box.fullSize && params.availableHeight;\n    }\n  }\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout) {\n  const box = layout.box;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(layout.pos)) {\n    if (layout.size) {\n      chartArea[layout.pos] -= layout.size;\n    }\n    layout.size = layout.horizontal ? box.height : box.width;\n    chartArea[layout.pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params) || changed;\n}\nfunction placeBoxes(boxes, chartArea, params) {\n  const userPadding = params.padding;\n  let x = chartArea.x;\n  let y = chartArea.y;\n  let i, ilen, layout, box;\n  for (i = 0, ilen = boxes.length; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    if (layout.horizontal) {\n      box.left = box.fullSize ? userPadding.left : chartArea.left;\n      box.right = box.fullSize ? params.outerWidth - userPadding.right : chartArea.left + chartArea.w;\n      box.top = y;\n      box.bottom = y + box.height;\n      box.width = box.right - box.left;\n      y = box.bottom;\n    } else {\n      box.left = x;\n      box.right = x + box.width;\n      box.top = box.fullSize ? userPadding.top : chartArea.top;\n      box.bottom = box.fullSize ? params.outerHeight - userPadding.right : chartArea.top + chartArea.h;\n      box.height = box.bottom - box.top;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params);\n    fitBoxes(verticalBoxes, chartArea, params);\n    if (fitBoxes(horizontalBoxes, chartArea, params)) {\n      fitBoxes(verticalBoxes, chartArea, params);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  const element = container || canvas;\n  const observer = new MutationObserver(entries => {\n    const parent = _getParentNode(element);\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.addedNodes.length; i++) {\n        const added = entry.addedNodes[i];\n        if (added === element || added === parent) {\n          listener(entry.target);\n        }\n      }\n    });\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const observer = new MutationObserver(entries => {\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.removedNodes.length; i++) {\n        if (entry.removedNodes[i] === canvas) {\n          listener();\n          break;\n        }\n      }\n    });\n  });\n  observer.observe(container, {childList: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && _getParentNode(container));\n  }\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const me = this;\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return me;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return Object.assign(Object.create(parent), {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return Object.assign(Object.create(parent), {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right} = scale;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    titleY = offsetFromEdge(scale, position, offset);\n    maxWidth = right - left;\n  } else {\n    titleX = offsetFromEdge(scale, position, offset);\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    const me = this;\n    me.options = options.setContext(me.getContext());\n    me.axis = options.axis;\n    me._userMin = me.parse(options.min);\n    me._userMax = me.parse(options.max);\n    me._suggestedMin = me.parse(options.suggestedMin);\n    me._suggestedMax = me.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    const me = this;\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = me.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(me, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    const me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    const sampleSize = tickOpts.sampleSize;\n    me.beforeUpdate();\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.ticks = null;\n    me._labelSizes = null;\n    me._gridLineItems = null;\n    me._labelItems = null;\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions();\n    me._maxLength = me.isHorizontal()\n      ? me.width + margins.left + margins.right\n      : me.height + margins.top + margins.bottom;\n    if (!me._dataLimitsCached) {\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits();\n      me._range = _addGrace(me, me.options.grace);\n      me._dataLimitsCached = true;\n    }\n    me.beforeBuildTicks();\n    me.ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    const samplingEnabled = sampleSize < me.ticks.length;\n    me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\n    me.configure();\n    me.beforeCalculateLabelRotation();\n    me.calculateLabelRotation();\n    me.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      me.ticks = autoSkip(me, me.ticks);\n      me._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      me._convertTicksToLabels(me.ticks);\n    }\n    me.beforeFit();\n    me.fit();\n    me.afterFit();\n    me.afterUpdate();\n  }\n  configure() {\n    const me = this;\n    let reversePixels = me.options.reverse;\n    let startPixel, endPixel;\n    if (me.isHorizontal()) {\n      startPixel = me.left;\n      endPixel = me.right;\n    } else {\n      startPixel = me.top;\n      endPixel = me.bottom;\n      reversePixels = !reversePixels;\n    }\n    me._startPixel = startPixel;\n    me._endPixel = endPixel;\n    me._reversePixels = reversePixels;\n    me._length = endPixel - startPixel;\n    me._alignToPixels = me.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    const me = this;\n    me.chart.notifyPlugins(name, me.getContext());\n    callback(me.options[name], [me]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], me);\n    }\n    for (i = 0; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const me = this;\n    const options = me.options;\n    const tickOpts = options.ticks;\n    const numTicks = me.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\n      me.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = me._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(me.chart.width - maxLabelWidth, 0, me.maxWidth);\n    tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = me.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(Math.min((labelSizes.highest.height + 6) / tickWidth, 1)),\n        Math.asin(Math.min(maxHeight / maxLabelDiagonal, 1)) - Math.asin(maxLabelHeight / maxLabelDiagonal)\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    me.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const me = this;\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = me;\n    const display = me._isVisible();\n    const isHorizontal = me.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = me.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = me.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && me.ticks.length) {\n        const {first, last, widest, highest} = me._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(me.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        me._calculatePadding(first, last, sin, cos);\n      }\n    }\n    me._handleMargins();\n    if (isHorizontal) {\n      me.width = me._length = chart.width - me._margins.left - me._margins.right;\n      me.height = minSize.height;\n    } else {\n      me.width = minSize.width;\n      me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const me = this;\n    const {ticks: {align, padding}, position} = me.options;\n    const isRotated = me.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && me.axis === 'x';\n    if (me.isHorizontal()) {\n      const offsetLeft = me.getPixelForTick(0) - me.left;\n      const offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\n      me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      me.paddingTop = paddingTop + padding;\n      me.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    const me = this;\n    if (me._margins) {\n      me._margins.left = Math.max(me.paddingLeft, me._margins.left);\n      me._margins.top = Math.max(me.paddingTop, me._margins.top);\n      me._margins.right = Math.max(me.paddingRight, me._margins.right);\n      me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    const me = this;\n    me.beforeTickToLabelConversion();\n    me.generateTickLabels(ticks);\n    me.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    const me = this;\n    let labelSizes = me._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = me.options.ticks.sampleSize;\n      let ticks = me.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    const me = this;\n    if (me._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = me._startPixel + decimal * me._length;\n    return _int16Range(me._alignToPixels ? _alignPixel(me.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const me = this;\n    const ticks = me.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(me.getContext(), index, tick));\n    }\n    return me.$context ||\n\t\t\t(me.$context = createScaleContext(me.chart.getContext(), me));\n  }\n  _tickSize() {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    const rot = toRadians(me.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = me._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return me.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const chart = me.chart;\n    const options = me.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(me.bottom);\n      ty1 = me.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(me.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = me.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(me.right);\n      tx1 = me.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(me.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = me.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    for (i = 0; i < ticksLength; ++i) {\n      const optsAtIndex = grid.setContext(me.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(me, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    me._ticksLength = ticksLength;\n    me._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const options = me.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(me.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = me.bottom - hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = me.top + hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = me.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = me._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = me._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(me.getContext(i));\n      pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\n      font = me._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const me = this;\n    const {position, ticks} = me.options;\n    const rotation = -toRadians(me.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const me = this;\n    const {position, ticks: {crossAlign, mirror, padding}} = me.options;\n    const labelSizes = me._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        textAlign = 'left';\n        x = me.right + padding;\n      } else {\n        x = me.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = me.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        textAlign = 'right';\n        x = me.left + padding;\n      } else {\n        x = me.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = me.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    const me = this;\n    if (me.options.ticks.mirror) {\n      return;\n    }\n    const chart = me.chart;\n    const position = me.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: me.left, bottom: chart.height, right: me.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: me.top, left: 0, bottom: me.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const me = this;\n    const grid = me.options.grid;\n    if (!me._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = me.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(me.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const me = this;\n    const grid = me.options.grid;\n    const ctx = me.ctx;\n    const items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const me = this;\n    const {chart, ctx, options: {grid}} = me;\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(me.getContext(0)).lineWidth;\n    const borderValue = me._borderValue;\n    let x1, x2, y1, y2;\n    if (me.isHorizontal()) {\n      x1 = _alignPixel(chart, me.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, me.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = me.ctx;\n    const area = me._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom') {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    const me = this;\n    if (!me._isVisible()) {\n      return;\n    }\n    me.drawBackground();\n    me.drawGrid(chartArea);\n    me.drawBorder();\n    me.drawTitle();\n    me.drawLabels(chartArea);\n  }\n  _layers() {\n    const me = this;\n    const opts = me.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = opts.grid && opts.grid.z || 0;\n    if (!me._isVisible() || me.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw(chartArea) {\n          me.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw(chartArea) {\n        me.drawBackground();\n        me.drawGrid(chartArea);\n        me.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw() {\n        me.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw(chartArea) {\n        me.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const me = this;\n    const metas = me.chart.getSortedVisibleDatasetMetas();\n    const axisID = me.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === me.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const me = this;\n    const fontSize = me._resolveTickFontOptions(0).lineHeight;\n    return (me.isHorizontal() ? me.width : me.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const me = this;\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = me.register(proto);\n    }\n    const items = me.items;\n    const id = item.id;\n    const scope = me.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (me.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    const me = this;\n    [...args].forEach(arg => {\n      const reg = typedRegistry || me._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === me.plugins && arg.id)) {\n        me._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || me._getRegistryForType(item);\n          me._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    const me = this;\n    if (hook === 'beforeInit') {\n      me._init = me._createDescriptors(chart, true);\n      me._notify(me._init, chart, 'install');\n    }\n    const descriptors = filter ? me._descriptors(chart).filter(filter) : me._descriptors(chart);\n    const result = me._notify(descriptors, chart, hook, args);\n    if (hook === 'destroy') {\n      me._notify(descriptors, chart, 'stop');\n      me._notify(me._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = [...scopes];\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    if ((isScriptable(prop) && isFunction(proxy[prop]))\n      || (isIndexable(prop) && isArray(proxy[prop]))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.3.0\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction getCanvas(item) {\n  if (isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nclass Chart {\n  constructor(item, config) {\n    const me = this;\n    this.config = config = new Config(config);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    this.platform = me._initializePlatform(initialCanvas, config);\n    const context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this.scale = undefined;\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(() => this.update('resize'), options.resizeDelay || 0);\n    instances[me.id] = me;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(me, 'complete', onAnimationsComplete);\n    animator.listen(me, 'progress', onAnimationProgress);\n    me._initialize();\n    if (me.attached) {\n      me.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    const me = this;\n    me.notifyPlugins('beforeInit');\n    if (me.options.responsive) {\n      me.resize();\n    } else {\n      retinaScale(me, me.options.devicePixelRatio);\n    }\n    me.bindEvents();\n    me.notifyPlugins('afterInit');\n    return me;\n  }\n  _initializePlatform(canvas, config) {\n    if (config.platform) {\n      return new config.platform();\n    } else if (!isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n      return new BasicPlatform();\n    }\n    return new DomPlatform();\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const me = this;\n    const options = me.options;\n    const canvas = me.canvas;\n    const aspectRatio = options.maintainAspectRatio && me.aspectRatio;\n    const newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\n    me.width = newSize.width;\n    me.height = newSize.height;\n    me._aspectRatio = me.aspectRatio;\n    if (!retinaScale(me, newRatio, true)) {\n      return;\n    }\n    me.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [me, newSize], me);\n    if (me.attached) {\n      if (me._doResize()) {\n        me.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const me = this;\n    const options = me.options;\n    const scaleOpts = options.scales;\n    const scales = me.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: me.ctx,\n          chart: me\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(me, scale, scale.options);\n      layouts.addBox(me, scale);\n    });\n  }\n  _updateMetasetIndex(meta, index) {\n    const metasets = this._metasets;\n    const oldIndex = meta.index;\n    if (oldIndex !== index) {\n      metasets[oldIndex] = metasets[index];\n      metasets[index] = meta;\n      meta.index = index;\n    }\n  }\n  _updateMetasets() {\n    const me = this;\n    const metasets = me._metasets;\n    const numData = me.data.datasets.length;\n    const numMeta = metasets.length;\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        me._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const me = this;\n    const {_metasets: metasets, data: {datasets}} = me;\n    if (metasets.length > datasets.length) {\n      delete me._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        me._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const me = this;\n    const newControllers = [];\n    const datasets = me.data.datasets;\n    let i, ilen;\n    me._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = me.getDatasetMeta(i);\n      const type = dataset.type || me.config.type;\n      if (meta.type && meta.type !== type) {\n        me._destroyDatasetMeta(i);\n        meta = me.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\n      meta.order = dataset.order || 0;\n      me._updateMetasetIndex(meta, i);\n      meta.label = '' + dataset.label;\n      meta.visible = me.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(me, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    me._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    const me = this;\n    each(me.data.datasets, (dataset, datasetIndex) => {\n      me.getDatasetMeta(datasetIndex).controller.reset();\n    }, me);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const me = this;\n    const config = me.config;\n    config.update();\n    me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    each(me.scales, (scale) => {\n      layouts.removeBox(me, scale);\n    });\n    const animsDisabled = me._animationsDisabled = !me.options.animation;\n    me.ensureScalesHaveIDs();\n    me.buildOrUpdateScales();\n    const existingEvents = new Set(Object.keys(me._listeners));\n    const newEvents = new Set(me.options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== me.options.responsive) {\n      me.unbindEvents();\n      me.bindEvents();\n    }\n    me._plugins.invalidate();\n    if (me.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = me.buildOrUpdateControllers();\n    me.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\n      const {controller} = me.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    me._minPadding = minPadding;\n    me._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    me._updateDatasets(mode);\n    me.notifyPlugins('afterUpdate', {mode});\n    me._layers.sort(compare2Level('z', '_idx'));\n    if (me._lastEvent) {\n      me._eventHandler(me._lastEvent, true);\n    }\n    me.render();\n  }\n  _updateLayout(minPadding) {\n    const me = this;\n    if (me.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(me, me.width, me.height, minPadding);\n    const area = me.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    me._layers = [];\n    each(me.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      me._layers.push(...box._layers());\n    }, me);\n    me._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    me.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    const me = this;\n    const isFunction = typeof mode === 'function';\n    if (me.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._updateDataset(i, isFunction ? mode({datasetIndex: i}) : mode);\n    }\n    me.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const me = this;\n    const meta = me.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    const me = this;\n    if (me.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(me)) {\n      if (me.attached && !animator.running(me)) {\n        animator.start(me);\n      }\n    } else {\n      me.draw();\n      onAnimationsComplete({chart: me});\n    }\n  }\n  draw() {\n    const me = this;\n    let i;\n    if (me._resizeBeforeDraw) {\n      const {width, height} = me._resizeBeforeDraw;\n      me._resize(width, height);\n      me._resizeBeforeDraw = null;\n    }\n    me.clear();\n    if (me.width <= 0 || me.height <= 0) {\n      return;\n    }\n    if (me.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = me._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const me = this;\n    const metasets = me._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    const me = this;\n    if (me.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = me.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      me._drawDataset(metasets[i]);\n    }\n    me.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const me = this;\n    const ctx = me.ctx;\n    const clip = meta._clip;\n    const area = me.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    clipArea(ctx, {\n      left: clip.left === false ? 0 : area.left - clip.left,\n      right: clip.right === false ? me.width : area.right + clip.right,\n      top: clip.top === false ? 0 : area.top - clip.top,\n      bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\n    });\n    meta.controller.draw();\n    unclipArea(ctx);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const me = this;\n    const dataset = me.data.datasets[datasetIndex];\n    const metasets = me._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = metasets[datasetIndex] = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = {chart: this, type: 'chart'});\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateDatasetVisibility(datasetIndex, visible) {\n    const me = this;\n    const mode = visible ? 'show' : 'hide';\n    const meta = me.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    me.setDatasetVisibility(datasetIndex, visible);\n    anims.update(meta, {visible});\n    me.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n  }\n  hide(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, false);\n  }\n  show(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const me = this;\n    const meta = me._metasets && me._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n      delete me._metasets[datasetIndex];\n    }\n  }\n  destroy() {\n    const me = this;\n    const {canvas, ctx} = me;\n    let i, ilen;\n    me.stop();\n    animator.remove(me);\n    for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._destroyDatasetMeta(i);\n    }\n    me.config.clearCache();\n    if (canvas) {\n      me.unbindEvents();\n      clearCanvas(canvas, ctx);\n      me.platform.releaseContext(ctx);\n      me.canvas = null;\n      me.ctx = null;\n    }\n    me.notifyPlugins('destroy');\n    delete instances[me.id];\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = function(e, x, y) {\n      e.offsetX = x;\n      e.offsetY = y;\n      me._eventHandler(e);\n    };\n    each(me.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    const me = this;\n    if (!me._responsiveListeners) {\n      me._responsiveListeners = {};\n    }\n    const listeners = me._responsiveListeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(me, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (me.canvas) {\n        me.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      me.attached = true;\n      me.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      me.attached = false;\n      _remove('resize', listener);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(me.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    const me = this;\n    each(me._listeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._listeners = {};\n    each(me._responsiveListeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const me = this;\n    const lastActive = me._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const me = this;\n    const hoverOptions = me.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      me.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      me.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const me = this;\n    const args = {event: e, replay, cancelable: true};\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.type);\n    if (me.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = me._handleEvent(e, replay);\n    args.cancelable = false;\n    me.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      me.render();\n    }\n    return me;\n  }\n  _handleEvent(e, replay) {\n    const me = this;\n    const {_active: lastActive = [], options} = me;\n    const hoverOptions = options.hover;\n    const useFinalPosition = replay;\n    let active = [];\n    let changed = false;\n    let lastEvent = null;\n    if (e.type !== 'mouseout') {\n      active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n      lastEvent = e.type === 'click' ? me._lastEvent : e;\n    }\n    me._lastEvent = null;\n    if (_isPointInArea(e, me.chartArea, me._minPadding)) {\n      callback(options.onHover, [e, active, me], me);\n      if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n        callback(options.onClick, [e, active, me], me);\n      }\n    }\n    changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive, replay);\n    }\n    me._lastEvent = lastEvent;\n    return changed;\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element) {\n  const {startAngle, endAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset) {\n  const {x, y, startAngle: start, endAngle: end, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + offset + pixelMargin : 0;\n  const alpha = end - start;\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset;\n  const endAngle = end - angleOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset) {\n  if (element.fullCircles) {\n    element.endAngle = element.startAngle + TAU;\n    pathArc(ctx, element, offset);\n    for (let i = 0; i < element.fullCircles; ++i) {\n      ctx.fill();\n    }\n  }\n  if (!isNaN(element.circumference)) {\n    element.endAngle = element.startAngle + element.circumference % TAU;\n  }\n  pathArc(ctx, element, offset);\n  ctx.fill();\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, endAngle, pixelMargin} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    element.endAngle = element.startAngle + TAU;\n    clipArc(ctx, element);\n    element.endAngle = endAngle;\n    if (element.endAngle === element.startAngle) {\n      element.endAngle += TAU;\n      element.fullCircles--;\n    }\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < element.fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < element.fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset) {\n  const {options} = element;\n  const inner = options.borderAlign === 'inner';\n  if (!options.borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element);\n  }\n  pathArc(ctx, element, offset);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = (distance >= innerRadius && distance <= outerRadius);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options;\n    const offset = (options.offset || 0) / 2;\n    me.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    me.fullCircles = Math.floor(me.circumference / TAU);\n    if (me.circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (me.startAngle + me.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (me.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    drawArc(ctx, me, radiusOffset);\n    drawBorder(ctx, me, radiusOffset);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && line.segments.length === 1) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const me = this;\n    const options = me.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !me._pointsUpdated) {\n      const loop = options.spanGaps ? me._loop : me._fullLoop;\n      _updateBezierControlPoints(me._points, options, chartArea, loop, indexAxis);\n      me._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    const me = this;\n    me._points = points;\n    delete me._segments;\n    delete me._path;\n    me._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const me = this;\n    const options = me.options;\n    const value = point[property];\n    const points = me.points;\n    const segments = _boundSegments(me, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const me = this;\n    const segments = me.segments;\n    const segmentMethod = _getSegmentMethod(me);\n    let loop = me._loop;\n    start = start || 0;\n    count = count || (me.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, me, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const me = this;\n    const options = me.options || {};\n    const points = me.points || [];\n    if (!points.length || !options.borderWidth) {\n      return;\n    }\n    ctx.save();\n    draw(ctx, me, start, count);\n    ctx.restore();\n    if (me.animated) {\n      me._pointsUpdated = false;\n      me._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options;\n    if (me.skip || options.radius < 0.1) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, me.x, me.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction parseBorderSkipped(bar) {\n  let edge = bar.options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    return res;\n  }\n  edge = bar.horizontal\n    ? parseEdge(edge, 'left', 'right', bar.base > bar.x)\n    : parseEdge(edge, 'bottom', 'top', bar.base < bar.y);\n  res[edge] = true;\n  return res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : Math.max(Math.min(value, max), min);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = parseBorderSkipped(bar);\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = parseBorderSkipped(bar);\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const options = this.options;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, outer);\n      ctx.clip();\n      addRectPath(ctx, inner);\n      ctx.fillStyle = options.borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inner);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  enableBorderRadius: true,\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      if (count <= 4 * availableWidth) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach((segment) => {\n    const first = linePoints[segment.start];\n    const last = linePoints[segment.end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {chart, scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(chart, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nconst isLineAndNotInHideAnimation = (meta) => meta.type === 'line' && !meta.hidden;\nfunction getLinesBelow(chart, index) {\n  const below = [];\n  const metas = chart.getSortedVisibleDatasetMetas();\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (isLineAndNotInHideAnimation(meta)) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    const bounds = getBounds(property, points[segment.start], points[segment.end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[segment.start],\n        end: points[segment.end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      interpolatedLineTo(ctx, target, end, property);\n    }\n    const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n    const loop = lineLoop && targetLoop;\n    if (!loop) {\n      interpolatedLineTo(ctx, target, start, property);\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins;\n    me.setDimensions();\n    me.buildLabels();\n    me.fit();\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n  }\n  buildLabels() {\n    const me = this;\n    const labelOpts = me.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [me.chart], me) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, me.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, me.chart.data));\n    }\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n    me.legendItems = legendItems;\n  }\n  fit() {\n    const me = this;\n    const {options, ctx} = me;\n    if (!options.display) {\n      me.width = me.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = me._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (me.isHorizontal()) {\n      width = me.maxWidth;\n      height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = me.maxHeight;\n      width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    me.width = Math.min(width, options.maxWidth || me.maxWidth);\n    me.height = Math.min(height, options.maxHeight || me.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxWidth, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const lineWidths = me.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxHeight, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const columnSizes = me.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let top = 0;\n    let col = 0;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + fontSize + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        top = 0;\n        currentColWidth = currentColHeight = 0;\n      }\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += fontSize + padding;\n      hitboxes[i] = {left, top, col, width: itemWidth, height: itemHeight};\n      top += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    const me = this;\n    if (!me.options.display) {\n      return;\n    }\n    const titleHeight = me._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}}} = me;\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n        }\n        hitbox.top += me.top + titleHeight + padding;\n        hitbox.left = left;\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += me.left + padding;\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    const me = this;\n    if (me.options.display) {\n      const ctx = me.ctx;\n      clipArea(ctx, me);\n      me._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const me = this;\n    const {options: opts, columnSizes, lineWidths, ctx} = me;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    me.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: legendItem.textAlign\n      });\n    };\n    const isHorizontal = me.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, me.left + padding, me.right - lineWidths[0]),\n        y: me.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: me.left + padding,\n        y: _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(me.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    me.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + (fontSize / 2) + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(me.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > me.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, me.left + padding, me.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > me.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, me.right);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(me.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const me = this;\n    const opts = me.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const ctx = me.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = me.left;\n    let maxWidth = me.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...me.lineWidths);\n      y = me.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, me.right - maxWidth);\n    } else {\n      const maxHeight = me.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    const me = this;\n    let i, hitBox, lh;\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      lh = me.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          return me.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const me = this;\n    const opts = me.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = me._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = me._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, me], me);\n      }\n      me._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, me], me);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, me], me);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const me = this;\n    const opts = me.options;\n    me.left = 0;\n    me.top = 0;\n    if (!opts.display) {\n      me.width = me.height = me.right = me.bottom = 0;\n      return;\n    }\n    me.width = me.right = maxWidth;\n    me.height = me.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    me._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + me._padding.height;\n    if (me.isHorizontal()) {\n      me.height = textSize;\n    } else {\n      me.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + me._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = me._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip._chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const radiusAndPadding = cornerRadius + caretPadding;\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return Object.assign(Object.create(parent), {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._chart = config._chart;\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const me = this;\n    const cached = me._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = me._chart;\n    const options = me.options.setContext(me.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(me._chart, opts);\n    if (opts._cacheable) {\n      me._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    const me = this;\n    return me.$context ||\n\t\t\t(me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\n  }\n  getTitle(context, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(me, [context]);\n    const title = callbacks.title.apply(me, [context]);\n    const afterTitle = callbacks.afterTitle.apply(me, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\n    const footer = callbacks.footer.apply(me, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const me = this;\n    const active = me._active;\n    const data = me._chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(me._chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(me, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(me, context));\n      labelTextColors.push(scoped.labelTextColor.call(me, context));\n    });\n    me.labelColors = labelColors;\n    me.labelPointStyles = labelPointStyles;\n    me.labelTextColors = labelTextColors;\n    me.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    const active = me._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (me.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(me, active, me._eventPosition);\n      tooltipItems = me._createItems(options);\n      me.title = me.getTitle(tooltipItems, options);\n      me.beforeBody = me.getBeforeBody(tooltipItems, options);\n      me.body = me.getBody(tooltipItems, options);\n      me.afterBody = me.getAfterBody(tooltipItems, options);\n      me.footer = me.getFooter(tooltipItems, options);\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(me._chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\n      me.xAlign = alignment.xAlign;\n      me.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    me._tooltipItems = tooltipItems;\n    me.$context = undefined;\n    if (properties) {\n      me._resolveAnimations().update(me, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(me, {chart: me._chart, tooltip: me, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {cornerRadius, caretSize} = options;\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const me = this;\n    const title = me.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const me = this;\n    const labelColors = me.labelColors[i];\n    const labelPointStyle = me.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(me, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = me.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const me = this;\n    const {body} = me;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(me, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(me.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + 1) : (boxWidth + 2)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = me.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        me._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(me.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const me = this;\n    const footer = me.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const radius = options.cornerRadius;\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const me = this;\n    const chart = me._chart;\n    const anims = me.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(me, me._active, me._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, me._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        me.xAlign = alignment.xAlign;\n        me.yAlign = alignment.yAlign;\n        me.width = size.width;\n        me.height = size.height;\n        me.caretX = position.x;\n        me.caretY = position.y;\n        me._resolveAnimations().update(me, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    let opacity = me.opacity;\n    if (!opacity) {\n      return;\n    }\n    me._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: me.width,\n      height: me.height\n    };\n    const pt = {\n      x: me.x,\n      y: me.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      me.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      me.drawTitle(pt, ctx, options);\n      me.drawBody(pt, ctx, options);\n      me.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const me = this;\n    const lastActive = me._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me._chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = me._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      me._active = active;\n      me._eventPosition = eventPosition;\n      me.update(true);\n    }\n  }\n  handleEvent(e, replay) {\n    const me = this;\n    const options = me.options;\n    const lastActive = me._active || [];\n    let changed = false;\n    let active = [];\n    if (e.type !== 'mouseout') {\n      active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n    }\n    const positionChanged = me._positionChanged(active, e);\n    changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      me._active = active;\n      if (options.enabled || options.external) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({_chart: chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index) => typeof raw === 'string'\n  ? labels.push(raw) - 1\n  : isNaN(raw) ? null : index;\nfunction findOrAddLabel(labels, raw, index) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me.getMinMax(true);\n    if (me.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = me.getLabels().length - 1;\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const min = me.min;\n    const max = me.max;\n    const offset = me.options.offset;\n    const ticks = [];\n    let labels = me.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    me._startValue = me.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const labels = me.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    const me = this;\n    super.configure();\n    if (!me.isHorizontal()) {\n      me._reversePixels = !me._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (typeof value !== 'number') {\n      value = me.parse(value);\n    }\n    return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\n  }\n  getPixelForTick(index) {\n    const me = this;\n    const ticks = me.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return me.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  niceMin = Math.floor(rmin / spacing) * spacing;\n  niceMax = Math.ceil(rmax / spacing) * spacing;\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.min((max - min) / spacing, maxTicks);\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin),\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {beginAtZero} = me.options;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      setMax(max + 1);\n      if (!beginAtZero) {\n        setMin(min - 1);\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  getTickLimit() {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n    } else {\n      maxTicks = me.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = me.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: me._maxDigits(),\n      horizontal: me.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = me._range || me;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const me = this;\n    const ticks = me.ticks;\n    let start = me.min;\n    let end = me.max;\n    super.configure();\n    if (me.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    me._startValue = start;\n    me._endValue = end;\n    me._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? min : 0;\n    me.max = isNumberFinite(max) ? max : 1;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const me = this;\n    const horizontal = me.isHorizontal();\n    const length = horizontal ? me.width : me.height;\n    const minRotation = toRadians(me.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = me._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    me.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (me.options.beginAtZero) {\n      me._zero = true;\n    }\n    me.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let min = me.min;\n    let max = me.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const generationOptions = {\n      min: me._userMin,\n      max: me._userMax\n    };\n    const ticks = generateTicks(generationOptions, me);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\n  }\n  configure() {\n    const me = this;\n    const start = me.min;\n    super.configure();\n    me._startValue = log10(start);\n    me._valueRange = log10(me.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (value === undefined || value === 0) {\n      value = me.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return me.getPixelForDecimal(value === me.min\n      ? 0\n      : (log10(value) - me._startValue) / me._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const decimal = me.getDecimalForPixel(pixel);\n    return Math.pow(10, me._startValue + decimal * me._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, lineHeight, label) {\n  if (isArray(label)) {\n    return {\n      w: _longestText(ctx, ctx.font, label),\n      h: label.length * lineHeight\n    };\n  }\n  return {\n    w: ctx.measureText(label).width,\n    h: lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  const furthestAngles = {};\n  let i, textSize, pointPosition;\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale.getLabels().length;\n  for (i = 0; i < valueCount; i++) {\n    const opts = scale.options.pointLabels.setContext(scale.getContext(i));\n    padding[i] = opts.padding;\n    pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    const plFont = toFont(opts.font);\n    scale.ctx.font = plFont.string;\n    textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = scale.getIndexAngle(i);\n    const angle = toDegrees(angleRadians);\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  scale._pointLabelItems = [];\n  const opts = scale.options;\n  const tickBackdropHeight = getTickBackdropHeight(opts);\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n  for (i = 0; i < valueCount; i++) {\n    const extra = (i === 0 ? tickBackdropHeight / 2 : 0);\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    const angle = toDegrees(scale.getIndexAngle(i));\n    const size = labelSizes[i];\n    adjustPointPositionForLabelHeight(angle, size, pointLabelPosition);\n    const textAlign = getTextAlignForAngle(angle);\n    let left;\n    if (textAlign === 'left') {\n      left = pointLabelPosition.x;\n    } else if (textAlign === 'center') {\n      left = pointLabelPosition.x - (size.w / 2);\n    } else {\n      left = pointLabelPosition.x - size.w;\n    }\n    const right = left + size.w;\n    scale._pointLabelItems[i] = {\n      x: pointLabelPosition.x,\n      y: pointLabelPosition.y,\n      textAlign,\n      left,\n      top: pointLabelPosition.y,\n      right,\n      bottom: pointLabelPosition.y + size.h,\n    };\n  }\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n  if (angle === 90 || angle === 270) {\n    position.y -= (textSize.h / 2);\n  } else if (angle > 270 || angle < 90) {\n    position.y -= textSize.h;\n  }\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const me = this;\n    me.width = me.maxWidth;\n    me.height = me.maxHeight;\n    me.paddingTop = getTickBackdropHeight(me.options) / 2;\n    me.xCenter = Math.floor(me.width / 2);\n    me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n    me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(false);\n    me.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    me.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\n    me._pointLabels = me.getLabels().map((value, index) => {\n      const label = callback(me.options.pointLabels.callback, [value, index], me);\n      return label || label === 0 ? label : '';\n    });\n  }\n  fit() {\n    const me = this;\n    const opts = me.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(me);\n    } else {\n      me.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n    const me = this;\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n    let radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\n    radiusReductionRight = numberOrZero(radiusReductionRight);\n    radiusReductionTop = numberOrZero(radiusReductionTop);\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\n    me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(\n      Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n      Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n    me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    const me = this;\n    const maxRight = me.width - rightMovement - me.drawingArea;\n    const maxLeft = leftMovement + me.drawingArea;\n    const maxTop = topMovement + me.drawingArea;\n    const maxBottom = (me.height - me.paddingTop) - bottomMovement - me.drawingArea;\n    me.xCenter = Math.floor(((maxLeft + maxRight) / 2) + me.left);\n    me.yCenter = Math.floor(((maxTop + maxBottom) / 2) + me.top + me.paddingTop);\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / this.getLabels().length;\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    const me = this;\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = me.drawingArea / (me.max - me.min);\n    if (me.options.reverse) {\n      return (me.max - value) * scalingFactor;\n    }\n    return (value - me.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const me = this;\n    const scaledDistance = distance / (me.drawingArea / (me.max - me.min));\n    return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\n  }\n  getPointPosition(index, distanceFromCenter) {\n    const me = this;\n    const angle = me.getIndexAngle(index) - HALF_PI;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + me.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + me.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const me = this;\n    const {backgroundColor, grid: {circular}} = me.options;\n    if (backgroundColor) {\n      const ctx = me.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const {angleLines, grid} = opts;\n    const labelCount = me.getLabels().length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(me, labelCount);\n    }\n    if (grid.display) {\n      me.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = me.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(me.getContext(index - 1));\n          drawRadiusLine(me, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = me.getLabels().length - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(me.getContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\n        position = me.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(me.xCenter, me.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = me.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(me.xCenter, me.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    me.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(me.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const me = this;\n    const options = me.options;\n    const adapter = me._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(me._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(me.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    me.min = Math.min(min, max - 1);\n    me.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const me = this;\n    const options = me.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      me.min = me._userMin || timestamps[0];\n      me.max = me._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = me.min;\n    const max = me.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    me._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min))\n      : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\n    me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined\n      : determineMajorUnit(me._unit);\n    me.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(me, ticks, me._majorUnit);\n  }\n  initOffsets(timestamps) {\n    const me = this;\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (me.options.offset && timestamps.length) {\n      first = me.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    me._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const me = this;\n    const adapter = me._adapter;\n    const min = me.min;\n    const max = me.max;\n    const options = me.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const adapter = me._adapter;\n    const timeOpts = me.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const me = this;\n    const options = me.options;\n    const formats = options.time.displayFormats;\n    const unit = me._unit;\n    const majorUnit = me._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], me) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    const me = this;\n    return value === null ? NaN : (value - me.min) / (me.max - me.min);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return me.min + pos * (me.max - me.min);\n  }\n  _getLabelSize(label) {\n    const me = this;\n    const ticksOpts = me.options.ticks;\n    const tickLabelWidth = me.ctx.measureText(label).width;\n    const angle = toRadians(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = me._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const me = this;\n    const timeOpts = me.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\n    const size = me._getLabelSize(exampleLabel);\n    const capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    const me = this;\n    let timestamps = me._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = me.getMatchingVisibleMetas();\n    if (me._normalized && metas.length) {\n      return (me._cache.data = metas[0].controller.getAllParsedValues(me));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\n    }\n    return (me._cache.data = me.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const me = this;\n    const timestamps = me._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = me.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(me, labels[i]));\n    }\n    return (me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    prevSource = Math.floor(val);\n    nextSource = Math.ceil(val);\n    prevTarget = table[prevSource];\n    nextTarget = table[nextSource];\n  } else {\n    const result = _lookup(table, val);\n    prevTarget = result.lo;\n    nextTarget = result.hi;\n    prevSource = table[prevTarget];\n    nextSource = table[nextTarget];\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._maxIndex = undefined;\n  }\n  initOffsets() {\n    const me = this;\n    const timestamps = me._getTimestampsForTable();\n    me._table = me.buildLookupTable(timestamps);\n    me._maxIndex = me._table.length - 1;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const me = this;\n    const {min, max} = me;\n    if (!timestamps.length) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    const items = [min];\n    let i, ilen, curr;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n    items.push(max);\n    return items;\n  }\n  _getTimestampsForTable() {\n    const me = this;\n    let timestamps = me._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = me.getDataTimestamps();\n    const label = me.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = me.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = me._cache.all = timestamps;\n    return timestamps;\n  }\n  getPixelForValue(value, index) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me._normalized && me._maxIndex > 0 && !isNullOrUndef(index)\n      ? index / me._maxIndex : me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getDecimalForValue(value) {\n    return interpolate(this._table, value) / this._maxIndex;\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(me._table, decimal * this._maxIndex, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n"]}}