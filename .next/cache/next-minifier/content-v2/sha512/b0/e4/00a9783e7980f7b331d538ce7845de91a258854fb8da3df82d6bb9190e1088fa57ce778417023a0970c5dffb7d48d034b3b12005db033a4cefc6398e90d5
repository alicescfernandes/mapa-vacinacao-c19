{"code":"(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[5],{m0r1:function(t,e,i){\"use strict\";i.r(e),i.d(e,\"Animation\",(function(){return r})),i.d(e,\"Animations\",(function(){return c})),i.d(e,\"ArcElement\",(function(){return ae})),i.d(e,\"BarController\",(function(){return w})),i.d(e,\"BarElement\",(function(){return ke})),i.d(e,\"BasePlatform\",(function(){return et})),i.d(e,\"BasicPlatform\",(function(){return it})),i.d(e,\"BubbleController\",(function(){return k})),i.d(e,\"CategoryScale\",(function(){return fi})),i.d(e,\"Chart\",(function(){return Zt})),i.d(e,\"DatasetController\",(function(){return y})),i.d(e,\"Decimation\",(function(){return Ce})),i.d(e,\"DomPlatform\",(function(){return pt})),i.d(e,\"DoughnutController\",(function(){return S})),i.d(e,\"Element\",(function(){return bt})),i.d(e,\"Filler\",(function(){return Ke})),i.d(e,\"Interaction\",(function(){return N})),i.d(e,\"Legend\",(function(){return qe})),i.d(e,\"LineController\",(function(){return D})),i.d(e,\"LineElement\",(function(){return pe})),i.d(e,\"LinearScale\",(function(){return bi})),i.d(e,\"LogarithmicScale\",(function(){return xi})),i.d(e,\"PieController\",(function(){return C})),i.d(e,\"PointElement\",(function(){return me})),i.d(e,\"PolarAreaController\",(function(){return P})),i.d(e,\"RadarController\",(function(){return A})),i.d(e,\"RadialLinearScale\",(function(){return wi})),i.d(e,\"Scale\",(function(){return St})),i.d(e,\"ScatterController\",(function(){return L})),i.d(e,\"Ticks\",(function(){return xt})),i.d(e,\"TimeScale\",(function(){return Ti})),i.d(e,\"TimeSeriesScale\",(function(){return Ei})),i.d(e,\"Title\",(function(){return Ze})),i.d(e,\"Tooltip\",(function(){return di})),i.d(e,\"_adapters\",(function(){return z})),i.d(e,\"animator\",(function(){return o})),i.d(e,\"controllers\",(function(){return T})),i.d(e,\"elements\",(function(){return Se})),i.d(e,\"layouts\",(function(){return tt})),i.d(e,\"plugins\",(function(){return ui})),i.d(e,\"registerables\",(function(){return Fi})),i.d(e,\"registry\",(function(){return Pt})),i.d(e,\"scales\",(function(){return zi}));var n=i(\"3T2N\");i.d(e,\"defaults\",(function(){return n.Mb}));var o=new class{constructor(){this._request=null,this._charts=new Map,this._running=!1,this._lastDate=void 0}_notify(t,e,i,n){const o=e.listeners[n],s=e.duration;o.forEach((n=>n({chart:t,numSteps:s,currentStep:Math.min(i-e.start,s)})))}_refresh(){const t=this;t._request||(t._running=!0,t._request=n.ac.call(window,(()=>{t._update(),t._request=null,t._running&&t._refresh()})))}_update(t=Date.now()){const e=this;let i=0;e._charts.forEach(((n,o)=>{if(!n.running||!n.items.length)return;const s=n.items;let a,r=s.length-1,l=!1;for(;r>=0;--r)a=s[r],a._active?(a._total>n.duration&&(n.duration=a._total),a.tick(t),l=!0):(s[r]=s[s.length-1],s.pop());l&&(o.draw(),e._notify(o,n,t,\"progress\")),s.length||(n.running=!1,e._notify(o,n,t,\"complete\")),i+=s.length})),e._lastDate=t,0===i&&(e._running=!1)}_getAnims(t){const e=this._charts;let i=e.get(t);return i||(i={running:!1,items:[],listeners:{complete:[],progress:[]}},e.set(t,i)),i}listen(t,e,i){this._getAnims(t).listeners[e].push(i)}add(t,e){e&&e.length&&this._getAnims(t).items.push(...e)}has(t){return this._getAnims(t).items.length>0}start(t){const e=this._charts.get(t);e&&(e.running=!0,e.start=Date.now(),e.duration=e.items.reduce(((t,e)=>Math.max(t,e._duration)),0),this._refresh())}running(t){if(!this._running)return!1;const e=this._charts.get(t);return!!(e&&e.running&&e.items.length)}stop(t){const e=this._charts.get(t);if(!e||!e.items.length)return;const i=e.items;let n=i.length-1;for(;n>=0;--n)i[n].cancel();e.items=[],this._notify(t,e,Date.now(),\"complete\")}remove(t){return this._charts.delete(t)}};const s=\"transparent\",a={boolean:(t,e,i)=>i>.5?e:t,color(t,e,i){const o=Object(n.Lb)(t||s),a=o.valid&&Object(n.Lb)(e||s);return a&&a.valid?a.mix(o,i).hexString():e},number:(t,e,i)=>t+(e-t)*i};class r{constructor(t,e,i,o){const s=e[i];o=Object(n.C)([t.to,o,s,t.from]);const r=Object(n.C)([t.from,s,o]);this._active=!0,this._fn=t.fn||a[t.type||typeof r],this._easing=n.Nb[t.easing]||n.Nb.linear,this._start=Math.floor(Date.now()+(t.delay||0)),this._duration=this._total=Math.floor(t.duration),this._loop=!!t.loop,this._target=e,this._prop=i,this._from=r,this._to=o,this._promises=void 0}active(){return this._active}update(t,e,i){const o=this;if(o._active){o._notify(!1);const s=o._target[o._prop],a=i-o._start,r=o._duration-a;o._start=i,o._duration=Math.floor(Math.max(r,t.duration)),o._total+=a,o._loop=!!t.loop,o._to=Object(n.C)([t.to,e,s,t.from]),o._from=Object(n.C)([t.from,s,e])}}cancel(){const t=this;t._active&&(t.tick(Date.now()),t._active=!1,t._notify(!1))}tick(t){const e=this,i=t-e._start,n=e._duration,o=e._prop,s=e._from,a=e._loop,r=e._to;let l;if(e._active=s!==r&&(a||i<n),!e._active)return e._target[o]=r,void e._notify(!0);i<0?e._target[o]=s:(l=i/n%2,l=a&&l>1?2-l:l,l=e._easing(Math.min(1,Math.max(0,l))),e._target[o]=e._fn(s,r,l))}wait(){const t=this._promises||(this._promises=[]);return new Promise(((e,i)=>{t.push({res:e,rej:i})}))}_notify(t){const e=t?\"res\":\"rej\",i=this._promises||[];for(let n=0;n<i.length;n++)i[n][e]()}}n.Mb.set(\"animation\",{delay:void 0,duration:1e3,easing:\"easeOutQuart\",fn:void 0,from:void 0,loop:void 0,to:void 0,type:void 0});const l=Object.keys(n.Mb.animation);n.Mb.describe(\"animation\",{_fallback:!1,_indexable:!1,_scriptable:t=>\"onProgress\"!==t&&\"onComplete\"!==t&&\"fn\"!==t}),n.Mb.set(\"animations\",{colors:{type:\"color\",properties:[\"color\",\"borderColor\",\"backgroundColor\"]},numbers:{type:\"number\",properties:[\"x\",\"y\",\"borderWidth\",\"radius\",\"tension\"]}}),n.Mb.describe(\"animations\",{_fallback:\"animation\"}),n.Mb.set(\"transitions\",{active:{animation:{duration:400}},resize:{animation:{duration:0}},show:{animations:{colors:{from:\"transparent\"},visible:{type:\"boolean\",duration:0}}},hide:{animations:{colors:{to:\"transparent\"},visible:{type:\"boolean\",easing:\"linear\",fn:t=>0|t}}}});class c{constructor(t,e){this._chart=t,this._properties=new Map,this.configure(e)}configure(t){if(!Object(n.Rb)(t))return;const e=this._properties;Object.getOwnPropertyNames(t).forEach((i=>{const o=t[i];if(!Object(n.Rb)(o))return;const s={};for(const t of l)s[t]=o[t];(Object(n.Kb)(o.properties)&&o.properties||[i]).forEach((t=>{t!==i&&e.has(t)||e.set(t,s)}))}))}_animateOptions(t,e){const i=e.options,n=function(t,e){if(!e)return;let i=t.options;if(!i)return void(t.options=e);i.$shared&&(t.options=i=Object.assign({},i,{$shared:!1,$animations:{}}));return i}(t,i);if(!n)return[];const o=this._createAnimations(n,i);return i.$shared&&function(t,e){const i=[],n=Object.keys(e);for(let o=0;o<n.length;o++){const e=t[n[o]];e&&e.active()&&i.push(e.wait())}return Promise.all(i)}(t.options.$animations,i).then((()=>{t.options=i}),(()=>{})),o}_createAnimations(t,e){const i=this._properties,n=[],o=t.$animations||(t.$animations={}),s=Object.keys(e),a=Date.now();let l;for(l=s.length-1;l>=0;--l){const c=s[l];if(\"$\"===c.charAt(0))continue;if(\"options\"===c){n.push(...this._animateOptions(t,e));continue}const h=e[c];let d=o[c];const u=i.get(c);if(d){if(u&&d.active()){d.update(u,h,a);continue}d.cancel()}u&&u.duration?(o[c]=d=new r(u,t,c,h),n.push(d)):t[c]=h}return n}update(t,e){if(0===this._properties.size)return void Object.assign(t,e);const i=this._createAnimations(t,e);return i.length?(o.add(this._chart,i),!0):void 0}}function h(t,e){const i=t&&t.options||{},n=i.reverse,o=void 0===i.min?e:0,s=void 0===i.max?e:0;return{start:n?s:o,end:n?o:s}}function d(t,e){const i=[],n=t._getSortedDatasetMetas(e);let o,s;for(o=0,s=n.length;o<s;++o)i.push(n[o].index);return i}function u(t,e,i,o){const s=t.keys,a=\"single\"===o.mode;let r,l,c,h;if(null!==e){for(r=0,l=s.length;r<l;++r){if(c=+s[r],c===i){if(o.all)continue;break}h=t.values[c],Object(n.Pb)(h)&&(a||0===e||Object(n.bc)(e)===Object(n.bc)(h))&&(e+=h)}return e}}function g(t,e){const i=t&&t.options.stacked;return i||void 0===i&&void 0!==e.stack}function f(t,e,i){const n=t[e]||(t[e]={});return n[i]||(n[i]={})}function p(t,e){const{chart:i,_cachedMeta:n}=t,o=i._stacks||(i._stacks={}),{iScale:s,vScale:a,index:r}=n,l=s.axis,c=a.axis,h=function(t,e,i){return`${t.id}.${e.id}.${i.stack||i.type}`}(s,a,n),d=e.length;let u;for(let g=0;g<d;++g){const t=e[g],{[l]:i,[c]:n}=t;u=(t._stacks||(t._stacks={}))[c]=f(o,h,i),u[r]=n}}function b(t,e){const i=t.scales;return Object.keys(i).filter((t=>i[t].axis===e)).shift()}function m(t,e){e=e||t._parsed;for(const i of e){const e=i._stacks;if(!e||void 0===e[t.vScale.id]||void 0===e[t.vScale.id][t.index])return;delete e[t.vScale.id][t.index]}}const x=t=>\"reset\"===t||\"none\"===t,_=(t,e)=>e?t:Object.assign({},t);class y{constructor(t,e){this.chart=t,this._ctx=t.ctx,this.index=e,this._cachedDataOpts={},this._cachedMeta=this.getMeta(),this._type=this._cachedMeta.type,this.options=void 0,this._parsing=!1,this._data=void 0,this._objectData=void 0,this._sharedOptions=void 0,this._drawStart=void 0,this._drawCount=void 0,this.enableOptionSharing=!1,this.$context=void 0,this.initialize()}initialize(){const t=this,e=t._cachedMeta;t.configure(),t.linkScales(),e._stacked=g(e.vScale,e),t.addElements()}updateIndex(t){this.index=t}linkScales(){const t=this,e=t.chart,i=t._cachedMeta,o=t.getDataset(),s=(t,e,i,n)=>\"x\"===t?e:\"r\"===t?n:i,a=i.xAxisID=Object(n.ec)(o.xAxisID,b(e,\"x\")),r=i.yAxisID=Object(n.ec)(o.yAxisID,b(e,\"y\")),l=i.rAxisID=Object(n.ec)(o.rAxisID,b(e,\"r\")),c=i.indexAxis,h=i.iAxisID=s(c,a,r,l),d=i.vAxisID=s(c,r,a,l);i.xScale=t.getScaleForId(a),i.yScale=t.getScaleForId(r),i.rScale=t.getScaleForId(l),i.iScale=t.getScaleForId(h),i.vScale=t.getScaleForId(d)}getDataset(){return this.chart.data.datasets[this.index]}getMeta(){return this.chart.getDatasetMeta(this.index)}getScaleForId(t){return this.chart.scales[t]}_getOtherScale(t){const e=this._cachedMeta;return t===e.iScale?e.vScale:e.iScale}reset(){this._update(\"reset\")}_destroy(){const t=this._cachedMeta;this._data&&Object(n.dc)(this._data,this),t._stacked&&m(t)}_dataCheck(){const t=this,e=t.getDataset(),i=e.data||(e.data=[]);Object(n.Rb)(i)?t._data=function(t){const e=Object.keys(t),i=new Array(e.length);let n,o,s;for(n=0,o=e.length;n<o;++n)s=e[n],i[n]={x:s,y:t[s]};return i}(i):t._data!==i&&(t._data&&(Object(n.dc)(t._data,t),m(t._cachedMeta)),i&&Object.isExtensible(i)&&Object(n.Ub)(i,t),t._data=i)}addElements(){const t=this,e=t._cachedMeta;t._dataCheck(),t.datasetElementType&&(e.dataset=new t.datasetElementType)}buildOrUpdateElements(t){const e=this,i=e._cachedMeta,n=e.getDataset();let o=!1;e._dataCheck(),i._stacked=g(i.vScale,i),i.stack!==n.stack&&(o=!0,m(i),i.stack=n.stack),e._resyncElements(t),o&&p(e,i._parsed)}configure(){const t=this,e=t.chart.config,i=e.datasetScopeKeys(t._type),n=e.getOptionScopes(t.getDataset(),i,!0);t.options=e.createResolver(n,t.getContext()),t._parsing=t.options.parsing}parse(t,e){const i=this,{_cachedMeta:o,_data:s}=i,{iScale:a,_stacked:r}=o,l=a.axis;let c,h,d,u=0===t&&e===s.length||o._sorted,g=t>0&&o._parsed[t-1];if(!1===i._parsing)o._parsed=s,o._sorted=!0;else{d=Object(n.Kb)(s[t])?i.parseArrayData(o,s,t,e):Object(n.Rb)(s[t])?i.parseObjectData(o,s,t,e):i.parsePrimitiveData(o,s,t,e);const a=()=>null===h[l]||g&&h[l]<g[l];for(c=0;c<e;++c)o._parsed[c+t]=h=d[c],u&&(a()&&(u=!1),g=h);o._sorted=u}r&&p(i,d)}parsePrimitiveData(t,e,i,n){const{iScale:o,vScale:s}=t,a=o.axis,r=s.axis,l=o.getLabels(),c=o===s,h=new Array(n);let d,u,g;for(d=0,u=n;d<u;++d)g=d+i,h[d]={[a]:c||o.parse(l[g],g),[r]:s.parse(e[g],g)};return h}parseArrayData(t,e,i,n){const{xScale:o,yScale:s}=t,a=new Array(n);let r,l,c,h;for(r=0,l=n;r<l;++r)c=r+i,h=e[c],a[r]={x:o.parse(h[0],c),y:s.parse(h[1],c)};return a}parseObjectData(t,e,i,o){const{xScale:s,yScale:a}=t,{xAxisKey:r=\"x\",yAxisKey:l=\"y\"}=this._parsing,c=new Array(o);let h,d,u,g;for(h=0,d=o;h<d;++h)u=h+i,g=e[u],c[h]={x:s.parse(Object(n.Ob)(g,r),u),y:a.parse(Object(n.Ob)(g,l),u)};return c}getParsed(t){return this._cachedMeta._parsed[t]}getDataElement(t){return this._cachedMeta.data[t]}applyStack(t,e,i){const n=this.chart,o=this._cachedMeta,s=e[t.axis];return u({keys:d(n,!0),values:e._stacks[t.axis]},s,o.index,{mode:i})}updateRangeFromParsed(t,e,i,n){const o=i[e.axis];let s=null===o?NaN:o;const a=n&&i._stacks[e.axis];n&&a&&(n.values=a,t.min=Math.min(t.min,s),t.max=Math.max(t.max,s),s=u(n,o,this._cachedMeta.index,{all:!0})),t.min=Math.min(t.min,s),t.max=Math.max(t.max,s)}getMinMax(t,e){const i=this,o=i._cachedMeta,s=o._parsed,a=o._sorted&&t===o.iScale,r=s.length,l=i._getOtherScale(t),c=e&&o._stacked&&{keys:d(i.chart,!0),values:null},h={min:Number.POSITIVE_INFINITY,max:Number.NEGATIVE_INFINITY},{min:u,max:g}=function(t){const{min:e,max:i,minDefined:n,maxDefined:o}=t.getUserBounds();return{min:n?e:Number.NEGATIVE_INFINITY,max:o?i:Number.POSITIVE_INFINITY}}(l);let f,p,b,m;function x(){return b=s[f],p=b[t.axis],m=b[l.axis],!Object(n.Pb)(p)||u>m||g<m}for(f=0;f<r&&(x()||(i.updateRangeFromParsed(h,t,b,c),!a));++f);if(a)for(f=r-1;f>=0;--f)if(!x()){i.updateRangeFromParsed(h,t,b,c);break}return h}getAllParsedValues(t){const e=this._cachedMeta._parsed,i=[];let o,s,a;for(o=0,s=e.length;o<s;++o)a=e[o][t.axis],Object(n.Pb)(a)&&i.push(a);return i}getMaxOverflow(){return!1}getLabelAndValue(t){const e=this._cachedMeta,i=e.iScale,n=e.vScale,o=this.getParsed(t);return{label:i?\"\"+i.getLabelForValue(o[i.axis]):\"\",value:n?\"\"+n.getLabelForValue(o[n.axis]):\"\"}}_update(t){const e=this,i=e._cachedMeta;e.configure(),e._cachedDataOpts={},e.update(t||\"default\"),i._clip=function(t){let e,i,o,s;return Object(n.Rb)(t)?(e=t.top,i=t.right,o=t.bottom,s=t.left):e=i=o=s=t,{top:e,right:i,bottom:o,left:s}}(Object(n.ec)(e.options.clip,function(t,e,i){if(!1===i)return!1;const n=h(t,i),o=h(e,i);return{top:o.end,right:n.end,bottom:o.start,left:n.start}}(i.xScale,i.yScale,e.getMaxOverflow())))}update(t){}draw(){const t=this,e=t._ctx,i=t.chart,n=t._cachedMeta,o=n.data||[],s=i.chartArea,a=[],r=t._drawStart||0,l=t._drawCount||o.length-r;let c;for(n.dataset&&n.dataset.draw(e,s,r,l),c=r;c<r+l;++c){const t=o[c];t.active?a.push(t):t.draw(e,s)}for(c=0;c<a.length;++c)a[c].draw(e,s)}getStyle(t,e){const i=e?\"active\":\"default\";return void 0===t&&this._cachedMeta.dataset?this.resolveDatasetElementOptions(i):this.resolveDataElementOptions(t||0,i)}getContext(t,e,i){const n=this,o=n.getDataset();let s;if(t>=0&&t<n._cachedMeta.data.length){const e=n._cachedMeta.data[t];s=e.$context||(e.$context=function(t,e,i){return Object.assign(Object.create(t),{active:!1,dataIndex:e,parsed:void 0,raw:void 0,element:i,index:e,mode:\"default\",type:\"data\"})}(n.getContext(),t,e)),s.parsed=n.getParsed(t),s.raw=o.data[t]}else s=n.$context||(n.$context=function(t,e){return Object.assign(Object.create(t),{active:!1,dataset:void 0,datasetIndex:e,index:e,mode:\"default\",type:\"dataset\"})}(n.chart.getContext(),n.index)),s.dataset=o;return s.active=!!e,s.mode=i,s}resolveDatasetElementOptions(t){return this._resolveElementOptions(this.datasetElementType.id,t)}resolveDataElementOptions(t,e){return this._resolveElementOptions(this.dataElementType.id,e,t)}_resolveElementOptions(t,e=\"default\",i){const o=this,s=\"active\"===e,a=o._cachedDataOpts,r=t+\"-\"+e,l=a[r],c=o.enableOptionSharing&&Object(n.Qb)(i);if(l)return _(l,c);const h=o.chart.config,d=h.datasetElementScopeKeys(o._type,t),u=s?[`${t}Hover`,\"hover\",t,\"\"]:[t,\"\"],g=h.getOptionScopes(o.getDataset(),d),f=Object.keys(n.Mb.elements[t]),p=h.resolveNamedOptions(g,f,(()=>o.getContext(i,s)),u);return p.$shared&&(p.$shared=c,a[r]=Object.freeze(_(p,c))),p}_resolveAnimations(t,e,i){const n=this,o=n.chart,s=n._cachedDataOpts,a=`animation-${e}`,r=s[a];if(r)return r;let l;if(!1!==o.options.animation){const o=n.chart.config,s=o.datasetAnimationScopeKeys(n._type,e),a=o.getOptionScopes(n.getDataset(),s);l=o.createResolver(a,n.getContext(t,i,e))}const h=new c(o,l&&l.animations);return l&&l._cacheable&&(s[a]=Object.freeze(h)),h}getSharedOptions(t){if(t.$shared)return this._sharedOptions||(this._sharedOptions=Object.assign({},t))}includeOptions(t,e){return!e||x(t)||this.chart._animationsDisabled}updateElement(t,e,i,n){x(n)?Object.assign(t,i):this._resolveAnimations(e,n).update(t,i)}updateSharedOptions(t,e,i){t&&!x(e)&&this._resolveAnimations(void 0,e).update(t,i)}_setStyle(t,e,i,n){t.active=n;const o=this.getStyle(e,n);this._resolveAnimations(e,i,n).update(t,{options:!n&&this.getSharedOptions(o)||o})}removeHoverStyle(t,e,i){this._setStyle(t,i,\"active\",!1)}setHoverStyle(t,e,i){this._setStyle(t,i,\"active\",!0)}_removeDatasetHoverStyle(){const t=this._cachedMeta.dataset;t&&this._setStyle(t,void 0,\"active\",!1)}_setDatasetHoverStyle(){const t=this._cachedMeta.dataset;t&&this._setStyle(t,void 0,\"active\",!0)}_resyncElements(t){const e=this,i=e._cachedMeta.data.length,n=e._data.length;n>i?e._insertElements(i,n-i,t):n<i&&e._removeElements(n,i-n);const o=Math.min(n,i);o&&e.parse(0,o)}_insertElements(t,e,i=!0){const n=this,o=n._cachedMeta,s=o.data,a=t+e;let r;const l=t=>{for(t.length+=e,r=t.length-1;r>=a;r--)t[r]=t[r-e]};for(l(s),r=t;r<a;++r)s[r]=new n.dataElementType;n._parsing&&l(o._parsed),n.parse(t,e),i&&n.updateElements(s,t,e,\"reset\")}updateElements(t,e,i,n){}_removeElements(t,e){const i=this._cachedMeta;if(this._parsing){const n=i._parsed.splice(t,e);i._stacked&&m(i,n)}i.data.splice(t,e)}_onDataPush(){const t=arguments.length;this._insertElements(this.getDataset().data.length-t,t)}_onDataPop(){this._removeElements(this._cachedMeta.data.length-1,1)}_onDataShift(){this._removeElements(0,1)}_onDataSplice(t,e){this._removeElements(t,e),this._insertElements(t,arguments.length-2)}_onDataUnshift(){this._insertElements(0,arguments.length)}}function v(t){const e=function(t){if(!t._cache.$bar){const e=t.getMatchingVisibleMetas(\"bar\");let i=[];for(let n=0,o=e.length;n<o;n++)i=i.concat(e[n].controller.getAllParsedValues(t));t._cache.$bar=Object(n.B)(i.sort(((t,e)=>t-e)))}return t._cache.$bar}(t);let i,o,s,a,r=t._length;const l=()=>{r=Math.min(r,i&&Math.abs(s-a)||r),a=s};for(i=0,o=e.length;i<o;++i)s=t.getPixelForValue(e[i]),l();for(i=0,o=t.ticks.length;i<o;++i)s=t.getPixelForTick(i),l();return r}function O(t,e,i,o){return Object(n.Kb)(t)?function(t,e,i,n){const o=i.parse(t[0],n),s=i.parse(t[1],n),a=Math.min(o,s),r=Math.max(o,s);let l=a,c=r;Math.abs(a)>Math.abs(r)&&(l=r,c=a),e[i.axis]=c,e._custom={barStart:l,barEnd:c,start:o,end:s,min:a,max:r}}(t,e,i,o):e[i.axis]=i.parse(t,o),e}function j(t,e,i,n){const o=t.iScale,s=t.vScale,a=o.getLabels(),r=o===s,l=[];let c,h,d,u;for(c=i,h=i+n;c<h;++c)u=e[c],d={},d[o.axis]=r||o.parse(a[c],c),l.push(O(u,d,s,c));return l}function M(t){return t&&void 0!==t.barStart&&void 0!==t.barEnd}y.defaults={},y.prototype.datasetElementType=null,y.prototype.dataElementType=null;class w extends y{parsePrimitiveData(t,e,i,n){return j(t,e,i,n)}parseArrayData(t,e,i,n){return j(t,e,i,n)}parseObjectData(t,e,i,o){const{iScale:s,vScale:a}=t,{xAxisKey:r=\"x\",yAxisKey:l=\"y\"}=this._parsing,c=\"x\"===s.axis?r:l,h=\"x\"===a.axis?r:l,d=[];let u,g,f,p;for(u=i,g=i+o;u<g;++u)p=e[u],f={},f[s.axis]=s.parse(Object(n.Ob)(p,c),u),d.push(O(Object(n.Ob)(p,h),f,a,u));return d}updateRangeFromParsed(t,e,i,n){super.updateRangeFromParsed(t,e,i,n);const o=i._custom;o&&e===this._cachedMeta.vScale&&(t.min=Math.min(t.min,o.min),t.max=Math.max(t.max,o.max))}getLabelAndValue(t){const e=this._cachedMeta,{iScale:i,vScale:n}=e,o=this.getParsed(t),s=o._custom,a=M(s)?\"[\"+s.start+\", \"+s.end+\"]\":\"\"+n.getLabelForValue(o[n.axis]);return{label:\"\"+i.getLabelForValue(o[i.axis]),value:a}}initialize(){const t=this;t.enableOptionSharing=!0,super.initialize();t._cachedMeta.stack=t.getDataset().stack}update(t){const e=this._cachedMeta;this.updateElements(e.data,0,e.data.length,t)}updateElements(t,e,i,o){const s=this,a=\"reset\"===o,r=s._cachedMeta.vScale,l=r.getBasePixel(),c=r.isHorizontal(),h=s._getRuler(),d=s.resolveDataElementOptions(e,o),u=s.getSharedOptions(d),g=s.includeOptions(o,u);s.updateSharedOptions(u,o,d);for(let f=e;f<e+i;f++){const e=s.getParsed(f),i=a||Object(n.Sb)(e[r.axis])?{base:l,head:l}:s._calculateBarValuePixels(f),d=s._calculateBarIndexPixels(f,h),p={horizontal:c,base:i.base,x:c?i.head:d.center,y:c?d.center:i.head,height:c?d.size:void 0,width:c?void 0:d.size};g&&(p.options=u||s.resolveDataElementOptions(f,o)),s.updateElement(t[f],f,p,o)}}_getStacks(t,e){const i=this._cachedMeta.iScale,o=i.getMatchingVisibleMetas(this._type),s=i.options.stacked,a=o.length,r=[];let l,c;for(l=0;l<a;++l){if(c=o[l],\"undefined\"!==typeof e){const t=c.controller.getParsed(e)[c.controller._cachedMeta.vScale.axis];if(Object(n.Sb)(t)||isNaN(t))continue}if((!1===s||-1===r.indexOf(c.stack)||void 0===s&&void 0===c.stack)&&r.push(c.stack),c.index===t)break}return r.length||r.push(void 0),r}_getStackCount(t){return this._getStacks(void 0,t).length}_getStackIndex(t,e){const i=this._getStacks(t),n=void 0!==e?i.indexOf(e):-1;return-1===n?i.length-1:n}_getRuler(){const t=this,e=t.options,i=t._cachedMeta,n=i.iScale,o=[];let s,a;for(s=0,a=i.data.length;s<a;++s)o.push(n.getPixelForValue(t.getParsed(s)[n.axis],s));const r=e.barThickness;return{min:r||v(n),pixels:o,start:n._startPixel,end:n._endPixel,stackCount:t._getStackCount(),scale:n,grouped:e.grouped,ratio:r?1:e.categoryPercentage*e.barPercentage}}_calculateBarValuePixels(t){const e=this,{vScale:i,_stacked:o}=e._cachedMeta,{base:s,minBarLength:a}=e.options,r=e.getParsed(t),l=r._custom,c=M(l);let h,d,u=r[i.axis],g=0,f=o?e.applyStack(i,r,o):u;f!==u&&(g=f-u,f=u),c&&(u=l.barStart,f=l.barEnd-l.barStart,0!==u&&Object(n.bc)(u)!==Object(n.bc)(l.barEnd)&&(g=0),g+=u);const p=Object(n.Sb)(s)||c?g:s;let b=i.getPixelForValue(p);h=this.chart.getDataVisibility(t)?i.getPixelForValue(g+f):b,d=h-b,void 0!==a&&Math.abs(d)<a&&(d=d<0?-a:a,0===u&&(b-=d/2),h=b+d);const m=s||0;if(b===i.getPixelForValue(m)){const t=i.getLineWidthForValue(m)/2;d>0?(b+=t,d-=t):d<0&&(b-=t,d+=t)}return{size:d,base:b,head:h,center:h+d/2}}_calculateBarIndexPixels(t,e){const i=this,o=e.scale,s=i.options,a=Object(n.ec)(s.maxBarThickness,1/0);let r,l;if(e.grouped){const o=s.skipNull?i._getStackCount(t):e.stackCount,c=\"flex\"===s.barThickness?function(t,e,i,n){const o=e.pixels,s=o[t];let a=t>0?o[t-1]:null,r=t<o.length-1?o[t+1]:null;const l=i.categoryPercentage;null===a&&(a=s-(null===r?e.end-e.start:r-s)),null===r&&(r=s+s-a);const c=s-(s-Math.min(a,r))/2*l;return{chunk:Math.abs(r-a)/2*l/n,ratio:i.barPercentage,start:c}}(t,e,s,o):function(t,e,i,o){const s=i.barThickness;let a,r;return Object(n.Sb)(s)?(a=e.min*i.categoryPercentage,r=i.barPercentage):(a=s*o,r=1),{chunk:a/o,ratio:r,start:e.pixels[t]-a/2}}(t,e,s,o),h=i._getStackIndex(i.index,i._cachedMeta.stack);r=c.start+c.chunk*h+c.chunk/2,l=Math.min(a,c.chunk*c.ratio)}else r=o.getPixelForValue(i.getParsed(t)[o.axis],t),l=Math.min(a,e.min*e.ratio);return{base:r-l/2,head:r+l/2,center:r,size:l}}draw(){const t=this,e=t.chart,i=t._cachedMeta,o=i.vScale,s=i.data,a=s.length;let r=0;for(Object(n.Tb)(e.ctx,e.chartArea);r<a;++r)null!==t.getParsed(r)[o.axis]&&s[r].draw(t._ctx);Object(n.Vb)(e.ctx)}}w.id=\"bar\",w.defaults={datasetElementType:!1,dataElementType:\"bar\",categoryPercentage:.8,barPercentage:.9,grouped:!0,animations:{numbers:{type:\"number\",properties:[\"x\",\"y\",\"base\",\"width\",\"height\"]}}},w.overrides={interaction:{mode:\"index\"},scales:{_index_:{type:\"category\",offset:!0,grid:{offset:!0}},_value_:{type:\"linear\",beginAtZero:!0}}};class k extends y{initialize(){this.enableOptionSharing=!0,super.initialize()}parseObjectData(t,e,i,o){const{xScale:s,yScale:a}=t,{xAxisKey:r=\"x\",yAxisKey:l=\"y\"}=this._parsing,c=[];let h,d,u;for(h=i,d=i+o;h<d;++h)u=e[h],c.push({x:s.parse(Object(n.Ob)(u,r),h),y:a.parse(Object(n.Ob)(u,l),h),_custom:u&&u.r&&+u.r});return c}getMaxOverflow(){const{data:t,_parsed:e}=this._cachedMeta;let i=0;for(let n=t.length-1;n>=0;--n)i=Math.max(i,t[n].size()/2,e[n]._custom);return i>0&&i}getLabelAndValue(t){const e=this._cachedMeta,{xScale:i,yScale:n}=e,o=this.getParsed(t),s=i.getLabelForValue(o.x),a=n.getLabelForValue(o.y),r=o._custom;return{label:e.label,value:\"(\"+s+\", \"+a+(r?\", \"+r:\"\")+\")\"}}update(t){const e=this._cachedMeta.data;this.updateElements(e,0,e.length,t)}updateElements(t,e,i,n){const o=this,s=\"reset\"===n,{xScale:a,yScale:r}=o._cachedMeta,l=o.resolveDataElementOptions(e,n),c=o.getSharedOptions(l),h=o.includeOptions(n,c);for(let d=e;d<e+i;d++){const e=t[d],i=!s&&o.getParsed(d),l=s?a.getPixelForDecimal(.5):a.getPixelForValue(i.x),c=s?r.getBasePixel():r.getPixelForValue(i.y),u={x:l,y:c,skip:isNaN(l)||isNaN(c)};h&&(u.options=o.resolveDataElementOptions(d,n),s&&(u.options.radius=0)),o.updateElement(e,d,u,n)}o.updateSharedOptions(c,n,l)}resolveDataElementOptions(t,e){const i=this.getParsed(t);let o=super.resolveDataElementOptions(t,e);o.$shared&&(o=Object.assign({},o,{$shared:!1}));const s=o.radius;return\"active\"!==e&&(o.radius=0),o.radius+=Object(n.ec)(i&&i._custom,s),o}}k.id=\"bubble\",k.defaults={datasetElementType:!1,dataElementType:\"point\",animations:{numbers:{type:\"number\",properties:[\"x\",\"y\",\"borderWidth\",\"radius\"]}}},k.overrides={scales:{x:{type:\"linear\"},y:{type:\"linear\"}},plugins:{tooltip:{callbacks:{title:()=>\"\"}}}};class S extends y{constructor(t,e){super(t,e),this.enableOptionSharing=!0,this.innerRadius=void 0,this.outerRadius=void 0,this.offsetX=void 0,this.offsetY=void 0}linkScales(){}parse(t,e){const i=this.getDataset().data,n=this._cachedMeta;let o,s;for(o=t,s=t+e;o<s;++o)n._parsed[o]=+i[o]}_getRotation(){return Object(n.cc)(this.options.rotation-90)}_getCircumference(){return Object(n.cc)(this.options.circumference)}_getRotationExtents(){let t=n.u,e=-n.u;const i=this;for(let n=0;n<i.chart.data.datasets.length;++n)if(i.chart.isDatasetVisible(n)){const o=i.chart.getDatasetMeta(n).controller,s=o._getRotation(),a=o._getCircumference();t=Math.min(t,s),e=Math.max(e,s+a)}return{rotation:t,circumference:e-t}}update(t){const e=this,i=e.chart,{chartArea:o}=i,s=e._cachedMeta,a=s.data,r=e.getMaxBorderWidth()+e.getMaxOffset(a),l=Math.max((Math.min(o.width,o.height)-r)/2,0),c=Math.min(Object(n.Wb)(e.options.cutout,l),1),h=e._getRingWeight(e.index),{circumference:d,rotation:u}=e._getRotationExtents(),{ratioX:g,ratioY:f,offsetX:p,offsetY:b}=function(t,e,i){let o=1,s=1,a=0,r=0;if(e<n.u){const l=t,c=l+e,h=Math.cos(l),d=Math.sin(l),u=Math.cos(c),g=Math.sin(c),f=(t,e,o)=>Object(n.Zb)(t,l,c)?1:Math.max(e,e*i,o,o*i),p=(t,e,o)=>Object(n.Zb)(t,l,c)?-1:Math.min(e,e*i,o,o*i),b=f(0,h,u),m=f(n.i,d,g),x=p(n.q,h,u),_=p(n.q+n.i,d,g);o=(b-x)/2,s=(m-_)/2,a=-(b+x)/2,r=-(m+_)/2}return{ratioX:o,ratioY:s,offsetX:a,offsetY:r}}(u,d,c),m=(o.width-r)/g,x=(o.height-r)/f,_=Math.max(Math.min(m,x)/2,0),y=Object(n.Xb)(e.options.radius,_),v=(y-Math.max(y*c,0))/e._getVisibleDatasetWeightTotal();e.offsetX=p*y,e.offsetY=b*y,s.total=e.calculateTotal(),e.outerRadius=y-v*e._getRingWeightOffset(e.index),e.innerRadius=Math.max(e.outerRadius-v*h,0),e.updateElements(a,0,a.length,t)}_circumference(t,e){const i=this,o=i.options,s=i._cachedMeta,a=i._getCircumference();return e&&o.animation.animateRotate||!this.chart.getDataVisibility(t)||null===s._parsed[t]?0:i.calculateCircumference(s._parsed[t]*a/n.u)}updateElements(t,e,i,n){const o=this,s=\"reset\"===n,a=o.chart,r=a.chartArea,l=a.options.animation,c=(r.left+r.right)/2,h=(r.top+r.bottom)/2,d=s&&l.animateScale,u=d?0:o.innerRadius,g=d?0:o.outerRadius,f=o.resolveDataElementOptions(e,n),p=o.getSharedOptions(f),b=o.includeOptions(n,p);let m,x=o._getRotation();for(m=0;m<e;++m)x+=o._circumference(m,s);for(m=e;m<e+i;++m){const e=o._circumference(m,s),i=t[m],a={x:c+o.offsetX,y:h+o.offsetY,startAngle:x,endAngle:x+e,circumference:e,outerRadius:g,innerRadius:u};b&&(a.options=p||o.resolveDataElementOptions(m,n)),x+=e,o.updateElement(i,m,a,n)}o.updateSharedOptions(p,n,f)}calculateTotal(){const t=this._cachedMeta,e=t.data;let i,n=0;for(i=0;i<e.length;i++){const e=t._parsed[i];null!==e&&!isNaN(e)&&this.chart.getDataVisibility(i)&&(n+=Math.abs(e))}return n}calculateCircumference(t){const e=this._cachedMeta.total;return e>0&&!isNaN(t)?n.u*(Math.abs(t)/e):0}getLabelAndValue(t){const e=this._cachedMeta,i=this.chart,o=i.data.labels||[],s=Object(n.Yb)(e._parsed[t],i.options.locale);return{label:o[t]||\"\",value:s}}getMaxBorderWidth(t){const e=this;let i=0;const n=e.chart;let o,s,a,r,l;if(!t)for(o=0,s=n.data.datasets.length;o<s;++o)if(n.isDatasetVisible(o)){a=n.getDatasetMeta(o),t=a.data,r=a.controller,r!==e&&r.configure();break}if(!t)return 0;for(o=0,s=t.length;o<s;++o)l=r.resolveDataElementOptions(o),\"inner\"!==l.borderAlign&&(i=Math.max(i,l.borderWidth||0,l.hoverBorderWidth||0));return i}getMaxOffset(t){let e=0;for(let i=0,n=t.length;i<n;++i){const t=this.resolveDataElementOptions(i);e=Math.max(e,t.offset||0,t.hoverOffset||0)}return e}_getRingWeightOffset(t){let e=0;for(let i=0;i<t;++i)this.chart.isDatasetVisible(i)&&(e+=this._getRingWeight(i));return e}_getRingWeight(t){return Math.max(Object(n.ec)(this.chart.data.datasets[t].weight,1),0)}_getVisibleDatasetWeightTotal(){return this._getRingWeightOffset(this.chart.data.datasets.length)||1}}S.id=\"doughnut\",S.defaults={datasetElementType:!1,dataElementType:\"arc\",animation:{animateRotate:!0,animateScale:!1},animations:{numbers:{type:\"number\",properties:[\"circumference\",\"endAngle\",\"innerRadius\",\"outerRadius\",\"startAngle\",\"x\",\"y\",\"offset\",\"borderWidth\"]}},cutout:\"50%\",rotation:0,circumference:360,radius:\"100%\",indexAxis:\"r\"},S.overrides={aspectRatio:1,plugins:{legend:{labels:{generateLabels(t){const e=t.data;return e.labels.length&&e.datasets.length?e.labels.map(((e,i)=>{const n=t.getDatasetMeta(0).controller.getStyle(i);return{text:e,fillStyle:n.backgroundColor,strokeStyle:n.borderColor,lineWidth:n.borderWidth,hidden:!t.getDataVisibility(i),index:i}})):[]}},onClick(t,e,i){i.chart.toggleDataVisibility(e.index),i.chart.update()}},tooltip:{callbacks:{title:()=>\"\",label(t){let e=t.label;const i=\": \"+t.formattedValue;return Object(n.Kb)(e)?(e=e.slice(),e[0]+=i):e+=i,e}}}}};class D extends y{initialize(){this.enableOptionSharing=!0,super.initialize()}update(t){const e=this,i=e._cachedMeta,{dataset:o,data:s=[],_dataset:a}=i,r=e.chart._animationsDisabled;let{start:l,count:c}=function(t,e,i){const o=e.length;let s=0,a=o;if(t._sorted){const{iScale:r,_parsed:l}=t,c=r.axis,{min:h,max:d,minDefined:u,maxDefined:g}=r.getUserBounds();u&&(s=Object(n.gc)(Math.min(Object(n.hc)(l,r.axis,h).lo,i?o:Object(n.hc)(e,c,r.getPixelForValue(h)).lo),0,o-1)),a=g?Object(n.gc)(Math.max(Object(n.hc)(l,r.axis,d).hi+1,i?0:Object(n.hc)(e,c,r.getPixelForValue(d)).hi+1),s,o)-s:o-s}return{start:s,count:a}}(i,s,r);e._drawStart=l,e._drawCount=c,function(t){const{xScale:e,yScale:i,_scaleRanges:n}=t,o={xmin:e.min,xmax:e.max,ymin:i.min,ymax:i.max};if(!n)return t._scaleRanges=o,!0;const s=n.xmin!==e.min||n.xmax!==e.max||n.ymin!==i.min||n.ymax!==i.max;return Object.assign(n,o),s}(i)&&(l=0,c=s.length),o._decimated=!!a._decimated,o.points=s;const h=e.resolveDatasetElementOptions(t);e.options.showLine||(h.borderWidth=0),h.segment=e.options.segment,e.updateElement(o,void 0,{animated:!r,options:h},t),e.updateElements(s,l,c,t)}updateElements(t,e,i,o){const s=this,a=\"reset\"===o,{xScale:r,yScale:l,_stacked:c}=s._cachedMeta,h=s.resolveDataElementOptions(e,o),d=s.getSharedOptions(h),u=s.includeOptions(o,d),g=s.options.spanGaps,f=Object(n.fc)(g)?g:Number.POSITIVE_INFINITY,p=s.chart._animationsDisabled||a||\"none\"===o;let b=e>0&&s.getParsed(e-1);for(let m=e;m<e+i;++m){const e=t[m],i=s.getParsed(m),h=p?e:{},g=Object(n.Sb)(i.y),x=h.x=r.getPixelForValue(i.x,m),_=h.y=a||g?l.getBasePixel():l.getPixelForValue(c?s.applyStack(l,i,c):i.y,m);h.skip=isNaN(x)||isNaN(_)||g,h.stop=m>0&&i.x-b.x>f,h.parsed=i,u&&(h.options=d||s.resolveDataElementOptions(m,o)),p||s.updateElement(e,m,h,o),b=i}s.updateSharedOptions(d,o,h)}getMaxOverflow(){const t=this,e=t._cachedMeta,i=e.dataset,n=i.options&&i.options.borderWidth||0,o=e.data||[];if(!o.length)return n;const s=o[0].size(t.resolveDataElementOptions(0)),a=o[o.length-1].size(t.resolveDataElementOptions(o.length-1));return Math.max(n,s,a)/2}draw(){this._cachedMeta.dataset.updateControlPoints(this.chart.chartArea),super.draw()}}D.id=\"line\",D.defaults={datasetElementType:\"line\",dataElementType:\"point\",showLine:!0,spanGaps:!1},D.overrides={scales:{_index_:{type:\"category\"},_value_:{type:\"linear\"}}};class P extends y{constructor(t,e){super(t,e),this.innerRadius=void 0,this.outerRadius=void 0}update(t){const e=this._cachedMeta.data;this._updateRadius(),this.updateElements(e,0,e.length,t)}_updateRadius(){const t=this,e=t.chart,i=e.chartArea,n=e.options,o=Math.min(i.right-i.left,i.bottom-i.top),s=Math.max(o/2,0),a=(s-Math.max(n.cutoutPercentage?s/100*n.cutoutPercentage:1,0))/e.getVisibleDatasetCount();t.outerRadius=s-a*t.index,t.innerRadius=t.outerRadius-a}updateElements(t,e,i,o){const s=this,a=\"reset\"===o,r=s.chart,l=s.getDataset(),c=r.options.animation,h=s._cachedMeta.rScale,d=h.xCenter,u=h.yCenter,g=h.getIndexAngle(0)-.5*n.q;let f,p=g;const b=360/s.countVisibleElements();for(f=0;f<e;++f)p+=s._computeAngle(f,o,b);for(f=e;f<e+i;f++){const e=t[f];let i=p,n=p+s._computeAngle(f,o,b),m=r.getDataVisibility(f)?h.getDistanceFromCenterForValue(l.data[f]):0;p=n,a&&(c.animateScale&&(m=0),c.animateRotate&&(i=n=g));const x={x:d,y:u,innerRadius:0,outerRadius:m,startAngle:i,endAngle:n,options:s.resolveDataElementOptions(f,o)};s.updateElement(e,f,x,o)}}countVisibleElements(){const t=this.getDataset(),e=this._cachedMeta;let i=0;return e.data.forEach(((e,n)=>{!isNaN(t.data[n])&&this.chart.getDataVisibility(n)&&i++})),i}_computeAngle(t,e,i){return this.chart.getDataVisibility(t)?Object(n.cc)(this.resolveDataElementOptions(t,e).angle||i):0}}P.id=\"polarArea\",P.defaults={dataElementType:\"arc\",animation:{animateRotate:!0,animateScale:!0},animations:{numbers:{type:\"number\",properties:[\"x\",\"y\",\"startAngle\",\"endAngle\",\"innerRadius\",\"outerRadius\"]}},indexAxis:\"r\",startAngle:0},P.overrides={aspectRatio:1,plugins:{legend:{labels:{generateLabels(t){const e=t.data;return e.labels.length&&e.datasets.length?e.labels.map(((e,i)=>{const n=t.getDatasetMeta(0).controller.getStyle(i);return{text:e,fillStyle:n.backgroundColor,strokeStyle:n.borderColor,lineWidth:n.borderWidth,hidden:!t.getDataVisibility(i),index:i}})):[]}},onClick(t,e,i){i.chart.toggleDataVisibility(e.index),i.chart.update()}},tooltip:{callbacks:{title:()=>\"\",label:t=>t.chart.data.labels[t.dataIndex]+\": \"+t.formattedValue}}},scales:{r:{type:\"radialLinear\",angleLines:{display:!1},beginAtZero:!0,grid:{circular:!0},pointLabels:{display:!1},startAngle:0}}};class C extends S{}C.id=\"pie\",C.defaults={cutout:0,rotation:0,circumference:360,radius:\"100%\"};class A extends y{getLabelAndValue(t){const e=this._cachedMeta.vScale,i=this.getParsed(t);return{label:e.getLabels()[t],value:\"\"+e.getLabelForValue(i[e.axis])}}update(t){const e=this,i=e._cachedMeta,n=i.dataset,o=i.data||[],s=i.iScale.getLabels();if(n.points=o,\"resize\"!==t){const i=e.resolveDatasetElementOptions(t);e.options.showLine||(i.borderWidth=0);const a={_loop:!0,_fullLoop:s.length===o.length,options:i};e.updateElement(n,void 0,a,t)}e.updateElements(o,0,o.length,t)}updateElements(t,e,i,n){const o=this,s=o.getDataset(),a=o._cachedMeta.rScale,r=\"reset\"===n;for(let l=e;l<e+i;l++){const e=t[l],i=o.resolveDataElementOptions(l,n),c=a.getPointPositionForValue(l,s.data[l]),h=r?a.xCenter:c.x,d=r?a.yCenter:c.y,u={x:h,y:d,angle:c.angle,skip:isNaN(h)||isNaN(d),options:i};o.updateElement(e,l,u,n)}}}A.id=\"radar\",A.defaults={datasetElementType:\"line\",dataElementType:\"point\",indexAxis:\"r\",showLine:!0,elements:{line:{fill:\"start\"}}},A.overrides={aspectRatio:1,scales:{r:{type:\"radialLinear\"}}};class L extends D{}L.id=\"scatter\",L.defaults={showLine:!1,fill:!1},L.overrides={interaction:{mode:\"point\"},plugins:{tooltip:{callbacks:{title:()=>\"\",label:t=>\"(\"+t.label+\", \"+t.formattedValue+\")\"}}},scales:{x:{type:\"linear\"},y:{type:\"linear\"}}};var T=Object.freeze({__proto__:null,BarController:w,BubbleController:k,DoughnutController:S,LineController:D,PolarAreaController:P,PieController:C,RadarController:A,ScatterController:L});function R(){throw new Error(\"This method is not implemented: either no adapter can be found or an incomplete integration was provided.\")}class E{constructor(t){this.options=t||{}}formats(){return R()}parse(t,e){return R()}format(t,e){return R()}add(t,e,i){return R()}diff(t,e,i){return R()}startOf(t,e,i){return R()}endOf(t,e){return R()}}E.override=function(t){Object.assign(E.prototype,t)};var z={_date:E};function F(t,e){return\"native\"in t?{x:t.x,y:t.y}:Object(n.ic)(t,e)}function I(t,e,i,o){const{controller:s,data:a,_sorted:r}=t,l=s._cachedMeta.iScale;if(l&&e===l.axis&&r&&a.length){const t=l._reversePixels?n.c:n.hc;if(!o)return t(a,e,i);if(s._sharedOptions){const n=a[0],o=\"function\"===typeof n.getRange&&n.getRange(e);if(o){const n=t(a,e,i-o),s=t(a,e,i+o);return{lo:n.lo,hi:s.hi}}}}return{lo:0,hi:a.length-1}}function V(t,e,i,n,o){const s=t.getSortedVisibleDatasetMetas(),a=i[e];for(let r=0,l=s.length;r<l;++r){const{index:t,data:i}=s[r],{lo:l,hi:c}=I(s[r],e,a,o);for(let e=l;e<=c;++e){const o=i[e];o.skip||n(o,t,e)}}}function B(t,e,i,o){const s=[];if(!Object(n.b)(e,t.chartArea,t._minPadding))return s;return V(t,i,e,(function(t,i,n){t.inRange(e.x,e.y,o)&&s.push({element:t,datasetIndex:i,index:n})}),!0),s}function W(t,e,i,o,s){const a=function(t){const e=-1!==t.indexOf(\"x\"),i=-1!==t.indexOf(\"y\");return function(t,n){const o=e?Math.abs(t.x-n.x):0,s=i?Math.abs(t.y-n.y):0;return Math.sqrt(Math.pow(o,2)+Math.pow(s,2))}}(i);let r=Number.POSITIVE_INFINITY,l=[];if(!Object(n.b)(e,t.chartArea,t._minPadding))return l;return V(t,i,e,(function(t,i,n){if(o&&!t.inRange(e.x,e.y,s))return;const c=t.getCenterPoint(s),h=a(e,c);h<r?(l=[{element:t,datasetIndex:i,index:n}],r=h):h===r&&l.push({element:t,datasetIndex:i,index:n})})),l}function H(t,e,i,n){const o=F(e,t),s=[],a=i.axis,r=\"x\"===a?\"inXRange\":\"inYRange\";let l=!1;return function(t,e){const i=t.getSortedVisibleDatasetMetas();let n,o,s;for(let a=0,r=i.length;a<r;++a){({index:n,data:o}=i[a]);for(let t=0,i=o.length;t<i;++t)s=o[t],s.skip||e(s,n,t)}}(t,((t,e,i)=>{t[r](o[a],n)&&s.push({element:t,datasetIndex:e,index:i}),t.inRange(o.x,o.y,n)&&(l=!0)})),i.intersect&&!l?[]:s}var N={modes:{index(t,e,i,n){const o=F(e,t),s=i.axis||\"x\",a=i.intersect?B(t,o,s,n):W(t,o,s,!1,n),r=[];return a.length?(t.getSortedVisibleDatasetMetas().forEach((t=>{const e=a[0].index,i=t.data[e];i&&!i.skip&&r.push({element:i,datasetIndex:t.index,index:e})})),r):[]},dataset(t,e,i,n){const o=F(e,t),s=i.axis||\"xy\";let a=i.intersect?B(t,o,s,n):W(t,o,s,!1,n);if(a.length>0){const e=a[0].datasetIndex,i=t.getDatasetMeta(e).data;a=[];for(let t=0;t<i.length;++t)a.push({element:i[t],datasetIndex:e,index:t})}return a},point:(t,e,i,n)=>B(t,F(e,t),i.axis||\"xy\",n),nearest:(t,e,i,n)=>W(t,F(e,t),i.axis||\"xy\",i.intersect,n),x:(t,e,i,n)=>(i.axis=\"x\",H(t,e,i,n)),y:(t,e,i,n)=>(i.axis=\"y\",H(t,e,i,n))}};const $=[\"left\",\"top\",\"right\",\"bottom\"];function U(t,e){return t.filter((t=>t.pos===e))}function Y(t,e){return t.filter((t=>-1===$.indexOf(t.pos)&&t.box.axis===e))}function K(t,e){return t.sort(((t,i)=>{const n=e?i:t,o=e?t:i;return n.weight===o.weight?n.index-o.index:n.weight-o.weight}))}function X(t,e,i,n){return Math.max(t[i],e[i])+Math.max(t[n],e[n])}function G(t,e){t.top=Math.max(t.top,e.top),t.left=Math.max(t.left,e.left),t.bottom=Math.max(t.bottom,e.bottom),t.right=Math.max(t.right,e.right)}function q(t,e,i){const o=i.box,s=t.maxPadding;Object(n.Rb)(i.pos)||(i.size&&(t[i.pos]-=i.size),i.size=i.horizontal?o.height:o.width,t[i.pos]+=i.size),o.getPadding&&G(s,o.getPadding());const a=Math.max(0,e.outerWidth-X(s,t,\"left\",\"right\")),r=Math.max(0,e.outerHeight-X(s,t,\"top\",\"bottom\")),l=a!==t.w,c=r!==t.h;return t.w=a,t.h=r,i.horizontal?{same:l,other:c}:{same:c,other:l}}function J(t,e){const i=e.maxPadding;function n(t){const n={left:0,top:0,right:0,bottom:0};return t.forEach((t=>{n[t]=Math.max(e[t],i[t])})),n}return n(t?[\"left\",\"right\"]:[\"top\",\"bottom\"])}function Z(t,e,i){const n=[];let o,s,a,r,l,c;for(o=0,s=t.length,l=0;o<s;++o){a=t[o],r=a.box,r.update(a.width||e.w,a.height||e.h,J(a.horizontal,e));const{same:s,other:h}=q(e,i,a);l|=s&&n.length,c=c||h,r.fullSize||n.push(a)}return l&&Z(n,e,i)||c}function Q(t,e,i){const n=i.padding;let o,s,a,r,l=e.x,c=e.y;for(o=0,s=t.length;o<s;++o)a=t[o],r=a.box,a.horizontal?(r.left=r.fullSize?n.left:e.left,r.right=r.fullSize?i.outerWidth-n.right:e.left+e.w,r.top=c,r.bottom=c+r.height,r.width=r.right-r.left,c=r.bottom):(r.left=l,r.right=l+r.width,r.top=r.fullSize?n.top:e.top,r.bottom=r.fullSize?i.outerHeight-n.right:e.top+e.h,r.height=r.bottom-r.top,l=r.right);e.x=l,e.y=c}n.Mb.set(\"layout\",{padding:{top:0,right:0,bottom:0,left:0}});var tt={addBox(t,e){t.boxes||(t.boxes=[]),e.fullSize=e.fullSize||!1,e.position=e.position||\"top\",e.weight=e.weight||0,e._layers=e._layers||function(){return[{z:0,draw(t){e.draw(t)}}]},t.boxes.push(e)},removeBox(t,e){const i=t.boxes?t.boxes.indexOf(e):-1;-1!==i&&t.boxes.splice(i,1)},configure(t,e,i){e.fullSize=i.fullSize,e.position=i.position,e.weight=i.weight},update(t,e,i,o){if(!t)return;const s=Object(n.d)(t.options.layout.padding),a=e-s.width,r=i-s.height,l=function(t){const e=function(t){const e=[];let i,n,o;for(i=0,n=(t||[]).length;i<n;++i)o=t[i],e.push({index:i,box:o,pos:o.position,horizontal:o.isHorizontal(),weight:o.weight});return e}(t),i=K(e.filter((t=>t.box.fullSize)),!0),n=K(U(e,\"left\"),!0),o=K(U(e,\"right\")),s=K(U(e,\"top\"),!0),a=K(U(e,\"bottom\")),r=Y(e,\"x\"),l=Y(e,\"y\");return{fullSize:i,leftAndTop:n.concat(s),rightAndBottom:o.concat(l).concat(a).concat(r),chartArea:U(e,\"chartArea\"),vertical:n.concat(o).concat(l),horizontal:s.concat(a).concat(r)}}(t.boxes),c=l.vertical,h=l.horizontal;Object(n.e)(t.boxes,(t=>{\"function\"===typeof t.beforeLayout&&t.beforeLayout()}));const d=c.reduce(((t,e)=>e.box.options&&!1===e.box.options.display?t:t+1),0)||1,u=Object.freeze({outerWidth:e,outerHeight:i,padding:s,availableWidth:a,availableHeight:r,vBoxMaxWidth:a/2/d,hBoxMaxHeight:r/2}),g=Object.assign({},s);G(g,Object(n.d)(o));const f=Object.assign({maxPadding:g,w:a,h:r,x:s.left,y:s.top},s);!function(t,e){let i,n,o;for(i=0,n=t.length;i<n;++i)o=t[i],o.horizontal?(o.width=o.box.fullSize&&e.availableWidth,o.height=e.hBoxMaxHeight):(o.width=e.vBoxMaxWidth,o.height=o.box.fullSize&&e.availableHeight)}(c.concat(h),u),Z(l.fullSize,f,u),Z(c,f,u),Z(h,f,u)&&Z(c,f,u),function(t){const e=t.maxPadding;function i(i){const n=Math.max(e[i]-t[i],0);return t[i]+=n,n}t.y+=i(\"top\"),t.x+=i(\"left\"),i(\"right\"),i(\"bottom\")}(f),Q(l.leftAndTop,f,u),f.x+=f.w,f.y+=f.h,Q(l.rightAndBottom,f,u),t.chartArea={left:f.left,top:f.top,right:f.left+f.w,bottom:f.top+f.h,height:f.h,width:f.w},Object(n.e)(l.chartArea,(e=>{const i=e.box;Object.assign(i,t.chartArea),i.update(f.w,f.h)}))}};class et{acquireContext(t,e){}releaseContext(t){return!1}addEventListener(t,e,i){}removeEventListener(t,e,i){}getDevicePixelRatio(){return 1}getMaximumSize(t,e,i,n){return e=Math.max(0,e||t.width),i=i||t.height,{width:e,height:Math.max(0,n?Math.floor(e/n):i)}}isAttached(t){return!0}}class it extends et{acquireContext(t){return t&&t.getContext&&t.getContext(\"2d\")||null}}const nt={touchstart:\"mousedown\",touchmove:\"mousemove\",touchend:\"mouseup\",pointerenter:\"mouseenter\",pointerdown:\"mousedown\",pointermove:\"mousemove\",pointerup:\"mouseup\",pointerleave:\"mouseout\",pointerout:\"mouseout\"},ot=t=>null===t||\"\"===t;const st=!!n.k&&{passive:!0};function at(t,e,i){t.canvas.removeEventListener(e,i,st)}function rt(t,e,i){const o=t.canvas,s=o&&Object(n.g)(o)||o,a=new MutationObserver((t=>{const e=Object(n.g)(s);t.forEach((t=>{for(let n=0;n<t.addedNodes.length;n++){const o=t.addedNodes[n];o!==s&&o!==e||i(t.target)}}))}));return a.observe(document,{childList:!0,subtree:!0}),a}function lt(t,e,i){const o=t.canvas,s=o&&Object(n.g)(o);if(!s)return;const a=new MutationObserver((t=>{t.forEach((t=>{for(let e=0;e<t.removedNodes.length;e++)if(t.removedNodes[e]===o){i();break}}))}));return a.observe(s,{childList:!0}),a}const ct=new Map;let ht=0;function dt(){const t=window.devicePixelRatio;t!==ht&&(ht=t,ct.forEach(((e,i)=>{i.currentDevicePixelRatio!==t&&e()})))}function ut(t,e,i){const o=t.canvas,s=o&&Object(n.g)(o);if(!s)return;const a=Object(n.j)(((t,e)=>{const n=s.clientWidth;i(t,e),n<s.clientWidth&&i()}),window),r=new ResizeObserver((t=>{const e=t[0],i=e.contentRect.width,n=e.contentRect.height;0===i&&0===n||a(i,n)}));return r.observe(s),function(t,e){ct.size||window.addEventListener(\"resize\",dt),ct.set(t,e)}(t,a),r}function gt(t,e,i){i&&i.disconnect(),\"resize\"===e&&function(t){ct.delete(t),ct.size||window.removeEventListener(\"resize\",dt)}(t)}function ft(t,e,i){const o=t.canvas,s=Object(n.j)((e=>{null!==t.ctx&&i(function(t,e){const i=nt[t.type]||t.type,{x:o,y:s}=Object(n.ic)(t,e);return{type:i,chart:e,native:t,x:void 0!==o?o:null,y:void 0!==s?s:null}}(e,t))}),t,(t=>{const e=t[0];return[e,e.offsetX,e.offsetY]}));return function(t,e,i){t.addEventListener(e,i,st)}(o,e,s),s}class pt extends et{acquireContext(t,e){const i=t&&t.getContext&&t.getContext(\"2d\");return i&&i.canvas===t?(function(t,e){const i=t.style,o=t.getAttribute(\"height\"),s=t.getAttribute(\"width\");if(t.$chartjs={initial:{height:o,width:s,style:{display:i.display,height:i.height,width:i.width}}},i.display=i.display||\"block\",i.boxSizing=i.boxSizing||\"border-box\",ot(s)){const e=Object(n.h)(t,\"width\");void 0!==e&&(t.width=e)}if(ot(o))if(\"\"===t.style.height)t.height=t.width/(e||2);else{const e=Object(n.h)(t,\"height\");void 0!==e&&(t.height=e)}}(t,e),i):null}releaseContext(t){const e=t.canvas;if(!e.$chartjs)return!1;const i=e.$chartjs.initial;[\"height\",\"width\"].forEach((t=>{const o=i[t];Object(n.Sb)(o)?e.removeAttribute(t):e.setAttribute(t,o)}));const o=i.style||{};return Object.keys(o).forEach((t=>{e.style[t]=o[t]})),e.width=e.width,delete e.$chartjs,!0}addEventListener(t,e,i){this.removeEventListener(t,e);const n=t.$proxies||(t.$proxies={}),o={attach:rt,detach:lt,resize:ut}[e]||ft;n[e]=o(t,e,i)}removeEventListener(t,e){const i=t.$proxies||(t.$proxies={}),n=i[e];if(!n)return;({attach:gt,detach:gt,resize:gt}[e]||at)(t,e,n),i[e]=void 0}getDevicePixelRatio(){return window.devicePixelRatio}getMaximumSize(t,e,i,o){return Object(n.f)(t,e,i,o)}isAttached(t){const e=Object(n.g)(t);return!(!e||!Object(n.g)(e))}}class bt{constructor(){this.x=void 0,this.y=void 0,this.active=!1,this.options=void 0,this.$animations=void 0}tooltipPosition(t){const{x:e,y:i}=this.getProps([\"x\",\"y\"],t);return{x:e,y:i}}hasValue(){return Object(n.fc)(this.x)&&Object(n.fc)(this.y)}getProps(t,e){const i=this,n=this.$animations;if(!e||!n)return i;const o={};return t.forEach((t=>{o[t]=n[t]&&n[t].active()?n[t]._to:i[t]})),o}}bt.defaults={},bt.defaultRoutes=void 0;const mt={values:t=>Object(n.Kb)(t)?t:\"\"+t,numeric(t,e,i){if(0===t)return\"0\";const o=this.chart.options.locale;let s,a=t;if(i.length>1){const e=Math.max(Math.abs(i[0].value),Math.abs(i[i.length-1].value));(e<1e-4||e>1e15)&&(s=\"scientific\"),a=function(t,e){let i=e.length>3?e[2].value-e[1].value:e[1].value-e[0].value;Math.abs(i)>1&&t!==Math.floor(t)&&(i=t-Math.floor(t));return i}(t,i)}const r=Object(n.l)(Math.abs(a)),l=Math.max(Math.min(-1*Math.floor(r),20),0),c={notation:s,minimumFractionDigits:l,maximumFractionDigits:l};return Object.assign(c,this.options.ticks.format),Object(n.Yb)(t,o,c)},logarithmic(t,e,i){if(0===t)return\"0\";const o=t/Math.pow(10,Math.floor(Object(n.l)(t)));return 1===o||2===o||5===o?mt.numeric.call(this,t,e,i):\"\"}};var xt={formatters:mt};function _t(t,e){const i=t.options.ticks,o=i.maxTicksLimit||function(t){const e=t.options.offset,i=t._tickSize(),n=t._length/i+(e?0:1),o=t._maxLength/i;return Math.floor(Math.min(n,o))}(t),s=i.major.enabled?function(t){const e=[];let i,n;for(i=0,n=t.length;i<n;i++)t[i].major&&e.push(i);return e}(e):[],a=s.length,r=s[0],l=s[a-1],c=[];if(a>o)return function(t,e,i,n){let o,s=0,a=i[0];for(n=Math.ceil(n),o=0;o<t.length;o++)o===a&&(e.push(t[o]),s++,a=i[s*n])}(e,c,s,a/o),c;const h=function(t,e,i){const o=function(t){const e=t.length;let i,n;if(e<2)return!1;for(n=t[0],i=1;i<e;++i)if(t[i]-t[i-1]!==n)return!1;return n}(t),s=e.length/i;if(!o)return Math.max(s,1);const a=Object(n.m)(o);for(let n=0,r=a.length-1;n<r;n++){const t=a[n];if(t>s)return t}return Math.max(s,1)}(s,e,o);if(a>0){let t,i;const o=a>1?Math.round((l-r)/(a-1)):null;for(yt(e,c,h,Object(n.Sb)(o)?0:r-o,r),t=0,i=a-1;t<i;t++)yt(e,c,h,s[t],s[t+1]);return yt(e,c,h,l,Object(n.Sb)(o)?e.length:l+o),c}return yt(e,c,h),c}function yt(t,e,i,o,s){const a=Object(n.ec)(o,0),r=Math.min(Object(n.ec)(s,t.length),t.length);let l,c,h,d=0;for(i=Math.ceil(i),s&&(l=s-o,i=l/Math.floor(l/i)),h=a;h<0;)d++,h=Math.round(a+d*i);for(c=Math.max(a,0);c<r;c++)c===h&&(e.push(t[c]),d++,h=Math.round(a+d*i))}n.Mb.set(\"scale\",{display:!0,offset:!1,reverse:!1,beginAtZero:!1,bounds:\"ticks\",grace:0,grid:{display:!0,lineWidth:1,drawBorder:!0,drawOnChartArea:!0,drawTicks:!0,tickLength:8,tickWidth:(t,e)=>e.lineWidth,tickColor:(t,e)=>e.color,offset:!1,borderDash:[],borderDashOffset:0,borderWidth:1},title:{display:!1,text:\"\",padding:{top:4,bottom:4}},ticks:{minRotation:0,maxRotation:50,mirror:!1,textStrokeWidth:0,textStrokeColor:\"\",padding:3,display:!0,autoSkip:!0,autoSkipPadding:3,labelOffset:0,callback:xt.formatters.values,minor:{},major:{},align:\"center\",crossAlign:\"near\"}}),n.Mb.route(\"scale.ticks\",\"color\",\"\",\"color\"),n.Mb.route(\"scale.grid\",\"color\",\"\",\"borderColor\"),n.Mb.route(\"scale.grid\",\"borderColor\",\"\",\"borderColor\"),n.Mb.route(\"scale.title\",\"color\",\"\",\"color\"),n.Mb.describe(\"scale\",{_fallback:!1,_scriptable:t=>!t.startsWith(\"before\")&&!t.startsWith(\"after\")&&\"callback\"!==t&&\"parser\"!==t,_indexable:t=>\"borderDash\"!==t&&\"tickBorderDash\"!==t}),n.Mb.describe(\"scales\",{_fallback:\"scale\"});const vt=(t,e,i)=>\"top\"===e||\"left\"===e?t[e]+i:t[e]-i;function Ot(t,e){const i=[],n=t.length/e,o=t.length;let s=0;for(;s<o;s+=n)i.push(t[Math.floor(s)]);return i}function jt(t,e,i){const n=t.ticks.length,o=Math.min(e,n-1),s=t._startPixel,a=t._endPixel,r=1e-6;let l,c=t.getPixelForTick(o);if(!(i&&(l=1===n?Math.max(c-s,a-c):0===e?(t.getPixelForTick(1)-c)/2:(c-t.getPixelForTick(o-1))/2,c+=o<e?l:-l,c<s-r||c>a+r)))return c}function Mt(t){return t.drawTicks?t.tickLength:0}function wt(t,e){if(!t.display)return 0;const i=Object(n.x)(t.font,e),o=Object(n.d)(t.padding);return(Object(n.Kb)(t.text)?t.text.length:1)*i.lineHeight+o.height}function kt(t,e,i){let o=Object(n.y)(t);return(i&&\"right\"!==e||!i&&\"right\"===e)&&(o=(t=>\"left\"===t?\"right\":\"right\"===t?\"left\":t)(o)),o}class St extends bt{constructor(t){super(),this.id=t.id,this.type=t.type,this.options=void 0,this.ctx=t.ctx,this.chart=t.chart,this.top=void 0,this.bottom=void 0,this.left=void 0,this.right=void 0,this.width=void 0,this.height=void 0,this._margins={left:0,right:0,top:0,bottom:0},this.maxWidth=void 0,this.maxHeight=void 0,this.paddingTop=void 0,this.paddingBottom=void 0,this.paddingLeft=void 0,this.paddingRight=void 0,this.axis=void 0,this.labelRotation=void 0,this.min=void 0,this.max=void 0,this._range=void 0,this.ticks=[],this._gridLineItems=null,this._labelItems=null,this._labelSizes=null,this._length=0,this._maxLength=0,this._longestTextCache={},this._startPixel=void 0,this._endPixel=void 0,this._reversePixels=!1,this._userMax=void 0,this._userMin=void 0,this._suggestedMax=void 0,this._suggestedMin=void 0,this._ticksLength=0,this._borderValue=0,this._cache={},this._dataLimitsCached=!1,this.$context=void 0}init(t){const e=this;e.options=t.setContext(e.getContext()),e.axis=t.axis,e._userMin=e.parse(t.min),e._userMax=e.parse(t.max),e._suggestedMin=e.parse(t.suggestedMin),e._suggestedMax=e.parse(t.suggestedMax)}parse(t,e){return t}getUserBounds(){let{_userMin:t,_userMax:e,_suggestedMin:i,_suggestedMax:o}=this;return t=Object(n.n)(t,Number.POSITIVE_INFINITY),e=Object(n.n)(e,Number.NEGATIVE_INFINITY),i=Object(n.n)(i,Number.POSITIVE_INFINITY),o=Object(n.n)(o,Number.NEGATIVE_INFINITY),{min:Object(n.n)(t,i),max:Object(n.n)(e,o),minDefined:Object(n.Pb)(t),maxDefined:Object(n.Pb)(e)}}getMinMax(t){const e=this;let i,{min:o,max:s,minDefined:a,maxDefined:r}=e.getUserBounds();if(a&&r)return{min:o,max:s};const l=e.getMatchingVisibleMetas();for(let n=0,c=l.length;n<c;++n)i=l[n].controller.getMinMax(e,t),a||(o=Math.min(o,i.min)),r||(s=Math.max(s,i.max));return{min:Object(n.n)(o,Object(n.n)(s,o)),max:Object(n.n)(s,Object(n.n)(o,s))}}getPadding(){const t=this;return{left:t.paddingLeft||0,top:t.paddingTop||0,right:t.paddingRight||0,bottom:t.paddingBottom||0}}getTicks(){return this.ticks}getLabels(){const t=this.chart.data;return this.options.labels||(this.isHorizontal()?t.xLabels:t.yLabels)||t.labels||[]}beforeLayout(){this._cache={},this._dataLimitsCached=!1}beforeUpdate(){Object(n.o)(this.options.beforeUpdate,[this])}update(t,e,i){const o=this,s=o.options.ticks,a=s.sampleSize;o.beforeUpdate(),o.maxWidth=t,o.maxHeight=e,o._margins=i=Object.assign({left:0,right:0,top:0,bottom:0},i),o.ticks=null,o._labelSizes=null,o._gridLineItems=null,o._labelItems=null,o.beforeSetDimensions(),o.setDimensions(),o.afterSetDimensions(),o._maxLength=o.isHorizontal()?o.width+i.left+i.right:o.height+i.top+i.bottom,o._dataLimitsCached||(o.beforeDataLimits(),o.determineDataLimits(),o.afterDataLimits(),o._range=Object(n.p)(o,o.options.grace),o._dataLimitsCached=!0),o.beforeBuildTicks(),o.ticks=o.buildTicks()||[],o.afterBuildTicks();const r=a<o.ticks.length;o._convertTicksToLabels(r?Ot(o.ticks,a):o.ticks),o.configure(),o.beforeCalculateLabelRotation(),o.calculateLabelRotation(),o.afterCalculateLabelRotation(),s.display&&(s.autoSkip||\"auto\"===s.source)&&(o.ticks=_t(o,o.ticks),o._labelSizes=null),r&&o._convertTicksToLabels(o.ticks),o.beforeFit(),o.fit(),o.afterFit(),o.afterUpdate()}configure(){const t=this;let e,i,n=t.options.reverse;t.isHorizontal()?(e=t.left,i=t.right):(e=t.top,i=t.bottom,n=!n),t._startPixel=e,t._endPixel=i,t._reversePixels=n,t._length=i-e,t._alignToPixels=t.options.alignToPixels}afterUpdate(){Object(n.o)(this.options.afterUpdate,[this])}beforeSetDimensions(){Object(n.o)(this.options.beforeSetDimensions,[this])}setDimensions(){const t=this;t.isHorizontal()?(t.width=t.maxWidth,t.left=0,t.right=t.width):(t.height=t.maxHeight,t.top=0,t.bottom=t.height),t.paddingLeft=0,t.paddingTop=0,t.paddingRight=0,t.paddingBottom=0}afterSetDimensions(){Object(n.o)(this.options.afterSetDimensions,[this])}_callHooks(t){const e=this;e.chart.notifyPlugins(t,e.getContext()),Object(n.o)(e.options[t],[e])}beforeDataLimits(){this._callHooks(\"beforeDataLimits\")}determineDataLimits(){}afterDataLimits(){this._callHooks(\"afterDataLimits\")}beforeBuildTicks(){this._callHooks(\"beforeBuildTicks\")}buildTicks(){return[]}afterBuildTicks(){this._callHooks(\"afterBuildTicks\")}beforeTickToLabelConversion(){Object(n.o)(this.options.beforeTickToLabelConversion,[this])}generateTickLabels(t){const e=this,i=e.options.ticks;let o,s,a;for(o=0,s=t.length;o<s;o++)a=t[o],a.label=Object(n.o)(i.callback,[a.value,o,t],e);for(o=0;o<s;o++)Object(n.Sb)(t[o].label)&&(t.splice(o,1),s--,o--)}afterTickToLabelConversion(){Object(n.o)(this.options.afterTickToLabelConversion,[this])}beforeCalculateLabelRotation(){Object(n.o)(this.options.beforeCalculateLabelRotation,[this])}calculateLabelRotation(){const t=this,e=t.options,i=e.ticks,o=t.ticks.length,s=i.minRotation||0,a=i.maxRotation;let r,l,c,h=s;if(!t._isVisible()||!i.display||s>=a||o<=1||!t.isHorizontal())return void(t.labelRotation=s);const d=t._getLabelSizes(),u=d.widest.width,g=d.highest.height,f=Object(n.gc)(t.chart.width-u,0,t.maxWidth);r=e.offset?t.maxWidth/o:f/(o-1),u+6>r&&(r=f/(o-(e.offset?.5:1)),l=t.maxHeight-Mt(e.grid)-i.padding-wt(e.title,t.chart.options.font),c=Math.sqrt(u*u+g*g),h=Object(n.r)(Math.min(Math.asin(Math.min((d.highest.height+6)/r,1)),Math.asin(Math.min(l/c,1))-Math.asin(g/c))),h=Math.max(s,Math.min(a,h))),t.labelRotation=h}afterCalculateLabelRotation(){Object(n.o)(this.options.afterCalculateLabelRotation,[this])}beforeFit(){Object(n.o)(this.options.beforeFit,[this])}fit(){const t=this,e={width:0,height:0},{chart:i,options:{ticks:o,title:s,grid:a}}=t,r=t._isVisible(),l=t.isHorizontal();if(r){const r=wt(s,i.options.font);if(l?(e.width=t.maxWidth,e.height=Mt(a)+r):(e.height=t.maxHeight,e.width=Mt(a)+r),o.display&&t.ticks.length){const{first:i,last:s,widest:a,highest:r}=t._getLabelSizes(),c=2*o.padding,h=Object(n.cc)(t.labelRotation),d=Math.cos(h),u=Math.sin(h);if(l){const i=o.mirror?0:u*a.width+d*r.height;e.height=Math.min(t.maxHeight,e.height+i+c)}else{const i=o.mirror?0:d*a.width+u*r.height;e.width=Math.min(t.maxWidth,e.width+i+c)}t._calculatePadding(i,s,u,d)}}t._handleMargins(),l?(t.width=t._length=i.width-t._margins.left-t._margins.right,t.height=e.height):(t.width=e.width,t.height=t._length=i.height-t._margins.top-t._margins.bottom)}_calculatePadding(t,e,i,n){const o=this,{ticks:{align:s,padding:a},position:r}=o.options,l=0!==o.labelRotation,c=\"top\"!==r&&\"x\"===o.axis;if(o.isHorizontal()){const r=o.getPixelForTick(0)-o.left,h=o.right-o.getPixelForTick(o.ticks.length-1);let d=0,u=0;l?c?(d=n*t.width,u=i*e.height):(d=i*t.height,u=n*e.width):\"start\"===s?u=e.width:\"end\"===s?d=t.width:(d=t.width/2,u=e.width/2),o.paddingLeft=Math.max((d-r+a)*o.width/(o.width-r),0),o.paddingRight=Math.max((u-h+a)*o.width/(o.width-h),0)}else{let i=e.height/2,n=t.height/2;\"start\"===s?(i=0,n=t.height):\"end\"===s&&(i=e.height,n=0),o.paddingTop=i+a,o.paddingBottom=n+a}}_handleMargins(){const t=this;t._margins&&(t._margins.left=Math.max(t.paddingLeft,t._margins.left),t._margins.top=Math.max(t.paddingTop,t._margins.top),t._margins.right=Math.max(t.paddingRight,t._margins.right),t._margins.bottom=Math.max(t.paddingBottom,t._margins.bottom))}afterFit(){Object(n.o)(this.options.afterFit,[this])}isHorizontal(){const{axis:t,position:e}=this.options;return\"top\"===e||\"bottom\"===e||\"x\"===t}isFullSize(){return this.options.fullSize}_convertTicksToLabels(t){const e=this;e.beforeTickToLabelConversion(),e.generateTickLabels(t),e.afterTickToLabelConversion()}_getLabelSizes(){const t=this;let e=t._labelSizes;if(!e){const i=t.options.ticks.sampleSize;let n=t.ticks;i<n.length&&(n=Ot(n,i)),t._labelSizes=e=t._computeLabelSizes(n,n.length)}return e}_computeLabelSizes(t,e){const{ctx:i,_longestTextCache:o}=this,s=[],a=[];let r,l,c,h,d,u,g,f,p,b,m,x=0,_=0;for(r=0;r<e;++r){if(h=t[r].label,d=this._resolveTickFontOptions(r),i.font=u=d.string,g=o[u]=o[u]||{data:{},gc:[]},f=d.lineHeight,p=b=0,Object(n.Sb)(h)||Object(n.Kb)(h)){if(Object(n.Kb)(h))for(l=0,c=h.length;l<c;++l)m=h[l],Object(n.Sb)(m)||Object(n.Kb)(m)||(p=Object(n.s)(i,g.data,g.gc,p,m),b+=f)}else p=Object(n.s)(i,g.data,g.gc,p,h),b=f;s.push(p),a.push(b),x=Math.max(p,x),_=Math.max(b,_)}!function(t,e){Object(n.e)(t,(t=>{const i=t.gc,n=i.length/2;let o;if(n>e){for(o=0;o<n;++o)delete t.data[i[o]];i.splice(0,n)}}))}(o,e);const y=s.indexOf(x),v=a.indexOf(_),O=t=>({width:s[t]||0,height:a[t]||0});return{first:O(0),last:O(e-1),widest:O(y),highest:O(v)}}getLabelForValue(t){return t}getPixelForValue(t,e){return NaN}getValueForPixel(t){}getPixelForTick(t){const e=this.ticks;return t<0||t>e.length-1?null:this.getPixelForValue(e[t].value)}getPixelForDecimal(t){const e=this;e._reversePixels&&(t=1-t);const i=e._startPixel+t*e._length;return Object(n.t)(e._alignToPixels?Object(n.v)(e.chart,i,0):i)}getDecimalForPixel(t){const e=(t-this._startPixel)/this._length;return this._reversePixels?1-e:e}getBasePixel(){return this.getPixelForValue(this.getBaseValue())}getBaseValue(){const{min:t,max:e}=this;return t<0&&e<0?e:t>0&&e>0?t:0}getContext(t){const e=this,i=e.ticks||[];if(t>=0&&t<i.length){const n=i[t];return n.$context||(n.$context=function(t,e,i){return Object.assign(Object.create(t),{tick:i,index:e,type:\"tick\"})}(e.getContext(),t,n))}return e.$context||(e.$context=(n=e.chart.getContext(),o=e,Object.assign(Object.create(n),{scale:o,type:\"scale\"})));var n,o}_tickSize(){const t=this,e=t.options.ticks,i=Object(n.cc)(t.labelRotation),o=Math.abs(Math.cos(i)),s=Math.abs(Math.sin(i)),a=t._getLabelSizes(),r=e.autoSkipPadding||0,l=a?a.widest.width+r:0,c=a?a.highest.height+r:0;return t.isHorizontal()?c*o>l*s?l/o:c/s:c*s<l*o?c/o:l/s}_isVisible(){const t=this.options.display;return\"auto\"!==t?!!t:this.getMatchingVisibleMetas().length>0}_computeGridLineItems(t){const e=this,i=e.axis,o=e.chart,s=e.options,{grid:a,position:r}=s,l=a.offset,c=e.isHorizontal(),h=e.ticks.length+(l?1:0),d=Mt(a),u=[],g=a.setContext(e.getContext(0)),f=g.drawBorder?g.borderWidth:0,p=f/2,b=function(t){return Object(n.v)(o,t,f)};let m,x,_,y,v,O,j,M,w,k,S,D;if(\"top\"===r)m=b(e.bottom),O=e.bottom-d,M=m-p,k=b(t.top)+p,D=t.bottom;else if(\"bottom\"===r)m=b(e.top),k=t.top,D=b(t.bottom)-p,O=m+p,M=e.top+d;else if(\"left\"===r)m=b(e.right),v=e.right-d,j=m-p,w=b(t.left)+p,S=t.right;else if(\"right\"===r)m=b(e.left),w=t.left,S=b(t.right)-p,v=m+p,j=e.left+d;else if(\"x\"===i){if(\"center\"===r)m=b((t.top+t.bottom)/2+.5);else if(Object(n.Rb)(r)){const t=Object.keys(r)[0],i=r[t];m=b(e.chart.scales[t].getPixelForValue(i))}k=t.top,D=t.bottom,O=m+p,M=O+d}else if(\"y\"===i){if(\"center\"===r)m=b((t.left+t.right)/2);else if(Object(n.Rb)(r)){const t=Object.keys(r)[0],i=r[t];m=b(e.chart.scales[t].getPixelForValue(i))}v=m-p,j=v-d,w=t.left,S=t.right}for(x=0;x<h;++x){const t=a.setContext(e.getContext(x)),i=t.lineWidth,s=t.color,r=a.borderDash||[],h=t.borderDashOffset,d=t.tickWidth,g=t.tickColor,f=t.tickBorderDash||[],p=t.tickBorderDashOffset;_=jt(e,x,l),void 0!==_&&(y=Object(n.v)(o,_,i),c?v=j=w=S=y:O=M=k=D=y,u.push({tx1:v,ty1:O,tx2:j,ty2:M,x1:w,y1:k,x2:S,y2:D,width:i,color:s,borderDash:r,borderDashOffset:h,tickWidth:d,tickColor:g,tickBorderDash:f,tickBorderDashOffset:p}))}return e._ticksLength=h,e._borderValue=m,u}_computeLabelItems(t){const e=this,i=e.axis,o=e.options,{position:s,ticks:a}=o,r=e.isHorizontal(),l=e.ticks,{align:c,crossAlign:h,padding:d,mirror:u}=a,g=Mt(o.grid),f=g+d,p=u?-d:f,b=-Object(n.cc)(e.labelRotation),m=[];let x,_,y,v,O,j,M,w,k,S,D,P,C=\"middle\";if(\"top\"===s)j=e.bottom-p,M=e._getXAxisLabelAlignment();else if(\"bottom\"===s)j=e.top+p,M=e._getXAxisLabelAlignment();else if(\"left\"===s){const t=e._getYAxisLabelAlignment(g);M=t.textAlign,O=t.x}else if(\"right\"===s){const t=e._getYAxisLabelAlignment(g);M=t.textAlign,O=t.x}else if(\"x\"===i){if(\"center\"===s)j=(t.top+t.bottom)/2+f;else if(Object(n.Rb)(s)){const t=Object.keys(s)[0],i=s[t];j=e.chart.scales[t].getPixelForValue(i)+f}M=e._getXAxisLabelAlignment()}else if(\"y\"===i){if(\"center\"===s)O=(t.left+t.right)/2-f;else if(Object(n.Rb)(s)){const t=Object.keys(s)[0],i=s[t];O=e.chart.scales[t].getPixelForValue(i)}M=e._getYAxisLabelAlignment(g).textAlign}\"y\"===i&&(\"start\"===c?C=\"top\":\"end\"===c&&(C=\"bottom\"));const A=e._getLabelSizes();for(x=0,_=l.length;x<_;++x){y=l[x],v=y.label;const t=a.setContext(e.getContext(x));w=e.getPixelForTick(x)+a.labelOffset,k=e._resolveTickFontOptions(x),S=k.lineHeight,D=Object(n.Kb)(v)?v.length:1;const i=D/2,o=t.color,c=t.textStrokeColor,d=t.textStrokeWidth;r?(O=w,P=\"top\"===s?\"near\"===h||0!==b?-D*S+S/2:\"center\"===h?-A.highest.height/2-i*S+S:-A.highest.height+S/2:\"near\"===h||0!==b?S/2:\"center\"===h?A.highest.height/2-i*S:A.highest.height-D*S,u&&(P*=-1)):(j=w,P=(1-D)*S/2),m.push({rotation:b,label:v,font:k,color:o,strokeColor:c,strokeWidth:d,textOffset:P,textAlign:M,textBaseline:C,translation:[O,j]})}return m}_getXAxisLabelAlignment(){const{position:t,ticks:e}=this.options;if(-Object(n.cc)(this.labelRotation))return\"top\"===t?\"left\":\"right\";let i=\"center\";return\"start\"===e.align?i=\"left\":\"end\"===e.align&&(i=\"right\"),i}_getYAxisLabelAlignment(t){const e=this,{position:i,ticks:{crossAlign:n,mirror:o,padding:s}}=e.options,a=t+s,r=e._getLabelSizes().widest.width;let l,c;return\"left\"===i?o?(l=\"left\",c=e.right+s):(c=e.right-a,\"near\"===n?l=\"right\":\"center\"===n?(l=\"center\",c-=r/2):(l=\"left\",c=e.left)):\"right\"===i?o?(l=\"right\",c=e.left+s):(c=e.left+a,\"near\"===n?l=\"left\":\"center\"===n?(l=\"center\",c+=r/2):(l=\"right\",c=e.right)):l=\"right\",{textAlign:l,x:c}}_computeLabelArea(){const t=this;if(t.options.ticks.mirror)return;const e=t.chart,i=t.options.position;return\"left\"===i||\"right\"===i?{top:0,left:t.left,bottom:e.height,right:t.right}:\"top\"===i||\"bottom\"===i?{top:t.top,left:0,bottom:t.bottom,right:e.width}:void 0}drawBackground(){const{ctx:t,options:{backgroundColor:e},left:i,top:n,width:o,height:s}=this;e&&(t.save(),t.fillStyle=e,t.fillRect(i,n,o,s),t.restore())}getLineWidthForValue(t){const e=this,i=e.options.grid;if(!e._isVisible()||!i.display)return 0;const n=e.ticks.findIndex((e=>e.value===t));if(n>=0){return i.setContext(e.getContext(n)).lineWidth}return 0}drawGrid(t){const e=this,i=e.options.grid,o=e.ctx,s=e.chart,a=i.setContext(e.getContext()),r=i.drawBorder?a.borderWidth:0,l=e._gridLineItems||(e._gridLineItems=e._computeGridLineItems(t));let c,h;const d=(t,e,i)=>{i.width&&i.color&&(o.save(),o.lineWidth=i.width,o.strokeStyle=i.color,o.setLineDash(i.borderDash||[]),o.lineDashOffset=i.borderDashOffset,o.beginPath(),o.moveTo(t.x,t.y),o.lineTo(e.x,e.y),o.stroke(),o.restore())};if(i.display)for(c=0,h=l.length;c<h;++c){const t=l[c];i.drawOnChartArea&&d({x:t.x1,y:t.y1},{x:t.x2,y:t.y2},t),i.drawTicks&&d({x:t.tx1,y:t.ty1},{x:t.tx2,y:t.ty2},{color:t.tickColor,width:t.tickWidth,borderDash:t.tickBorderDash,borderDashOffset:t.tickBorderDashOffset})}if(r){const t=a.lineWidth,i=e._borderValue;let o,l,c,h;e.isHorizontal()?(o=Object(n.v)(s,e.left,r)-r/2,l=Object(n.v)(s,e.right,t)+t/2,c=h=i):(c=Object(n.v)(s,e.top,r)-r/2,h=Object(n.v)(s,e.bottom,t)+t/2,o=l=i),d({x:o,y:c},{x:l,y:h},{width:r,color:a.borderColor})}}drawLabels(t){const e=this;if(!e.options.ticks.display)return;const i=e.ctx,o=e._computeLabelArea();o&&Object(n.Tb)(i,o);const s=e._labelItems||(e._labelItems=e._computeLabelItems(t));let a,r;for(a=0,r=s.length;a<r;++a){const t=s[a],e=t.font,o=t.label;let r=t.textOffset;Object(n.w)(i,o,0,r,e,t)}o&&Object(n.Vb)(i)}drawTitle(){const{ctx:t,options:{position:e,title:i,reverse:o}}=this;if(!i.display)return;const s=Object(n.x)(i.font),a=Object(n.d)(i.padding),r=i.align;let l=s.lineHeight/2;\"bottom\"===e?(l+=a.bottom,Object(n.Kb)(i.text)&&(l+=s.lineHeight*(i.text.length-1))):l+=a.top;const{titleX:c,titleY:h,maxWidth:d,rotation:u}=function(t,e,i,o){const{top:s,left:a,bottom:r,right:l}=t;let c,h,d,u=0;return t.isHorizontal()?(h=Object(n.z)(o,a,l),d=vt(t,i,e),c=l-a):(h=vt(t,i,e),d=Object(n.z)(o,r,s),u=\"left\"===i?-n.i:n.i),{titleX:h,titleY:d,maxWidth:c,rotation:u}}(this,l,e,r);Object(n.w)(t,i.text,0,0,s,{color:i.color,maxWidth:d,rotation:u,textAlign:kt(r,e,o),textBaseline:\"middle\",translation:[c,h]})}draw(t){const e=this;e._isVisible()&&(e.drawBackground(),e.drawGrid(t),e.drawTitle(),e.drawLabels(t))}_layers(){const t=this,e=t.options,i=e.ticks&&e.ticks.z||0,n=e.grid&&e.grid.z||0;return t._isVisible()&&i!==n&&t.draw===St.prototype.draw?[{z:n,draw(e){t.drawBackground(),t.drawGrid(e),t.drawTitle()}},{z:i,draw(e){t.drawLabels(e)}}]:[{z:i,draw(e){t.draw(e)}}]}getMatchingVisibleMetas(t){const e=this,i=e.chart.getSortedVisibleDatasetMetas(),n=e.axis+\"AxisID\",o=[];let s,a;for(s=0,a=i.length;s<a;++s){const a=i[s];a[n]!==e.id||t&&a.type!==t||o.push(a)}return o}_resolveTickFontOptions(t){const e=this.options.ticks.setContext(this.getContext(t));return Object(n.x)(e.font)}}class Dt{constructor(t,e,i){this.type=t,this.scope=e,this.override=i,this.items=Object.create(null)}isForType(t){return Object.prototype.isPrototypeOf.call(this.type.prototype,t.prototype)}register(t){const e=this,i=Object.getPrototypeOf(t);let o;(function(t){return\"id\"in t&&\"defaults\"in t})(i)&&(o=e.register(i));const s=e.items,a=t.id,r=e.scope+\".\"+a;if(!a)throw new Error(\"class does not have id: \"+t);return a in s||(s[a]=t,function(t,e,i){const o=Object(n.a)(Object.create(null),[i?n.Mb.get(i):{},n.Mb.get(e),t.defaults]);n.Mb.set(e,o),t.defaultRoutes&&function(t,e){Object.keys(e).forEach((i=>{const o=i.split(\".\"),s=o.pop(),a=[t].concat(o).join(\".\"),r=e[i].split(\".\"),l=r.pop(),c=r.join(\".\");n.Mb.route(a,s,c,l)}))}(e,t.defaultRoutes);t.descriptors&&n.Mb.describe(e,t.descriptors)}(t,r,o),e.override&&n.Mb.override(t.id,t.overrides)),r}get(t){return this.items[t]}unregister(t){const e=this.items,i=t.id,o=this.scope;i in e&&delete e[i],o&&i in n.Mb[o]&&(delete n.Mb[o][i],this.override&&delete n.A[i])}}var Pt=new class{constructor(){this.controllers=new Dt(y,\"datasets\",!0),this.elements=new Dt(bt,\"elements\"),this.plugins=new Dt(Object,\"plugins\"),this.scales=new Dt(St,\"scales\"),this._typedRegistries=[this.controllers,this.scales,this.elements]}add(...t){this._each(\"register\",t)}remove(...t){this._each(\"unregister\",t)}addControllers(...t){this._each(\"register\",t,this.controllers)}addElements(...t){this._each(\"register\",t,this.elements)}addPlugins(...t){this._each(\"register\",t,this.plugins)}addScales(...t){this._each(\"register\",t,this.scales)}getController(t){return this._get(t,this.controllers,\"controller\")}getElement(t){return this._get(t,this.elements,\"element\")}getPlugin(t){return this._get(t,this.plugins,\"plugin\")}getScale(t){return this._get(t,this.scales,\"scale\")}removeControllers(...t){this._each(\"unregister\",t,this.controllers)}removeElements(...t){this._each(\"unregister\",t,this.elements)}removePlugins(...t){this._each(\"unregister\",t,this.plugins)}removeScales(...t){this._each(\"unregister\",t,this.scales)}_each(t,e,i){const o=this;[...e].forEach((e=>{const s=i||o._getRegistryForType(e);i||s.isForType(e)||s===o.plugins&&e.id?o._exec(t,s,e):Object(n.e)(e,(e=>{const n=i||o._getRegistryForType(e);o._exec(t,n,e)}))}))}_exec(t,e,i){const o=Object(n.D)(t);Object(n.o)(i[\"before\"+o],[],i),e[t](i),Object(n.o)(i[\"after\"+o],[],i)}_getRegistryForType(t){for(let e=0;e<this._typedRegistries.length;e++){const i=this._typedRegistries[e];if(i.isForType(t))return i}return this.plugins}_get(t,e,i){const n=e.get(t);if(void 0===n)throw new Error('\"'+t+'\" is not a registered '+i+\".\");return n}};class Ct{constructor(){this._init=[]}notify(t,e,i,n){const o=this;\"beforeInit\"===e&&(o._init=o._createDescriptors(t,!0),o._notify(o._init,t,\"install\"));const s=n?o._descriptors(t).filter(n):o._descriptors(t),a=o._notify(s,t,e,i);return\"destroy\"===e&&(o._notify(s,t,\"stop\"),o._notify(o._init,t,\"uninstall\")),a}_notify(t,e,i,o){o=o||{};for(const s of t){const t=s.plugin,a=t[i],r=[e,o,s.options];if(!1===Object(n.o)(a,r,t)&&o.cancelable)return!1}return!0}invalidate(){Object(n.Sb)(this._cache)||(this._oldCache=this._cache,this._cache=void 0)}_descriptors(t){if(this._cache)return this._cache;const e=this._cache=this._createDescriptors(t);return this._notifyStateChanges(t),e}_createDescriptors(t,e){const i=t&&t.config,o=Object(n.ec)(i.options&&i.options.plugins,{}),s=function(t){const e=[],i=Object.keys(Pt.plugins.items);for(let o=0;o<i.length;o++)e.push(Pt.getPlugin(i[o]));const n=t.plugins||[];for(let o=0;o<n.length;o++){const t=n[o];-1===e.indexOf(t)&&e.push(t)}return e}(i);return!1!==o||e?function(t,e,i,n){const o=[],s=t.getContext();for(let a=0;a<e.length;a++){const r=e[a],l=At(i[r.id],n);null!==l&&o.push({plugin:r,options:Lt(t.config,r,l,s)})}return o}(t,s,o,e):[]}_notifyStateChanges(t){const e=this._oldCache||[],i=this._cache,n=(t,e)=>t.filter((t=>!e.some((e=>t.plugin.id===e.plugin.id))));this._notify(n(e,i),t,\"stop\"),this._notify(n(i,e),t,\"start\")}}function At(t,e){return e||!1!==t?!0===t?{}:t:null}function Lt(t,e,i,n){const o=t.pluginScopeKeys(e),s=t.getOptionScopes(i,o);return t.createResolver(s,n,[\"\"],{scriptable:!1,indexable:!1,allKeys:!0})}function Tt(t,e){const i=n.Mb.datasets[t]||{};return((e.datasets||{})[t]||{}).indexAxis||e.indexAxis||i.indexAxis||\"x\"}function Rt(t,e){return\"x\"===t||\"y\"===t?t:e.axis||(\"top\"===(i=e.position)||\"bottom\"===i?\"x\":\"left\"===i||\"right\"===i?\"y\":void 0)||t.charAt(0).toLowerCase();var i}function Et(t){const e=t.options||(t.options={});e.plugins=Object(n.ec)(e.plugins,{}),e.scales=function(t,e){const i=n.A[t.type]||{scales:{}},o=e.scales||{},s=Tt(t.type,e),a=Object.create(null),r=Object.create(null);return Object.keys(o).forEach((t=>{const e=o[t],l=Rt(t,e),c=function(t,e){return t===e?\"_index_\":\"_value_\"}(l,s),h=i.scales||{};a[l]=a[l]||t,r[t]=Object(n.J)(Object.create(null),[{axis:l},e,h[l],h[c]])})),t.data.datasets.forEach((i=>{const s=i.type||t.type,l=i.indexAxis||Tt(s,e),c=(n.A[s]||{}).scales||{};Object.keys(c).forEach((t=>{const e=function(t,e){let i=t;return\"_index_\"===t?i=e:\"_value_\"===t&&(i=\"x\"===e?\"y\":\"x\"),i}(t,l),s=i[e+\"AxisID\"]||a[e]||e;r[s]=r[s]||Object.create(null),Object(n.J)(r[s],[{axis:e},o[s],c[t]])}))})),Object.keys(r).forEach((t=>{const e=r[t];Object(n.J)(e,[n.Mb.scales[e.type],n.Mb.scale])})),r}(t,e)}function zt(t){return(t=t||{}).datasets=t.datasets||[],t.labels=t.labels||[],t}const Ft=new Map,It=new Set;function Vt(t,e){let i=Ft.get(t);return i||(i=e(),Ft.set(t,i),It.add(i)),i}const Bt=(t,e,i)=>{const o=Object(n.Ob)(e,i);void 0!==o&&t.add(o)};class Wt{constructor(t){this._config=function(t){return(t=t||{}).data=zt(t.data),Et(t),t}(t),this._scopeCache=new Map,this._resolverCache=new Map}get type(){return this._config.type}set type(t){this._config.type=t}get data(){return this._config.data}set data(t){this._config.data=zt(t)}get options(){return this._config.options}set options(t){this._config.options=t}get plugins(){return this._config.plugins}update(){const t=this._config;this.clearCache(),Et(t)}clearCache(){this._scopeCache.clear(),this._resolverCache.clear()}datasetScopeKeys(t){return Vt(t,(()=>[[`datasets.${t}`,\"\"]]))}datasetAnimationScopeKeys(t,e){return Vt(`${t}.transition.${e}`,(()=>[[`datasets.${t}.transitions.${e}`,`transitions.${e}`],[`datasets.${t}`,\"\"]]))}datasetElementScopeKeys(t,e){return Vt(`${t}-${e}`,(()=>[[`datasets.${t}.elements.${e}`,`datasets.${t}`,`elements.${e}`,\"\"]]))}pluginScopeKeys(t){const e=t.id;return Vt(`${this.type}-plugin-${e}`,(()=>[[`plugins.${e}`,...t.additionalOptionScopes||[]]]))}_cachedScopes(t,e){const i=this._scopeCache;let n=i.get(t);return n&&!e||(n=new Map,i.set(t,n)),n}getOptionScopes(t,e,i){const{options:o,type:s}=this,a=this._cachedScopes(t,i),r=a.get(e);if(r)return r;const l=new Set;e.forEach((e=>{t&&(l.add(t),e.forEach((e=>Bt(l,t,e)))),e.forEach((t=>Bt(l,o,t))),e.forEach((t=>Bt(l,n.A[s]||{},t))),e.forEach((t=>Bt(l,n.Mb,t))),e.forEach((t=>Bt(l,n.E,t)))}));const c=[...l];return It.has(e)&&a.set(e,c),c}chartOptionScopes(){const{options:t,type:e}=this;return[t,n.A[e]||{},n.Mb.datasets[e]||{},{type:e},n.Mb,n.E]}resolveNamedOptions(t,e,i,o=[\"\"]){const s={$shared:!0},{resolver:a,subPrefixes:r}=Ht(this._resolverCache,t,o);let l=a;if(function(t,e){const{isScriptable:i,isIndexable:o}=Object(n.I)(t);for(const s of e)if(i(s)&&Object(n.F)(t[s])||o(s)&&Object(n.Kb)(t[s]))return!0;return!1}(a,e)){s.$shared=!1,i=Object(n.F)(i)?i():i;const e=this.createResolver(t,i,r);l=Object(n.G)(a,i,e)}for(const n of e)s[n]=l[n];return s}createResolver(t,e,i=[\"\"],o){const{resolver:s}=Ht(this._resolverCache,t,i);return Object(n.Rb)(e)?Object(n.G)(s,e,void 0,o):s}}function Ht(t,e,i){let o=t.get(e);o||(o=new Map,t.set(e,o));const s=i.join();let a=o.get(s);if(!a){a={resolver:Object(n.H)(e,i),subPrefixes:i.filter((t=>!t.toLowerCase().includes(\"hover\")))},o.set(s,a)}return a}const Nt=[\"top\",\"bottom\",\"left\",\"right\",\"chartArea\"];function $t(t,e){return\"top\"===t||\"bottom\"===t||-1===Nt.indexOf(t)&&\"x\"===e}function Ut(t,e){return function(i,n){return i[t]===n[t]?i[e]-n[e]:i[t]-n[t]}}function Yt(t){const e=t.chart,i=e.options.animation;e.notifyPlugins(\"afterRender\"),Object(n.o)(i&&i.onComplete,[t],e)}function Kt(t){const e=t.chart,i=e.options.animation;Object(n.o)(i&&i.onProgress,[t],e)}function Xt(){return\"undefined\"!==typeof window&&\"undefined\"!==typeof document}function Gt(t){return Xt()&&\"string\"===typeof t?t=document.getElementById(t):t&&t.length&&(t=t[0]),t&&t.canvas&&(t=t.canvas),t}const qt={},Jt=t=>{const e=Gt(t);return Object.values(qt).filter((t=>t.canvas===e)).pop()};class Zt{constructor(t,e){const i=this;this.config=e=new Wt(e);const s=Gt(t),a=Jt(s);if(a)throw new Error(\"Canvas is already in use. Chart with ID '\"+a.id+\"' must be destroyed before the canvas can be reused.\");const r=e.createResolver(e.chartOptionScopes(),i.getContext());this.platform=i._initializePlatform(s,e);const l=i.platform.acquireContext(s,r.aspectRatio),c=l&&l.canvas,h=c&&c.height,d=c&&c.width;this.id=Object(n.K)(),this.ctx=l,this.canvas=c,this.width=d,this.height=h,this._options=r,this._aspectRatio=this.aspectRatio,this._layers=[],this._metasets=[],this._stacks=void 0,this.boxes=[],this.currentDevicePixelRatio=void 0,this.chartArea=void 0,this._active=[],this._lastEvent=void 0,this._listeners={},this._sortedMetasets=[],this.scales={},this.scale=void 0,this._plugins=new Ct,this.$proxies={},this._hiddenIndices={},this.attached=!1,this._animationsDisabled=void 0,this.$context=void 0,this._doResize=Object(n.L)((()=>this.update(\"resize\")),r.resizeDelay||0),qt[i.id]=i,l&&c?(o.listen(i,\"complete\",Yt),o.listen(i,\"progress\",Kt),i._initialize(),i.attached&&i.update()):console.error(\"Failed to create chart: can't acquire context from the given item\")}get aspectRatio(){const{options:{aspectRatio:t,maintainAspectRatio:e},width:i,height:o,_aspectRatio:s}=this;return Object(n.Sb)(t)?e&&s?s:o?i/o:null:t}get data(){return this.config.data}set data(t){this.config.data=t}get options(){return this._options}set options(t){this.config.options=t}_initialize(){const t=this;return t.notifyPlugins(\"beforeInit\"),t.options.responsive?t.resize():Object(n.M)(t,t.options.devicePixelRatio),t.bindEvents(),t.notifyPlugins(\"afterInit\"),t}_initializePlatform(t,e){return e.platform?new e.platform:!Xt()||\"undefined\"!==typeof OffscreenCanvas&&t instanceof OffscreenCanvas?new it:new pt}clear(){return Object(n.kb)(this.canvas,this.ctx),this}stop(){return o.stop(this),this}resize(t,e){o.running(this)?this._resizeBeforeDraw={width:t,height:e}:this._resize(t,e)}_resize(t,e){const i=this,o=i.options,s=i.canvas,a=o.maintainAspectRatio&&i.aspectRatio,r=i.platform.getMaximumSize(s,t,e,a),l=i.currentDevicePixelRatio,c=o.devicePixelRatio||i.platform.getDevicePixelRatio();i.width===r.width&&i.height===r.height&&l===c||(i.width=r.width,i.height=r.height,i._aspectRatio=i.aspectRatio,Object(n.M)(i,c,!0),i.notifyPlugins(\"resize\",{size:r}),Object(n.o)(o.onResize,[i,r],i),i.attached&&i._doResize()&&i.render())}ensureScalesHaveIDs(){const t=this.options.scales||{};Object(n.e)(t,((t,e)=>{t.id=e}))}buildOrUpdateScales(){const t=this,e=t.options,i=e.scales,o=t.scales,s=Object.keys(o).reduce(((t,e)=>(t[e]=!1,t)),{});let a=[];i&&(a=a.concat(Object.keys(i).map((t=>{const e=i[t],n=Rt(t,e),o=\"r\"===n,s=\"x\"===n;return{options:e,dposition:o?\"chartArea\":s?\"bottom\":\"left\",dtype:o?\"radialLinear\":s?\"category\":\"linear\"}})))),Object(n.e)(a,(i=>{const a=i.options,r=a.id,l=Rt(r,a),c=Object(n.ec)(a.type,i.dtype);void 0!==a.position&&$t(a.position,l)===$t(i.dposition)||(a.position=i.dposition),s[r]=!0;let h=null;if(r in o&&o[r].type===c)h=o[r];else{h=new(Pt.getScale(c))({id:r,type:c,ctx:t.ctx,chart:t}),o[h.id]=h}h.init(a,e)})),Object(n.e)(s,((t,e)=>{t||delete o[e]})),Object(n.e)(o,(e=>{tt.configure(t,e,e.options),tt.addBox(t,e)}))}_updateMetasetIndex(t,e){const i=this._metasets,n=t.index;n!==e&&(i[n]=i[e],i[e]=t,t.index=e)}_updateMetasets(){const t=this,e=t._metasets,i=t.data.datasets.length,n=e.length;if(n>i){for(let e=i;e<n;++e)t._destroyDatasetMeta(e);e.splice(i,n-i)}t._sortedMetasets=e.slice(0).sort(Ut(\"order\",\"index\"))}_removeUnreferencedMetasets(){const t=this,{_metasets:e,data:{datasets:i}}=t;e.length>i.length&&delete t._stacks,e.forEach(((e,n)=>{0===i.filter((t=>t===e._dataset)).length&&t._destroyDatasetMeta(n)}))}buildOrUpdateControllers(){const t=this,e=[],i=t.data.datasets;let o,s;for(t._removeUnreferencedMetasets(),o=0,s=i.length;o<s;o++){const s=i[o];let a=t.getDatasetMeta(o);const r=s.type||t.config.type;if(a.type&&a.type!==r&&(t._destroyDatasetMeta(o),a=t.getDatasetMeta(o)),a.type=r,a.indexAxis=s.indexAxis||Tt(r,t.options),a.order=s.order||0,t._updateMetasetIndex(a,o),a.label=\"\"+s.label,a.visible=t.isDatasetVisible(o),a.controller)a.controller.updateIndex(o),a.controller.linkScales();else{const i=Pt.getController(r),{datasetElementType:s,dataElementType:l}=n.Mb.datasets[r];Object.assign(i.prototype,{dataElementType:Pt.getElement(l),datasetElementType:s&&Pt.getElement(s)}),a.controller=new i(t,o),e.push(a.controller)}}return t._updateMetasets(),e}_resetElements(){const t=this;Object(n.e)(t.data.datasets,((e,i)=>{t.getDatasetMeta(i).controller.reset()}),t)}reset(){this._resetElements(),this.notifyPlugins(\"reset\")}update(t){const e=this,i=e.config;i.update(),e._options=i.createResolver(i.chartOptionScopes(),e.getContext()),Object(n.e)(e.scales,(t=>{tt.removeBox(e,t)}));const o=e._animationsDisabled=!e.options.animation;if(e.ensureScalesHaveIDs(),e.buildOrUpdateScales(),e._plugins.invalidate(),!1===e.notifyPlugins(\"beforeUpdate\",{mode:t,cancelable:!0}))return;const s=e.buildOrUpdateControllers();e.notifyPlugins(\"beforeElementsUpdate\");let a=0;for(let n=0,r=e.data.datasets.length;n<r;n++){const{controller:t}=e.getDatasetMeta(n),i=!o&&-1===s.indexOf(t);t.buildOrUpdateElements(i),a=Math.max(+t.getMaxOverflow(),a)}e._minPadding=a,e._updateLayout(a),o||Object(n.e)(s,(t=>{t.reset()})),e._updateDatasets(t),e.notifyPlugins(\"afterUpdate\",{mode:t}),e._layers.sort(Ut(\"z\",\"_idx\")),e._lastEvent&&e._eventHandler(e._lastEvent,!0),e.render()}_updateLayout(t){const e=this;if(!1===e.notifyPlugins(\"beforeLayout\",{cancelable:!0}))return;tt.update(e,e.width,e.height,t);const i=e.chartArea,o=i.width<=0||i.height<=0;e._layers=[],Object(n.e)(e.boxes,(t=>{o&&\"chartArea\"===t.position||(t.configure&&t.configure(),e._layers.push(...t._layers()))}),e),e._layers.forEach(((t,e)=>{t._idx=e})),e.notifyPlugins(\"afterLayout\")}_updateDatasets(t){const e=this,i=\"function\"===typeof t;if(!1!==e.notifyPlugins(\"beforeDatasetsUpdate\",{mode:t,cancelable:!0})){for(let n=0,o=e.data.datasets.length;n<o;++n)e._updateDataset(n,i?t({datasetIndex:n}):t);e.notifyPlugins(\"afterDatasetsUpdate\",{mode:t})}}_updateDataset(t,e){const i=this,n=i.getDatasetMeta(t),o={meta:n,index:t,mode:e,cancelable:!0};!1!==i.notifyPlugins(\"beforeDatasetUpdate\",o)&&(n.controller._update(e),o.cancelable=!1,i.notifyPlugins(\"afterDatasetUpdate\",o))}render(){const t=this;!1!==t.notifyPlugins(\"beforeRender\",{cancelable:!0})&&(o.has(t)?t.attached&&!o.running(t)&&o.start(t):(t.draw(),Yt({chart:t})))}draw(){const t=this;let e;if(t._resizeBeforeDraw){const{width:e,height:i}=t._resizeBeforeDraw;t._resize(e,i),t._resizeBeforeDraw=null}if(t.clear(),t.width<=0||t.height<=0)return;if(!1===t.notifyPlugins(\"beforeDraw\",{cancelable:!0}))return;const i=t._layers;for(e=0;e<i.length&&i[e].z<=0;++e)i[e].draw(t.chartArea);for(t._drawDatasets();e<i.length;++e)i[e].draw(t.chartArea);t.notifyPlugins(\"afterDraw\")}_getSortedDatasetMetas(t){const e=this._sortedMetasets,i=[];let n,o;for(n=0,o=e.length;n<o;++n){const o=e[n];t&&!o.visible||i.push(o)}return i}getSortedVisibleDatasetMetas(){return this._getSortedDatasetMetas(!0)}_drawDatasets(){const t=this;if(!1===t.notifyPlugins(\"beforeDatasetsDraw\",{cancelable:!0}))return;const e=t.getSortedVisibleDatasetMetas();for(let i=e.length-1;i>=0;--i)t._drawDataset(e[i]);t.notifyPlugins(\"afterDatasetsDraw\")}_drawDataset(t){const e=this,i=e.ctx,o=t._clip,s=e.chartArea,a={meta:t,index:t.index,cancelable:!0};!1!==e.notifyPlugins(\"beforeDatasetDraw\",a)&&(Object(n.Tb)(i,{left:!1===o.left?0:s.left-o.left,right:!1===o.right?e.width:s.right+o.right,top:!1===o.top?0:s.top-o.top,bottom:!1===o.bottom?e.height:s.bottom+o.bottom}),t.controller.draw(),Object(n.Vb)(i),a.cancelable=!1,e.notifyPlugins(\"afterDatasetDraw\",a))}getElementsAtEventForMode(t,e,i,n){const o=N.modes[e];return\"function\"===typeof o?o(this,t,i,n):[]}getDatasetMeta(t){const e=this.data.datasets[t],i=this._metasets;let n=i.filter((t=>t&&t._dataset===e)).pop();return n||(n=i[t]={type:null,data:[],dataset:null,controller:null,hidden:null,xAxisID:null,yAxisID:null,order:e&&e.order||0,index:t,_dataset:e,_parsed:[],_sorted:!1}),n}getContext(){return this.$context||(this.$context={chart:this,type:\"chart\"})}getVisibleDatasetCount(){return this.getSortedVisibleDatasetMetas().length}isDatasetVisible(t){const e=this.data.datasets[t];if(!e)return!1;const i=this.getDatasetMeta(t);return\"boolean\"===typeof i.hidden?!i.hidden:!e.hidden}setDatasetVisibility(t,e){this.getDatasetMeta(t).hidden=!e}toggleDataVisibility(t){this._hiddenIndices[t]=!this._hiddenIndices[t]}getDataVisibility(t){return!this._hiddenIndices[t]}_updateDatasetVisibility(t,e){const i=this,n=e?\"show\":\"hide\",o=i.getDatasetMeta(t),s=o.controller._resolveAnimations(void 0,n);i.setDatasetVisibility(t,e),s.update(o,{visible:e}),i.update((e=>e.datasetIndex===t?n:void 0))}hide(t){this._updateDatasetVisibility(t,!1)}show(t){this._updateDatasetVisibility(t,!0)}_destroyDatasetMeta(t){const e=this,i=e._metasets&&e._metasets[t];i&&i.controller&&(i.controller._destroy(),delete e._metasets[t])}destroy(){const t=this,{canvas:e,ctx:i}=t;let s,a;for(t.stop(),o.remove(t),s=0,a=t.data.datasets.length;s<a;++s)t._destroyDatasetMeta(s);t.config.clearCache(),e&&(t.unbindEvents(),Object(n.kb)(e,i),t.platform.releaseContext(i),t.canvas=null,t.ctx=null),t.notifyPlugins(\"destroy\"),delete qt[t.id]}toBase64Image(...t){return this.canvas.toDataURL(...t)}bindEvents(){const t=this,e=t._listeners,i=t.platform,o=(n,o)=>{i.addEventListener(t,n,o),e[n]=o},s=(n,o)=>{e[n]&&(i.removeEventListener(t,n,o),delete e[n])};let a=function(e,i,n){e.offsetX=i,e.offsetY=n,t._eventHandler(e)};if(Object(n.e)(t.options.events,(t=>o(t,a))),t.options.responsive){let e;a=(e,i)=>{t.canvas&&t.resize(e,i)};const n=()=>{s(\"attach\",n),t.attached=!0,t.resize(),o(\"resize\",a),o(\"detach\",e)};e=()=>{t.attached=!1,s(\"resize\",a),o(\"attach\",n)},i.isAttached(t.canvas)?n():e()}else t.attached=!0}unbindEvents(){const t=this,e=t._listeners;e&&(delete t._listeners,Object(n.e)(e,((e,i)=>{t.platform.removeEventListener(t,i,e)})))}updateHoverStyle(t,e,i){const n=i?\"set\":\"remove\";let o,s,a,r;for(\"dataset\"===e&&(o=this.getDatasetMeta(t[0].datasetIndex),o.controller[\"_\"+n+\"DatasetHoverStyle\"]()),a=0,r=t.length;a<r;++a){s=t[a];const e=s&&this.getDatasetMeta(s.datasetIndex).controller;e&&e[n+\"HoverStyle\"](s.element,s.datasetIndex,s.index)}}getActiveElements(){return this._active||[]}setActiveElements(t){const e=this,i=e._active||[],o=t.map((({datasetIndex:t,index:i})=>{const n=e.getDatasetMeta(t);if(!n)throw new Error(\"No dataset found at index \"+t);return{datasetIndex:t,element:n.data[i],index:i}}));!Object(n.lb)(o,i)&&(e._active=o,e._updateHoverStyles(o,i))}notifyPlugins(t,e,i){return this._plugins.notify(this,t,e,i)}_updateHoverStyles(t,e,i){const n=this,o=n.options.hover,s=(t,e)=>t.filter((t=>!e.some((e=>t.datasetIndex===e.datasetIndex&&t.index===e.index)))),a=s(e,t),r=i?t:s(t,e);a.length&&n.updateHoverStyle(a,o.mode,!1),r.length&&o.mode&&n.updateHoverStyle(r,o.mode,!0)}_eventHandler(t,e){const i=this,n={event:t,replay:e,cancelable:!0},o=e=>(e.options.events||this.options.events).includes(t.type);if(!1===i.notifyPlugins(\"beforeEvent\",n,o))return;const s=i._handleEvent(t,e);return n.cancelable=!1,i.notifyPlugins(\"afterEvent\",n,o),(s||n.changed)&&i.render(),i}_handleEvent(t,e){const i=this,{_active:o=[],options:s}=i,a=s.hover,r=e;let l=[],c=!1,h=null;return\"mouseout\"!==t.type&&(l=i.getElementsAtEventForMode(t,a.mode,a,r),h=\"click\"===t.type?i._lastEvent:t),i._lastEvent=null,Object(n.b)(t,i.chartArea,i._minPadding)&&(Object(n.o)(s.onHover,[t,l,i],i),\"mouseup\"!==t.type&&\"click\"!==t.type&&\"contextmenu\"!==t.type||Object(n.o)(s.onClick,[t,l,i],i)),c=!Object(n.lb)(l,o),(c||e)&&(i._active=l,i._updateHoverStyles(l,o,e)),i._lastEvent=h,c}}const Qt=()=>Object(n.e)(Zt.instances,(t=>t._plugins.invalidate())),te=!0;function ee(t,e){const{startAngle:i,endAngle:o,pixelMargin:s,x:a,y:r,outerRadius:l,innerRadius:c}=e;let h=s/l;t.beginPath(),t.arc(a,r,l,i-h,o+h),c>s?(h=s/c,t.arc(a,r,c,o+h,i-h,!0)):t.arc(a,r,s,o+n.i,i-n.i),t.closePath(),t.clip()}function ie(t,e,i,o){const s=(a=t.options.borderRadius,Object(n.nb)(a,[\"outerStart\",\"outerEnd\",\"innerStart\",\"innerEnd\"]));var a;const r=(i-e)/2,l=Math.min(r,o*e/2),c=t=>{const e=(i-Math.min(r,t))*o/2;return Object(n.gc)(t,0,Math.min(r,e))};return{outerStart:c(s.outerStart),outerEnd:c(s.outerEnd),innerStart:Object(n.gc)(s.innerStart,0,l),innerEnd:Object(n.gc)(s.innerEnd,0,l)}}function ne(t,e,i,n){return{x:i+t*Math.cos(e),y:n+t*Math.sin(e)}}function oe(t,e){const{x:i,y:o,startAngle:s,endAngle:a,pixelMargin:r}=e,l=Math.max(e.outerRadius-r,0),c=e.innerRadius+r,{outerStart:h,outerEnd:d,innerStart:u,innerEnd:g}=ie(e,c,l,a-s),f=l-h,p=l-d,b=s+h/f,m=a-d/p,x=c+u,_=c+g,y=s+u/x,v=a-g/_;if(t.beginPath(),t.arc(i,o,l,b,m),d>0){const e=ne(p,m,i,o);t.arc(e.x,e.y,d,m,a+n.i)}const O=ne(_,a,i,o);if(t.lineTo(O.x,O.y),g>0){const e=ne(_,v,i,o);t.arc(e.x,e.y,g,a+n.i,v+Math.PI)}if(t.arc(i,o,c,a-g/c,s+u/c,!0),u>0){const e=ne(x,y,i,o);t.arc(e.x,e.y,u,y+Math.PI,s-n.i)}const j=ne(f,s,i,o);if(t.lineTo(j.x,j.y),h>0){const e=ne(f,b,i,o);t.arc(e.x,e.y,h,s-n.i,b)}t.closePath()}function se(t,e){const{options:i}=e,o=\"inner\"===i.borderAlign;i.borderWidth&&(o?(t.lineWidth=2*i.borderWidth,t.lineJoin=\"round\"):(t.lineWidth=i.borderWidth,t.lineJoin=\"bevel\"),e.fullCircles&&function(t,e,i){const{x:o,y:s,startAngle:a,endAngle:r,pixelMargin:l}=e,c=Math.max(e.outerRadius-l,0),h=e.innerRadius+l;let d;for(i&&(e.endAngle=e.startAngle+n.u,ee(t,e),e.endAngle=r,e.endAngle===e.startAngle&&(e.endAngle+=n.u,e.fullCircles--)),t.beginPath(),t.arc(o,s,h,a+n.u,a,!0),d=0;d<e.fullCircles;++d)t.stroke();for(t.beginPath(),t.arc(o,s,c,a,a+n.u),d=0;d<e.fullCircles;++d)t.stroke()}(t,e,o),o&&ee(t,e),oe(t,e),t.stroke())}Object.defineProperties(Zt,{defaults:{enumerable:te,value:n.Mb},instances:{enumerable:te,value:qt},overrides:{enumerable:te,value:n.A},registry:{enumerable:te,value:Pt},version:{enumerable:te,value:\"3.1.1\"},getChart:{enumerable:te,value:Jt},register:{enumerable:te,value:(...t)=>{Pt.add(...t),Qt()}},unregister:{enumerable:te,value:(...t)=>{Pt.remove(...t),Qt()}}});class ae extends bt{constructor(t){super(),this.options=void 0,this.circumference=void 0,this.startAngle=void 0,this.endAngle=void 0,this.innerRadius=void 0,this.outerRadius=void 0,this.pixelMargin=0,this.fullCircles=0,t&&Object.assign(this,t)}inRange(t,e,i){const o=this.getProps([\"x\",\"y\"],i),{angle:s,distance:a}=Object(n.mb)(o,{x:t,y:e}),{startAngle:r,endAngle:l,innerRadius:c,outerRadius:h,circumference:d}=this.getProps([\"startAngle\",\"endAngle\",\"innerRadius\",\"outerRadius\",\"circumference\"],i);return(d>=n.u||Object(n.Zb)(s,r,l))&&(a>=c&&a<=h)}getCenterPoint(t){const{x:e,y:i,startAngle:n,endAngle:o,innerRadius:s,outerRadius:a}=this.getProps([\"x\",\"y\",\"startAngle\",\"endAngle\",\"innerRadius\",\"outerRadius\"],t),r=(n+o)/2,l=(s+a)/2;return{x:e+Math.cos(r)*l,y:i+Math.sin(r)*l}}tooltipPosition(t){return this.getCenterPoint(t)}draw(t){const e=this,i=e.options,o=i.offset||0;if(e.pixelMargin=\"inner\"===i.borderAlign?.33:0,e.fullCircles=Math.floor(e.circumference/n.u),!(0===e.circumference||e.innerRadius<0||e.outerRadius<0)){if(t.save(),o&&e.circumference<n.u){const i=(e.startAngle+e.endAngle)/2;t.translate(Math.cos(i)*o,Math.sin(i)*o)}t.fillStyle=i.backgroundColor,t.strokeStyle=i.borderColor,function(t,e){if(e.fullCircles){e.endAngle=e.startAngle+n.u,oe(t,e);for(let i=0;i<e.fullCircles;++i)t.fill()}isNaN(e.circumference)||(e.endAngle=e.startAngle+e.circumference%n.u),oe(t,e),t.fill()}(t,e),se(t,e),t.restore()}}}function re(t,e,i=e){t.lineCap=Object(n.ec)(i.borderCapStyle,e.borderCapStyle),t.setLineDash(Object(n.ec)(i.borderDash,e.borderDash)),t.lineDashOffset=Object(n.ec)(i.borderDashOffset,e.borderDashOffset),t.lineJoin=Object(n.ec)(i.borderJoinStyle,e.borderJoinStyle),t.lineWidth=Object(n.ec)(i.borderWidth,e.borderWidth),t.strokeStyle=Object(n.ec)(i.borderColor,e.borderColor)}function le(t,e,i){t.lineTo(i.x,i.y)}function ce(t,e,i={}){const n=t.length,{start:o=0,end:s=n-1}=i,{start:a,end:r}=e,l=Math.max(o,a),c=Math.min(s,r),h=o<a&&s<a||o>r&&s>r;return{count:n,start:l,loop:e.loop,ilen:c<l&&!h?n+c-l:c-l}}function he(t,e,i,o){const{points:s,options:a}=e,{count:r,start:l,loop:c,ilen:h}=ce(s,i,o),d=function(t){return t.stepped?n.ub:t.tension?n.vb:le}(a);let u,g,f,{move:p=!0,reverse:b}=o||{};for(u=0;u<=h;++u)g=s[(l+(b?h-u:u))%r],g.skip||(p?(t.moveTo(g.x,g.y),p=!1):d(t,f,g,b,a.stepped),f=g);return c&&(g=s[(l+(b?h:0))%r],d(t,f,g,b,a.stepped)),!!c}function de(t,e,i,n){const o=e.points,{count:s,start:a,ilen:r}=ce(o,i,n),{move:l=!0,reverse:c}=n||{};let h,d,u,g,f,p,b=0,m=0;const x=t=>(a+(c?r-t:t))%s,_=()=>{g!==f&&(t.lineTo(b,f),t.lineTo(b,g),t.lineTo(b,p))};for(l&&(d=o[x(0)],t.moveTo(d.x,d.y)),h=0;h<=r;++h){if(d=o[x(h)],d.skip)continue;const e=d.x,i=d.y,n=0|e;n===u?(i<g?g=i:i>f&&(f=i),b=(m*b+e)/++m):(_(),t.lineTo(e,i),u=n,m=0,g=f=i),p=i}_()}function ue(t){const e=t.options,i=e.borderDash&&e.borderDash.length;return!t._decimated&&!t._loop&&!e.tension&&!e.stepped&&!i?de:he}ae.id=\"arc\",ae.defaults={borderAlign:\"center\",borderColor:\"#fff\",borderRadius:0,borderWidth:2,offset:0,angle:void 0},ae.defaultRoutes={backgroundColor:\"backgroundColor\"};const ge=\"function\"===typeof Path2D;function fe(t,e,i,n){ge&&1===e.segments.length?function(t,e,i,n){let o=e._path;o||(o=e._path=new Path2D,e.path(o,i,n)&&o.closePath()),re(t,e.options),t.stroke(o)}(t,e,i,n):function(t,e,i,n){const{segments:o,options:s}=e,a=ue(e);for(const r of o)re(t,s,r.style),t.beginPath(),a(t,e,r,{start:i,end:i+n-1})&&t.closePath(),t.stroke()}(t,e,i,n)}class pe extends bt{constructor(t){super(),this.animated=!0,this.options=void 0,this._loop=void 0,this._fullLoop=void 0,this._path=void 0,this._points=void 0,this._segments=void 0,this._decimated=!1,this._pointsUpdated=!1,t&&Object.assign(this,t)}updateControlPoints(t){const e=this,i=e.options;if(i.tension&&!i.stepped&&!e._pointsUpdated){const o=i.spanGaps?e._loop:e._fullLoop;Object(n.ob)(e._points,i,t,o),e._pointsUpdated=!0}}set points(t){const e=this;e._points=t,delete e._segments,delete e._path,e._pointsUpdated=!1}get points(){return this._points}get segments(){return this._segments||(this._segments=Object(n.pb)(this,this.options.segment))}first(){const t=this.segments,e=this.points;return t.length&&e[t[0].start]}last(){const t=this.segments,e=this.points,i=t.length;return i&&e[t[i-1].end]}interpolate(t,e){const i=this,o=i.options,s=t[e],a=i.points,r=Object(n.qb)(i,{property:e,start:s,end:s});if(!r.length)return;const l=[],c=function(t){return t.stepped?n.rb:t.tension?n.sb:n.tb}(o);let h,d;for(h=0,d=r.length;h<d;++h){const{start:i,end:n}=r[h],d=a[i],u=a[n];if(d===u){l.push(d);continue}const g=c(d,u,Math.abs((s-d[e])/(u[e]-d[e])),o.stepped);g[e]=t[e],l.push(g)}return 1===l.length?l[0]:l}pathSegment(t,e,i){return ue(this)(t,this,e,i)}path(t,e,i){const n=this,o=n.segments,s=ue(n);let a=n._loop;e=e||0,i=i||n.points.length-e;for(const r of o)a&=s(t,n,r,{start:e,end:e+i-1});return!!a}draw(t,e,i,n){const o=this,s=o.options||{};(o.points||[]).length&&s.borderWidth&&(t.save(),fe(t,o,i,n),t.restore(),o.animated&&(o._pointsUpdated=!1,o._path=void 0))}}function be(t,e,i,n){const o=t.options,{[i]:s}=t.getProps([i],n);return Math.abs(e-s)<o.radius+o.hitRadius}pe.id=\"line\",pe.defaults={borderCapStyle:\"butt\",borderDash:[],borderDashOffset:0,borderJoinStyle:\"miter\",borderWidth:3,capBezierPoints:!0,cubicInterpolationMode:\"default\",fill:!1,spanGaps:!1,stepped:!1,tension:0},pe.defaultRoutes={backgroundColor:\"backgroundColor\",borderColor:\"borderColor\"},pe.descriptors={_scriptable:!0,_indexable:t=>\"borderDash\"!==t&&\"fill\"!==t};class me extends bt{constructor(t){super(),this.options=void 0,this.parsed=void 0,this.skip=void 0,this.stop=void 0,t&&Object.assign(this,t)}inRange(t,e,i){const n=this.options,{x:o,y:s}=this.getProps([\"x\",\"y\"],i);return Math.pow(t-o,2)+Math.pow(e-s,2)<Math.pow(n.hitRadius+n.radius,2)}inXRange(t,e){return be(this,t,\"x\",e)}inYRange(t,e){return be(this,t,\"y\",e)}getCenterPoint(t){const{x:e,y:i}=this.getProps([\"x\",\"y\"],t);return{x:e,y:i}}size(t){let e=(t=t||this.options||{}).radius||0;e=Math.max(e,e&&t.hoverRadius||0);return 2*(e+(e&&t.borderWidth||0))}draw(t){const e=this,i=e.options;e.skip||i.radius<.1||(t.strokeStyle=i.borderColor,t.lineWidth=i.borderWidth,t.fillStyle=i.backgroundColor,Object(n.wb)(t,i,e.x,e.y))}getRange(){const t=this.options||{};return t.radius+t.hitRadius}}function xe(t,e){const{x:i,y:n,base:o,width:s,height:a}=t.getProps([\"x\",\"y\",\"base\",\"width\",\"height\"],e);let r,l,c,h,d;return t.horizontal?(d=a/2,r=Math.min(i,o),l=Math.max(i,o),c=n-d,h=n+d):(d=s/2,r=i-d,l=i+d,c=Math.min(n,o),h=Math.max(n,o)),{left:r,top:c,right:l,bottom:h}}function _e(t){let e=t.options.borderSkipped;const i={};return e?(e=t.horizontal?ye(e,\"left\",\"right\",t.base>t.x):ye(e,\"bottom\",\"top\",t.base<t.y),i[e]=!0,i):i}function ye(t,e,i,n){var o,s,a;return n?(a=i,t=ve(t=(o=t)===(s=e)?a:o===a?s:o,i,e)):t=ve(t,e,i),t}function ve(t,e,i){return\"start\"===t?e:\"end\"===t?i:t}function Oe(t,e,i,n){return t?0:Math.max(Math.min(e,n),i)}function je(t){const e=xe(t),i=e.right-e.left,o=e.bottom-e.top,s=function(t,e,i){const o=t.options.borderWidth,s=_e(t),a=Object(n.yb)(o);return{t:Oe(s.top,a.top,0,i),r:Oe(s.right,a.right,0,e),b:Oe(s.bottom,a.bottom,0,i),l:Oe(s.left,a.left,0,e)}}(t,i/2,o/2),a=function(t,e,i){const o=t.options.borderRadius,s=Object(n.zb)(o),a=Math.min(e,i),r=_e(t);return{topLeft:Oe(r.top||r.left,s.topLeft,0,a),topRight:Oe(r.top||r.right,s.topRight,0,a),bottomLeft:Oe(r.bottom||r.left,s.bottomLeft,0,a),bottomRight:Oe(r.bottom||r.right,s.bottomRight,0,a)}}(t,i/2,o/2);return{outer:{x:e.left,y:e.top,w:i,h:o,radius:a},inner:{x:e.left+s.l,y:e.top+s.t,w:i-s.l-s.r,h:o-s.t-s.b,radius:{topLeft:Math.max(0,a.topLeft-Math.max(s.t,s.l)),topRight:Math.max(0,a.topRight-Math.max(s.t,s.r)),bottomLeft:Math.max(0,a.bottomLeft-Math.max(s.b,s.l)),bottomRight:Math.max(0,a.bottomRight-Math.max(s.b,s.r))}}}}function Me(t,e,i,n){const o=null===e,s=null===i,a=t&&!(o&&s)&&xe(t,n);return a&&(o||e>=a.left&&e<=a.right)&&(s||i>=a.top&&i<=a.bottom)}function we(t,e){t.rect(e.x,e.y,e.w,e.h)}me.id=\"point\",me.defaults={borderWidth:1,hitRadius:1,hoverBorderWidth:1,hoverRadius:4,pointStyle:\"circle\",radius:3,rotation:0},me.defaultRoutes={backgroundColor:\"backgroundColor\",borderColor:\"borderColor\"};class ke extends bt{constructor(t){super(),this.options=void 0,this.horizontal=void 0,this.base=void 0,this.width=void 0,this.height=void 0,t&&Object.assign(this,t)}draw(t){const e=this.options,{inner:i,outer:o}=je(this),s=(a=o.radius).topLeft||a.topRight||a.bottomLeft||a.bottomRight?n.xb:we;var a;t.save(),o.w===i.w&&o.h===i.h||(t.beginPath(),s(t,o),t.clip(),s(t,i),t.fillStyle=e.borderColor,t.fill(\"evenodd\")),t.beginPath(),s(t,i),t.fillStyle=e.backgroundColor,t.fill(),t.restore()}inRange(t,e,i){return Me(this,t,e,i)}inXRange(t,e){return Me(this,t,null,e)}inYRange(t,e){return Me(this,null,t,e)}getCenterPoint(t){const{x:e,y:i,base:n,horizontal:o}=this.getProps([\"x\",\"y\",\"base\",\"horizontal\"],t);return{x:o?(e+n)/2:e,y:o?i:(i+n)/2}}getRange(t){return\"x\"===t?this.width/2:this.height/2}}ke.id=\"bar\",ke.defaults={borderSkipped:\"start\",borderWidth:0,borderRadius:0,pointStyle:void 0},ke.defaultRoutes={backgroundColor:\"backgroundColor\",borderColor:\"borderColor\"};var Se=Object.freeze({__proto__:null,ArcElement:ae,LineElement:pe,PointElement:me,BarElement:ke});function De(t){if(t._decimated){const e=t._data;delete t._decimated,delete t._data,Object.defineProperty(t,\"data\",{value:e})}}function Pe(t){t.data.datasets.forEach((t=>{De(t)}))}var Ce={id:\"decimation\",defaults:{algorithm:\"min-max\",enabled:!1},beforeElementsUpdate:(t,e,i)=>{if(!i.enabled)return void Pe(t);const o=t.width;t.data.datasets.forEach(((e,s)=>{const{_data:a,indexAxis:r}=e,l=t.getDatasetMeta(s),c=a||e.data;if(\"y\"===Object(n.C)([r,t.options.indexAxis]))return;if(\"line\"!==l.type)return;const h=t.scales[l.xAxisID];if(\"linear\"!==h.type&&\"time\"!==h.type)return;if(t.options.parsing)return;let d,{start:u,count:g}=function(t,e){const i=e.length;let o,s=0;const{iScale:a}=t,{min:r,max:l,minDefined:c,maxDefined:h}=a.getUserBounds();return c&&(s=Object(n.gc)(Object(n.hc)(e,a.axis,r).lo,0,i-1)),o=h?Object(n.gc)(Object(n.hc)(e,a.axis,l).hi+1,s,i)-s:i-s,{start:s,count:o}}(l,c);if(g<=4*o)De(e);else{switch(Object(n.Sb)(a)&&(e._data=c,delete e.data,Object.defineProperty(e,\"data\",{configurable:!0,enumerable:!0,get:function(){return this._decimated},set:function(t){this._data=t}})),i.algorithm){case\"lttb\":d=function(t,e,i,n,o){const s=o.samples||n;if(s>=i)return t.slice(e,e+i);const a=[],r=(i-2)/(s-2);let l=0;const c=e+i-1;let h,d,u,g,f,p=e;for(a[l++]=t[p],h=0;h<s-2;h++){let n,o=0,s=0;const c=Math.floor((h+1)*r)+1+e,b=Math.min(Math.floor((h+2)*r)+1,i)+e,m=b-c;for(n=c;n<b;n++)o+=t[n].x,s+=t[n].y;o/=m,s/=m;const x=Math.floor(h*r)+1+e,_=Math.floor((h+1)*r)+1+e,{x:y,y:v}=t[p];for(u=g=-1,n=x;n<_;n++)g=.5*Math.abs((y-o)*(t[n].y-v)-(y-t[n].x)*(s-v)),g>u&&(u=g,d=t[n],f=n);a[l++]=d,p=f}return a[l++]=t[c],a}(c,u,g,o,i);break;case\"min-max\":d=function(t,e,i,o){let s,a,r,l,c,h,d,u,g,f,p=0,b=0;const m=[],x=e+i-1,_=t[e].x,y=t[x].x-_;for(s=e;s<e+i;++s){a=t[s],r=(a.x-_)/y*o,l=a.y;const e=0|r;if(e===c)l<g?(g=l,h=s):l>f&&(f=l,d=s),p=(b*p+a.x)/++b;else{const i=s-1;if(!Object(n.Sb)(h)&&!Object(n.Sb)(d)){const e=Math.min(h,d),n=Math.max(h,d);e!==u&&e!==i&&m.push({...t[e],x:p}),n!==u&&n!==i&&m.push({...t[n],x:p})}s>0&&i!==u&&m.push(t[i]),m.push(a),c=e,b=0,g=f=l,h=d=u=s}}return m}(c,u,g,o);break;default:throw new Error(`Unsupported decimation algorithm '${i.algorithm}'`)}e._decimated=d}}))},destroy(t){Pe(t)}};function Ae(t,e,i){const o=function(t){const e=t.options,i=e.fill;let o=Object(n.ec)(i&&i.target,i);return void 0===o&&(o=!!e.backgroundColor),!1!==o&&null!==o&&(!0===o?\"origin\":o)}(t);if(Object(n.Rb)(o))return!isNaN(o.value)&&o;let s=parseFloat(o);return Object(n.Pb)(s)&&Math.floor(s)===s?(\"-\"!==o[0]&&\"+\"!==o[0]||(s=e+s),!(s===e||s<0||s>=i)&&s):[\"origin\",\"start\",\"end\",\"stack\"].indexOf(o)>=0&&o}class Le{constructor(t){this.x=t.x,this.y=t.y,this.radius=t.radius}pathSegment(t,e,i){const{x:o,y:s,radius:a}=this;return e=e||{start:0,end:n.u},t.arc(o,s,a,e.end,e.start,!0),!i.bounds}interpolate(t){const{x:e,y:i,radius:n}=this,o=t.angle;return{x:e+Math.cos(o)*n,y:i+Math.sin(o)*n,angle:o}}}function Te(t){return(t.scale||{}).getPointPositionForValue?function(t){const{scale:e,fill:i}=t,o=e.options,s=e.getLabels().length,a=[],r=o.reverse?e.max:e.min,l=o.reverse?e.min:e.max;let c,h,d;if(d=\"start\"===i?r:\"end\"===i?l:Object(n.Rb)(i)?i.value:e.getBaseValue(),o.grid.circular)return h=e.getPointPositionForValue(0,r),new Le({x:h.x,y:h.y,radius:e.getDistanceFromCenterForValue(d)});for(c=0;c<s;++c)a.push(e.getPointPositionForValue(c,d));return a}(t):function(t){const{scale:e={},fill:i}=t;let o,s=null;return\"start\"===i?s=e.bottom:\"end\"===i?s=e.top:Object(n.Rb)(i)?s=e.getPixelForValue(i.value):e.getBasePixel&&(s=e.getBasePixel()),Object(n.Pb)(s)?(o=e.isHorizontal(),{x:o?s:null,y:o?null:s}):null}(t)}function Re(t){const{chart:e,scale:i,index:n,line:o}=t,s=[],a=o.segments,r=o.points,l=function(t,e){const i=[],n=t.getSortedVisibleDatasetMetas();for(let o=0;o<n.length;o++){const t=n[o];if(t.index===e)break;Ee(t)&&i.unshift(t.dataset)}return i}(e,n);l.push(Ie({x:null,y:i.bottom},o));for(let c=0;c<a.length;c++){const t=a[c];for(let e=t.start;e<=t.end;e++)ze(s,r[e],l)}return new pe({points:s,options:{}})}const Ee=t=>\"line\"===t.type&&!t.hidden;function ze(t,e,i){const n=[];for(let o=0;o<i.length;o++){const s=i[o],{first:a,last:r,point:l}=Fe(s,e,\"x\");if(!(!l||a&&r))if(a)n.unshift(l);else if(t.push(l),!r)break}t.push(...n)}function Fe(t,e,i){const n=t.interpolate(e,i);if(!n)return{};const o=n[i],s=t.segments,a=t.points;let r=!1,l=!1;for(let c=0;c<s.length;c++){const t=s[c],e=a[t.start][i],n=a[t.end][i];if(o>=e&&o<=n){r=o===e,l=o===n;break}}return{first:r,last:l,point:n}}function Ie(t,e){let i=[],o=!1;return Object(n.Kb)(t)?(o=!0,i=t):i=function(t,e){const{x:i=null,y:n=null}=t||{},o=e.points,s=[];return e.segments.forEach((t=>{const e=o[t.start],a=o[t.end];null!==n?(s.push({x:e.x,y:n}),s.push({x:a.x,y:n})):null!==i&&(s.push({x:i,y:e.y}),s.push({x:i,y:a.y}))})),s}(t,e),i.length?new pe({points:i,options:{tension:0},_loop:o,_fullLoop:o}):null}function Ve(t,e,i){let o=t[e].fill;const s=[e];let a;if(!i)return o;for(;!1!==o&&-1===s.indexOf(o);){if(!Object(n.Pb)(o))return o;if(a=t[o],!a)return!1;if(a.visible)return o;s.push(o),o=a.fill}return!1}function Be(t,e,i){t.beginPath(),e.path(t),t.lineTo(e.last().x,i),t.lineTo(e.first().x,i),t.closePath(),t.clip()}function We(t,e,i,o){if(o)return;let s=e[t],a=i[t];return\"angle\"===t&&(s=Object(n.Bb)(s),a=Object(n.Bb)(a)),{property:t,start:s,end:a}}function He(t,e,i,n){return t&&e?n(t[i],e[i]):t?t[i]:e?e[i]:0}function Ne(t,e,i){const{top:n,bottom:o}=e.chart.chartArea,{property:s,start:a,end:r}=i||{};\"x\"===s&&(t.beginPath(),t.rect(a,n,r-a,o-n),t.clip())}function $e(t,e,i,n){const o=e.interpolate(i,n);o&&t.lineTo(o.x,o.y)}function Ue(t,e){const{line:i,target:o,property:s,color:a,scale:r}=e,l=function(t,e,i){const o=t.segments,s=t.points,a=e.points,r=[];for(const l of o){const t=We(i,s[l.start],s[l.end],l.loop);if(!e.segments){r.push({source:l,target:t,start:s[l.start],end:s[l.end]});continue}const o=Object(n.qb)(e,t);for(const e of o){const o=We(i,a[e.start],a[e.end],e.loop),c=Object(n.Ab)(l,s,o);for(const n of c)r.push({source:n,target:e,start:{[i]:He(t,o,\"start\",Math.max)},end:{[i]:He(t,o,\"end\",Math.min)}})}}return r}(i,o,s);for(const{source:n,target:c,start:h,end:d}of l){const{style:{backgroundColor:e=a}={}}=n;t.save(),t.fillStyle=e,Ne(t,r,We(s,h,d)),t.beginPath();const l=!!i.pathSegment(t,n);l?t.closePath():$e(t,o,d,s);const u=!!o.pathSegment(t,c,{move:l,reverse:!0}),g=l&&u;g||$e(t,o,h,s),t.closePath(),t.fill(g?\"evenodd\":\"nonzero\"),t.restore()}}function Ye(t,e,i){const o=function(t){const{chart:e,fill:i,line:o}=t;if(Object(n.Pb)(i))return function(t,e){const i=t.getDatasetMeta(e);return i&&t.isDatasetVisible(e)?i.dataset:null}(e,i);if(\"stack\"===i)return Re(t);const s=Te(t);return s instanceof Le?s:Ie(s,o)}(e),{line:s,scale:a,axis:r}=e,l=s.options,c=l.fill,h=l.backgroundColor,{above:d=h,below:u=h}=c||{};o&&s.points.length&&(Object(n.Tb)(t,i),function(t,e){const{line:i,target:n,above:o,below:s,area:a,scale:r}=e,l=i._loop?\"angle\":e.axis;t.save(),\"x\"===l&&s!==o&&(Be(t,n,a.top),Ue(t,{line:i,target:n,color:o,scale:r,property:l}),t.restore(),t.save(),Be(t,n,a.bottom)),Ue(t,{line:i,target:n,color:s,scale:r,property:l}),t.restore()}(t,{line:s,target:o,above:d,below:u,area:i,scale:a,axis:r}),Object(n.Vb)(t))}var Ke={id:\"filler\",afterDatasetsUpdate(t,e,i){const n=(t.data.datasets||[]).length,o=[];let s,a,r,l;for(a=0;a<n;++a)s=t.getDatasetMeta(a),r=s.dataset,l=null,r&&r.options&&r instanceof pe&&(l={visible:t.isDatasetVisible(a),index:a,fill:Ae(r,a,n),chart:t,axis:s.controller.options.indexAxis,scale:s.vScale,line:r}),s.$filler=l,o.push(l);for(a=0;a<n;++a)l=o[a],l&&!1!==l.fill&&(l.fill=Ve(o,a,i.propagate))},beforeDatasetsDraw(t,e,i){const n=t.getSortedVisibleDatasetMetas(),o=t.chartArea;for(let s=n.length-1;s>=0;--s){const e=n[s].$filler;e&&(e.line.updateControlPoints(o),\"beforeDatasetsDraw\"===i.drawTime&&Ye(t.ctx,e,o))}},beforeDatasetDraw(t,e,i){const n=e.meta.$filler;n&&!1!==n.fill&&\"beforeDatasetDraw\"===i.drawTime&&Ye(t.ctx,n,t.chartArea)},defaults:{propagate:!0,drawTime:\"beforeDatasetDraw\"}};const Xe=(t,e)=>{let{boxHeight:i=e,boxWidth:n=e}=t;return t.usePointStyle&&(i=Math.min(i,e),n=Math.min(n,e)),{boxWidth:n,boxHeight:i,itemHeight:Math.max(e,i)}};class Ge extends bt{constructor(t){super(),this._added=!1,this.legendHitBoxes=[],this._hoveredItem=null,this.doughnutMode=!1,this.chart=t.chart,this.options=t.options,this.ctx=t.ctx,this.legendItems=void 0,this.columnSizes=void 0,this.lineWidths=void 0,this.maxHeight=void 0,this.maxWidth=void 0,this.top=void 0,this.bottom=void 0,this.left=void 0,this.right=void 0,this.height=void 0,this.width=void 0,this._margins=void 0,this.position=void 0,this.weight=void 0,this.fullSize=void 0}update(t,e,i){const n=this;n.maxWidth=t,n.maxHeight=e,n._margins=i,n.setDimensions(),n.buildLabels(),n.fit()}setDimensions(){const t=this;t.isHorizontal()?(t.width=t.maxWidth,t.left=0,t.right=t.width):(t.height=t.maxHeight,t.top=0,t.bottom=t.height)}buildLabels(){const t=this,e=t.options.labels||{};let i=Object(n.o)(e.generateLabels,[t.chart],t)||[];e.filter&&(i=i.filter((i=>e.filter(i,t.chart.data)))),e.sort&&(i=i.sort(((i,n)=>e.sort(i,n,t.chart.data)))),t.options.reverse&&i.reverse(),t.legendItems=i}fit(){const t=this,{options:e,ctx:i}=t;if(!e.display)return void(t.width=t.height=0);const o=e.labels,s=Object(n.x)(o.font),a=s.size,r=t._computeTitleHeight(),{boxWidth:l,itemHeight:c}=Xe(o,a);let h,d;i.font=s.string,t.isHorizontal()?(h=t.maxWidth,d=t._fitRows(r,a,l,c)+10):(d=t.maxHeight,h=t._fitCols(r,a,l,c)+10),t.width=Math.min(h,e.maxWidth||t.maxWidth),t.height=Math.min(d,e.maxHeight||t.maxHeight)}_fitRows(t,e,i,n){const o=this,{ctx:s,maxWidth:a,options:{labels:{padding:r}}}=o,l=o.legendHitBoxes=[],c=o.lineWidths=[0],h=n+r;let d=t;s.textAlign=\"left\",s.textBaseline=\"middle\";let u=-1,g=-h;return o.legendItems.forEach(((t,o)=>{const f=i+e/2+s.measureText(t.text).width;(0===o||c[c.length-1]+f+2*r>a)&&(d+=h,c[c.length-(o>0?0:1)]=0,g+=h,u++),l[o]={left:0,top:g,row:u,width:f,height:n},c[c.length-1]+=f+r})),d}_fitCols(t,e,i,n){const o=this,{ctx:s,maxHeight:a,options:{labels:{padding:r}}}=o,l=o.legendHitBoxes=[],c=o.columnSizes=[],h=a-t;let d=r,u=0,g=0,f=0,p=0,b=0;return o.legendItems.forEach(((t,o)=>{const a=i+e/2+s.measureText(t.text).width;o>0&&g+e+2*r>h&&(d+=u+r,c.push({width:u,height:g}),f+=u+r,b++,p=0,u=g=0),u=Math.max(u,a),g+=e+r,l[o]={left:f,top:p,col:b,width:a,height:n},p+=n+r})),d+=u,c.push({width:u,height:g}),d}adjustHitBoxes(){const t=this;if(!t.options.display)return;const e=t._computeTitleHeight(),{legendHitBoxes:i,options:{align:o,labels:{padding:s}}}=t;if(this.isHorizontal()){let a=0,r=Object(n.z)(o,t.left+s,t.right-t.lineWidths[a]);for(const l of i)a!==l.row&&(a=l.row,r=Object(n.z)(o,t.left+s,t.right-t.lineWidths[a])),l.top+=t.top+e+s,l.left=r,r+=l.width+s}else{let a=0,r=Object(n.z)(o,t.top+e+s,t.bottom-t.columnSizes[a].height);for(const l of i)l.col!==a&&(a=l.col,r=Object(n.z)(o,t.top+e+s,t.bottom-t.columnSizes[a].height)),l.top=r,l.left+=t.left+s,r+=l.height+s}}isHorizontal(){return\"top\"===this.options.position||\"bottom\"===this.options.position}draw(){const t=this;if(t.options.display){const e=t.ctx;Object(n.Tb)(e,t),t._draw(),Object(n.Vb)(e)}}_draw(){const t=this,{options:e,columnSizes:i,lineWidths:o,ctx:s}=t,{align:a,labels:r}=e,l=n.Mb.color,c=Object(n.Cb)(e.rtl,t.left,t.width),h=Object(n.x)(r.font),{color:d,padding:u}=r,g=h.size,f=g/2;let p;t.drawTitle(),s.textAlign=c.textAlign(\"left\"),s.textBaseline=\"middle\",s.lineWidth=.5,s.font=h.string;const{boxWidth:b,boxHeight:m,itemHeight:x}=Xe(r,g),_=t.isHorizontal(),y=this._computeTitleHeight();p=_?{x:Object(n.z)(a,t.left+u,t.right-o[0]),y:t.top+u+y,line:0}:{x:t.left+u,y:Object(n.z)(a,t.top+y+u,t.bottom-i[0].height),line:0},Object(n.Db)(t.ctx,e.textDirection);const v=x+u;t.legendItems.forEach(((e,O)=>{s.strokeStyle=e.fontColor||d,s.fillStyle=e.fontColor||d;const j=s.measureText(e.text).width,M=c.textAlign(e.textAlign||(e.textAlign=r.textAlign)),w=b+g/2+j;let k=p.x,S=p.y;c.setWidth(t.width),_?O>0&&k+w+u>t.right&&(S=p.y+=v,p.line++,k=p.x=Object(n.z)(a,t.left+u,t.right-o[p.line])):O>0&&S+v>t.bottom&&(k=p.x=k+i[p.line].width+u,p.line++,S=p.y=Object(n.z)(a,t.top+y+u,t.bottom-i[p.line].height));!function(t,e,i){if(isNaN(b)||b<=0||isNaN(m)||m<0)return;s.save();const o=Object(n.ec)(i.lineWidth,1);if(s.fillStyle=Object(n.ec)(i.fillStyle,l),s.lineCap=Object(n.ec)(i.lineCap,\"butt\"),s.lineDashOffset=Object(n.ec)(i.lineDashOffset,0),s.lineJoin=Object(n.ec)(i.lineJoin,\"miter\"),s.lineWidth=o,s.strokeStyle=Object(n.ec)(i.strokeStyle,l),s.setLineDash(Object(n.ec)(i.lineDash,[])),r.usePointStyle){const a={radius:b*Math.SQRT2/2,pointStyle:i.pointStyle,rotation:i.rotation,borderWidth:o},r=c.xPlus(t,b/2),l=e+f;Object(n.wb)(s,a,r,l)}else{const a=e+Math.max((g-m)/2,0),r=c.leftForLtr(t,b),l=Object(n.zb)(i.borderRadius);s.beginPath(),Object.values(l).some((t=>0!==t))?Object(n.xb)(s,{x:r,y:a,w:b,h:m,radius:l}):s.rect(r,a,b,m),s.fill(),0!==o&&s.stroke()}s.restore()}(c.x(k),S,e),k=Object(n.Eb)(M,k+b+f,t.right),function(t,e,i){Object(n.w)(s,i.text,t,e+x/2,h,{strikethrough:i.hidden,textAlign:i.textAlign})}(c.x(k),S,e),_?p.x+=w+u:p.y+=v})),Object(n.Fb)(t.ctx,e.textDirection)}drawTitle(){const t=this,e=t.options,i=e.title,o=Object(n.x)(i.font),s=Object(n.d)(i.padding);if(!i.display)return;const a=Object(n.Cb)(e.rtl,t.left,t.width),r=t.ctx,l=i.position,c=o.size/2,h=s.top+c;let d,u=t.left,g=t.width;if(this.isHorizontal())g=Math.max(...t.lineWidths),d=t.top+h,u=Object(n.z)(e.align,u,t.right-g);else{const i=t.columnSizes.reduce(((t,e)=>Math.max(t,e.height)),0);d=h+Object(n.z)(e.align,t.top,t.bottom-i-e.labels.padding-t._computeTitleHeight())}const f=Object(n.z)(l,u,u+g);r.textAlign=a.textAlign(Object(n.y)(l)),r.textBaseline=\"middle\",r.strokeStyle=i.color,r.fillStyle=i.color,r.font=o.string,Object(n.w)(r,i.text,f,d,o)}_computeTitleHeight(){const t=this.options.title,e=Object(n.x)(t.font),i=Object(n.d)(t.padding);return t.display?e.lineHeight+i.height:0}_getLegendItemAt(t,e){const i=this;let n,o,s;if(t>=i.left&&t<=i.right&&e>=i.top&&e<=i.bottom)for(s=i.legendHitBoxes,n=0;n<s.length;++n)if(o=s[n],t>=o.left&&t<=o.left+o.width&&e>=o.top&&e<=o.top+o.height)return i.legendItems[n];return null}handleEvent(t){const e=this,i=e.options;if(!function(t,e){if(\"mousemove\"===t&&(e.onHover||e.onLeave))return!0;if(e.onClick&&(\"click\"===t||\"mouseup\"===t))return!0;return!1}(t.type,i))return;const o=e._getLegendItemAt(t.x,t.y);if(\"mousemove\"===t.type){const r=e._hoveredItem,l=(a=o,null!==(s=r)&&null!==a&&s.datasetIndex===a.datasetIndex&&s.index===a.index);r&&!l&&Object(n.o)(i.onLeave,[t,r,e],e),e._hoveredItem=o,o&&!l&&Object(n.o)(i.onHover,[t,o,e],e)}else o&&Object(n.o)(i.onClick,[t,o,e],e);var s,a}}var qe={id:\"legend\",_element:Ge,start(t,e,i){const n=t.legend=new Ge({ctx:t.ctx,options:i,chart:t});tt.configure(t,n,i),tt.addBox(t,n)},stop(t){tt.removeBox(t,t.legend),delete t.legend},beforeUpdate(t,e,i){const n=t.legend;tt.configure(t,n,i),n.options=i},afterUpdate(t){const e=t.legend;e.buildLabels(),e.adjustHitBoxes()},afterEvent(t,e){e.replay||t.legend.handleEvent(e.event)},defaults:{display:!0,position:\"top\",align:\"center\",fullSize:!0,reverse:!1,weight:1e3,onClick(t,e,i){const n=e.datasetIndex,o=i.chart;o.isDatasetVisible(n)?(o.hide(n),e.hidden=!0):(o.show(n),e.hidden=!1)},onHover:null,onLeave:null,labels:{color:t=>t.chart.options.color,boxWidth:40,padding:10,generateLabels(t){const e=t.data.datasets,{labels:{usePointStyle:i,pointStyle:o,textAlign:s,color:a}}=t.legend.options;return t._getSortedDatasetMetas().map((t=>{const r=t.controller.getStyle(i?0:void 0),l=Object(n.d)(r.borderWidth);return{text:e[t.index].label,fillStyle:r.backgroundColor,fontColor:a,hidden:!t.visible,lineCap:r.borderCapStyle,lineDash:r.borderDash,lineDashOffset:r.borderDashOffset,lineJoin:r.borderJoinStyle,lineWidth:(l.width+l.height)/4,strokeStyle:r.borderColor,pointStyle:o||r.pointStyle,rotation:r.rotation,textAlign:s||r.textAlign,borderRadius:0,datasetIndex:t.index}}),this)}},title:{color:t=>t.chart.options.color,display:!1,position:\"center\",text:\"\"}},descriptors:{_scriptable:t=>!t.startsWith(\"on\"),labels:{_scriptable:t=>![\"generateLabels\",\"filter\",\"sort\"].includes(t)}}};class Je extends bt{constructor(t){super(),this.chart=t.chart,this.options=t.options,this.ctx=t.ctx,this._padding=void 0,this.top=void 0,this.bottom=void 0,this.left=void 0,this.right=void 0,this.width=void 0,this.height=void 0,this.position=void 0,this.weight=void 0,this.fullSize=void 0}update(t,e){const i=this,o=i.options;if(i.left=0,i.top=0,!o.display)return void(i.width=i.height=i.right=i.bottom=0);i.width=i.right=t,i.height=i.bottom=e;const s=Object(n.Kb)(o.text)?o.text.length:1;i._padding=Object(n.d)(o.padding);const a=s*Object(n.x)(o.font).lineHeight+i._padding.height;i.isHorizontal()?i.height=a:i.width=a}isHorizontal(){const t=this.options.position;return\"top\"===t||\"bottom\"===t}_drawArgs(t){const{top:e,left:i,bottom:o,right:s,options:a}=this,r=a.align;let l,c,h,d=0;return this.isHorizontal()?(c=Object(n.z)(r,i,s),h=e+t,l=s-i):(\"left\"===a.position?(c=i+t,h=Object(n.z)(r,o,e),d=-.5*n.q):(c=s-t,h=Object(n.z)(r,e,o),d=.5*n.q),l=o-e),{titleX:c,titleY:h,maxWidth:l,rotation:d}}draw(){const t=this,e=t.ctx,i=t.options;if(!i.display)return;const o=Object(n.x)(i.font),s=o.lineHeight/2+t._padding.top,{titleX:a,titleY:r,maxWidth:l,rotation:c}=t._drawArgs(s);Object(n.w)(e,i.text,0,0,o,{color:i.color,maxWidth:l,rotation:c,textAlign:Object(n.y)(i.align),textBaseline:\"middle\",translation:[a,r]})}}var Ze={id:\"title\",_element:Je,start(t,e,i){!function(t,e){const i=new Je({ctx:t.ctx,options:e,chart:t});tt.configure(t,i,e),tt.addBox(t,i),t.titleBlock=i}(t,i)},stop(t){const e=t.titleBlock;tt.removeBox(t,e),delete t.titleBlock},beforeUpdate(t,e,i){const n=t.titleBlock;tt.configure(t,n,i),n.options=i},defaults:{align:\"center\",display:!1,font:{weight:\"bold\"},fullSize:!0,padding:10,position:\"top\",text:\"\",weight:2e3},defaultRoutes:{color:\"color\"},descriptors:{_scriptable:!0,_indexable:!1}};const Qe={average(t){if(!t.length)return!1;let e,i,n=0,o=0,s=0;for(e=0,i=t.length;e<i;++e){const i=t[e].element;if(i&&i.hasValue()){const t=i.tooltipPosition();n+=t.x,o+=t.y,++s}}return{x:n/s,y:o/s}},nearest(t,e){if(!t.length)return!1;let i,o,s,a=e.x,r=e.y,l=Number.POSITIVE_INFINITY;for(i=0,o=t.length;i<o;++i){const o=t[i].element;if(o&&o.hasValue()){const t=o.getCenterPoint(),i=Object(n.Hb)(e,t);i<l&&(l=i,s=o)}}if(s){const t=s.tooltipPosition();a=t.x,r=t.y}return{x:a,y:r}}};function ti(t,e){return e&&(Object(n.Kb)(e)?Array.prototype.push.apply(t,e):t.push(e)),t}function ei(t){return(\"string\"===typeof t||t instanceof String)&&t.indexOf(\"\\n\")>-1?t.split(\"\\n\"):t}function ii(t,e){const{element:i,datasetIndex:n,index:o}=e,s=t.getDatasetMeta(n).controller,{label:a,value:r}=s.getLabelAndValue(o);return{chart:t,label:a,parsed:s.getParsed(o),raw:t.data.datasets[n].data[o],formattedValue:r,dataset:s.getDataset(),dataIndex:o,datasetIndex:n,element:i}}function ni(t,e){const i=t._chart.ctx,{body:o,footer:s,title:a}=t,{boxWidth:r,boxHeight:l}=e,c=Object(n.x)(e.bodyFont),h=Object(n.x)(e.titleFont),d=Object(n.x)(e.footerFont),u=a.length,g=s.length,f=o.length,p=Object(n.d)(e.padding);let b=p.height,m=0,x=o.reduce(((t,e)=>t+e.before.length+e.lines.length+e.after.length),0);if(x+=t.beforeBody.length+t.afterBody.length,u&&(b+=u*h.lineHeight+(u-1)*e.titleSpacing+e.titleMarginBottom),x){b+=f*(e.displayColors?Math.max(l,c.lineHeight):c.lineHeight)+(x-f)*c.lineHeight+(x-1)*e.bodySpacing}g&&(b+=e.footerMarginTop+g*d.lineHeight+(g-1)*e.footerSpacing);let _=0;const y=function(t){m=Math.max(m,i.measureText(t).width+_)};return i.save(),i.font=h.string,Object(n.e)(t.title,y),i.font=c.string,Object(n.e)(t.beforeBody.concat(t.afterBody),y),_=e.displayColors?r+2:0,Object(n.e)(o,(t=>{Object(n.e)(t.before,y),Object(n.e)(t.lines,y),Object(n.e)(t.after,y)})),_=0,i.font=d.string,Object(n.e)(t.footer,y),i.restore(),m+=p.width,{width:m,height:b}}function oi(t,e,i,n){const{x:o,width:s}=i,{width:a,chartArea:{left:r,right:l}}=t;let c=\"center\";return\"center\"===n?c=o<=(r+l)/2?\"left\":\"right\":o<=s/2?c=\"left\":o>=a-s/2&&(c=\"right\"),function(t,e,i,n){const{x:o,width:s}=n,a=i.caretSize+i.caretPadding;return\"left\"===t&&o+s+a>e.width||\"right\"===t&&o-s-a<0||void 0}(c,t,e,i)&&(c=\"center\"),c}function si(t,e,i){const n=e.yAlign||function(t,e){const{y:i,height:n}=e;return i<n/2?\"top\":i>t.height-n/2?\"bottom\":\"center\"}(t,i);return{xAlign:e.xAlign||oi(t,e,i,n),yAlign:n}}function ai(t,e,i,o){const{caretSize:s,caretPadding:a,cornerRadius:r}=t,{xAlign:l,yAlign:c}=i,h=s+a,d=r+a;let u=function(t,e){let{x:i,width:n}=t;return\"right\"===e?i-=n:\"center\"===e&&(i-=n/2),i}(e,l);const g=function(t,e,i){let{y:n,height:o}=t;return\"top\"===e?n+=i:n-=\"bottom\"===e?o+i:o/2,n}(e,c,h);return\"center\"===c?\"left\"===l?u+=h:\"right\"===l&&(u-=h):\"left\"===l?u-=d:\"right\"===l&&(u+=d),{x:Object(n.gc)(u,0,o.width-e.width),y:Object(n.gc)(g,0,o.height-e.height)}}function ri(t,e,i){const o=Object(n.d)(i.padding);return\"center\"===e?t.x+t.width/2:\"right\"===e?t.x+t.width-o.right:t.x+o.left}function li(t){return ti([],ei(t))}function ci(t,e){const i=e&&e.dataset&&e.dataset.tooltip&&e.dataset.tooltip.callbacks;return i?t.override(i):t}class hi extends bt{constructor(t){super(),this.opacity=0,this._active=[],this._chart=t._chart,this._eventPosition=void 0,this._size=void 0,this._cachedAnimations=void 0,this._tooltipItems=[],this.$animations=void 0,this.$context=void 0,this.options=t.options,this.dataPoints=void 0,this.title=void 0,this.beforeBody=void 0,this.body=void 0,this.afterBody=void 0,this.footer=void 0,this.xAlign=void 0,this.yAlign=void 0,this.x=void 0,this.y=void 0,this.height=void 0,this.width=void 0,this.caretX=void 0,this.caretY=void 0,this.labelColors=void 0,this.labelPointStyles=void 0,this.labelTextColors=void 0}initialize(t){this.options=t,this._cachedAnimations=void 0,this.$context=void 0}_resolveAnimations(){const t=this,e=t._cachedAnimations;if(e)return e;const i=t._chart,n=t.options.setContext(t.getContext()),o=n.enabled&&i.options.animation&&n.animations,s=new c(t._chart,o);return o._cacheable&&(t._cachedAnimations=Object.freeze(s)),s}getContext(){const t=this;return t.$context||(t.$context=(e=t._chart.getContext(),i=t,n=t._tooltipItems,Object.assign(Object.create(e),{tooltip:i,tooltipItems:n,type:\"tooltip\"})));var e,i,n}getTitle(t,e){const i=this,{callbacks:n}=e,o=n.beforeTitle.apply(i,[t]),s=n.title.apply(i,[t]),a=n.afterTitle.apply(i,[t]);let r=[];return r=ti(r,ei(o)),r=ti(r,ei(s)),r=ti(r,ei(a)),r}getBeforeBody(t,e){return li(e.callbacks.beforeBody.apply(this,[t]))}getBody(t,e){const i=this,{callbacks:o}=e,s=[];return Object(n.e)(t,(t=>{const e={before:[],lines:[],after:[]},n=ci(o,t);ti(e.before,ei(n.beforeLabel.call(i,t))),ti(e.lines,n.label.call(i,t)),ti(e.after,ei(n.afterLabel.call(i,t))),s.push(e)})),s}getAfterBody(t,e){return li(e.callbacks.afterBody.apply(this,[t]))}getFooter(t,e){const i=this,{callbacks:n}=e,o=n.beforeFooter.apply(i,[t]),s=n.footer.apply(i,[t]),a=n.afterFooter.apply(i,[t]);let r=[];return r=ti(r,ei(o)),r=ti(r,ei(s)),r=ti(r,ei(a)),r}_createItems(t){const e=this,i=e._active,o=e._chart.data,s=[],a=[],r=[];let l,c,h=[];for(l=0,c=i.length;l<c;++l)h.push(ii(e._chart,i[l]));return t.filter&&(h=h.filter(((e,i,n)=>t.filter(e,i,n,o)))),t.itemSort&&(h=h.sort(((e,i)=>t.itemSort(e,i,o)))),Object(n.e)(h,(i=>{const n=ci(t.callbacks,i);s.push(n.labelColor.call(e,i)),a.push(n.labelPointStyle.call(e,i)),r.push(n.labelTextColor.call(e,i))})),e.labelColors=s,e.labelPointStyles=a,e.labelTextColors=r,e.dataPoints=h,h}update(t,e){const i=this,n=i.options.setContext(i.getContext()),o=i._active;let s,a=[];if(o.length){const t=Qe[n.position].call(i,o,i._eventPosition);a=i._createItems(n),i.title=i.getTitle(a,n),i.beforeBody=i.getBeforeBody(a,n),i.body=i.getBody(a,n),i.afterBody=i.getAfterBody(a,n),i.footer=i.getFooter(a,n);const e=i._size=ni(i,n),r=Object.assign({},t,e),l=si(i._chart,n,r),c=ai(n,r,l,i._chart);i.xAlign=l.xAlign,i.yAlign=l.yAlign,s={opacity:1,x:c.x,y:c.y,width:e.width,height:e.height,caretX:t.x,caretY:t.y}}else 0!==i.opacity&&(s={opacity:0});i._tooltipItems=a,i.$context=void 0,s&&i._resolveAnimations().update(i,s),t&&n.external&&n.external.call(i,{chart:i._chart,tooltip:i,replay:e})}drawCaret(t,e,i,n){const o=this.getCaretPosition(t,i,n);e.lineTo(o.x1,o.y1),e.lineTo(o.x2,o.y2),e.lineTo(o.x3,o.y3)}getCaretPosition(t,e,i){const{xAlign:n,yAlign:o}=this,{cornerRadius:s,caretSize:a}=i,{x:r,y:l}=t,{width:c,height:h}=e;let d,u,g,f,p,b;return\"center\"===o?(p=l+h/2,\"left\"===n?(d=r,u=d-a,f=p+a,b=p-a):(d=r+c,u=d+a,f=p-a,b=p+a),g=d):(u=\"left\"===n?r+s+a:\"right\"===n?r+c-s-a:this.caretX,\"top\"===o?(f=l,p=f-a,d=u-a,g=u+a):(f=l+h,p=f+a,d=u+a,g=u-a),b=f),{x1:d,x2:u,x3:g,y1:f,y2:p,y3:b}}drawTitle(t,e,i){const o=this,s=o.title,a=s.length;let r,l,c;if(a){const h=Object(n.Cb)(i.rtl,o.x,o.width);for(t.x=ri(o,i.titleAlign,i),e.textAlign=h.textAlign(i.titleAlign),e.textBaseline=\"middle\",r=Object(n.x)(i.titleFont),l=i.titleSpacing,e.fillStyle=i.titleColor,e.font=r.string,c=0;c<a;++c)e.fillText(s[c],h.x(t.x),t.y+r.lineHeight/2),t.y+=r.lineHeight+l,c+1===a&&(t.y+=i.titleMarginBottom-l)}}_drawColorBox(t,e,i,o,s){const a=this,r=a.labelColors[i],l=a.labelPointStyles[i],{boxHeight:c,boxWidth:h}=s,d=Object(n.x)(s.bodyFont),u=ri(a,\"left\",s),g=o.x(u),f=c<d.lineHeight?(d.lineHeight-c)/2:0,p=e.y+f;if(s.usePointStyle){const e={radius:Math.min(h,c)/2,pointStyle:l.pointStyle,rotation:l.rotation,borderWidth:1},i=o.leftForLtr(g,h)+h/2,a=p+c/2;t.strokeStyle=s.multiKeyBackground,t.fillStyle=s.multiKeyBackground,Object(n.wb)(t,e,i,a),t.strokeStyle=r.borderColor,t.fillStyle=r.backgroundColor,Object(n.wb)(t,e,i,a)}else{t.lineWidth=r.borderWidth||1,t.strokeStyle=r.borderColor,t.setLineDash(r.borderDash||[]),t.lineDashOffset=r.borderDashOffset||0;const e=o.leftForLtr(g,h),i=o.leftForLtr(o.xPlus(g,1),h-2),a=Object(n.zb)(r.borderRadius);Object.values(a).some((t=>0!==t))?(t.beginPath(),t.fillStyle=s.multiKeyBackground,Object(n.xb)(t,{x:e,y:p,w:h,h:c,radius:a}),t.fill(),t.stroke(),t.fillStyle=r.backgroundColor,t.beginPath(),Object(n.xb)(t,{x:i,y:p+1,w:h-2,h:c-2,radius:a}),t.fill()):(t.fillStyle=s.multiKeyBackground,t.fillRect(e,p,h,c),t.strokeRect(e,p,h,c),t.fillStyle=r.backgroundColor,t.fillRect(i,p+1,h-2,c-2))}t.fillStyle=a.labelTextColors[i]}drawBody(t,e,i){const o=this,{body:s}=o,{bodySpacing:a,bodyAlign:r,displayColors:l,boxHeight:c,boxWidth:h}=i,d=Object(n.x)(i.bodyFont);let u=d.lineHeight,g=0;const f=Object(n.Cb)(i.rtl,o.x,o.width),p=function(i){e.fillText(i,f.x(t.x+g),t.y+u/2),t.y+=u+a},b=f.textAlign(r);let m,x,_,y,v,O,j;for(e.textAlign=r,e.textBaseline=\"middle\",e.font=d.string,t.x=ri(o,b,i),e.fillStyle=i.bodyColor,Object(n.e)(o.beforeBody,p),g=l&&\"right\"!==b?\"center\"===r?h/2+1:h+2:0,y=0,O=s.length;y<O;++y){for(m=s[y],x=o.labelTextColors[y],e.fillStyle=x,Object(n.e)(m.before,p),_=m.lines,l&&_.length&&(o._drawColorBox(e,t,y,f,i),u=Math.max(d.lineHeight,c)),v=0,j=_.length;v<j;++v)p(_[v]),u=d.lineHeight;Object(n.e)(m.after,p)}g=0,u=d.lineHeight,Object(n.e)(o.afterBody,p),t.y-=a}drawFooter(t,e,i){const o=this,s=o.footer,a=s.length;let r,l;if(a){const c=Object(n.Cb)(i.rtl,o.x,o.width);for(t.x=ri(o,i.footerAlign,i),t.y+=i.footerMarginTop,e.textAlign=c.textAlign(i.footerAlign),e.textBaseline=\"middle\",r=Object(n.x)(i.footerFont),e.fillStyle=i.footerColor,e.font=r.string,l=0;l<a;++l)e.fillText(s[l],c.x(t.x),t.y+r.lineHeight/2),t.y+=r.lineHeight+i.footerSpacing}}drawBackground(t,e,i,n){const{xAlign:o,yAlign:s}=this,{x:a,y:r}=t,{width:l,height:c}=i,h=n.cornerRadius;e.fillStyle=n.backgroundColor,e.strokeStyle=n.borderColor,e.lineWidth=n.borderWidth,e.beginPath(),e.moveTo(a+h,r),\"top\"===s&&this.drawCaret(t,e,i,n),e.lineTo(a+l-h,r),e.quadraticCurveTo(a+l,r,a+l,r+h),\"center\"===s&&\"right\"===o&&this.drawCaret(t,e,i,n),e.lineTo(a+l,r+c-h),e.quadraticCurveTo(a+l,r+c,a+l-h,r+c),\"bottom\"===s&&this.drawCaret(t,e,i,n),e.lineTo(a+h,r+c),e.quadraticCurveTo(a,r+c,a,r+c-h),\"center\"===s&&\"left\"===o&&this.drawCaret(t,e,i,n),e.lineTo(a,r+h),e.quadraticCurveTo(a,r,a+h,r),e.closePath(),e.fill(),n.borderWidth>0&&e.stroke()}_updateAnimationTarget(t){const e=this,i=e._chart,n=e.$animations,o=n&&n.x,s=n&&n.y;if(o||s){const n=Qe[t.position].call(e,e._active,e._eventPosition);if(!n)return;const a=e._size=ni(e,t),r=Object.assign({},n,e._size),l=si(i,t,r),c=ai(t,r,l,i);o._to===c.x&&s._to===c.y||(e.xAlign=l.xAlign,e.yAlign=l.yAlign,e.width=a.width,e.height=a.height,e.caretX=n.x,e.caretY=n.y,e._resolveAnimations().update(e,c))}}draw(t){const e=this,i=e.options.setContext(e.getContext());let o=e.opacity;if(!o)return;e._updateAnimationTarget(i);const s={width:e.width,height:e.height},a={x:e.x,y:e.y};o=Math.abs(o)<.001?0:o;const r=Object(n.d)(i.padding),l=e.title.length||e.beforeBody.length||e.body.length||e.afterBody.length||e.footer.length;i.enabled&&l&&(t.save(),t.globalAlpha=o,e.drawBackground(a,t,s,i),Object(n.Db)(t,i.textDirection),a.y+=r.top,e.drawTitle(a,t,i),e.drawBody(a,t,i),e.drawFooter(a,t,i),Object(n.Fb)(t,i.textDirection),t.restore())}getActiveElements(){return this._active||[]}setActiveElements(t,e){const i=this,o=i._active,s=t.map((({datasetIndex:t,index:e})=>{const n=i._chart.getDatasetMeta(t);if(!n)throw new Error(\"Cannot find a dataset at index \"+t);return{datasetIndex:t,element:n.data[e],index:e}})),a=!Object(n.lb)(o,s),r=i._positionChanged(s,e);(a||r)&&(i._active=s,i._eventPosition=e,i.update(!0))}handleEvent(t,e){const i=this,o=i.options,s=i._active||[];let a=!1,r=[];\"mouseout\"!==t.type&&(r=i._chart.getElementsAtEventForMode(t,o.mode,o,e),o.reverse&&r.reverse());const l=i._positionChanged(r,t);return a=e||!Object(n.lb)(r,s)||l,a&&(i._active=r,(o.enabled||o.external)&&(i._eventPosition={x:t.x,y:t.y},i.update(!0,e))),a}_positionChanged(t,e){const{caretX:i,caretY:n,options:o}=this,s=Qe[o.position].call(this,t,e);return!1!==s&&(i!==s.x||n!==s.y)}}hi.positioners=Qe;var di={id:\"tooltip\",_element:hi,positioners:Qe,afterInit(t,e,i){i&&(t.tooltip=new hi({_chart:t,options:i}))},beforeUpdate(t,e,i){t.tooltip&&t.tooltip.initialize(i)},reset(t,e,i){t.tooltip&&t.tooltip.initialize(i)},afterDraw(t){const e=t.tooltip,i={tooltip:e};!1!==t.notifyPlugins(\"beforeTooltipDraw\",i)&&(e&&e.draw(t.ctx),t.notifyPlugins(\"afterTooltipDraw\",i))},afterEvent(t,e){if(t.tooltip){const i=e.replay;t.tooltip.handleEvent(e.event,i)&&(e.changed=!0)}},defaults:{enabled:!0,external:null,position:\"average\",backgroundColor:\"rgba(0,0,0,0.8)\",titleColor:\"#fff\",titleFont:{weight:\"bold\"},titleSpacing:2,titleMarginBottom:6,titleAlign:\"left\",bodyColor:\"#fff\",bodySpacing:2,bodyFont:{},bodyAlign:\"left\",footerColor:\"#fff\",footerSpacing:2,footerMarginTop:6,footerFont:{weight:\"bold\"},footerAlign:\"left\",padding:6,caretPadding:2,caretSize:5,cornerRadius:6,boxHeight:(t,e)=>e.bodyFont.size,boxWidth:(t,e)=>e.bodyFont.size,multiKeyBackground:\"#fff\",displayColors:!0,borderColor:\"rgba(0,0,0,0)\",borderWidth:0,animation:{duration:400,easing:\"easeOutQuart\"},animations:{numbers:{type:\"number\",properties:[\"x\",\"y\",\"width\",\"height\",\"caretX\",\"caretY\"]},opacity:{easing:\"linear\",duration:200}},callbacks:{beforeTitle:n.Gb,title(t){if(t.length>0){const e=t[0],i=e.chart.data.labels,n=i?i.length:0;if(this&&this.options&&\"dataset\"===this.options.mode)return e.dataset.label||\"\";if(e.label)return e.label;if(n>0&&e.dataIndex<n)return i[e.dataIndex]}return\"\"},afterTitle:n.Gb,beforeBody:n.Gb,beforeLabel:n.Gb,label(t){if(this&&this.options&&\"dataset\"===this.options.mode)return t.label+\": \"+t.formattedValue||t.formattedValue;let e=t.dataset.label||\"\";e&&(e+=\": \");const i=t.formattedValue;return Object(n.Sb)(i)||(e+=i),e},labelColor(t){const e=t.chart.getDatasetMeta(t.datasetIndex).controller.getStyle(t.dataIndex);return{borderColor:e.borderColor,backgroundColor:e.backgroundColor,borderWidth:e.borderWidth,borderDash:e.borderDash,borderDashOffset:e.borderDashOffset,borderRadius:0}},labelTextColor(){return this.options.bodyColor},labelPointStyle(t){const e=t.chart.getDatasetMeta(t.datasetIndex).controller.getStyle(t.dataIndex);return{pointStyle:e.pointStyle,rotation:e.rotation}},afterLabel:n.Gb,afterBody:n.Gb,beforeFooter:n.Gb,footer:n.Gb,afterFooter:n.Gb}},defaultRoutes:{bodyFont:\"font\",footerFont:\"font\",titleFont:\"font\"},descriptors:{_scriptable:t=>\"filter\"!==t&&\"itemSort\"!==t&&\"external\"!==t,_indexable:!1,callbacks:{_scriptable:!1,_indexable:!1},animation:{_fallback:!1},animations:{_fallback:\"animation\"}},additionalOptionScopes:[\"interaction\"]},ui=Object.freeze({__proto__:null,Decimation:Ce,Filler:Ke,Legend:qe,Title:Ze,Tooltip:di});function gi(t,e,i){const n=t.indexOf(e);if(-1===n)return((t,e,i)=>\"string\"===typeof e?t.push(e)-1:isNaN(e)?null:i)(t,e,i);return n!==t.lastIndexOf(e)?i:n}class fi extends St{constructor(t){super(t),this._startValue=void 0,this._valueRange=0}parse(t,e){if(Object(n.Sb)(t))return null;const i=this.getLabels();return((t,e)=>null===t?null:Object(n.gc)(Math.round(t),0,e))(e=isFinite(e)&&i[e]===t?e:gi(i,t,Object(n.ec)(e,t)),i.length-1)}determineDataLimits(){const t=this,{minDefined:e,maxDefined:i}=t.getUserBounds();let{min:n,max:o}=t.getMinMax(!0);\"ticks\"===t.options.bounds&&(e||(n=0),i||(o=t.getLabels().length-1)),t.min=n,t.max=o}buildTicks(){const t=this,e=t.min,i=t.max,n=t.options.offset,o=[];let s=t.getLabels();s=0===e&&i===s.length-1?s:s.slice(e,i+1),t._valueRange=Math.max(s.length-(n?0:1),1),t._startValue=t.min-(n?.5:0);for(let a=e;a<=i;a++)o.push({value:a});return o}getLabelForValue(t){const e=this.getLabels();return t>=0&&t<e.length?e[t]:t}configure(){const t=this;super.configure(),t.isHorizontal()||(t._reversePixels=!t._reversePixels)}getPixelForValue(t){const e=this;return\"number\"!==typeof t&&(t=e.parse(t)),null===t?NaN:e.getPixelForDecimal((t-e._startValue)/e._valueRange)}getPixelForTick(t){const e=this.ticks;return t<0||t>e.length-1?null:this.getPixelForValue(e[t].value)}getValueForPixel(t){const e=this;return Math.round(e._startValue+e.getDecimalForPixel(t)*e._valueRange)}getBasePixel(){return this.bottom}}fi.id=\"category\",fi.defaults={ticks:{callback:fi.prototype.getLabelForValue}};class pi extends St{constructor(t){super(t),this.start=void 0,this.end=void 0,this._startValue=void 0,this._endValue=void 0,this._valueRange=0}parse(t,e){return Object(n.Sb)(t)||(\"number\"===typeof t||t instanceof Number)&&!isFinite(+t)?null:+t}handleTickRangeOptions(){const t=this,{beginAtZero:e,stacked:i}=t.options,{minDefined:o,maxDefined:s}=t.getUserBounds();let{min:a,max:r}=t;const l=t=>a=o?a:t,c=t=>r=s?r:t;if(e||i){const t=Object(n.bc)(a),e=Object(n.bc)(r);t<0&&e<0?c(0):t>0&&e>0&&l(0)}a===r&&(c(r+1),e||l(a-1)),t.min=a,t.max=r}getTickLimit(){const t=this,e=t.options.ticks;let i,{maxTicksLimit:n,stepSize:o}=e;return o?i=Math.ceil(t.max/o)-Math.floor(t.min/o)+1:(i=t.computeTickLimit(),n=n||11),n&&(i=Math.min(n,i)),i}computeTickLimit(){return Number.POSITIVE_INFINITY}buildTicks(){const t=this,e=t.options,i=e.ticks;let o=t.getTickLimit();o=Math.max(2,o);const s=function(t,e){const i=[],{step:o,min:s,max:a,precision:r,count:l,maxTicks:c}=t,h=o||1,d=c-1,{min:u,max:g}=e,f=!Object(n.Sb)(s),p=!Object(n.Sb)(a),b=!Object(n.Sb)(l);let m,x,_,y,v=Object(n.Jb)((g-u)/d/h)*h;if(v<1e-14&&!f&&!p)return[{value:u},{value:g}];y=Math.ceil(g/v)-Math.floor(u/v),y>d&&(v=Object(n.Jb)(y*v/d/h)*h),Object(n.Sb)(r)||(m=Math.pow(10,r),v=Math.ceil(v*m)/m),x=Math.floor(u/v)*v,_=Math.ceil(g/v)*v,f&&p&&o&&Object(n.N)((a-s)/o,v/1e3)?(y=Math.min((a-s)/v,c),v=(a-s)/y,x=s,_=a):b?(x=f?s:x,_=p?a:_,y=l-1,v=(_-x)/y):(y=(_-x)/v,y=Object(n.O)(y,Math.round(y),v/1e3)?Math.round(y):Math.ceil(y)),m=Math.pow(10,Object(n.Sb)(r)?Object(n.P)(v):r),x=Math.round(x*m)/m,_=Math.round(_*m)/m;let O=0;for(f&&(i.push({value:s}),x<=s&&O++,Object(n.O)(Math.round((x+O*v)*m)/m,s,v/10)&&O++);O<y;++O)i.push({value:Math.round((x+O*v)*m)/m});return p?Object(n.O)(i[i.length-1].value,a,v/10)?i[i.length-1].value=a:i.push({value:a}):i.push({value:_}),i}({maxTicks:o,min:e.min,max:e.max,precision:i.precision,step:i.stepSize,count:i.count},t._range||t);return\"ticks\"===e.bounds&&Object(n.Ib)(s,t,\"value\"),e.reverse?(s.reverse(),t.start=t.max,t.end=t.min):(t.start=t.min,t.end=t.max),s}configure(){const t=this,e=t.ticks;let i=t.min,n=t.max;if(super.configure(),t.options.offset&&e.length){const t=(n-i)/Math.max(e.length-1,1)/2;i-=t,n+=t}t._startValue=i,t._endValue=n,t._valueRange=n-i}getLabelForValue(t){return Object(n.Yb)(t,this.chart.options.locale)}}class bi extends pi{determineDataLimits(){const t=this,{min:e,max:i}=t.getMinMax(!0);t.min=Object(n.Pb)(e)?e:0,t.max=Object(n.Pb)(i)?i:1,t.handleTickRangeOptions()}computeTickLimit(){const t=this;if(t.isHorizontal())return Math.ceil(t.width/40);const e=t._resolveTickFontOptions(0);return Math.ceil(t.height/e.lineHeight)}getPixelForValue(t){return null===t?NaN:this.getPixelForDecimal((t-this._startValue)/this._valueRange)}getValueForPixel(t){return this._startValue+this.getDecimalForPixel(t)*this._valueRange}}function mi(t){return 1===t/Math.pow(10,Math.floor(Object(n.l)(t)))}bi.id=\"linear\",bi.defaults={ticks:{callback:xt.formatters.numeric}};class xi extends St{constructor(t){super(t),this.start=void 0,this.end=void 0,this._startValue=void 0,this._valueRange=0}parse(t,e){const i=pi.prototype.parse.apply(this,[t,e]);if(0!==i)return Object(n.Pb)(i)&&i>0?i:null;this._zero=!0}determineDataLimits(){const t=this,{min:e,max:i}=t.getMinMax(!0);t.min=Object(n.Pb)(e)?Math.max(0,e):null,t.max=Object(n.Pb)(i)?Math.max(0,i):null,t.options.beginAtZero&&(t._zero=!0),t.handleTickRangeOptions()}handleTickRangeOptions(){const t=this,{minDefined:e,maxDefined:i}=t.getUserBounds();let o=t.min,s=t.max;const a=t=>o=e?o:t,r=t=>s=i?s:t,l=(t,e)=>Math.pow(10,Math.floor(Object(n.l)(t))+e);o===s&&(o<=0?(a(1),r(10)):(a(l(o,-1)),r(l(s,1)))),o<=0&&a(l(s,-1)),s<=0&&r(l(o,1)),t._zero&&t.min!==t._suggestedMin&&o===l(t.min,0)&&a(l(o,-1)),t.min=o,t.max=s}buildTicks(){const t=this,e=t.options,i=function(t,e){const i=Math.floor(Object(n.l)(e.max)),o=Math.ceil(e.max/Math.pow(10,i)),s=[];let a=Object(n.n)(t.min,Math.pow(10,Math.floor(Object(n.l)(e.min)))),r=Math.floor(Object(n.l)(a)),l=Math.floor(a/Math.pow(10,r)),c=r<0?Math.pow(10,Math.abs(r)):1;do{s.push({value:a,major:mi(a)}),++l,10===l&&(l=1,++r,c=r>=0?1:c),a=Math.round(l*Math.pow(10,r)*c)/c}while(r<i||r===i&&l<o);const h=Object(n.n)(t.max,a);return s.push({value:h,major:mi(a)}),s}({min:t._userMin,max:t._userMax},t);return\"ticks\"===e.bounds&&Object(n.Ib)(i,t,\"value\"),e.reverse?(i.reverse(),t.start=t.max,t.end=t.min):(t.start=t.min,t.end=t.max),i}getLabelForValue(t){return void 0===t?\"0\":Object(n.Yb)(t,this.chart.options.locale)}configure(){const t=this,e=t.min;super.configure(),t._startValue=Object(n.l)(e),t._valueRange=Object(n.l)(t.max)-Object(n.l)(e)}getPixelForValue(t){const e=this;return void 0!==t&&0!==t||(t=e.min),null===t||isNaN(t)?NaN:e.getPixelForDecimal(t===e.min?0:(Object(n.l)(t)-e._startValue)/e._valueRange)}getValueForPixel(t){const e=this,i=e.getDecimalForPixel(t);return Math.pow(10,e._startValue+i*e._valueRange)}}function _i(t){const e=t.ticks;if(e.display&&t.display){const t=Object(n.d)(e.backdropPadding);return Object(n.ec)(e.font&&e.font.size,n.Mb.font.size)+t.height}return 0}function yi(t,e,i,n,o){return t===n||t===o?{start:e-i/2,end:e+i/2}:t<n||t>o?{start:e-i,end:e}:{start:e,end:e+i}}function vi(t){return 0===t||180===t?\"center\":t<180?\"left\":\"right\"}function Oi(t,e,i){90===t||270===t?i.y-=e.h/2:(t>270||t<90)&&(i.y-=e.h)}function ji(t,e,i,o){const{ctx:s}=t;if(i)s.arc(t.xCenter,t.yCenter,e,0,n.u);else{let i=t.getPointPosition(0,e);s.moveTo(i.x,i.y);for(let n=1;n<o;n++)i=t.getPointPosition(n,e),s.lineTo(i.x,i.y)}}function Mi(t){return Object(n.fc)(t)?t:0}xi.id=\"logarithmic\",xi.defaults={ticks:{callback:xt.formatters.logarithmic,major:{enabled:!0}}};class wi extends pi{constructor(t){super(t),this.xCenter=void 0,this.yCenter=void 0,this.drawingArea=void 0,this._pointLabels=[],this._pointLabelItems=[]}setDimensions(){const t=this;t.width=t.maxWidth,t.height=t.maxHeight,t.paddingTop=_i(t.options)/2,t.xCenter=Math.floor(t.width/2),t.yCenter=Math.floor((t.height-t.paddingTop)/2),t.drawingArea=Math.min(t.height-t.paddingTop,t.width)/2}determineDataLimits(){const t=this,{min:e,max:i}=t.getMinMax(!1);t.min=Object(n.Pb)(e)&&!isNaN(e)?e:0,t.max=Object(n.Pb)(i)&&!isNaN(i)?i:0,t.handleTickRangeOptions()}computeTickLimit(){return Math.ceil(this.drawingArea/_i(this.options))}generateTickLabels(t){const e=this;pi.prototype.generateTickLabels.call(e,t),e._pointLabels=e.getLabels().map(((t,i)=>{const o=Object(n.o)(e.options.pointLabels.callback,[t,i],e);return o||0===o?o:\"\"}))}fit(){const t=this,e=t.options;e.display&&e.pointLabels.display?function(t){const e={l:0,r:t.width,t:0,b:t.height-t.paddingTop},i={};let o,s,a;const r=[],l=[],c=t.getLabels().length;for(o=0;o<c;o++){const c=t.options.pointLabels.setContext(t.getContext(o));l[o]=c.padding,a=t.getPointPosition(o,t.drawingArea+l[o]);const g=Object(n.x)(c.font);t.ctx.font=g.string,h=t.ctx,d=g.lineHeight,u=t._pointLabels[o],s=Object(n.Kb)(u)?{w:Object(n.Q)(h,h.font,u),h:u.length*d}:{w:h.measureText(u).width,h:d},r[o]=s;const f=t.getIndexAngle(o),p=Object(n.r)(f),b=yi(p,a.x,s.w,0,180),m=yi(p,a.y,s.h,90,270);b.start<e.l&&(e.l=b.start,i.l=f),b.end>e.r&&(e.r=b.end,i.r=f),m.start<e.t&&(e.t=m.start,i.t=f),m.end>e.b&&(e.b=m.end,i.b=f)}var h,d,u;t._setReductions(t.drawingArea,e,i),t._pointLabelItems=[];const g=t.options,f=_i(g),p=t.getDistanceFromCenterForValue(g.ticks.reverse?t.min:t.max);for(o=0;o<c;o++){const e=0===o?f/2:0,i=t.getPointPosition(o,p+e+l[o]),s=Object(n.r)(t.getIndexAngle(o)),a=r[o];Oi(s,a,i);const c=vi(s);let h;h=\"left\"===c?i.x:\"center\"===c?i.x-a.w/2:i.x-a.w;const d=h+a.w;t._pointLabelItems[o]={x:i.x,y:i.y,textAlign:c,left:h,top:i.y,right:d,bottom:i.y+a.h}}}(t):t.setCenterPoint(0,0,0,0)}_setReductions(t,e,i){const n=this;let o=e.l/Math.sin(i.l),s=Math.max(e.r-n.width,0)/Math.sin(i.r),a=-e.t/Math.cos(i.t),r=-Math.max(e.b-(n.height-n.paddingTop),0)/Math.cos(i.b);o=Mi(o),s=Mi(s),a=Mi(a),r=Mi(r),n.drawingArea=Math.max(t/2,Math.min(Math.floor(t-(o+s)/2),Math.floor(t-(a+r)/2))),n.setCenterPoint(o,s,a,r)}setCenterPoint(t,e,i,n){const o=this,s=o.width-e-o.drawingArea,a=t+o.drawingArea,r=i+o.drawingArea,l=o.height-o.paddingTop-n-o.drawingArea;o.xCenter=Math.floor((a+s)/2+o.left),o.yCenter=Math.floor((r+l)/2+o.top+o.paddingTop)}getIndexAngle(t){const e=n.u/this.getLabels().length,i=this.options.startAngle||0;return Object(n.Bb)(t*e+Object(n.cc)(i))}getDistanceFromCenterForValue(t){const e=this;if(Object(n.Sb)(t))return NaN;const i=e.drawingArea/(e.max-e.min);return e.options.reverse?(e.max-t)*i:(t-e.min)*i}getValueForDistanceFromCenter(t){if(Object(n.Sb)(t))return NaN;const e=this,i=t/(e.drawingArea/(e.max-e.min));return e.options.reverse?e.max-i:e.min+i}getPointPosition(t,e){const i=this,o=i.getIndexAngle(t)-n.i;return{x:Math.cos(o)*e+i.xCenter,y:Math.sin(o)*e+i.yCenter,angle:o}}getPointPositionForValue(t,e){return this.getPointPosition(t,this.getDistanceFromCenterForValue(e))}getBasePosition(t){return this.getPointPositionForValue(t||0,this.getBaseValue())}getPointLabelPosition(t){const{left:e,top:i,right:n,bottom:o}=this._pointLabelItems[t];return{left:e,top:i,right:n,bottom:o}}drawBackground(){const t=this,{backgroundColor:e,grid:{circular:i}}=t.options;if(e){const n=t.ctx;n.save(),n.beginPath(),ji(t,t.getDistanceFromCenterForValue(t._endValue),i,t.getLabels().length),n.closePath(),n.fillStyle=e,n.fill(),n.restore()}}drawGrid(){const t=this,e=t.ctx,i=t.options,{angleLines:o,grid:s}=i,a=t.getLabels().length;let r,l,c;if(i.pointLabels.display&&function(t,e){const{ctx:i,options:{pointLabels:o}}=t;for(let s=e-1;s>=0;s--){const e=o.setContext(t.getContext(s)),a=Object(n.x)(e.font),{x:r,y:l,textAlign:c,left:h,top:d,right:u,bottom:g}=t._pointLabelItems[s],{backdropColor:f}=e;if(!Object(n.Sb)(f)){const t=Object(n.d)(e.backdropPadding);i.fillStyle=f,i.fillRect(h-t.left,d-t.top,u-h+t.width,g-d+t.height)}Object(n.w)(i,t._pointLabels[s],r,l+a.lineHeight/2,a,{color:e.color,textAlign:c,textBaseline:\"middle\"})}}(t,a),s.display&&t.ticks.forEach(((e,i)=>{if(0!==i){l=t.getDistanceFromCenterForValue(e.value);const n=s.setContext(t.getContext(i-1));!function(t,e,i,n){const o=t.ctx,s=e.circular,{color:a,lineWidth:r}=e;!s&&!n||!a||!r||i<0||(o.save(),o.strokeStyle=a,o.lineWidth=r,o.setLineDash(e.borderDash),o.lineDashOffset=e.borderDashOffset,o.beginPath(),ji(t,i,s,n),o.closePath(),o.stroke(),o.restore())}(t,n,l,a)}})),o.display){for(e.save(),r=t.getLabels().length-1;r>=0;r--){const n=o.setContext(t.getContext(r)),{color:s,lineWidth:a}=n;a&&s&&(e.lineWidth=a,e.strokeStyle=s,e.setLineDash(n.borderDash),e.lineDashOffset=n.borderDashOffset,l=t.getDistanceFromCenterForValue(i.ticks.reverse?t.min:t.max),c=t.getPointPosition(r,l),e.beginPath(),e.moveTo(t.xCenter,t.yCenter),e.lineTo(c.x,c.y),e.stroke())}e.restore()}}drawLabels(){const t=this,e=t.ctx,i=t.options,o=i.ticks;if(!o.display)return;const s=t.getIndexAngle(0);let a,r;e.save(),e.translate(t.xCenter,t.yCenter),e.rotate(s),e.textAlign=\"center\",e.textBaseline=\"middle\",t.ticks.forEach(((s,l)=>{if(0===l&&!i.reverse)return;const c=o.setContext(t.getContext(l)),h=Object(n.x)(c.font);if(a=t.getDistanceFromCenterForValue(t.ticks[l].value),c.showLabelBackdrop){r=e.measureText(s.label).width,e.fillStyle=c.backdropColor;const t=Object(n.d)(c.backdropPadding);e.fillRect(-r/2-t.left,-a-h.size/2-t.top,r+t.width,h.size+t.height)}Object(n.w)(e,s.label,0,-a,h,{color:c.color})})),e.restore()}drawTitle(){}}wi.id=\"radialLinear\",wi.defaults={display:!0,animate:!0,position:\"chartArea\",angleLines:{display:!0,lineWidth:1,borderDash:[],borderDashOffset:0},grid:{circular:!1},startAngle:0,ticks:{showLabelBackdrop:!0,backdropColor:\"rgba(255,255,255,0.75)\",backdropPadding:2,callback:xt.formatters.numeric},pointLabels:{backdropColor:void 0,backdropPadding:2,display:!0,font:{size:10},callback:t=>t,padding:5}},wi.defaultRoutes={\"angleLines.color\":\"borderColor\",\"pointLabels.color\":\"color\",\"ticks.color\":\"color\"},wi.descriptors={angleLines:{_fallback:\"grid\"}};const ki={millisecond:{common:!0,size:1,steps:1e3},second:{common:!0,size:1e3,steps:60},minute:{common:!0,size:6e4,steps:60},hour:{common:!0,size:36e5,steps:24},day:{common:!0,size:864e5,steps:30},week:{common:!1,size:6048e5,steps:4},month:{common:!0,size:2628e6,steps:12},quarter:{common:!1,size:7884e6,steps:4},year:{common:!0,size:3154e7}},Si=Object.keys(ki);function Di(t,e){return t-e}function Pi(t,e){if(Object(n.Sb)(e))return null;const i=t._adapter,o=t.options.time,{parser:s,round:a,isoWeekday:r}=o;let l=e;return\"function\"===typeof s&&(l=s(l)),Object(n.Pb)(l)||(l=\"string\"===typeof s?i.parse(l,s):i.parse(l)),null===l?null:(a&&(l=\"week\"!==a||!Object(n.fc)(r)&&!0!==r?i.startOf(l,a):i.startOf(l,\"isoWeek\",r)),+l)}function Ci(t,e,i,n){const o=Si.length;for(let s=Si.indexOf(t);s<o-1;++s){const t=ki[Si[s]],o=t.steps?t.steps:Number.MAX_SAFE_INTEGER;if(t.common&&Math.ceil((i-e)/(o*t.size))<=n)return Si[s]}return Si[o-1]}function Ai(t,e,i){if(i){if(i.length){const{lo:o,hi:s}=Object(n.S)(i,e);t[i[o]>=e?i[o]:i[s]]=!0}}else t[e]=!0}function Li(t,e,i){const n=[],o={},s=e.length;let a,r;for(a=0;a<s;++a)r=e[a],o[r]=a,n.push({value:r,major:!1});return 0!==s&&i?function(t,e,i,n){const o=t._adapter,s=+o.startOf(e[0].value,n),a=e[e.length-1].value;let r,l;for(r=s;r<=a;r=+o.add(r,1,n))l=i[r],l>=0&&(e[l].major=!0);return e}(t,n,o,i):n}class Ti extends St{constructor(t){super(t),this._cache={data:[],labels:[],all:[]},this._unit=\"day\",this._majorUnit=void 0,this._offsets={},this._normalized=!1}init(t,e){const i=t.time||(t.time={}),o=this._adapter=new z._date(t.adapters.date);Object(n.J)(i.displayFormats,o.formats()),super.init(t),this._normalized=e.normalized}parse(t,e){return void 0===t?null:Pi(this,t)}beforeLayout(){super.beforeLayout(),this._cache={data:[],labels:[],all:[]}}determineDataLimits(){const t=this,e=t.options,i=t._adapter,o=e.time.unit||\"day\";let{min:s,max:a,minDefined:r,maxDefined:l}=t.getUserBounds();function c(t){r||isNaN(t.min)||(s=Math.min(s,t.min)),l||isNaN(t.max)||(a=Math.max(a,t.max))}r&&l||(c(t._getLabelBounds()),\"ticks\"===e.bounds&&\"labels\"===e.ticks.source||c(t.getMinMax(!1))),s=Object(n.Pb)(s)&&!isNaN(s)?s:+i.startOf(Date.now(),o),a=Object(n.Pb)(a)&&!isNaN(a)?a:+i.endOf(Date.now(),o)+1,t.min=Math.min(s,a-1),t.max=Math.max(s+1,a)}_getLabelBounds(){const t=this.getLabelTimestamps();let e=Number.POSITIVE_INFINITY,i=Number.NEGATIVE_INFINITY;return t.length&&(e=t[0],i=t[t.length-1]),{min:e,max:i}}buildTicks(){const t=this,e=t.options,i=e.time,o=e.ticks,s=\"labels\"===o.source?t.getLabelTimestamps():t._generate();\"ticks\"===e.bounds&&s.length&&(t.min=t._userMin||s[0],t.max=t._userMax||s[s.length-1]);const a=t.min,r=t.max,l=Object(n.R)(s,a,r);return t._unit=i.unit||(o.autoSkip?Ci(i.minUnit,t.min,t.max,t._getLabelCapacity(a)):function(t,e,i,n,o){for(let s=Si.length-1;s>=Si.indexOf(i);s--){const i=Si[s];if(ki[i].common&&t._adapter.diff(o,n,i)>=e-1)return i}return Si[i?Si.indexOf(i):0]}(t,l.length,i.minUnit,t.min,t.max)),t._majorUnit=o.major.enabled&&\"year\"!==t._unit?function(t){for(let e=Si.indexOf(t)+1,i=Si.length;e<i;++e)if(ki[Si[e]].common)return Si[e]}(t._unit):void 0,t.initOffsets(s),e.reverse&&l.reverse(),Li(t,l,t._majorUnit)}initOffsets(t){const e=this;let i,o,s=0,a=0;e.options.offset&&t.length&&(i=e.getDecimalForValue(t[0]),s=1===t.length?1-i:(e.getDecimalForValue(t[1])-i)/2,o=e.getDecimalForValue(t[t.length-1]),a=1===t.length?o:(o-e.getDecimalForValue(t[t.length-2]))/2);const r=t.length<3?.5:.25;s=Object(n.gc)(s,0,r),a=Object(n.gc)(a,0,r),e._offsets={start:s,end:a,factor:1/(s+1+a)}}_generate(){const t=this,e=t._adapter,i=t.min,o=t.max,s=t.options,a=s.time,r=a.unit||Ci(a.minUnit,i,o,t._getLabelCapacity(i)),l=Object(n.ec)(a.stepSize,1),c=\"week\"===r&&a.isoWeekday,h=Object(n.fc)(c)||!0===c,d={};let u,g,f=i;if(h&&(f=+e.startOf(f,\"isoWeek\",c)),f=+e.startOf(f,h?\"day\":r),e.diff(o,i,r)>1e5*l)throw new Error(i+\" and \"+o+\" are too far apart with stepSize of \"+l+\" \"+r);const p=\"data\"===s.ticks.source&&t.getDataTimestamps();for(u=f,g=0;u<o;u=+e.add(u,l,r),g++)Ai(d,u,p);return u!==o&&\"ticks\"!==s.bounds&&1!==g||Ai(d,u,p),Object.keys(d).sort(((t,e)=>t-e)).map((t=>+t))}getLabelForValue(t){const e=this._adapter,i=this.options.time;return i.tooltipFormat?e.format(t,i.tooltipFormat):e.format(t,i.displayFormats.datetime)}_tickFormatFunction(t,e,i,o){const s=this,a=s.options,r=a.time.displayFormats,l=s._unit,c=s._majorUnit,h=l&&r[l],d=c&&r[c],u=i[e],g=c&&d&&u&&u.major,f=s._adapter.format(t,o||(g?d:h)),p=a.ticks.callback;return p?Object(n.o)(p,[f,e,i],s):f}generateTickLabels(t){let e,i,n;for(e=0,i=t.length;e<i;++e)n=t[e],n.label=this._tickFormatFunction(n.value,e,t)}getDecimalForValue(t){const e=this;return null===t?NaN:(t-e.min)/(e.max-e.min)}getPixelForValue(t){const e=this,i=e._offsets,n=e.getDecimalForValue(t);return e.getPixelForDecimal((i.start+n)*i.factor)}getValueForPixel(t){const e=this,i=e._offsets,n=e.getDecimalForPixel(t)/i.factor-i.end;return e.min+n*(e.max-e.min)}_getLabelSize(t){const e=this,i=e.options.ticks,o=e.ctx.measureText(t).width,s=Object(n.cc)(e.isHorizontal()?i.maxRotation:i.minRotation),a=Math.cos(s),r=Math.sin(s),l=e._resolveTickFontOptions(0).size;return{w:o*a+l*r,h:o*r+l*a}}_getLabelCapacity(t){const e=this,i=e.options.time,n=i.displayFormats,o=n[i.unit]||n.millisecond,s=e._tickFormatFunction(t,0,Li(e,[t],e._majorUnit),o),a=e._getLabelSize(s),r=Math.floor(e.isHorizontal()?e.width/a.w:e.height/a.h)-1;return r>0?r:1}getDataTimestamps(){const t=this;let e,i,n=t._cache.data||[];if(n.length)return n;const o=t.getMatchingVisibleMetas();if(t._normalized&&o.length)return t._cache.data=o[0].controller.getAllParsedValues(t);for(e=0,i=o.length;e<i;++e)n=n.concat(o[e].controller.getAllParsedValues(t));return t._cache.data=t.normalize(n)}getLabelTimestamps(){const t=this,e=t._cache.labels||[];let i,n;if(e.length)return e;const o=t.getLabels();for(i=0,n=o.length;i<n;++i)e.push(Pi(t,o[i]));return t._cache.labels=t._normalized?e:t.normalize(e)}normalize(t){return Object(n.B)(t.sort(Di))}}function Ri(t,e,i){let o,s,a,r;if(i)o=Math.floor(e),s=Math.ceil(e),a=t[o],r=t[s];else{const i=Object(n.S)(t,e);a=i.lo,r=i.hi,o=t[a],s=t[r]}const l=s-o;return l?a+(r-a)*(e-o)/l:a}Ti.id=\"time\",Ti.defaults={bounds:\"data\",adapters:{},time:{parser:!1,unit:!1,round:!1,isoWeekday:!1,minUnit:\"millisecond\",displayFormats:{}},ticks:{source:\"auto\",major:{enabled:!1}}};class Ei extends Ti{constructor(t){super(t),this._table=[],this._maxIndex=void 0}initOffsets(){const t=this,e=t._getTimestampsForTable();t._table=t.buildLookupTable(e),t._maxIndex=t._table.length-1,super.initOffsets(e)}buildLookupTable(t){const{min:e,max:i}=this;if(!t.length)return[{time:e,pos:0},{time:i,pos:1}];const n=[e];let o,s,a;for(o=0,s=t.length;o<s;++o)a=t[o],a>e&&a<i&&n.push(a);return n.push(i),n}_getTimestampsForTable(){const t=this;let e=t._cache.all||[];if(e.length)return e;const i=t.getDataTimestamps(),n=t.getLabelTimestamps();return e=i.length&&n.length?t.normalize(i.concat(n)):i.length?i:n,e=t._cache.all=e,e}getPixelForValue(t,e){const i=this,o=i._offsets,s=i._normalized&&i._maxIndex>0&&!Object(n.Sb)(e)?e/i._maxIndex:i.getDecimalForValue(t);return i.getPixelForDecimal((o.start+s)*o.factor)}getDecimalForValue(t){return Ri(this._table,t)/this._maxIndex}getValueForPixel(t){const e=this,i=e._offsets,n=e.getDecimalForPixel(t)/i.factor-i.end;return Ri(e._table,n*this._maxIndex,!0)}}Ei.id=\"timeseries\",Ei.defaults=Ti.defaults;var zi=Object.freeze({__proto__:null,CategoryScale:fi,LinearScale:bi,LogarithmicScale:xi,RadialLinearScale:wi,TimeScale:Ti,TimeSeriesScale:Ei});const Fi=[T,Se,ui,zi]}}]);","map":{"version":3,"sources":["static/chunks/36bcf0ca.853b204c5d55cd4c74f1.js"],"names":["window","push","m0r1","module","__webpack_exports__","__webpack_require__","r","d","Animation","Animations","ArcElement","BarController","BarElement","BasePlatform","BasicPlatform","BubbleController","CategoryScale","Chart","DatasetController","plugin_decimation","DomPlatform","DoughnutController","Element","plugin_filler","Interaction","plugin_legend","LineController","LineElement","LinearScale","LogarithmicScale","PieController","PointElement","PolarAreaController","RadarController","RadialLinearScale","Scale","ScatterController","Ticks","TimeScale","TimeSeriesScale","plugin_title","plugin_tooltip","adapters","animator","controllers","elements","layouts","plugins","registerables","registry","scales","_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__","[object Object]","this","_request","_charts","Map","_running","_lastDate","undefined","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","currentStep","Math","min","start","me","call","_update","_refresh","Date","now","remaining","running","items","length","item","i","draw","_active","_total","tick","pop","_notify","charts","get","complete","progress","set","event","cb","_getAnims","reduce","acc","cur","max","_duration","cancel","delete","transparent","interpolators","boolean","from","to","factor","c0","Object","c1","valid","mix","hexString","number","cfg","target","prop","currentValue","_fn","_easing","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","elapsed","remain","promises","Promise","res","rej","resolved","method","animationOptions","keys","animation","describe","_fallback","_indexable","_scriptable","name","colors","properties","numbers","active","resize","show","animations","visible","hide","v","config","_chart","_properties","configure","animatedProps","getOwnPropertyNames","key","option","has","values","newOptions","options","$shared","assign","$animations","resolveTargetOptions","_createAnimations","anim","wait","all","awaitAll","then","props","charAt","_animateOptions","value","update","size","add","scaleClip","scale","allowedOverflow","opts","reverse","end","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","isStacked","meta","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","vScale","iAxis","axis","vAxis","indexScale","valueScale","id","getStackKey","getFirstScaleId","filter","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","$context","initialize","linkScales","_stacked","addElements","dataset","getDataset","chooseId","x","y","xid","xAxisID","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","data","datasets","getDatasetMeta","scaleID","adata","Array","convertObjectDataToArray","isExtensible","_dataCheck","datasetElementType","resetNewElements","stackChanged","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","parse","xAxisKey","yAxisKey","range","parsedValue","NaN","canStack","otherScale","_getOtherScale","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","updateRangeFromParsed","getParsed","label","getLabelForValue","_clip","t","b","l","top","right","bottom","left","toClip","clip","defaultClip","getMaxOverflow","area","chartArea","element","resolveDatasetElementOptions","resolveDataElementOptions","context","parent","create","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","dataElementType","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","transition","datasetAnimationScopeKeys","_cacheable","sharedOptions","_animationsDisabled","_resolveAnimations","getStyle","getSharedOptions","_setStyle","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","arguments","computeMinSampleSize","_cache","$bar","metas","getMatchingVisibleMetas","concat","getAllParsedValues","sort","a","getAllScaleValues","curr","_length","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","defaults","prototype","iAxisKey","vAxisKey","obj","super","bars","reset","base","getBasePixel","horizontal","isHorizontal","ruler","_getRuler","firstOpts","includeOptions","updateSharedOptions","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","updateElement","last","val","isNaN","indexOf","_getStacks","pixels","barThickness","_startPixel","_endPixel","stackCount","_getStackCount","grouped","ratio","categoryPercentage","barPercentage","baseValue","minBarLength","floating","getDataVisibility","actualBase","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","skipNull","next","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","_getStackIndex","rects","overrides","interaction","_index_","offset","grid","_value_","beginAtZero","points","point","getPixelForDecimal","skip","radius","tooltip","title","innerRadius","outerRadius","offsetX","offsetY","rotation","circumference","isDatasetVisible","_getRotation","_getCircumference","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","_getRotationExtents","ratioX","ratioY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","_circumference","arc","metaData","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","aspectRatio","legend","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","hidden","e","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","slice","line","_dataset","animationsDisabled","pointCount","lo","hi","getStartAndCountOfVisiblePoints","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","scaleRangesChanged","_decimated","showLine","segment","animated","spanGaps","maxGapLength","directUpdate","prevParsed","nullData","stop","border","firstPoint","lastPoint","updateControlPoints","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","_fullLoop","pointPosition","getPointPositionForValue","fill","__proto__","abstract","Error","DateAdapter","format","timestamp","amount","unit","weekday","override","members","_date","getRelativePosition","binarySearch","metaset","intersect","lookupMethod","_reversePixels","el","getRange","optimizedEvaluateItems","position","handler","getSortedVisibleDatasetMetas","j","getIntersectItems","useFinalPosition","_minPadding","inRange","getNearestItems","distanceMetric","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getDistanceMetricForAxis","minDistance","getCenterPoint","distance","getAxisItems","rangeMethod","intersectsItem","jlen","evaluateAllVisibleItems","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","v1","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","params","layout","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","w","heightChanged","h","same","other","getMargins","marginForPositions","positions","margin","fitBoxes","boxes","refitBoxes","refit","fullSize","placeBoxes","userPadding","padding","_layers","z","layoutItem","minPadding","availableWidth","availableHeight","layoutBoxes","wrapBoxes","wrap","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","vBoxMaxWidth","hBoxMaxHeight","setLayoutDims","updatePos","change","handleMaxPadding","canvas","listener","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","passive","removeListener","removeEventListener","createAttachObserver","observer","MutationObserver","entries","addedNodes","added","observe","document","childList","subtree","createDetachObserver","container","removedNodes","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","currentDevicePixelRatio","createResizeObserver","clientWidth","ResizeObserver","contentRect","addEventListener","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","proxy","native","fromNativeEvent","args","node","addListener","renderHeight","getAttribute","renderWidth","initial","boxSizing","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","getProps","final","ret","defaultRoutes","formatters","tickValue","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","numeric","autoSkip","tickOpts","ticksLimit","maxTicksLimit","tickLength","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","majorIndices","major","enabled","result","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","len","diff","getEvenSpacing","factors","calculateSpacing","avgMajorSpacing","round","majorStart","majorEnd","bounds","grace","drawBorder","drawOnChartArea","drawTicks","tickWidth","tickColor","color","borderDash","borderDashOffset","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkipPadding","labelOffset","callback","minor","align","crossAlign","route","startsWith","offsetFromEdge","edge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","getTickMarkLength","getTitleHeight","fallback","font","lineHeight","titleAlign","reverseAlign","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","getMinMax","xLabels","yLabels","beforeUpdate","margins","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","beforeFit","fit","afterFit","afterUpdate","startPixel","endPixel","reversePixels","_alignToPixels","alignToPixels","notifyPlugins","_callHooks","beforeTickToLabelConversion","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","generateTickLabels","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","string","gc","gcLen","garbageCollect","valueAt","idx","pixel","decimal","getBaseValue","createTickContext","optionTicks","rot","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","strokeColor","strokeWidth","translation","save","fillRect","restore","findIndex","_computeGridLineItems","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","lastLineWidth","_computeLabelArea","_computeLabelItems","titleX","titleY","titleArgs","drawBackground","drawGrid","drawTitle","drawLabels","tz","gz","axisID","TypedRegistry","scope","isPrototypeOf","proto","getPrototypeOf","parentScope","isIChartComponent","register","itemDefaults","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","routeDefaults","descriptors","registerDefaults","_typedRegistries","_each","_get","typedRegistry","arg","reg","_getRegistryForType","isForType","_exec","itemReg","component","camelMethod","PluginService","_init","hook","_createDescriptors","_descriptors","descriptor","plugin","cancelable","_oldCache","_notifyStateChanges","getPlugin","local","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","toLowerCase","initOptions","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","mainScope","resetCache","keyLists","_cachedScopes","resolver","subPrefixes","getResolver","isScriptable","isIndexable","needContext","subResolver","descriptorDefaults","resolverCache","p","includes","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","isDomSupported","getCanvas","getElementById","instances","getChart","c","initialCanvas","existingChart","chartOptionScopes","platform","_initializePlatform","acquireContext","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","listen","_initialize","console","error","maintainAspectRatio","responsive","bindEvents","OffscreenCanvas","_resizeBeforeDraw","_resize","newSize","getMaximumSize","oldRatio","newRatio","getDevicePixelRatio","onResize","render","scalesOptions","axisOptions","scaleOpts","updated","isRadial","dposition","dtype","scaleType","getScale","init","hasUpdated","addBox","oldIndex","_destroyDatasetMeta","newControllers","_removeUnreferencedMetasets","order","_updateMetasetIndex","updateIndex","ControllerClass","getController","getElement","_updateMetasets","_resetElements","removeBox","animsDisabled","ensureScalesHaveIDs","buildOrUpdateScales","invalidate","buildOrUpdateControllers","buildOrUpdateElements","_updateLayout","_updateDatasets","_eventHandler","noArea","_idx","isFunction","_updateDataset","layers","_drawDatasets","_drawDataset","setDatasetVisibility","_updateDatasetVisibility","_destroy","remove","unbindEvents","releaseContext","toDataURL","_add","_remove","events","detached","isAttached","prefix","activeElements","lastActive","_updateHoverStyles","notify","replay","hoverOptions","hover","deactivated","activated","updateHoverStyle","eventFilter","_handleEvent","lastEvent","getElementsAtEventForMode","onHover","onClick","invalidatePlugins","enumerable","clipArc","pixelMargin","angleMargin","closePath","parseBorderRadius$1","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","PI","p8","inner","lineJoin","fullCircles","drawFullCircleBorders","defineProperties","version","unregister","chartX","chartY","halfAngle","halfRadius","translate","drawArc","setStyle","lineCap","borderCapStyle","borderJoinStyle","previous","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","tension","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","segments","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","_points","_segments","_pointsUpdated","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","capBezierPoints","cubicInterpolationMode","mouseX","mouseY","hoverRadius","getBarBounds","bar","half","parseBorderSkipped","borderSkipped","parseEdge","orig","v2","startEnd","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","topLeft","topRight","bottomLeft","bottomRight","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","rect","pointStyle","addRectPath","cleanDecimatedDataset","defineProperty","cleanDecimatedData","algorithm","beforeElementsUpdate","xAxis","decimated","getStartAndCountOfVisiblePointsSimplified","configurable","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","decodeFill","fillOption","parseFillOption","parseFloat","simpleArc","computeBoundary","computeCircularBoundary","computeLinearBoundary","buildStackLine","sourcePoints","linesBelow","below","isLineAndNotInHideAnimation","unshift","getLinesBelow","createBoundaryLine","addPointsBelow","sourcePoint","postponed","findPoint","interpolate","pointValue","linePoints","firstValue","lastValue","boundary","pointsFromSegments","resolveTarget","sources","propagate","visited","clipY","getBounds","_getEdge","clipBounds","interpolatedLineTo","interpolatedPoint","_fill","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","lineLoop","targetLoop","drawfill","getLineByIndex","getTarget","lineOpts","above","doFill","_args","$filler","drawTime","getBoxSize","labelOpts","fontSize","boxHeight","boxWidth","usePointStyle","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","generateLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","heightLimit","totalWidth","currentColWidth","currentColHeight","col","hitbox","_draw","defaultColor","rtlHelper","rtl","fontColor","halfFontSize","cursor","textDirection","textWidth","setWidth","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","leftForLtr","drawLegendBox","strikethrough","fillText","titleFont","titlePadding","topPaddingPlusHalfFontSize","hitBox","lh","onLeave","isListened","hoveredItem","_getLegendItemAt","sameItem","_element","adjustHitBoxes","handleEvent","ci","Title","_padding","textSize","fontOpts","_drawArgs","titleBlock","createTitle","positioners","hasValue","tooltipPosition","eventPosition","nearestElement","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","getLabelAndValue","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","lines","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","cornerRadius","paddingAndSize","radiusAndPadding","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","tooltipItems","beforeTitle","afterTitle","bodyItems","scoped","beforeLabel","afterLabel","beforeFooter","afterFooter","itemSort","labelColor","labelPointStyle","labelTextColor","_createItems","getTitle","getBeforeBody","getBody","getAfterBody","getFooter","positionAndSize","backgroundPoint","external","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","_drawColorBox","footerAlign","footerColor","tooltipSize","drawCaret","quadraticCurveTo","animX","animY","_updateAnimationTarget","hasTooltipContent","globalAlpha","drawBody","drawFooter","positionChanged","_positionChanged","labelCount","Decimation","Filler","findOrAddLabel","addIfString","lastIndexOf","_startValue","_valueRange","isFinite","getDecimalForPixel","LinearScaleBase","_endValue","setMin","setMax","minSign","maxSign","maxTicks","stepSize","computeTickLimit","getTickLimit","generationOptions","dataRange","step","precision","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","generateTicks$1","handleTickRangeOptions","isMajor","tickVal","_zero","exp","m","endExp","endSignificand","significand","lastTick","generateTicks","getTickBackdropHeight","backdropPadding","determineLimits","getTextAlignForAngle","adjustPointPositionForLabelHeight","pathRadiusLine","getPointPosition","numberOrZero","param","logarithmic","drawingArea","_pointLabels","_pointLabelItems","furthestLimits","furthestAngles","valueCount","plFont","hLimits","vLimits","_setReductions","tickBackdropHeight","outerDistance","extra","pointLabelPosition","fitWithPointLabels","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","scalingFactor","scaledDistance","distanceFromCenter","backdropColor","drawPointLabels","gridLineOpts","drawRadiusLine","rotate","showLabelBackdrop","animate","angleLines.color","pointLabels.color","ticks.color","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","time","parser","isoWeekday","startOf","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","_unit","_majorUnit","_offsets","_normalized","displayFormats","formats","normalized","_applyBounds","_getLabelBounds","endOf","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","getDecimalForValue","limit","hasWeekday","getDataTimestamps","tooltipFormat","datetime","minorFormat","majorFormat","formatter","_tickFormatFunction","offsets","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","_getLabelSize","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","_table","_maxIndex","_getTimestampsForTable","buildLookupTable"],"mappings":"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"},"name":"static/chunks/36bcf0ca.853b204c5d55cd4c74f1.js","input":"(window[\"webpackJsonp_N_E\"] = window[\"webpackJsonp_N_E\"] || []).push([[5],{\n\n/***/ \"m0r1\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Animation\", function() { return Animation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Animations\", function() { return Animations; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ArcElement\", function() { return ArcElement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BarController\", function() { return BarController; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BarElement\", function() { return BarElement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BasePlatform\", function() { return BasePlatform; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BasicPlatform\", function() { return BasicPlatform; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BubbleController\", function() { return BubbleController; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CategoryScale\", function() { return CategoryScale; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Chart\", function() { return Chart; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DatasetController\", function() { return DatasetController; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Decimation\", function() { return plugin_decimation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DomPlatform\", function() { return DomPlatform; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DoughnutController\", function() { return DoughnutController; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Element\", function() { return Element; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Filler\", function() { return plugin_filler; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Interaction\", function() { return Interaction; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Legend\", function() { return plugin_legend; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LineController\", function() { return LineController; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LineElement\", function() { return LineElement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LinearScale\", function() { return LinearScale; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LogarithmicScale\", function() { return LogarithmicScale; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PieController\", function() { return PieController; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PointElement\", function() { return PointElement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PolarAreaController\", function() { return PolarAreaController; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RadarController\", function() { return RadarController; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RadialLinearScale\", function() { return RadialLinearScale; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Scale\", function() { return Scale; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ScatterController\", function() { return ScatterController; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Ticks\", function() { return Ticks; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TimeScale\", function() { return TimeScale; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TimeSeriesScale\", function() { return TimeSeriesScale; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Title\", function() { return plugin_title; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Tooltip\", function() { return plugin_tooltip; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"_adapters\", function() { return adapters; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"animator\", function() { return animator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"controllers\", function() { return controllers; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"elements\", function() { return elements; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"layouts\", function() { return layouts; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"plugins\", function() { return plugins; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"registerables\", function() { return registerables; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"registry\", function() { return registry; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"scales\", function() { return scales; });\n/* harmony import */ var _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"3T2N\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"defaults\", function() { return _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[\"Mb\"]; });\n\n/*!\n * Chart.js v3.1.1\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\n\n\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    const me = this;\n    if (me._request) {\n      return;\n    }\n    me._running = true;\n    me._request = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* r */ \"ac\"].call(window, () => {\n      me._update();\n      me._request = null;\n      if (me._running) {\n        me._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    const me = this;\n    let remaining = 0;\n    me._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        me._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        me._notify(chart, anims, date, 'complete');\n      }\n      remaining += items.length;\n    });\n    me._lastDate = date;\n    if (remaining === 0) {\n      me._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* c */ \"Lb\"])(from || transparent);\n    const c1 = c0.valid && Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* c */ \"Lb\"])(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a */ \"C\"])([cfg.to, to, currentValue, cfg.from]);\n    const from = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a */ \"C\"])([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* e */ \"Nb\"][cfg.easing] || _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* e */ \"Nb\"].linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    const me = this;\n    if (me._active) {\n      me._notify(false);\n      const currentValue = me._target[me._prop];\n      const elapsed = date - me._start;\n      const remain = me._duration - elapsed;\n      me._start = date;\n      me._duration = Math.floor(Math.max(remain, cfg.duration));\n      me._total += elapsed;\n      me._loop = !!cfg.loop;\n      me._to = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a */ \"C\"])([cfg.to, to, currentValue, cfg.from]);\n      me._from = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a */ \"C\"])([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    const me = this;\n    if (me._active) {\n      me.tick(Date.now());\n      me._active = false;\n      me._notify(false);\n    }\n  }\n  tick(date) {\n    const me = this;\n    const elapsed = date - me._start;\n    const duration = me._duration;\n    const prop = me._prop;\n    const from = me._from;\n    const loop = me._loop;\n    const to = me._to;\n    let factor;\n    me._active = from !== to && (loop || (elapsed < duration));\n    if (!me._active) {\n      me._target[prop] = to;\n      me._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      me._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = me._easing(Math.min(1, Math.max(0, factor)));\n    me._target[prop] = me._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"Mb\"].set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"Mb\"].animation);\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"Mb\"].describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"Mb\"].set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"Mb\"].describe('animations', {\n  _fallback: 'animation',\n});\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"Mb\"].set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Rb\"])(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Rb\"])(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"Kb\"])(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Rb\"])(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Pb\"])(otherValue) && (singleMode || (value === 0 || Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* s */ \"bc\"])(value) === Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* s */ \"bc\"])(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return Object.assign(Object.create(parent),\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[meta.vScale.id] === undefined || stacks[meta.vScale.id][meta.index] === undefined) {\n      return;\n    }\n    delete stacks[meta.vScale.id][meta.index];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this.initialize();\n  }\n  initialize() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    me.addElements();\n  }\n  updateIndex(datasetIndex) {\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"ec\"])(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"ec\"])(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"ec\"])(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = me.getScaleForId(xid);\n    meta.yScale = me.getScaleForId(yid);\n    meta.rScale = me.getScaleForId(rid);\n    meta.iScale = me.getScaleForId(iid);\n    meta.vScale = me.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* u */ \"dc\"])(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const me = this;\n    const dataset = me.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Rb\"])(data)) {\n      me._data = convertObjectDataToArray(data);\n    } else if (me._data !== data) {\n      if (me._data) {\n        Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* u */ \"dc\"])(me._data, me);\n        clearStacks(me._cachedMeta);\n      }\n      if (data && Object.isExtensible(data)) {\n        Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* l */ \"Ub\"])(data, me);\n      }\n      me._data = data;\n    }\n  }\n  addElements() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me._dataCheck();\n    if (me.datasetElementType) {\n      meta.dataset = new me.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    let stackChanged = false;\n    me._dataCheck();\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    me._resyncElements(resetNewElements);\n    if (stackChanged) {\n      updateStacks(me, meta._parsed);\n    }\n  }\n  configure() {\n    const me = this;\n    const config = me.chart.config;\n    const scopeKeys = config.datasetScopeKeys(me._type);\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\n    me.options = config.createResolver(scopes, me.getContext());\n    me._parsing = me.options.parsing;\n  }\n  parse(start, count) {\n    const me = this;\n    const {_cachedMeta: meta, _data: data} = me;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (me._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n    } else {\n      if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"Kb\"])(data[start])) {\n        parsed = me.parseArrayData(meta, data, start, count);\n      } else if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Rb\"])(data[start])) {\n        parsed = me.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = me.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(me, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* f */ \"Ob\"])(item, xAxisKey), index),\n        y: yScale.parse(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* f */ \"Ob\"])(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n      value = applyStack(stack, parsedValue, this._cachedMeta.index, {all: true});\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = me._getOtherScale(scale);\n    const stack = canStack && meta._stacked && {keys: getSortedDatasetIndices(me.chart, true), values: null};\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, value, parsed, otherValue;\n    function _skip() {\n      parsed = _parsed[i];\n      value = parsed[scale.axis];\n      otherValue = parsed[otherScale.axis];\n      return !Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Pb\"])(value) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      me.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        me.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Pb\"])(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me._cachedDataOpts = {};\n    me.update(mode || 'default');\n    meta._clip = toClip(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"ec\"])(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const me = this;\n    const ctx = me._ctx;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = me._drawStart || 0;\n    const count = me._drawCount || (elements.length - start);\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.active) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    let context;\n    if (index >= 0 && index < me._cachedMeta.data.length) {\n      const element = me._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(me.getContext(), index, element));\n      context.parsed = me.getParsed(index);\n      context.raw = dataset.data[index];\n    } else {\n      context = me.$context ||\n        (me.$context = createDatasetContext(me.chart.getContext(), me.index));\n      context.dataset = dataset;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const me = this;\n    const active = mode === 'active';\n    const cache = me._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = me.enableOptionSharing && Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* h */ \"Qb\"])(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = me.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n    const names = Object.keys(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"Mb\"].elements[elementType]);\n    const context = () => me.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const me = this;\n    const chart = me.chart;\n    const cache = me._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = me.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\n      const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, me.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const me = this;\n    const numMeta = me._cachedMeta.data.length;\n    const numData = me._data.length;\n    if (numData > numMeta) {\n      me._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      me._removeElements(numData, numMeta - numData);\n    }\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      me.parse(0, count);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new me.dataElementType();\n    }\n    if (me._parsing) {\n      move(meta._parsed);\n    }\n    me.parse(start, count);\n    if (resetNewElements) {\n      me.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const me = this;\n    const meta = me._cachedMeta;\n    if (me._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._insertElements(this.getDataset().data.length - count, count);\n  }\n  _onDataPop() {\n    this._removeElements(this._cachedMeta.data.length - 1, 1);\n  }\n  _onDataShift() {\n    this._removeElements(0, 1);\n  }\n  _onDataSplice(start, count) {\n    this._removeElements(start, count);\n    this._insertElements(start, arguments.length - 2);\n  }\n  _onDataUnshift() {\n    this._insertElements(0, arguments.length);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale) {\n  if (!scale._cache.$bar) {\n    const metas = scale.getMatchingVisibleMetas('bar');\n    let values = [];\n    for (let i = 0, ilen = metas.length; i < ilen; i++) {\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* _ */ \"B\"])(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(scale) {\n  const values = getAllScaleValues(scale);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    min = Math.min(min, i && Math.abs(curr - prev) || min);\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Sb\"])(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"Kb\"])(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* f */ \"Ob\"])(obj, iAxisKey), i);\n      parsed.push(parseValue(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* f */ \"Ob\"])(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    const me = this;\n    me.enableOptionSharing = true;\n    super.initialize();\n    const meta = me._cachedMeta;\n    meta.stack = me.getDataset().stack;\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const vScale = me._cachedMeta.vScale;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = me._getRuler();\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = me.getParsed(i);\n      const vpixels = reset || Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Sb\"])(parsed[vScale.axis]) ? {base, head: base} : me._calculateBarValuePixels(i);\n      const ipixels = me._calculateBarIndexPixels(i, ruler);\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : undefined,\n        width: horizontal ? undefined : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      me.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(me._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Sb\"])(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name) {\n    const stacks = this._getStacks(datasetIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(iScale);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: me._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const me = this;\n    const {vScale, _stacked} = me._cachedMeta;\n    const {base: baseValue, minBarLength} = me.options;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* s */ \"bc\"])(value) !== Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* s */ \"bc\"])(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Sb\"])(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n      size = size < 0 ? -minBarLength : minBarLength;\n      if (value === 0) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    const actualBase = baseValue || 0;\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = vScale.getLineWidthForValue(actualBase) / 2;\n      if (size > 0) {\n        base += halfGrid;\n        size -= halfGrid;\n      } else if (size < 0) {\n        base -= halfGrid;\n        size += halfGrid;\n      }\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const me = this;\n    const scale = ruler.scale;\n    const options = me.options;\n    const maxBarThickness = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"ec\"])(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = options.skipNull ? me._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* k */ \"Tb\"])(chart.ctx, chart.chartArea);\n    for (; i < ilen; ++i) {\n      if (me.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(me._ctx);\n      }\n    }\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* m */ \"Vb\"])(chart.ctx);\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  interaction: {\n    mode: 'index'\n  },\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = [];\n    let i, ilen, item;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      item = data[i];\n      parsed.push({\n        x: xScale.parse(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* f */ \"Ob\"])(item, xAxisKey), i),\n        y: yScale.parse(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* f */ \"Ob\"])(item, yAxisKey), i),\n        _custom: item && item.r && +item.r\n      });\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const {data, _parsed} = this._cachedMeta;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = me.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const me = this;\n    const points = me._cachedMeta.data;\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {xScale, yScale} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && me.getParsed(i);\n      const x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(parsed.x);\n      const y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(parsed.y);\n      const properties = {\n        x,\n        y,\n        skip: isNaN(x) || isNaN(y)\n      };\n      if (includeOptions) {\n        properties.options = me.resolveDataElementOptions(i, mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      me.updateElement(point, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"ec\"])(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"]) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* q */ \"Zb\"])(angle, startAngle, endAngle) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* q */ \"Zb\"])(angle, startAngle, endAngle) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* H */ \"i\"], startY, endY);\n    const minX = calcMin(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* P */ \"q\"], startX, endX);\n    const minY = calcMin(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* P */ \"q\"] + _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* H */ \"i\"], startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    let i, ilen;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      meta._parsed[i] = +data[i];\n    }\n  }\n  _getRotation() {\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* t */ \"cc\"])(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* t */ \"cc\"])(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"];\n    let max = -_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"];\n    const me = this;\n    for (let i = 0; i < me.chart.data.datasets.length; ++i) {\n      if (me.chart.isDatasetVisible(i)) {\n        const controller = me.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const me = this;\n    const chart = me.chart;\n    const {chartArea} = chart;\n    const meta = me._cachedMeta;\n    const arcs = meta.data;\n    const spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs);\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* n */ \"Wb\"])(me.options.cutout, maxSize), 1);\n    const chartWeight = me._getRingWeight(me.index);\n    const {circumference, rotation} = me._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* o */ \"Xb\"])(me.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\n    me.offsetX = offsetX * outerRadius;\n    me.offsetY = offsetY * outerRadius;\n    meta.total = me.calculateTotal();\n    me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\n    me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\n    me.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const circumference = me._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null) {\n      return 0;\n    }\n    return me.calculateCircumference(meta._parsed[i] * circumference / _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"]);\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : me.innerRadius;\n    const outerRadius = animateScale ? 0 : me.outerRadius;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    let startAngle = me._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += me._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = me._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + me.offsetX,\n        y: centerY + me.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      startAngle += circumference;\n      me.updateElement(arc, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i)) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"] * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* p */ \"Yb\"])(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    const me = this;\n    let max = 0;\n    const chart = me.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          if (controller !== me) {\n            controller.configure();\n          }\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"ec\"])(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  indexAxis: 'r',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"Kb\"])(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = me.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    me._drawStart = start;\n    me._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = me.resolveDatasetElementOptions(mode);\n    if (!me.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = me.options.segment;\n    me.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    me.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {xScale, yScale, _stacked} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const spanGaps = me.options.spanGaps;\n    const maxGapLength = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* w */ \"fc\"])(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && me.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = me.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Sb\"])(parsed.y);\n      const x = properties.x = xScale.getPixelForValue(parsed.x, i);\n      const y = properties.y = reset || nullData ? yScale.getBasePixel() : yScale.getPixelForValue(_stacked ? me.applyStack(yScale, parsed, _stacked) : parsed.y, i);\n      properties.skip = isNaN(x) || isNaN(y) || nullData;\n      properties.stop = i > 0 && (parsed.x - prevParsed.x) > maxGapLength;\n      properties.parsed = parsed;\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      if (!directUpdate) {\n        me.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(me.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    this._cachedMeta.dataset.updateControlPoints(this.chart.chartArea);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* x */ \"gc\"])(Math.min(\n        Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* y */ \"hc\"])(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* y */ \"hc\"])(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* x */ \"gc\"])(Math.max(\n        Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* y */ \"hc\"])(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* y */ \"hc\"])(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const me = this;\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    me.outerRadius = outerRadius - (radiusLength * me.index);\n    me.innerRadius = me.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const dataset = me.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = me._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* P */ \"q\"];\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / me.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += me._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + me._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: me.resolveDataElementOptions(i, mode)\n      };\n      me.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* t */ \"cc\"])(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const me = this;\n    const vScale = me._cachedMeta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = me.resolveDatasetElementOptions(mode);\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      me.updateElement(line, undefined, properties, mode);\n    }\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    const scale = me._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = me.resolveDataElementOptions(i, mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      me.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: either no adapter can be found or an incomplete integration was provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* z */ \"ic\"])(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* B */ \"c\"] : _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* y */ \"hc\"];\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* A */ \"b\"])(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  let items = [];\n  if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* A */ \"b\"])(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos: box.position,\n      horizontal: box.isHorizontal(),\n      weight: box.weight\n    });\n  }\n  return layoutBoxes;\n}\nfunction setLayoutDims(layouts, params) {\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    if (layout.horizontal) {\n      layout.width = layout.box.fullSize && params.availableWidth;\n      layout.height = params.hBoxMaxHeight;\n    } else {\n      layout.width = params.vBoxMaxWidth;\n      layout.height = layout.box.fullSize && params.availableHeight;\n    }\n  }\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout) {\n  const box = layout.box;\n  const maxPadding = chartArea.maxPadding;\n  if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Rb\"])(layout.pos)) {\n    if (layout.size) {\n      chartArea[layout.pos] -= layout.size;\n    }\n    layout.size = layout.horizontal ? box.height : box.width;\n    chartArea[layout.pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params) || changed;\n}\nfunction placeBoxes(boxes, chartArea, params) {\n  const userPadding = params.padding;\n  let x = chartArea.x;\n  let y = chartArea.y;\n  let i, ilen, layout, box;\n  for (i = 0, ilen = boxes.length; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    if (layout.horizontal) {\n      box.left = box.fullSize ? userPadding.left : chartArea.left;\n      box.right = box.fullSize ? params.outerWidth - userPadding.right : chartArea.left + chartArea.w;\n      box.top = y;\n      box.bottom = y + box.height;\n      box.width = box.right - box.left;\n      y = box.bottom;\n    } else {\n      box.left = x;\n      box.right = x + box.width;\n      box.top = box.fullSize ? userPadding.top : chartArea.top;\n      box.bottom = box.fullSize ? params.outerHeight - userPadding.right : chartArea.top + chartArea.h;\n      box.height = box.bottom - box.top;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"Mb\"].set('layout', {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* C */ \"d\"])(chart.options.layout.padding);\n    const availableWidth = width - padding.width;\n    const availableHeight = height - padding.height;\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* C */ \"d\"])(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params);\n    fitBoxes(verticalBoxes, chartArea, params);\n    if (fitBoxes(horizontalBoxes, chartArea, params)) {\n      fitBoxes(verticalBoxes, chartArea, params);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* G */ \"h\"])(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* G */ \"h\"])(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* J */ \"k\"] ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* z */ \"ic\"])(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* F */ \"g\"])(canvas);\n  const element = container || canvas;\n  const observer = new MutationObserver(entries => {\n    const parent = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* F */ \"g\"])(element);\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.addedNodes.length; i++) {\n        const added = entry.addedNodes[i];\n        if (added === element || added === parent) {\n          listener(entry.target);\n        }\n      }\n    });\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* F */ \"g\"])(canvas);\n  if (!container) {\n    return;\n  }\n  const observer = new MutationObserver(entries => {\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.removedNodes.length; i++) {\n        if (entry.removedNodes[i] === canvas) {\n          listener();\n          break;\n        }\n      }\n    });\n  });\n  observer.observe(container, {childList: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* F */ \"g\"])(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* I */ \"j\"])((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* I */ \"j\"])((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Sb\"])(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* E */ \"f\"])(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* F */ \"g\"])(canvas);\n    return !!(container && Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* F */ \"g\"])(container));\n  }\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* w */ \"fc\"])(this.x) && Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* w */ \"fc\"])(this.y);\n  }\n  getProps(props, final) {\n    const me = this;\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return me;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"Kb\"])(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* K */ \"l\"])(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* p */ \"Yb\"])(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* K */ \"l\"])(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) > 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"Mb\"].set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n  }\n});\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"Mb\"].route('scale.ticks', 'color', '', 'color');\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"Mb\"].route('scale.grid', 'color', '', 'borderColor');\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"Mb\"].route('scale.grid', 'borderColor', '', 'borderColor');\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"Mb\"].route('scale.title', 'color', '', 'color');\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"Mb\"].describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\n_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"Mb\"].describe('scales', {\n  _fallback: 'scale',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Sb\"])(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Sb\"])(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* L */ \"m\"])(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"ec\"])(majorStart, 0);\n  const end = Math.min(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"ec\"])(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(options.font, fallback);\n  const padding = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* C */ \"d\"])(options.padding);\n  const lines = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"Kb\"])(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return Object.assign(Object.create(parent), {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return Object.assign(Object.create(parent), {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* X */ \"y\"])(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right} = scale;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  if (scale.isHorizontal()) {\n    titleX = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(align, left, right);\n    titleY = offsetFromEdge(scale, position, offset);\n    maxWidth = right - left;\n  } else {\n    titleX = offsetFromEdge(scale, position, offset);\n    titleY = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(align, bottom, top);\n    rotation = position === 'left' ? -_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* H */ \"i\"] : _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* H */ \"i\"];\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    const me = this;\n    me.options = options.setContext(me.getContext());\n    me.axis = options.axis;\n    me._userMin = me.parse(options.min);\n    me._userMax = me.parse(options.max);\n    me._suggestedMin = me.parse(options.suggestedMin);\n    me._suggestedMax = me.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(_userMin, _suggestedMin),\n      max: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(_userMax, _suggestedMax),\n      minDefined: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Pb\"])(_userMin),\n      maxDefined: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Pb\"])(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    const me = this;\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = me.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(me, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    return {\n      min: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(min, Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(max, min)),\n      max: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(max, Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(min, max))\n    };\n  }\n  getPadding() {\n    const me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    const sampleSize = tickOpts.sampleSize;\n    me.beforeUpdate();\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.ticks = null;\n    me._labelSizes = null;\n    me._gridLineItems = null;\n    me._labelItems = null;\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions();\n    me._maxLength = me.isHorizontal()\n      ? me.width + margins.left + margins.right\n      : me.height + margins.top + margins.bottom;\n    if (!me._dataLimitsCached) {\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits();\n      me._range = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* O */ \"p\"])(me, me.options.grace);\n      me._dataLimitsCached = true;\n    }\n    me.beforeBuildTicks();\n    me.ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    const samplingEnabled = sampleSize < me.ticks.length;\n    me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\n    me.configure();\n    me.beforeCalculateLabelRotation();\n    me.calculateLabelRotation();\n    me.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      me.ticks = autoSkip(me, me.ticks);\n      me._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      me._convertTicksToLabels(me.ticks);\n    }\n    me.beforeFit();\n    me.fit();\n    me.afterFit();\n    me.afterUpdate();\n  }\n  configure() {\n    const me = this;\n    let reversePixels = me.options.reverse;\n    let startPixel, endPixel;\n    if (me.isHorizontal()) {\n      startPixel = me.left;\n      endPixel = me.right;\n    } else {\n      startPixel = me.top;\n      endPixel = me.bottom;\n      reversePixels = !reversePixels;\n    }\n    me._startPixel = startPixel;\n    me._endPixel = endPixel;\n    me._reversePixels = reversePixels;\n    me._length = endPixel - startPixel;\n    me._alignToPixels = me.options.alignToPixels;\n  }\n  afterUpdate() {\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    const me = this;\n    me.chart.notifyPlugins(name, me.getContext());\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(me.options[name], [me]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(tickOpts.callback, [tick.value, i, ticks], me);\n    }\n    for (i = 0; i < ilen; i++) {\n      if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Sb\"])(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n  }\n  afterTickToLabelConversion() {\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const me = this;\n    const options = me.options;\n    const tickOpts = options.ticks;\n    const numTicks = me.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\n      me.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = me._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* x */ \"gc\"])(me.chart.width - maxLabelWidth, 0, me.maxWidth);\n    tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = me.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Q */ \"r\"])(Math.min(\n        Math.asin(Math.min((labelSizes.highest.height + 6) / tickWidth, 1)),\n        Math.asin(Math.min(maxHeight / maxLabelDiagonal, 1)) - Math.asin(maxLabelHeight / maxLabelDiagonal)\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    me.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const me = this;\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = me;\n    const display = me._isVisible();\n    const isHorizontal = me.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = me.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = me.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && me.ticks.length) {\n        const {first, last, widest, highest} = me._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* t */ \"cc\"])(me.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        me._calculatePadding(first, last, sin, cos);\n      }\n    }\n    me._handleMargins();\n    if (isHorizontal) {\n      me.width = me._length = chart.width - me._margins.left - me._margins.right;\n      me.height = minSize.height;\n    } else {\n      me.width = minSize.width;\n      me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const me = this;\n    const {ticks: {align, padding}, position} = me.options;\n    const isRotated = me.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && me.axis === 'x';\n    if (me.isHorizontal()) {\n      const offsetLeft = me.getPixelForTick(0) - me.left;\n      const offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\n      me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      me.paddingTop = paddingTop + padding;\n      me.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    const me = this;\n    if (me._margins) {\n      me._margins.left = Math.max(me.paddingLeft, me._margins.left);\n      me._margins.top = Math.max(me.paddingTop, me._margins.top);\n      me._margins.right = Math.max(me.paddingRight, me._margins.right);\n      me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\n    }\n  }\n  afterFit() {\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    const me = this;\n    me.beforeTickToLabelConversion();\n    me.generateTickLabels(ticks);\n    me.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    const me = this;\n    let labelSizes = me._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = me.options.ticks.sampleSize;\n      let ticks = me.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Sb\"])(label) && !Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"Kb\"])(label)) {\n        width = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* R */ \"s\"])(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"Kb\"])(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Sb\"])(nestedLabel) && !Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"Kb\"])(nestedLabel)) {\n            width = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* R */ \"s\"])(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest)\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    const me = this;\n    if (me._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = me._startPixel + decimal * me._length;\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* S */ \"t\"])(me._alignToPixels ? Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* U */ \"v\"])(me.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const me = this;\n    const ticks = me.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(me.getContext(), index, tick));\n    }\n    return me.$context ||\n\t\t\t(me.$context = createScaleContext(me.chart.getContext(), me));\n  }\n  _tickSize() {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    const rot = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* t */ \"cc\"])(me.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = me._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return me.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const chart = me.chart;\n    const options = me.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(me.getContext(0));\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* U */ \"v\"])(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(me.bottom);\n      ty1 = me.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(me.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = me.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(me.right);\n      tx1 = me.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(me.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = me.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Rb\"])(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Rb\"])(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    for (i = 0; i < ticksLength; ++i) {\n      const optsAtIndex = grid.setContext(me.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(me, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* U */ \"v\"])(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    me._ticksLength = ticksLength;\n    me._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const options = me.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* t */ \"cc\"])(me.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = me.bottom - hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = me.top + hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Rb\"])(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Rb\"])(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = me.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = me._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = me._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(me.getContext(i));\n      pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\n      font = me._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"Kb\"])(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y]\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const me = this;\n    const {position, ticks} = me.options;\n    const rotation = -Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* t */ \"cc\"])(me.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const me = this;\n    const {position, ticks: {crossAlign, mirror, padding}} = me.options;\n    const labelSizes = me._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        textAlign = 'left';\n        x = me.right + padding;\n      } else {\n        x = me.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = me.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        textAlign = 'right';\n        x = me.left + padding;\n      } else {\n        x = me.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = me.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    const me = this;\n    if (me.options.ticks.mirror) {\n      return;\n    }\n    const chart = me.chart;\n    const position = me.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: me.left, bottom: chart.height, right: me.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: me.top, left: 0, bottom: me.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const me = this;\n    const grid = me.options.grid;\n    if (!me._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = me.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(me.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const me = this;\n    const grid = me.options.grid;\n    const ctx = me.ctx;\n    const chart = me.chart;\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    const items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n    if (axisWidth) {\n      const lastLineWidth = borderOpts.lineWidth;\n      const borderValue = me._borderValue;\n      let x1, x2, y1, y2;\n      if (me.isHorizontal()) {\n        x1 = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* U */ \"v\"])(chart, me.left, axisWidth) - axisWidth / 2;\n        x2 = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* U */ \"v\"])(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n        y1 = y2 = borderValue;\n      } else {\n        y1 = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* U */ \"v\"])(chart, me.top, axisWidth) - axisWidth / 2;\n        y2 = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* U */ \"v\"])(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n        x1 = x2 = borderValue;\n      }\n      drawLine(\n        {x: x1, y: y1},\n        {x: x2, y: y2},\n        {width: axisWidth, color: borderOpts.borderColor});\n    }\n  }\n  drawLabels(chartArea) {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = me.ctx;\n    const area = me._computeLabelArea();\n    if (area) {\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* k */ \"Tb\"])(ctx, area);\n    }\n    const items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      let y = item.textOffset;\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* V */ \"w\"])(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* m */ \"Vb\"])(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(title.font);\n    const padding = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* C */ \"d\"])(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom') {\n      offset += padding.bottom;\n      if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"Kb\"])(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* V */ \"w\"])(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    const me = this;\n    if (!me._isVisible()) {\n      return;\n    }\n    me.drawBackground();\n    me.drawGrid(chartArea);\n    me.drawTitle();\n    me.drawLabels(chartArea);\n  }\n  _layers() {\n    const me = this;\n    const opts = me.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = opts.grid && opts.grid.z || 0;\n    if (!me._isVisible() || tz === gz || me.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw(chartArea) {\n          me.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw(chartArea) {\n        me.drawBackground();\n        me.drawGrid(chartArea);\n        me.drawTitle();\n      }\n    }, {\n      z: tz,\n      draw(chartArea) {\n        me.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const me = this;\n    const metas = me.chart.getSortedVisibleDatasetMetas();\n    const axisID = me.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === me.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(opts.font);\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const me = this;\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = me.register(proto);\n    }\n    const items = me.items;\n    const id = item.id;\n    const scope = me.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (me.override) {\n      _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"Mb\"].override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"Mb\"][scope]) {\n      delete _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"Mb\"][scope][id];\n      if (this.override) {\n        delete _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Z */ \"A\"][id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* $ */ \"a\"])(Object.create(null), [\n    parentScope ? _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"Mb\"].get(parentScope) : {},\n    _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"Mb\"].get(scope),\n    item.defaults\n  ]);\n  _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"Mb\"].set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"Mb\"].describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"Mb\"].route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    const me = this;\n    [...args].forEach(arg => {\n      const reg = typedRegistry || me._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === me.plugins && arg.id)) {\n        me._exec(method, reg, arg);\n      } else {\n        Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(arg, item => {\n          const itemReg = typedRegistry || me._getRegistryForType(item);\n          me._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a0 */ \"D\"])(method);\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(component['before' + camelMethod], [], component);\n    registry[method](component);\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    const me = this;\n    if (hook === 'beforeInit') {\n      me._init = me._createDescriptors(chart, true);\n      me._notify(me._init, chart, 'install');\n    }\n    const descriptors = filter ? me._descriptors(chart).filter(filter) : me._descriptors(chart);\n    const result = me._notify(descriptors, chart, hook, args);\n    if (hook === 'destroy') {\n      me._notify(descriptors, chart, 'stop');\n      me._notify(me._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Sb\"])(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"ec\"])(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"Mb\"].datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Z */ \"A\"][config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a6 */ \"J\"])(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Z */ \"A\"][type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a6 */ \"J\"])(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a6 */ \"J\"])(scale, [_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"Mb\"].scales[scale.type], _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"Mb\"].scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"ec\"])(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* f */ \"Ob\"])(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Z */ \"A\"][type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"Mb\"], key));\n      keys.forEach(key => addIfFound(scopes, _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a1 */ \"E\"], key));\n    });\n    const array = [...scopes];\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Z */ \"A\"][type] || {},\n      _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"Mb\"].datasets[type] || {},\n      {type},\n      _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"Mb\"],\n      _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a1 */ \"E\"]\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a2 */ \"F\"])(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a3 */ \"G\"])(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Rb\"])(context)\n      ? Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a3 */ \"G\"])(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a4 */ \"H\"])(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a5 */ \"I\"])(proxy);\n  for (const prop of names) {\n    if ((isScriptable(prop) && Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a2 */ \"F\"])(proxy[prop]))\n      || (isIndexable(prop) && Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"Kb\"])(proxy[prop]))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.1.1\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction getCanvas(item) {\n  if (isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nclass Chart {\n  constructor(item, config) {\n    const me = this;\n    this.config = config = new Config(config);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    this.platform = me._initializePlatform(initialCanvas, config);\n    const context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a7 */ \"K\"])();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._sortedMetasets = [];\n    this.scales = {};\n    this.scale = undefined;\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a8 */ \"L\"])(() => this.update('resize'), options.resizeDelay || 0);\n    instances[me.id] = me;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(me, 'complete', onAnimationsComplete);\n    animator.listen(me, 'progress', onAnimationProgress);\n    me._initialize();\n    if (me.attached) {\n      me.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Sb\"])(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    const me = this;\n    me.notifyPlugins('beforeInit');\n    if (me.options.responsive) {\n      me.resize();\n    } else {\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a9 */ \"M\"])(me, me.options.devicePixelRatio);\n    }\n    me.bindEvents();\n    me.notifyPlugins('afterInit');\n    return me;\n  }\n  _initializePlatform(canvas, config) {\n    if (config.platform) {\n      return new config.platform();\n    } else if (!isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n      return new BasicPlatform();\n    }\n    return new DomPlatform();\n  }\n  clear() {\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aa */ \"kb\"])(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const me = this;\n    const options = me.options;\n    const canvas = me.canvas;\n    const aspectRatio = options.maintainAspectRatio && me.aspectRatio;\n    const newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const oldRatio = me.currentDevicePixelRatio;\n    const newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\n    if (me.width === newSize.width && me.height === newSize.height && oldRatio === newRatio) {\n      return;\n    }\n    me.width = newSize.width;\n    me.height = newSize.height;\n    me._aspectRatio = me.aspectRatio;\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a9 */ \"M\"])(me, newRatio, true);\n    me.notifyPlugins('resize', {size: newSize});\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(options.onResize, [me, newSize], me);\n    if (me.attached) {\n      if (me._doResize()) {\n        me.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const me = this;\n    const options = me.options;\n    const scaleOpts = options.scales;\n    const scales = me.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"ec\"])(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: me.ctx,\n          chart: me\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(scales, (scale) => {\n      layouts.configure(me, scale, scale.options);\n      layouts.addBox(me, scale);\n    });\n  }\n  _updateMetasetIndex(meta, index) {\n    const metasets = this._metasets;\n    const oldIndex = meta.index;\n    if (oldIndex !== index) {\n      metasets[oldIndex] = metasets[index];\n      metasets[index] = meta;\n      meta.index = index;\n    }\n  }\n  _updateMetasets() {\n    const me = this;\n    const metasets = me._metasets;\n    const numData = me.data.datasets.length;\n    const numMeta = metasets.length;\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        me._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const me = this;\n    const {_metasets: metasets, data: {datasets}} = me;\n    if (metasets.length > datasets.length) {\n      delete me._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        me._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const me = this;\n    const newControllers = [];\n    const datasets = me.data.datasets;\n    let i, ilen;\n    me._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = me.getDatasetMeta(i);\n      const type = dataset.type || me.config.type;\n      if (meta.type && meta.type !== type) {\n        me._destroyDatasetMeta(i);\n        meta = me.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\n      meta.order = dataset.order || 0;\n      me._updateMetasetIndex(meta, i);\n      meta.label = '' + dataset.label;\n      meta.visible = me.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"Mb\"].datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(me, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    me._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    const me = this;\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(me.data.datasets, (dataset, datasetIndex) => {\n      me.getDatasetMeta(datasetIndex).controller.reset();\n    }, me);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const me = this;\n    const config = me.config;\n    config.update();\n    me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(me.scales, (scale) => {\n      layouts.removeBox(me, scale);\n    });\n    const animsDisabled = me._animationsDisabled = !me.options.animation;\n    me.ensureScalesHaveIDs();\n    me.buildOrUpdateScales();\n    me._plugins.invalidate();\n    if (me.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = me.buildOrUpdateControllers();\n    me.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\n      const {controller} = me.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    me._minPadding = minPadding;\n    me._updateLayout(minPadding);\n    if (!animsDisabled) {\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    me._updateDatasets(mode);\n    me.notifyPlugins('afterUpdate', {mode});\n    me._layers.sort(compare2Level('z', '_idx'));\n    if (me._lastEvent) {\n      me._eventHandler(me._lastEvent, true);\n    }\n    me.render();\n  }\n  _updateLayout(minPadding) {\n    const me = this;\n    if (me.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(me, me.width, me.height, minPadding);\n    const area = me.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    me._layers = [];\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(me.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      me._layers.push(...box._layers());\n    }, me);\n    me._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    me.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    const me = this;\n    const isFunction = typeof mode === 'function';\n    if (me.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._updateDataset(i, isFunction ? mode({datasetIndex: i}) : mode);\n    }\n    me.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const me = this;\n    const meta = me.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    const me = this;\n    if (me.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(me)) {\n      if (me.attached && !animator.running(me)) {\n        animator.start(me);\n      }\n    } else {\n      me.draw();\n      onAnimationsComplete({chart: me});\n    }\n  }\n  draw() {\n    const me = this;\n    let i;\n    if (me._resizeBeforeDraw) {\n      const {width, height} = me._resizeBeforeDraw;\n      me._resize(width, height);\n      me._resizeBeforeDraw = null;\n    }\n    me.clear();\n    if (me.width <= 0 || me.height <= 0) {\n      return;\n    }\n    if (me.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = me._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const me = this;\n    const metasets = me._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    const me = this;\n    if (me.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = me.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      me._drawDataset(metasets[i]);\n    }\n    me.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const me = this;\n    const ctx = me.ctx;\n    const clip = meta._clip;\n    const area = me.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* k */ \"Tb\"])(ctx, {\n      left: clip.left === false ? 0 : area.left - clip.left,\n      right: clip.right === false ? me.width : area.right + clip.right,\n      top: clip.top === false ? 0 : area.top - clip.top,\n      bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\n    });\n    meta.controller.draw();\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* m */ \"Vb\"])(ctx);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const me = this;\n    const dataset = me.data.datasets[datasetIndex];\n    const metasets = me._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = metasets[datasetIndex] = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = {chart: this, type: 'chart'});\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateDatasetVisibility(datasetIndex, visible) {\n    const me = this;\n    const mode = visible ? 'show' : 'hide';\n    const meta = me.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    me.setDatasetVisibility(datasetIndex, visible);\n    anims.update(meta, {visible});\n    me.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n  }\n  hide(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, false);\n  }\n  show(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const me = this;\n    const meta = me._metasets && me._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n      delete me._metasets[datasetIndex];\n    }\n  }\n  destroy() {\n    const me = this;\n    const {canvas, ctx} = me;\n    let i, ilen;\n    me.stop();\n    animator.remove(me);\n    for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._destroyDatasetMeta(i);\n    }\n    me.config.clearCache();\n    if (canvas) {\n      me.unbindEvents();\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aa */ \"kb\"])(canvas, ctx);\n      me.platform.releaseContext(ctx);\n      me.canvas = null;\n      me.ctx = null;\n    }\n    me.notifyPlugins('destroy');\n    delete instances[me.id];\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(me, type, listener);\n        delete listeners[type];\n      }\n    };\n    let listener = function(e, x, y) {\n      e.offsetX = x;\n      e.offsetY = y;\n      me._eventHandler(e);\n    };\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(me.options.events, (type) => _add(type, listener));\n    if (me.options.responsive) {\n      listener = (width, height) => {\n        if (me.canvas) {\n          me.resize(width, height);\n        }\n      };\n      let detached;\n      const attached = () => {\n        _remove('attach', attached);\n        me.attached = true;\n        me.resize();\n        _add('resize', listener);\n        _add('detach', detached);\n      };\n      detached = () => {\n        me.attached = false;\n        _remove('resize', listener);\n        _add('attach', attached);\n      };\n      if (platform.isAttached(me.canvas)) {\n        attached();\n      } else {\n        detached();\n      }\n    } else {\n      me.attached = true;\n    }\n  }\n  unbindEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    if (!listeners) {\n      return;\n    }\n    delete me._listeners;\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(listeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const me = this;\n    const lastActive = me._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ab */ \"lb\"])(active, lastActive);\n    if (changed) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const me = this;\n    const hoverOptions = me.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      me.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      me.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const me = this;\n    const args = {event: e, replay, cancelable: true};\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.type);\n    if (me.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = me._handleEvent(e, replay);\n    args.cancelable = false;\n    me.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      me.render();\n    }\n    return me;\n  }\n  _handleEvent(e, replay) {\n    const me = this;\n    const {_active: lastActive = [], options} = me;\n    const hoverOptions = options.hover;\n    const useFinalPosition = replay;\n    let active = [];\n    let changed = false;\n    let lastEvent = null;\n    if (e.type !== 'mouseout') {\n      active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n      lastEvent = e.type === 'click' ? me._lastEvent : e;\n    }\n    me._lastEvent = null;\n    if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* A */ \"b\"])(e, me.chartArea, me._minPadding)) {\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(options.onHover, [e, active, me], me);\n      if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n        Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(options.onClick, [e, active, me], me);\n      }\n    }\n    changed = !Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ab */ \"lb\"])(active, lastActive);\n    if (changed || replay) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive, replay);\n    }\n    me._lastEvent = lastEvent;\n    return changed;\n  }\n}\nconst invalidatePlugins = () => Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"Mb\"]\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Z */ \"A\"]\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element) {\n  const {startAngle, endAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* H */ \"i\"], startAngle - _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* H */ \"i\"]);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ad */ \"nb\"])(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* x */ \"gc\"])(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* x */ \"gc\"])(o.innerStart, 0, innerLimit),\n    innerEnd: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* x */ \"gc\"])(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element) {\n  const {x, y, startAngle, endAngle, pixelMargin} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* H */ \"i\"]);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* H */ \"i\"], innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* H */ \"i\"]);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* H */ \"i\"], outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element) {\n  if (element.fullCircles) {\n    element.endAngle = element.startAngle + _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"];\n    pathArc(ctx, element);\n    for (let i = 0; i < element.fullCircles; ++i) {\n      ctx.fill();\n    }\n  }\n  if (!isNaN(element.circumference)) {\n    element.endAngle = element.startAngle + element.circumference % _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"];\n  }\n  pathArc(ctx, element);\n  ctx.fill();\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, endAngle, pixelMargin} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    element.endAngle = element.startAngle + _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"];\n    clipArc(ctx, element);\n    element.endAngle = endAngle;\n    if (element.endAngle === element.startAngle) {\n      element.endAngle += _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"];\n      element.fullCircles--;\n    }\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"], startAngle, true);\n  for (i = 0; i < element.fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"]);\n  for (i = 0; i < element.fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element) {\n  const {options} = element;\n  const inner = options.borderAlign === 'inner';\n  if (!options.borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element);\n  }\n  pathArc(ctx, element);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ac */ \"mb\"])(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const betweenAngles = circumference >= _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"] || Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* q */ \"Zb\"])(angle, startAngle, endAngle);\n    const withinRadius = (distance >= innerRadius && distance <= outerRadius);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options;\n    const offset = options.offset || 0;\n    me.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    me.fullCircles = Math.floor(me.circumference / _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"]);\n    if (me.circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    if (offset && me.circumference < _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"]) {\n      const halfAngle = (me.startAngle + me.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    drawArc(ctx, me);\n    drawBorder(ctx, me);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"ec\"])(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"ec\"])(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"ec\"])(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"ec\"])(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"ec\"])(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"ec\"])(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ak */ \"ub\"];\n  }\n  if (options.tension) {\n    return _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* al */ \"vb\"];\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ah */ \"rb\"];\n  }\n  if (options.tension) {\n    return _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ai */ \"sb\"];\n  }\n  return _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aj */ \"tb\"];\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && line.segments.length === 1) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea) {\n    const me = this;\n    const options = me.options;\n    if (options.tension && !options.stepped && !me._pointsUpdated) {\n      const loop = options.spanGaps ? me._loop : me._fullLoop;\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ae */ \"ob\"])(me._points, options, chartArea, loop);\n      me._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    const me = this;\n    me._points = points;\n    delete me._segments;\n    delete me._path;\n    me._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* af */ \"pb\"])(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const me = this;\n    const options = me.options;\n    const value = point[property];\n    const points = me.points;\n    const segments = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ag */ \"qb\"])(me, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const me = this;\n    const segments = me.segments;\n    const segmentMethod = _getSegmentMethod(me);\n    let loop = me._loop;\n    start = start || 0;\n    count = count || (me.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, me, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const me = this;\n    const options = me.options || {};\n    const points = me.points || [];\n    if (!points.length || !options.borderWidth) {\n      return;\n    }\n    ctx.save();\n    draw(ctx, me, start, count);\n    ctx.restore();\n    if (me.animated) {\n      me._pointsUpdated = false;\n      me._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options;\n    if (me.skip || options.radius < 0.1) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* am */ \"wb\"])(ctx, options, me.x, me.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction parseBorderSkipped(bar) {\n  let edge = bar.options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    return res;\n  }\n  edge = bar.horizontal\n    ? parseEdge(edge, 'left', 'right', bar.base > bar.x)\n    : parseEdge(edge, 'bottom', 'top', bar.base < bar.y);\n  res[edge] = true;\n  return res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : Math.max(Math.min(value, max), min);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = parseBorderSkipped(bar);\n  const o = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ao */ \"yb\"])(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const value = bar.options.borderRadius;\n  const o = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ap */ \"zb\"])(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = parseBorderSkipped(bar);\n  return {\n    topLeft: skipOrLimit(skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const options = this.options;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* an */ \"xb\"] : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, outer);\n      ctx.clip();\n      addRectPath(ctx, inner);\n      ctx.fillStyle = options.borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inner);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Sb\"])(minIndex) && !Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Sb\"])(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* x */ \"gc\"])(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* y */ \"hc\"])(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* x */ \"gc\"])(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* y */ \"hc\"])(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a */ \"C\"])([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      if (count <= 4 * availableWidth) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Sb\"])(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"ec\"])(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Rb\"])(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Pb\"])(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Rb\"])(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Pb\"])(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"]};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* i */ \"Rb\"])(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach((segment) => {\n    const first = linePoints[segment.start];\n    const last = linePoints[segment.end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {chart, scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(chart, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nconst isLineAndNotInHideAnimation = (meta) => meta.type === 'line' && !meta.hidden;\nfunction getLinesBelow(chart, index) {\n  const below = [];\n  const metas = chart.getSortedVisibleDatasetMetas();\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (isLineAndNotInHideAnimation(meta)) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Pb\"])(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"Kb\"])(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Pb\"])(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ar */ \"Bb\"])(start);\n    end = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ar */ \"Bb\"])(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    const bounds = getBounds(property, points[segment.start], points[segment.end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[segment.start],\n        end: points[segment.end]\n      });\n      continue;\n    }\n    const targetSegments = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ag */ \"qb\"])(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aq */ \"Ab\"])(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      interpolatedLineTo(ctx, target, end, property);\n    }\n    const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n    const loop = lineLoop && targetLoop;\n    if (!loop) {\n      interpolatedLineTo(ctx, target, start, property);\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* k */ \"Tb\"])(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* m */ \"Vb\"])(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        source.line.updateControlPoints(area);\n        if (options.drawTime === 'beforeDatasetsDraw') {\n          drawfill(chart.ctx, source, area);\n        }\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins;\n    me.setDimensions();\n    me.buildLabels();\n    me.fit();\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n  }\n  buildLabels() {\n    const me = this;\n    const labelOpts = me.options.labels || {};\n    let legendItems = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(labelOpts.generateLabels, [me.chart], me) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, me.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, me.chart.data));\n    }\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n    me.legendItems = legendItems;\n  }\n  fit() {\n    const me = this;\n    const {options, ctx} = me;\n    if (!options.display) {\n      me.width = me.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = me._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (me.isHorizontal()) {\n      width = me.maxWidth;\n      height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = me.maxHeight;\n      width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    me.width = Math.min(width, options.maxWidth || me.maxWidth);\n    me.height = Math.min(height, options.maxHeight || me.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxWidth, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const lineWidths = me.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxHeight, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const columnSizes = me.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let top = 0;\n    let col = 0;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + fontSize + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        top = 0;\n        currentColWidth = currentColHeight = 0;\n      }\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += fontSize + padding;\n      hitboxes[i] = {left, top, col, width: itemWidth, height: itemHeight};\n      top += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    const me = this;\n    if (!me.options.display) {\n      return;\n    }\n    const titleHeight = me._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}}} = me;\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(align, me.left + padding, me.right - me.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(align, me.left + padding, me.right - me.lineWidths[row]);\n        }\n        hitbox.top += me.top + titleHeight + padding;\n        hitbox.left = left;\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += me.left + padding;\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    const me = this;\n    if (me.options.display) {\n      const ctx = me.ctx;\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* k */ \"Tb\"])(ctx, me);\n      me._draw();\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* m */ \"Vb\"])(ctx);\n    }\n  }\n  _draw() {\n    const me = this;\n    const {options: opts, columnSizes, lineWidths, ctx} = me;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"Mb\"].color;\n    const rtlHelper = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* as */ \"Cb\"])(opts.rtl, me.left, me.width);\n    const labelFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    me.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"ec\"])(legendItem.lineWidth, 1);\n      ctx.fillStyle = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"ec\"])(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"ec\"])(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"ec\"])(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"ec\"])(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"ec\"])(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"ec\"])(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* am */ \"wb\"])(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ap */ \"zb\"])(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* an */ \"xb\"])(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* V */ \"w\"])(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: legendItem.textAlign\n      });\n    };\n    const isHorizontal = me.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(align, me.left + padding, me.right - lineWidths[0]),\n        y: me.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: me.left + padding,\n        y: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* at */ \"Db\"])(me.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    me.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + (fontSize / 2) + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(me.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > me.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(align, me.left + padding, me.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > me.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* au */ \"Eb\"])(textAlign, x + boxWidth + halfFontSize, me.right);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* av */ \"Fb\"])(me.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const me = this;\n    const opts = me.options;\n    const titleOpts = opts.title;\n    const titleFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(titleOpts.font);\n    const titlePadding = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* C */ \"d\"])(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* as */ \"Cb\"])(opts.rtl, me.left, me.width);\n    const ctx = me.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = me.left;\n    let maxWidth = me.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...me.lineWidths);\n      y = me.top + topPaddingPlusHalfFontSize;\n      left = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(opts.align, left, me.right - maxWidth);\n    } else {\n      const maxHeight = me.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\n    }\n    const x = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* X */ \"y\"])(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* V */ \"w\"])(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(titleOpts.font);\n    const titlePadding = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* C */ \"d\"])(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    const me = this;\n    let i, hitBox, lh;\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      lh = me.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          return me.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const me = this;\n    const opts = me.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = me._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = me._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(opts.onLeave, [e, previous, me], me);\n      }\n      me._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(opts.onHover, [e, hoveredItem, me], me);\n      }\n    } else if (hoveredItem) {\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(opts.onClick, [e, hoveredItem, me], me);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* C */ \"d\"])(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const me = this;\n    const opts = me.options;\n    me.left = 0;\n    me.top = 0;\n    if (!opts.display) {\n      me.width = me.height = me.right = me.bottom = 0;\n      return;\n    }\n    me.width = me.right = maxWidth;\n    me.height = me.bottom = maxHeight;\n    const lineCount = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"Kb\"])(opts.text) ? opts.text.length : 1;\n    me._padding = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* C */ \"d\"])(opts.padding);\n    const textSize = lineCount * Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(opts.font).lineHeight + me._padding.height;\n    if (me.isHorizontal()) {\n      me.height = textSize;\n    } else {\n      me.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(align, bottom, top);\n        rotation = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* P */ \"q\"] * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Y */ \"z\"])(align, top, bottom);\n        rotation = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* P */ \"q\"] * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + me._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = me._drawArgs(offset);\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* V */ \"w\"])(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* X */ \"y\"])(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ax */ \"Hb\"])(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"Kb\"])(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip._chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(options.bodyFont);\n  const titleFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(options.titleFont);\n  const footerFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* C */ \"d\"])(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2) : 0;\n  Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(body, (bodyItem) => {\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(bodyItem.before, maxLineWidth);\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(bodyItem.lines, maxLineWidth);\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const radiusAndPadding = cornerRadius + caretPadding;\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n  return {\n    x: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* x */ \"gc\"])(x, 0, chart.width - size.width),\n    y: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* x */ \"gc\"])(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* C */ \"d\"])(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return Object.assign(Object.create(parent), {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._chart = config._chart;\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const me = this;\n    const cached = me._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = me._chart;\n    const options = me.options.setContext(me.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(me._chart, opts);\n    if (opts._cacheable) {\n      me._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    const me = this;\n    return me.$context ||\n\t\t\t(me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\n  }\n  getTitle(context, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(me, [context]);\n    const title = callbacks.title.apply(me, [context]);\n    const afterTitle = callbacks.afterTitle.apply(me, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const bodyItems = [];\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\n    const footer = callbacks.footer.apply(me, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const me = this;\n    const active = me._active;\n    const data = me._chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(me._chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(me, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(me, context));\n      labelTextColors.push(scoped.labelTextColor.call(me, context));\n    });\n    me.labelColors = labelColors;\n    me.labelPointStyles = labelPointStyles;\n    me.labelTextColors = labelTextColors;\n    me.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    const active = me._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (me.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(me, active, me._eventPosition);\n      tooltipItems = me._createItems(options);\n      me.title = me.getTitle(tooltipItems, options);\n      me.beforeBody = me.getBeforeBody(tooltipItems, options);\n      me.body = me.getBody(tooltipItems, options);\n      me.afterBody = me.getAfterBody(tooltipItems, options);\n      me.footer = me.getFooter(tooltipItems, options);\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(me._chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\n      me.xAlign = alignment.xAlign;\n      me.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    me._tooltipItems = tooltipItems;\n    me.$context = undefined;\n    if (properties) {\n      me._resolveAnimations().update(me, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(me, {chart: me._chart, tooltip: me, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {cornerRadius, caretSize} = options;\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const me = this;\n    const title = me.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* as */ \"Cb\"])(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const me = this;\n    const labelColors = me.labelColors[i];\n    const labelPointStyle = me.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(options.bodyFont);\n    const colorX = getAlignedX(me, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* am */ \"wb\"])(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* am */ \"wb\"])(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ap */ \"zb\"])(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* an */ \"xb\"])(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* an */ \"xb\"])(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = me.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const me = this;\n    const {body} = me;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth} = options;\n    const bodyFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* as */ \"Cb\"])(options.rtl, me.x, me.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(me, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(me.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + 1) : (boxWidth + 2)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = me.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        me._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* D */ \"e\"])(me.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const me = this;\n    const footer = me.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* as */ \"Cb\"])(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const radius = options.cornerRadius;\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const me = this;\n    const chart = me._chart;\n    const anims = me.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(me, me._active, me._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, me._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        me.xAlign = alignment.xAlign;\n        me.yAlign = alignment.yAlign;\n        me.width = size.width;\n        me.height = size.height;\n        me.caretX = position.x;\n        me.caretY = position.y;\n        me._resolveAnimations().update(me, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    let opacity = me.opacity;\n    if (!opacity) {\n      return;\n    }\n    me._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: me.width,\n      height: me.height\n    };\n    const pt = {\n      x: me.x,\n      y: me.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* C */ \"d\"])(options.padding);\n    const hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      me.drawBackground(pt, ctx, tooltipSize, options);\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* at */ \"Db\"])(ctx, options.textDirection);\n      pt.y += padding.top;\n      me.drawTitle(pt, ctx, options);\n      me.drawBody(pt, ctx, options);\n      me.drawFooter(pt, ctx, options);\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* av */ \"Fb\"])(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const me = this;\n    const lastActive = me._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me._chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ab */ \"lb\"])(lastActive, active);\n    const positionChanged = me._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      me._active = active;\n      me._eventPosition = eventPosition;\n      me.update(true);\n    }\n  }\n  handleEvent(e, replay) {\n    const me = this;\n    const options = me.options;\n    const lastActive = me._active || [];\n    let changed = false;\n    let active = [];\n    if (e.type !== 'mouseout') {\n      active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n    }\n    const positionChanged = me._positionChanged(active, e);\n    changed = replay || !Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ab */ \"lb\"])(active, lastActive) || positionChanged;\n    if (changed) {\n      me._active = active;\n      if (options.enabled || options.external) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({_chart: chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aw */ \"Gb\"],\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aw */ \"Gb\"],\n      beforeBody: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aw */ \"Gb\"],\n      beforeLabel: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aw */ \"Gb\"],\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Sb\"])(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aw */ \"Gb\"],\n      afterBody: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aw */ \"Gb\"],\n      beforeFooter: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aw */ \"Gb\"],\n      footer: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aw */ \"Gb\"],\n      afterFooter: _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aw */ \"Gb\"]\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index) => typeof raw === 'string'\n  ? labels.push(raw) - 1\n  : isNaN(raw) ? null : index;\nfunction findOrAddLabel(labels, raw, index) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* x */ \"gc\"])(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Sb\"])(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"ec\"])(index, raw));\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me.getMinMax(true);\n    if (me.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = me.getLabels().length - 1;\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const min = me.min;\n    const max = me.max;\n    const offset = me.options.offset;\n    const ticks = [];\n    let labels = me.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    me._startValue = me.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const labels = me.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    const me = this;\n    super.configure();\n    if (!me.isHorizontal()) {\n      me._reversePixels = !me._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (typeof value !== 'number') {\n      value = me.parse(value);\n    }\n    return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\n  }\n  getPixelForTick(index) {\n    const me = this;\n    const ticks = me.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return me.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {step, min, max, precision, count, maxTicks} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Sb\"])(min);\n  const maxDefined = !Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Sb\"])(max);\n  const countDefined = !Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Sb\"])(count);\n  let spacing = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* az */ \"Jb\"])((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* az */ \"Jb\"])(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Sb\"])(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  niceMin = Math.floor(rmin / spacing) * spacing;\n  niceMax = Math.ceil(rmax / spacing) * spacing;\n  if (minDefined && maxDefined && step && Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aA */ \"N\"])((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.min((max - min) / spacing, maxTicks);\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aB */ \"O\"])(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  factor = Math.pow(10, Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Sb\"])(precision) ? Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aC */ \"P\"])(spacing) : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    ticks.push({value: min});\n    if (niceMin <= min) {\n      j++;\n    }\n    if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aB */ \"O\"])(Math.round((niceMin + j * spacing) * factor) / factor, min, spacing / 10)) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined) {\n    if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aB */ \"O\"])(ticks[ticks.length - 1].value, max, spacing / 10)) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Sb\"])(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {beginAtZero, stacked} = me.options;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero || stacked) {\n      const minSign = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* s */ \"bc\"])(min);\n      const maxSign = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* s */ \"bc\"])(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      setMax(max + 1);\n      if (!beginAtZero) {\n        setMin(min - 1);\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  getTickLimit() {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n    } else {\n      maxTicks = me.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = me.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n    };\n    const dataRange = me._range || me;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ay */ \"Ib\"])(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const me = this;\n    const ticks = me.ticks;\n    let start = me.min;\n    let end = me.max;\n    super.configure();\n    if (me.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    me._startValue = start;\n    me._endValue = end;\n    me._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* p */ \"Yb\"])(value, this.chart.options.locale);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Pb\"])(min) ? min : 0;\n    me.max = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Pb\"])(max) ? max : 1;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const me = this;\n    if (me.isHorizontal()) {\n      return Math.ceil(me.width / 40);\n    }\n    const tickFont = me._resolveTickFontOptions(0);\n    return Math.ceil(me.height / tickFont.lineHeight);\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* K */ \"l\"])(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* K */ \"l\"])(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(generationOptions.min, Math.pow(10, Math.floor(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* K */ \"l\"])(dataRange.min))));\n  let exp = Math.floor(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* K */ \"l\"])(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* M */ \"n\"])(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Pb\"])(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Pb\"])(min) ? Math.max(0, min) : null;\n    me.max = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Pb\"])(max) ? Math.max(0, max) : null;\n    if (me.options.beginAtZero) {\n      me._zero = true;\n    }\n    me.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let min = me.min;\n    let max = me.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* K */ \"l\"])(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const generationOptions = {\n      min: me._userMin,\n      max: me._userMax\n    };\n    const ticks = generateTicks(generationOptions, me);\n    if (opts.bounds === 'ticks') {\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ay */ \"Ib\"])(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined ? '0' : Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* p */ \"Yb\"])(value, this.chart.options.locale);\n  }\n  configure() {\n    const me = this;\n    const start = me.min;\n    super.configure();\n    me._startValue = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* K */ \"l\"])(start);\n    me._valueRange = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* K */ \"l\"])(me.max) - Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* K */ \"l\"])(start);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (value === undefined || value === 0) {\n      value = me.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return me.getPixelForDecimal(value === me.min\n      ? 0\n      : (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* K */ \"l\"])(value) - me._startValue) / me._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const decimal = me.getDecimalForPixel(pixel);\n    return Math.pow(10, me._startValue + decimal * me._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* C */ \"d\"])(tickOpts.backdropPadding);\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"ec\"])(tickOpts.font && tickOpts.font.size, _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* d */ \"Mb\"].font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, lineHeight, label) {\n  if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* b */ \"Kb\"])(label)) {\n    return {\n      w: Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aD */ \"Q\"])(ctx, ctx.font, label),\n      h: label.length * lineHeight\n    };\n  }\n  return {\n    w: ctx.measureText(label).width,\n    h: lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  const furthestAngles = {};\n  let i, textSize, pointPosition;\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale.getLabels().length;\n  for (i = 0; i < valueCount; i++) {\n    const opts = scale.options.pointLabels.setContext(scale.getContext(i));\n    padding[i] = opts.padding;\n    pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    const plFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(opts.font);\n    scale.ctx.font = plFont.string;\n    textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = scale.getIndexAngle(i);\n    const angle = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Q */ \"r\"])(angleRadians);\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  scale._pointLabelItems = [];\n  const opts = scale.options;\n  const tickBackdropHeight = getTickBackdropHeight(opts);\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n  for (i = 0; i < valueCount; i++) {\n    const extra = (i === 0 ? tickBackdropHeight / 2 : 0);\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    const angle = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* Q */ \"r\"])(scale.getIndexAngle(i));\n    const size = labelSizes[i];\n    adjustPointPositionForLabelHeight(angle, size, pointLabelPosition);\n    const textAlign = getTextAlignForAngle(angle);\n    let left;\n    if (textAlign === 'left') {\n      left = pointLabelPosition.x;\n    } else if (textAlign === 'center') {\n      left = pointLabelPosition.x - (size.w / 2);\n    } else {\n      left = pointLabelPosition.x - size.w;\n    }\n    const right = left + size.w;\n    scale._pointLabelItems[i] = {\n      x: pointLabelPosition.x,\n      y: pointLabelPosition.y,\n      textAlign,\n      left,\n      top: pointLabelPosition.y,\n      right,\n      bottom: pointLabelPosition.y + size.h,\n    };\n  }\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n  if (angle === 90 || angle === 270) {\n    position.y -= (textSize.h / 2);\n  } else if (angle > 270 || angle < 90) {\n    position.y -= textSize.h;\n  }\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getContext(i));\n    const plFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Sb\"])(backdropColor)) {\n      const padding = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* C */ \"d\"])(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* V */ \"w\"])(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"]);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction numberOrZero(param) {\n  return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* w */ \"fc\"])(param) ? param : 0;\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const me = this;\n    me.width = me.maxWidth;\n    me.height = me.maxHeight;\n    me.paddingTop = getTickBackdropHeight(me.options) / 2;\n    me.xCenter = Math.floor(me.width / 2);\n    me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n    me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(false);\n    me.min = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Pb\"])(min) && !isNaN(min) ? min : 0;\n    me.max = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Pb\"])(max) && !isNaN(max) ? max : 0;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\n    me._pointLabels = me.getLabels().map((value, index) => {\n      const label = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(me.options.pointLabels.callback, [value, index], me);\n      return label || label === 0 ? label : '';\n    });\n  }\n  fit() {\n    const me = this;\n    const opts = me.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(me);\n    } else {\n      me.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n    const me = this;\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n    let radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\n    radiusReductionRight = numberOrZero(radiusReductionRight);\n    radiusReductionTop = numberOrZero(radiusReductionTop);\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\n    me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(\n      Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n      Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n    me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    const me = this;\n    const maxRight = me.width - rightMovement - me.drawingArea;\n    const maxLeft = leftMovement + me.drawingArea;\n    const maxTop = topMovement + me.drawingArea;\n    const maxBottom = (me.height - me.paddingTop) - bottomMovement - me.drawingArea;\n    me.xCenter = Math.floor(((maxLeft + maxRight) / 2) + me.left);\n    me.yCenter = Math.floor(((maxTop + maxBottom) / 2) + me.top + me.paddingTop);\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* T */ \"u\"] / this.getLabels().length;\n    const startAngle = this.options.startAngle || 0;\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* ar */ \"Bb\"])(index * angleMultiplier + Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* t */ \"cc\"])(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    const me = this;\n    if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Sb\"])(value)) {\n      return NaN;\n    }\n    const scalingFactor = me.drawingArea / (me.max - me.min);\n    if (me.options.reverse) {\n      return (me.max - value) * scalingFactor;\n    }\n    return (value - me.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Sb\"])(distance)) {\n      return NaN;\n    }\n    const me = this;\n    const scaledDistance = distance / (me.drawingArea / (me.max - me.min));\n    return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\n  }\n  getPointPosition(index, distanceFromCenter) {\n    const me = this;\n    const angle = me.getIndexAngle(index) - _chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* H */ \"i\"];\n    return {\n      x: Math.cos(angle) * distanceFromCenter + me.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + me.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const me = this;\n    const {backgroundColor, grid: {circular}} = me.options;\n    if (backgroundColor) {\n      const ctx = me.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const {angleLines, grid} = opts;\n    const labelCount = me.getLabels().length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(me, labelCount);\n    }\n    if (grid.display) {\n      me.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = me.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(me.getContext(index - 1));\n          drawRadiusLine(me, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = me.getLabels().length - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(me.getContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\n        position = me.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(me.xCenter, me.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawLabels() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = me.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(me.xCenter, me.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    me.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(me.getContext(index));\n      const tickFont = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* W */ \"x\"])(optsAtIndex.font);\n      offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* C */ \"d\"])(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* V */ \"w\"])(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    backdropColor: 'rgba(255,255,255,0.75)',\n    backdropPadding: 2,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Sb\"])(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const options = scale.options.time;\n  const {parser, round, isoWeekday} = options;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Pb\"])(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* w */ \"fc\"])(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aF */ \"S\"])(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* a6 */ \"J\"])(time.displayFormats, adapter.formats());\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const me = this;\n    const options = me.options;\n    const adapter = me._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(me._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(me.getMinMax(false));\n      }\n    }\n    min = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Pb\"])(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* g */ \"Pb\"])(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    me.min = Math.min(min, max - 1);\n    me.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const me = this;\n    const options = me.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      me.min = me._userMin || timestamps[0];\n      me.max = me._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = me.min;\n    const max = me.max;\n    const ticks = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aE */ \"R\"])(timestamps, min, max);\n    me._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min))\n      : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\n    me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined\n      : determineMajorUnit(me._unit);\n    me.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(me, ticks, me._majorUnit);\n  }\n  initOffsets(timestamps) {\n    const me = this;\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (me.options.offset && timestamps.length) {\n      first = me.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* x */ \"gc\"])(start, 0, limit);\n    end = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* x */ \"gc\"])(end, 0, limit);\n    me._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const me = this;\n    const adapter = me._adapter;\n    const min = me.min;\n    const max = me.max;\n    const options = me.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\n    const stepSize = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* v */ \"ec\"])(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* w */ \"fc\"])(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const adapter = me._adapter;\n    const timeOpts = me.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const me = this;\n    const options = me.options;\n    const formats = options.time.displayFormats;\n    const unit = me._unit;\n    const majorUnit = me._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* N */ \"o\"])(formatter, [label, index, ticks], me) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    const me = this;\n    return value === null ? NaN : (value - me.min) / (me.max - me.min);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return me.min + pos * (me.max - me.min);\n  }\n  _getLabelSize(label) {\n    const me = this;\n    const ticksOpts = me.options.ticks;\n    const tickLabelWidth = me.ctx.measureText(label).width;\n    const angle = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* t */ \"cc\"])(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = me._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const me = this;\n    const timeOpts = me.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\n    const size = me._getLabelSize(exampleLabel);\n    const capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    const me = this;\n    let timestamps = me._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = me.getMatchingVisibleMetas();\n    if (me._normalized && metas.length) {\n      return (me._cache.data = metas[0].controller.getAllParsedValues(me));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\n    }\n    return (me._cache.data = me.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const me = this;\n    const timestamps = me._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = me.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(me, labels[i]));\n    }\n    return (me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps));\n  }\n  normalize(values) {\n    return Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* _ */ \"B\"])(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    prevSource = Math.floor(val);\n    nextSource = Math.ceil(val);\n    prevTarget = table[prevSource];\n    nextTarget = table[nextSource];\n  } else {\n    const result = Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* aF */ \"S\"])(table, val);\n    prevTarget = result.lo;\n    nextTarget = result.hi;\n    prevSource = table[prevTarget];\n    nextSource = table[nextTarget];\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._maxIndex = undefined;\n  }\n  initOffsets() {\n    const me = this;\n    const timestamps = me._getTimestampsForTable();\n    me._table = me.buildLookupTable(timestamps);\n    me._maxIndex = me._table.length - 1;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const me = this;\n    const {min, max} = me;\n    if (!timestamps.length) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    const items = [min];\n    let i, ilen, curr;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n    items.push(max);\n    return items;\n  }\n  _getTimestampsForTable() {\n    const me = this;\n    let timestamps = me._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = me.getDataTimestamps();\n    const label = me.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = me.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = me._cache.all = timestamps;\n    return timestamps;\n  }\n  getPixelForValue(value, index) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me._normalized && me._maxIndex > 0 && !Object(_chunks_helpers_segment_js__WEBPACK_IMPORTED_MODULE_0__[/* j */ \"Sb\"])(index)\n      ? index / me._maxIndex : me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getDecimalForValue(value) {\n    return interpolate(this._table, value) / this._maxIndex;\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(me._table, decimal * this._maxIndex, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\n\n\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/home/runner/work/mapa-vacinacao-c19/mapa-vacinacao-c19/node_modules/chart.js/dist/chart.esm.js"],"names":[],"mappings":";;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACq2D;AACzyD;;AAE5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,qEAAgB;AAClC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,QAAQ;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,eAAe,6EAAK;AACpB,2BAA2B,6EAAK;AAChC;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,4EAAO;AAChB,iBAAiB,4EAAO;AACxB;AACA;AACA,mBAAmB,qEAAO,gBAAgB,qEAAO;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,4EAAO;AACtB,iBAAiB,4EAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,SAAS;AAC9B,KAAK;AACL;AACA;AACA;AACA;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA,qEAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,qCAAqC,qEAAQ;AAC7C,qEAAQ;AACR;AACA;AACA;AACA,CAAC;AACD,qEAAQ;AACR;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH,CAAC;AACD,qEAAQ;AACR;AACA,CAAC;AACD,qEAAQ;AACR;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,6EAAQ;AACjB;AACA;AACA;AACA;AACA;AACA,WAAW,6EAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,6EAAO;AACd;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE;AACA;AACA;AACA,8BAA8B,QAAQ;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,YAAY,gCAAgC;AAC3F;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,6EAAQ;AACd;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,UAAU;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,UAAU;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,6EAAc,+CAA+C,6EAAI,YAAY,6EAAI;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,UAAU;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,cAAc,GAAG,cAAc,GAAG,wBAAwB;AACtE;AACA;AACA,SAAS,iCAAiC;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D,2DAA2D;AAC3D;AACA;AACA,SAAS,yBAAyB;AAClC,qDAAqD;AACrD,SAAS,oCAAoC;AAC7C;AACA;AACA;AACA;AACA;AACA,iBAAiB,UAAU;AAC3B;AACA,WAAW,+BAA+B;AAC1C,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+EAA+E;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,6EAAc;AAC7C,+BAA+B,6EAAc;AAC7C,+BAA+B,6EAAc;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,6EAAmB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,6EAAQ;AAChB;AACA,KAAK;AACL;AACA,QAAQ,6EAAmB;AAC3B;AACA;AACA;AACA,QAAQ,6EAAiB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,+BAA+B;AAC1C,WAAW,iBAAiB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,UAAU,6EAAO;AACjB;AACA,OAAO,UAAU,6EAAQ;AACzB;AACA,OAAO;AACP;AACA;AACA;AACA,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,UAAU;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA;AACA,6BAA6B,UAAU;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,+BAA+B;AAC1C;AACA;AACA,6BAA6B,UAAU;AACvC;AACA;AACA;AACA,wBAAwB,6EAAgB;AACxC,wBAAwB,6EAAgB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,KAAK;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,UAAU;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD,mBAAmB;AACnB,WAAW,6BAA6B;AACxC;AACA;AACA;AACA;AACA;AACA,cAAc,6EAAc;AAC5B;AACA,eAAe,UAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,QAAQ;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,UAAU;AAC/C;AACA,UAAU,6EAAc;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,6EAAc;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,eAAe,mBAAmB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,6EAAO;AACrD;AACA;AACA;AACA;AACA;AACA,kCAAkC,YAAY;AAC9C;AACA,8BAA8B,qEAAQ;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,WAAW;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,UAAU;AACxC;AACA;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wCAAwC,UAAU;AAClD;AACA;AACA,wBAAwB,4EAAY;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,UAAU;AAC7C;AACA;AACA;AACA,wCAAwC,UAAU;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,6EAAa;AACnB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,6EAAO;AACb;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,UAAU;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,+BAA+B;AAC1C;AACA;AACA;AACA;AACA,yCAAyC,UAAU;AACnD;AACA;AACA,uCAAuC,6EAAgB;AACvD,6BAA6B,6EAAgB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA,+BAA+B,6EAAa,yBAAyB,iBAAiB;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,UAAU;AACzB;AACA;AACA;AACA;AACA;AACA,YAAY,6EAAa;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,UAAU;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,8BAA8B;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,6EAAI,YAAY,6EAAI;AAC7C;AACA;AACA;AACA;AACA,wBAAwB,6EAAa;AACrC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,6EAAc;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,6EAAQ;AACZ,UAAU,UAAU;AACpB;AACA;AACA;AACA;AACA,IAAI,6EAAU;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,+BAA+B;AAC1C;AACA;AACA,yCAAyC,UAAU;AACnD;AACA;AACA,wBAAwB,6EAAgB;AACxC,wBAAwB,6EAAgB;AACxC;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA,iCAAiC,QAAQ;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,WAAW,eAAe;AACzD;AACA;AACA;AACA;AACA;AACA,qBAAqB,6EAAc;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAsB,oEAAG;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,6EAAa;AAClD,qCAAqC,6EAAa;AAClD;AACA,yBAAyB,oEAAO;AAChC,yBAAyB,oEAAE;AAC3B,yBAAyB,oEAAE,GAAG,oEAAO;AACrC;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,UAAU;AACnD;AACA;AACA;AACA;AACA,WAAW,6EAAS;AACpB;AACA;AACA,WAAW,6EAAS;AACpB;AACA;AACA,cAAc,oEAAG;AACjB,eAAe,oEAAG;AAClB;AACA,mBAAmB,mCAAmC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA,4BAA4B,6EAAY;AACxC;AACA,WAAW,wBAAwB;AACnC,WAAW,iCAAiC;AAC5C;AACA;AACA;AACA,wBAAwB,6EAAW;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,oEAAG;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,qBAAqB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,oEAAG;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,6EAAY;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,UAAU;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,UAAU;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,UAAU;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,6EAAc;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,cAAc,6EAAO;AACrB;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,2CAA2C;AACtD;AACA,SAAS,aAAa;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,WAAW,yBAAyB;AACpC;AACA;AACA;AACA;AACA,yBAAyB,6EAAQ;AACjC;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA,uBAAuB,6EAAa;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA,WAAW,iCAAiC;AAC5C;AACA,cAAc,6EAAW;AACzB,QAAQ,6EAAY;AACpB,0CAA0C,6EAAY;AACtD;AACA;AACA;AACA,cAAc,6EAAW;AACzB,QAAQ,6EAAY;AACpB,iCAAiC,6EAAY;AAC7C;AACA,KAAK;AACL;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,SAAS,6BAA6B;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,oEAAE;AAC/D;AACA;AACA;AACA,eAAe,WAAW;AAC1B;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,QAAQ,6EAAS;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,6EAAqB;AAC9B;AACA;AACA;AACA;AACA,yCAAyC,UAAU;AACnD,MAAM,YAAY;AAClB,uCAAuC,UAAU;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,0BAA0B;AACnC;AACA;AACA,iDAAiD,oEAAa,GAAG,qEAAY;AAC7E;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,yCAAyC,UAAU;AACnD,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,4EAAc;AACrB;AACA;AACA;AACA;AACA,kBAAkB,6BAA6B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,4EAAc;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,6BAA6B;AAC7C;AACA,KAAK;AACL,kBAAkB,6BAA6B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,6BAA6B;AAC/C;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,yCAAyC;AAClE;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC,sBAAsB,yCAAyC;AAC/D;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,0CAA0C,UAAU;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,oCAAoC,UAAU;AAC9C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,6EAAQ;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,UAAU;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,UAAU;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,oBAAoB,4EAAS;AAC7B;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAI;AACR;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,uCAAuC;AACvC,iCAAiC,4EAAS;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAI;AACR;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,4EAAY;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,4BAA4B,4EAAY;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,oEAA4B,IAAI,cAAc;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,KAAK,GAAG,6EAAqB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4EAAc;AAC5C;AACA;AACA,mBAAmB,4EAAc;AACjC;AACA,qBAAqB,6BAA6B;AAClD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH,8BAA8B,+BAA+B;AAC7D;AACA;AACA;AACA;AACA,8BAA8B,4EAAc;AAC5C;AACA;AACA;AACA;AACA;AACA,qBAAqB,+BAA+B;AACpD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH,+BAA+B,gBAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4EAAc;AAC5C;AACA;AACA;AACA,iBAAiB,4EAAS;AAC1B;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,4EAAS;AACzB;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,6EAAa;AACvB;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4EAAc;AACzB;AACA;AACA,sBAAsB,4EAAc;AACpC,2BAA2B,4EAAc;AACzC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,YAAY;AACZ;AACA;AACA,WAAW,6EAAQ,YAAY,6EAAQ;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,6EAAO;AAClB,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,4EAAK;AAC1B;AACA,qBAAqB;AACrB;AACA,WAAW,6EAAY;AACvB,GAAG;AACH;AACA;AACA;AACA;AACA,wDAAwD,4EAAK;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb,qEAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,aAAa;AACb;AACA;AACA;AACA,CAAC;AACD,qEAAQ;AACR,qEAAQ;AACR,qEAAQ;AACR,qEAAQ;AACR,qEAAQ;AACR;AACA;AACA;AACA,CAAC;AACD,qEAAQ;AACR;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,6EAAa;AAChD,2CAA2C,UAAU;AACrD;AACA;AACA,yCAAyC,6EAAa;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,4EAAU;AAC5B,4CAA4C,UAAU;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,UAAU;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,kBAAkB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,6EAAc;AAC9B,uBAAuB,6EAAc;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,SAAS;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,SAAS;AACrC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,SAAS;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,4EAAI;AACN;AACA;AACA;AACA;AACA,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,4EAAM;AACrB,kBAAkB,4EAAS;AAC3B,gBAAgB,6EAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,YAAY,4EAAkB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,yBAAyB;AAClC;AACA;AACA;AACA,aAAa,4EAAc;AAC3B;AACA;AACA,GAAG;AACH;AACA,aAAa,4EAAc;AAC3B,sCAAsC,oEAAO,GAAG,oEAAO;AACvD;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iDAAiD;AAC1D,eAAe,4EAAe;AAC9B,eAAe,4EAAe;AAC9B,oBAAoB,4EAAe;AACnC,oBAAoB,4EAAe;AACnC;AACA,WAAW,4EAAe;AAC1B,WAAW,4EAAe;AAC1B,kBAAkB,6EAAc;AAChC,kBAAkB,6EAAc;AAChC;AACA;AACA;AACA;AACA,SAAS,iCAAiC;AAC1C;AACA;AACA,cAAc;AACd;AACA;AACA,wCAAwC,UAAU;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4EAAe,MAAM,4EAAe;AAC/C,WAAW,4EAAe,MAAM,4EAAe;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAQ;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,4EAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAQ;AACZ;AACA;AACA,IAAI,4EAAQ;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAQ;AACZ;AACA;AACA;AACA;AACA,IAAI,4EAAQ;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAQ;AACZ;AACA;AACA;AACA;AACA;AACA,oCAAoC,UAAU;AAC9C;AACA,mBAAmB,4EAAQ;AAC3B;AACA,eAAe,UAAU;AACzB,UAAU,6EAAa;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAQ;AACZ;AACA;AACA,IAAI,4EAAQ;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,6EAAW;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,4EAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAQ;AACZ;AACA;AACA,IAAI,4EAAQ;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iBAAiB,mDAAmD;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,eAAe,6BAA6B;AAC5C;AACA,6BAA6B,6EAAS;AACtC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ,eAAe,WAAW;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAQ;AACZ;AACA;AACA,WAAW,eAAe;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,+BAA+B;AAC1C;AACA;AACA;AACA;AACA;AACA,eAAe,YAAY;AAC3B;AACA;AACA;AACA,0DAA0D,QAAQ;AAClE;AACA;AACA,WAAW,6EAAa,YAAY,6EAAO;AAC3C,gBAAgB,4EAAY;AAC5B;AACA,OAAO,UAAU,6EAAO;AACxB,wCAAwC,UAAU;AAClD;AACA,eAAe,6EAAa,kBAAkB,6EAAO;AACrD,oBAAoB,4EAAY;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,mDAAmD;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4EAAW,qBAAqB,4EAAW;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,6EAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,4EAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO,UAAU,6EAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO,UAAU,6EAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,4EAAW;AACpC;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,6BAA6B;AACxC;AACA;AACA,WAAW,mCAAmC;AAC9C;AACA;AACA;AACA,sBAAsB,6EAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO,UAAU,6EAAQ;AACzB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO,UAAU,6EAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,oCAAoC,UAAU;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,6EAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,sBAAsB,6EAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,kBAAkB,6BAA6B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,KAAK;AACL,cAAc;AACd;AACA;AACA;AACA,WAAW,eAAe,gBAAgB,2BAA2B;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,UAAU;AAChD;AACA;AACA;AACA,aAAa,uBAAuB;AACpC,aAAa,uBAAuB;AACpC;AACA;AACA;AACA;AACA;AACA,aAAa,yBAAyB;AACtC,aAAa,yBAAyB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,4EAAW;AACxB,aAAa,4EAAW;AACxB;AACA,OAAO;AACP,aAAa,4EAAW;AACxB,aAAa,4EAAW;AACxB;AACA;AACA;AACA,SAAS,aAAa;AACtB,SAAS,aAAa;AACtB,SAAS,gDAAgD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,6EAAQ;AACd;AACA;AACA;AACA,oCAAoC,UAAU;AAC9C;AACA;AACA;AACA;AACA,MAAM,4EAAU;AAChB;AACA;AACA,MAAM,6EAAU;AAChB;AACA;AACA;AACA,WAAW,eAAe,0BAA0B;AACpD;AACA;AACA;AACA,iBAAiB,4EAAM;AACvB,oBAAoB,4EAAS;AAC7B;AACA;AACA;AACA;AACA,UAAU,6EAAO;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA,WAAW,mCAAmC;AAC9C,IAAI,4EAAU;AACd;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,UAAU;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4EAAM;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,qEAAQ;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,qEAAQ;AAC/B,aAAa,qEAAQ;AACrB;AACA,eAAe,oEAAS;AACxB;AACA;AACA;AACA;AACA;AACA,uBAAuB,4EAAK;AAC5B,kBAAkB,qEAAQ,sBAAsB;AAChD,IAAI,qEAAQ;AACZ;AACA;AACA,EAAE,qEAAQ;AACV;AACA;AACA;AACA;AACA,IAAI,qEAAQ;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,qEAAQ;AACZ,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,QAAQ,4EAAI;AACZ;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA,wBAAwB,6EAAW;AACnC,IAAI,4EAAQ;AACZ;AACA,IAAI,4EAAQ;AACZ;AACA;AACA,mBAAmB,kCAAkC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,4EAAQ;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,6EAAa;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,6EAAc,6CAA6C;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,oBAAoB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,mDAAmD;AAC1G;;AAEA;AACA,0BAA0B,qEAAQ;AAClC,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,oEAAS,kBAAkB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,6EAAO,wBAAwB,KAAK;AACrD,GAAG;AACH;AACA;AACA;AACA,4BAA4B,oEAAS;AACrC;AACA;AACA;AACA;AACA;AACA,MAAM,6EAAO,eAAe,KAAK;AACjC,KAAK;AACL,GAAG;AACH;AACA;AACA,IAAI,6EAAO,SAAS,qEAAQ,qBAAqB,qEAAQ;AACzD,GAAG;AACH;AACA;AACA;AACA,wDAAwD;AACxD,oBAAoB,6EAAc,oBAAoB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,6EAAgB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,YAAY;AAChC;AACA;AACA;AACA;AACA,yBAAyB,YAAY,cAAc,WAAW;AAC9D;AACA;AACA,sBAAsB,YAAY,eAAe,WAAW;AAC5D,yBAAyB,WAAW;AACpC;AACA;AACA,sBAAsB,YAAY;AAClC;AACA;AACA;AACA;AACA;AACA,yBAAyB,YAAY,GAAG,YAAY;AACpD;AACA,oBAAoB,YAAY,YAAY,YAAY;AACxD,oBAAoB,YAAY;AAChC,oBAAoB,YAAY;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,KAAK,UAAU,GAAG;AAC3C;AACA,mBAAmB,GAAG;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,oEAAS,YAAY;AAClE,6CAA6C,qEAAQ;AACrD,6CAA6C,qEAAW;AACxD,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA;AACA,MAAM,oEAAS,YAAY;AAC3B,MAAM,qEAAQ,qBAAqB;AACnC,OAAO,KAAK;AACZ,MAAM,qEAAQ;AACd,MAAM,qEAAW;AACjB;AACA;AACA;AACA,oBAAoB;AACpB,WAAW,sBAAsB;AACjC;AACA;AACA;AACA,gBAAgB,6EAAU;AAC1B;AACA,gBAAgB,6EAAc;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,6EAAQ;AACnB,QAAQ,6EAAc;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,6EAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,0BAA0B,GAAG,6EAAY;AAClD;AACA,+BAA+B,6EAAU;AACzC,+BAA+B,6EAAO;AACtC;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,4EAAQ;AACV;AACA;AACA;AACA;AACA,EAAE,4EAAQ;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,6EAAG;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,6EAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU,iCAAiC,8BAA8B;AACpF,SAAS,6EAAa;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,MAAM,6EAAW;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAI,8EAAW;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,6EAAW;AACf,gCAAgC,cAAc;AAC9C,IAAI,4EAAQ;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAI;AACR;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,IAAI;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,IAAI,4EAAI;AACR;AACA;AACA;AACA,wBAAwB,6EAAc;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL,IAAI,4EAAI;AACR;AACA;AACA;AACA,KAAK;AACL,IAAI,4EAAI;AACR;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,aAAa;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4BAA4B,UAAU;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,UAAU;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,eAAe,oCAAoC,GAAG,qEAAQ;AAC9D;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAI;AACR;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAI;AACR;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,0CAA0C,uBAAuB;AACjE;AACA;AACA;AACA;AACA;AACA,mDAAmD,UAAU;AAC7D,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,4EAAI;AACV;AACA,OAAO;AACP;AACA;AACA,qCAAqC,KAAK;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,iBAAiB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAI;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,kDAAkD,uBAAuB;AACzE;AACA;AACA,mDAAmD,UAAU;AAC7D,8CAA8C,gBAAgB;AAC9D;AACA,6CAA6C,KAAK;AAClD;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,iBAAiB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,4BAA4B,UAAU;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,iBAAiB;AACzD;AACA;AACA;AACA,eAAe,uCAAuC;AACtD;AACA;AACA;AACA,UAAU,mBAAmB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,UAAU;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,iBAAiB;AACjE;AACA;AACA;AACA,qCAAqC,QAAQ;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,6EAAQ;AACZ;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,IAAI,6EAAU;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,2BAA2B;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,QAAQ;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA,+CAA+C,UAAU;AACzD;AACA;AACA;AACA;AACA;AACA,MAAM,8EAAW;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAI;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAI;AACR;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,UAAU;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,qBAAqB,8EAAc;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,kCAAkC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,4EAAc;AACtB,MAAM,4EAAQ;AACd;AACA,QAAQ,4EAAQ;AAChB;AACA;AACA,eAAe,8EAAc;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,4EAAI;AACpC;AACA;AACA;AACA;AACA,WAAW,qEAAQ;AACnB,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,WAAW,oEAAS;AACpB,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,SAAS,kEAAkE;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,0CAA0C,oEAAO,eAAe,oEAAO;AACvE;AACA;AACA;AACA;AACA;AACA,SAAS,8EAAiB;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,6EAAW;AACtB;AACA;AACA;AACA;AACA,gBAAgB,6EAAW;AAC3B,cAAc,6EAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,wCAAwC;AACjD;AACA;AACA,SAAS,2CAA2C;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E,oEAAO;AACrF;AACA;AACA;AACA;AACA;AACA,uDAAuD,oEAAO;AAC9D;AACA;AACA;AACA;AACA,8FAA8F,oEAAO;AACrG;AACA;AACA;AACA;AACA;AACA,2DAA2D,oEAAO;AAClE;AACA;AACA;AACA;AACA;AACA,4CAA4C,oEAAG;AAC/C;AACA,mBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA;AACA,oEAAoE,oEAAG;AACvE;AACA;AACA;AACA;AACA;AACA,SAAS,wCAAwC;AACjD;AACA;AACA;AACA;AACA,4CAA4C,oEAAG;AAC/C;AACA;AACA;AACA,0BAA0B,oEAAG;AAC7B;AACA;AACA;AACA;AACA,0CAA0C,oEAAG;AAC7C,aAAa,yBAAyB;AACtC;AACA;AACA;AACA,sDAAsD,oEAAG;AACzD,aAAa,yBAAyB;AACtC;AACA;AACA;AACA;AACA,SAAS,QAAQ;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB,GAAG,8EAAiB,SAAS,qBAAqB;AAC7E,WAAW,8DAA8D;AACzE;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,oEAAG,IAAI,6EAAa;AAC/D;AACA;AACA;AACA;AACA,WAAW,qDAAqD;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,oEAAG;AACtD;AACA;AACA;AACA;AACA,qCAAqC,oEAAG;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,6EAAc;AAC9B,kBAAkB,6EAAc;AAChC,uBAAuB,6EAAc;AACrC,iBAAiB,6EAAc;AAC/B,kBAAkB,6EAAc;AAChC,oBAAoB,6EAAc;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sEAAc;AACzB;AACA;AACA,WAAW,sEAAc;AACzB;AACA;AACA;AACA,8CAA8C;AAC9C;AACA,SAAS,mDAAmD;AAC5D,SAAS,qCAAqC;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,gBAAgB;AACzB,SAAS,yBAAyB;AAClC;AACA,OAAO,qBAAqB;AAC5B;AACA,aAAa,WAAW;AACxB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,mBAAmB;AAC5B,SAAS,qBAAqB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sEAAqB;AAChC;AACA;AACA,WAAW,sEAAoB;AAC/B;AACA,SAAS,sEAAY;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,kBAAkB;AAC3B;AACA;AACA;AACA;AACA,2CAA2C,8BAA8B;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,8EAA0B;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,8EAAgB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,8EAAc,MAAM,mCAAmC;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,UAAU;AACjD,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,8BAA8B;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS,cAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,8EAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS,0BAA0B;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,8EAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,8EAAa;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,kDAAkD,sEAAkB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uBAAuB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uBAAuB;AAClC;AACA,uBAAuB,aAAa;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,WAAW,6EAAa,eAAe,6EAAa;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,YAAY;AACxD;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO;AAChB,SAAS,iCAAiC;AAC1C;AACA,YAAY,6EAAW,CAAC,6EAAY;AACpC;AACA;AACA,YAAY,6EAAW,CAAC,6EAAY;AACpC,GAAG;AACH;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA,UAAU,4EAAO;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB;AACA;AACA;AACA;AACA,UAAU,6EAAa;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,kBAAkB;AAC/E;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,6EAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,6EAAQ;AACd;AACA;AACA;AACA,MAAM,6EAAc;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,UAAU,OAAO;AAC1B;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG,UAAU,6EAAQ;AACrB;AACA,GAAG;AACH;AACA;AACA,MAAM,6EAAc;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,wBAAwB,eAAe,oEAAG;AAC1C;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,YAAY;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG,UAAU,6EAAQ;AACrB;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,mBAAmB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,cAAc;AACjC,mBAAmB,aAAa;AAChC,KAAK;AACL,mBAAmB,cAAc;AACjC,mBAAmB,aAAa;AAChC;AACA,GAAG;AACH;AACA;AACA;AACA,SAAS,0BAA0B;AACnC;AACA;AACA;AACA;AACA,sCAAsC,yBAAyB;AAC/D,iBAAiB,qBAAqB;AACtC;AACA,+BAA+B,kBAAkB;AACjD;AACA;AACA;AACA,0BAA0B,oBAAoB;AAC9C;AACA;AACA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,uBAAuB;AACxC;AACA,WAAW,mBAAmB;AAC9B;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,SAAS,kBAAkB;AAC3B,MAAM,6EAAc;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,6EAAO;AACb;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,6EAAc;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,8EAAe;AAC3B,UAAU,8EAAe;AACzB;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,2BAA2B,8EAAc;AACzC;AACA;AACA,0BAA0B,8EAAa;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,YAAY;AACrB,SAAS,qBAAqB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,qCAAqC;AAC9C;AACA,cAAc,qCAAqC;AACnD,WAAW,QAAQ,wBAAwB,MAAM;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,uDAAuD,8BAA8B;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,wCAAwC;AACjD;AACA;AACA;AACA;AACA,gBAAgB,4CAA4C;AAC5D;AACA;AACA;AACA;AACA,cAAc,4CAA4C;AAC1D;AACA;AACA;AACA;AACA,SAAS,kBAAkB;AAC3B;AACA;AACA;AACA,SAAS,6BAA6B;AACtC;AACA,IAAI,6EAAQ;AACZ,iBAAiB,8CAA8C;AAC/D,IAAI,6EAAU;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,qCAAqC,QAAQ;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO,0CAA0C;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,4EAAQ;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA,sBAAsB,4EAAM;AAC5B;AACA;AACA,WAAW,qBAAqB;AAChC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,yBAAyB,SAAS,UAAU;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,WAAW,0BAA0B,SAAS,UAAU;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,iDAAiD;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,KAAK;AACL;AACA,sBAAsB,iDAAiD;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,oCAAoC,gBAAgB,UAAU;AACzE;AACA;AACA,iBAAiB,4EAAc;AAC/B;AACA;AACA;AACA,iBAAiB,4EAAc;AAC/B;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,gBAAgB,4EAAc;AAC9B;AACA;AACA;AACA,gBAAgB,4EAAc;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,6EAAQ;AACd;AACA,MAAM,6EAAU;AAChB;AACA;AACA;AACA;AACA,WAAW,4CAA4C;AACvD,WAAW,yBAAyB;AACpC,yBAAyB,qEAAQ;AACjC,sBAAsB,8EAAa;AACnC,sBAAsB,4EAAM;AAC5B,WAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gCAAgC;AAC3C;AACA;AACA;AACA;AACA;AACA,wBAAwB,6EAAc;AACtC,sBAAsB,6EAAc;AACpC,oBAAoB,6EAAc;AAClC,2BAA2B,6EAAc;AACzC,qBAAqB,6EAAc;AACnC;AACA,wBAAwB,6EAAc;AACtC,sBAAsB,6EAAc;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,8EAAS;AACjB,OAAO;AACP;AACA;AACA,6BAA6B,8EAAa;AAC1C;AACA;AACA,UAAU,8EAAkB;AAC5B;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,4EAAU;AAChB;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW,4EAAc;AACzB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,WAAW,4EAAc;AACzB;AACA;AACA;AACA,IAAI,8EAAqB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,4EAAc;AACvC;AACA,OAAO;AACP;AACA;AACA,uBAAuB,4EAAc;AACrC;AACA;AACA;AACA,UAAU,8EAAM;AAChB;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL,IAAI,8EAAoB;AACxB;AACA;AACA;AACA;AACA;AACA,sBAAsB,4EAAM;AAC5B,yBAAyB,4EAAS;AAClC;AACA;AACA;AACA,sBAAsB,8EAAa;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,4EAAc;AAC3B,KAAK;AACL;AACA,uCAAuC,4EAAc;AACrD;AACA,cAAc,4EAAc;AAC5B,wCAAwC,4EAAkB;AAC1D;AACA;AACA;AACA;AACA,IAAI,4EAAU;AACd;AACA;AACA;AACA,sBAAsB,4EAAM;AAC5B,yBAAyB,4EAAS;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,4EAAQ;AAChB;AACA;AACA;AACA,QAAQ,4EAAQ;AAChB;AACA,KAAK;AACL,MAAM,4EAAQ;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,+BAA+B;AAC7E;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS,6CAA6C;AACrE;AACA;AACA,8BAA8B,4EAAS;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,6EAAO;AAC7B,kBAAkB,4EAAS;AAC3B,iCAAiC,4EAAM;AACvC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,kCAAkC;AAC7C;AACA;AACA;AACA;AACA,eAAe,4EAAc;AAC7B;AACA;AACA,KAAK;AACL;AACA;AACA,iBAAiB,4EAAc;AAC/B,mBAAmB,oEAAE;AACrB,OAAO;AACP;AACA,iBAAiB,4EAAc;AAC/B,mBAAmB,oEAAE;AACrB;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,4EAAM;AAC3B;AACA;AACA,WAAW,mCAAmC;AAC9C,IAAI,4EAAU;AACd;AACA;AACA;AACA,iBAAiB,4EAAkB;AACnC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,SAAS;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,SAAS;AAC5C;AACA;AACA;AACA,kBAAkB,8EAAqB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,6EAAO;AACf;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,6BAA6B;AACtC;AACA,SAAS,aAAa;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,oBAAoB;AAC7B,SAAS,oBAAoB;AAC7B,mBAAmB,4EAAM;AACzB,oBAAoB,4EAAM;AAC1B,qBAAqB,4EAAM;AAC3B;AACA;AACA;AACA,kBAAkB,4EAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,4EAAI;AACN;AACA,EAAE,4EAAI;AACN;AACA,EAAE,4EAAI;AACN,IAAI,4EAAI;AACR,IAAI,4EAAI;AACR,IAAI,4EAAI;AACR,GAAG;AACH;AACA;AACA,EAAE,4EAAI;AACN;AACA;AACA,UAAU;AACV;AACA;AACA,SAAS,UAAU;AACnB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,SAAS,SAAS;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,SAAS;AAClB,SAAS,+BAA+B,aAAa;AACrD;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAAS;AAChB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,OAAO,UAAU;AACjB;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,SAAS,sCAAsC;AAC/C,SAAS,eAAe;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA,OAAO,6EAAW;AAClB,OAAO,6EAAW;AAClB;AACA;AACA;AACA,kBAAkB,4EAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA,IAAI,4EAAI;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,SAAS;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAI;AACR;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,sCAAsC;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,wBAAwB;AACnC,WAAW,eAAe;AAC1B,WAAW,cAAc;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,8EAAa;AACrC;AACA;AACA;AACA,kBAAkB,4EAAM;AACxB;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,oBAAoB;AAC/B,qBAAqB,4EAAM;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,8EAAS;AACf;AACA;AACA,MAAM,8EAAS;AACf,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,8EAAa;AACxC;AACA;AACA;AACA,QAAQ,8EAAkB;AAC1B;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,QAAQ,8EAAkB;AAC1B;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,2DAA2D;AACtE,qBAAqB,4EAAM;AAC3B;AACA;AACA,sBAAsB,8EAAa;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4EAAI;AACR;AACA;AACA;AACA,mCAAmC,UAAU;AAC7C;AACA;AACA;AACA,MAAM,4EAAI;AACV;AACA;AACA;AACA;AACA;AACA,sCAAsC,UAAU;AAChD;AACA;AACA;AACA,MAAM,4EAAI;AACV;AACA;AACA;AACA,IAAI,4EAAI;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,8EAAa;AACrC;AACA;AACA;AACA;AACA,mBAAmB,4EAAM;AACzB;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,KAAK;AAChB,WAAW,cAAc;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,4EAAS;AAC7B;AACA;AACA;AACA;AACA;AACA,MAAM,8EAAqB;AAC3B;AACA;AACA;AACA;AACA,MAAM,8EAAoB;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,qBAAqB,8EAAc;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,8EAAc;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wBAAwB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,uBAAuB;AAC1D;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,mBAAmB,sEAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,OAAO;AACP,kBAAkB,sEAAI;AACtB,kBAAkB,sEAAI;AACtB,mBAAmB,sEAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,6EAAa;AAC1B;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,kBAAkB,sEAAI;AACtB,iBAAiB,sEAAI;AACrB,oBAAoB,sEAAI;AACxB,cAAc,sEAAI;AAClB,mBAAmB,sEAAI;AACvB;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,6EAAW;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,6EAAa;AACrB;AACA;AACA;AACA;AACA,oCAAoC,6EAAc;AAClD;AACA;AACA;AACA;AACA,WAAW,uBAAuB;AAClC,SAAS,SAAS;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,cAAc;AACvC,kBAAkB,MAAM;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS,2CAA2C;AACpD;AACA;AACA,SAAS,qBAAqB;AAC9B,sBAAsB,6EAAa;AACnC,sBAAsB,6EAAa;AACnC,wBAAwB,6EAAa;AACrC,gBAAgB,8EAAO;AACvB;AACA;AACA,aAAa,YAAY,GAAG,YAAY;AACxC;AACA;AACA;AACA,cAAc,8EAAO;AACrB;AACA,OAAO,6EAAa;AACpB;AACA;AACA;AACA;AACA;AACA,0CAA0C,6EAAW;AACrD;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,QAAQ,6EAAY;AACpB;AACA,KAAK;AACL;AACA;AACA;AACA,wBAAwB,6EAAa,cAAc,6EAAc;AACjE;AACA;AACA;AACA;AACA,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA,QAAQ,6EAAY;AACpB;AACA;AACA;AACA,QAAQ,eAAe;AACvB,gBAAgB,6DAA6D;AAC7E;AACA;AACA,QAAQ,6EAAY;AACpB;AACA,KAAK;AACL,kBAAkB,WAAW;AAC7B;AACA,GAAG;AACH,gBAAgB,eAAe;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,6EAAa;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC,WAAW,uBAAuB;AAClC,SAAS,SAAS;AAClB;AACA;AACA;AACA,sBAAsB,6EAAI;AAC1B,sBAAsB,6EAAI;AAC1B;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,wBAAwB;AACjC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,8EAAkB;AACxB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,6EAAY;AACvB;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,6EAAc;AAC3B,aAAa,6EAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oDAAoD,4EAAK;AACzD;AACA;AACA;AACA,4BAA4B,4EAAK;AACjC;AACA;AACA,gBAAgB,4EAAe,gDAAgD,4EAAK;AACpF,uBAAuB,4EAAK;AAC5B;AACA;AACA;AACA,gBAAgB,wCAAwC;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,mBAAmB,4EAAe;AAClC,cAAc,yCAAyC;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,6EAAc;AACzB;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,6EAAc;AAC3B,aAAa,6EAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,uBAAuB;AAClC;AACA;AACA;AACA;AACA,kDAAkD,4EAAK;AACvD;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,8EAAkB;AACxB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,6EAAY;AACnD;AACA;AACA;AACA;AACA;AACA,qBAAqB,4EAAK;AAC1B,qBAAqB,4EAAK,WAAW,4EAAK;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,4EAAK;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,4EAAS;AAC7B,WAAW,6EAAc,sCAAsC,qEAAQ;AACvE;AACA;AACA;AACA;AACA,MAAM,6EAAO;AACb;AACA,SAAS,6EAAY;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA,mBAAmB,4EAAM;AACzB;AACA;AACA;AACA;AACA,kBAAkB,4EAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,gBAAgB;AAC7B;AACA;AACA,kBAAkB,4EAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,SAAS,eAAe,aAAa;AACrC,8BAA8B,QAAQ;AACtC;AACA,mBAAmB,4EAAM;AACzB,WAAW,0CAA0C;AACrD,WAAW,cAAc;AACzB,SAAS,6EAAa;AACtB,sBAAsB,4EAAS;AAC/B;AACA;AACA;AACA,IAAI,4EAAU;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,IAAI;AACb;AACA,qDAAqD,oEAAG;AACxD,GAAG;AACH;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iBAAiB;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,6EAAQ;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,6EAAc;AAC3B,aAAa,6EAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,4EAAQ;AAC5B;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,oEAAG;AAC/B;AACA,WAAW,8EAAe,2BAA2B,6EAAS;AAC9D;AACA;AACA;AACA,QAAQ,6EAAa;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,6EAAa;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,oEAAO;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,yBAAyB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wBAAwB,UAAU;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,yCAAyC,QAAQ;AACjD;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4EAAM;AAC7B;AACA;AACA;AACA;AACA,wBAAwB,4EAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,4EAAU;AAChB;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,mCAAmC;AACnD,WAAW,oCAAoC;AAC/C,WAAW,qCAAqC;AAChD,SAAS,uCAAuC;AAChD,QAAQ,wCAAwC;AAChD,SAAS,yCAAyC;AAClD,UAAU,uCAAuC;AACjD,YAAY,uCAAuC;AACnD,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,6EAAa;AACnB;AACA;AACA;AACA;AACA,SAAS,0BAA0B;AACnC;AACA;AACA;AACA;AACA,OAAO,6EAAc;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,6EAAQ;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,cAAc;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,6BAA6B;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,UAAU;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,WAAW,OAAO,GAAG,6EAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA,IAAI,6EAAO;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iCAAiC;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,6EAAc;AACxB,UAAU,6EAAc;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,6EAAc;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,YAAY,6EAAW;AACvB,UAAU,6EAAW;AACrB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,6EAAc;AACnC;AACA,uBAAuB,6EAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,YAAY;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4EAAQ;AAC/B;AACA;AACA;AACA,oCAAoC,UAAU;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,6EAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,UAAU;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,UAAU;AAC/C;AACA;AACA;AACA;AACA;AACA,WAAW,4EAAY;AACvB;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,mBAAmB,6EAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA,SAAS,kBAAkB;AAC3B,SAAS;AACT;AACA;AACA;AACA;AACA,yCAAyC,UAAU;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,6EAAa;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEspB","file":"x","sourcesContent":["/*!\n * Chart.js v3.1.1\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, b as isArray, d as defaults, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as isNullOrUndef, k as clipArea, m as unclipArea, _ as _arrayUnique, t as toRadians, n as toPercentage, o as toDimension, T as TAU, p as formatNumber, q as _angleBetween, H as HALF_PI, P as PI, w as isNumber, x as _limitValue, y as _lookupByKey, z as getRelativePosition$1, A as _isPointInArea, B as _rlookupByKey, C as toPadding, D as each, E as getMaximumSize, F as _getParentNode, G as readUsedSize, I as throttled, J as supportsEventListenerOptions, K as log10, L as _factorize, M as finiteOrDefault, N as callback, O as _addGrace, Q as toDegrees, R as _measureText, S as _int16Range, U as _alignPixel, V as renderText, W as toFont, X as _toLeftRightCenter, Y as _alignStartEnd, Z as overrides, $ as merge, a0 as _capitalize, a1 as descriptors, a2 as isFunction, a3 as _attachContext, a4 as _createResolver, a5 as _descriptors, a6 as mergeIf, a7 as uid, a8 as debounce, a9 as retinaScale, aa as clearCanvas, ab as _elementsEqual, ac as getAngleFromPoint, ad as _readValueToProps, ae as _updateBezierControlPoints, af as _computeSegments, ag as _boundSegments, ah as _steppedInterpolation, ai as _bezierInterpolation, aj as _pointInLine, ak as _steppedLineTo, al as _bezierCurveTo, am as drawPoint, an as addRoundedRectPath, ao as toTRBL, ap as toTRBLCorners, aq as _boundSegment, ar as _normalizeAngle, as as getRtlAdapter, at as overrideTextDirection, au as _textX, av as restoreTextDirection, aw as noop, ax as distanceBetweenPoints, ay as _setMinAndMaxByKey, az as niceNum, aA as almostWhole, aB as almostEquals, aC as _decimalPlaces, aD as _longestText, aE as _filterBetween, aF as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    const me = this;\n    if (me._request) {\n      return;\n    }\n    me._running = true;\n    me._request = requestAnimFrame.call(window, () => {\n      me._update();\n      me._request = null;\n      if (me._running) {\n        me._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    const me = this;\n    let remaining = 0;\n    me._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        me._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        me._notify(chart, anims, date, 'complete');\n      }\n      remaining += items.length;\n    });\n    me._lastDate = date;\n    if (remaining === 0) {\n      me._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    const me = this;\n    if (me._active) {\n      me._notify(false);\n      const currentValue = me._target[me._prop];\n      const elapsed = date - me._start;\n      const remain = me._duration - elapsed;\n      me._start = date;\n      me._duration = Math.floor(Math.max(remain, cfg.duration));\n      me._total += elapsed;\n      me._loop = !!cfg.loop;\n      me._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      me._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    const me = this;\n    if (me._active) {\n      me.tick(Date.now());\n      me._active = false;\n      me._notify(false);\n    }\n  }\n  tick(date) {\n    const me = this;\n    const elapsed = date - me._start;\n    const duration = me._duration;\n    const prop = me._prop;\n    const from = me._from;\n    const loop = me._loop;\n    const to = me._to;\n    let factor;\n    me._active = from !== to && (loop || (elapsed < duration));\n    if (!me._active) {\n      me._target[prop] = to;\n      me._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      me._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = me._easing(Math.min(1, Math.max(0, factor)));\n    me._target[prop] = me._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return Object.assign(Object.create(parent),\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[meta.vScale.id] === undefined || stacks[meta.vScale.id][meta.index] === undefined) {\n      return;\n    }\n    delete stacks[meta.vScale.id][meta.index];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this.initialize();\n  }\n  initialize() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    me.addElements();\n  }\n  updateIndex(datasetIndex) {\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = me.getScaleForId(xid);\n    meta.yScale = me.getScaleForId(yid);\n    meta.rScale = me.getScaleForId(rid);\n    meta.iScale = me.getScaleForId(iid);\n    meta.vScale = me.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const me = this;\n    const dataset = me.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    if (isObject(data)) {\n      me._data = convertObjectDataToArray(data);\n    } else if (me._data !== data) {\n      if (me._data) {\n        unlistenArrayEvents(me._data, me);\n        clearStacks(me._cachedMeta);\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, me);\n      }\n      me._data = data;\n    }\n  }\n  addElements() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me._dataCheck();\n    if (me.datasetElementType) {\n      meta.dataset = new me.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    let stackChanged = false;\n    me._dataCheck();\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    me._resyncElements(resetNewElements);\n    if (stackChanged) {\n      updateStacks(me, meta._parsed);\n    }\n  }\n  configure() {\n    const me = this;\n    const config = me.chart.config;\n    const scopeKeys = config.datasetScopeKeys(me._type);\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\n    me.options = config.createResolver(scopes, me.getContext());\n    me._parsing = me.options.parsing;\n  }\n  parse(start, count) {\n    const me = this;\n    const {_cachedMeta: meta, _data: data} = me;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (me._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n    } else {\n      if (isArray(data[start])) {\n        parsed = me.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = me.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = me.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(me, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n      value = applyStack(stack, parsedValue, this._cachedMeta.index, {all: true});\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = me._getOtherScale(scale);\n    const stack = canStack && meta._stacked && {keys: getSortedDatasetIndices(me.chart, true), values: null};\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, value, parsed, otherValue;\n    function _skip() {\n      parsed = _parsed[i];\n      value = parsed[scale.axis];\n      otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      me.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        me.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me._cachedDataOpts = {};\n    me.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const me = this;\n    const ctx = me._ctx;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = me._drawStart || 0;\n    const count = me._drawCount || (elements.length - start);\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.active) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    let context;\n    if (index >= 0 && index < me._cachedMeta.data.length) {\n      const element = me._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(me.getContext(), index, element));\n      context.parsed = me.getParsed(index);\n      context.raw = dataset.data[index];\n    } else {\n      context = me.$context ||\n        (me.$context = createDatasetContext(me.chart.getContext(), me.index));\n      context.dataset = dataset;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const me = this;\n    const active = mode === 'active';\n    const cache = me._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = me.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = me.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => me.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const me = this;\n    const chart = me.chart;\n    const cache = me._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = me.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\n      const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, me.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const me = this;\n    const numMeta = me._cachedMeta.data.length;\n    const numData = me._data.length;\n    if (numData > numMeta) {\n      me._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      me._removeElements(numData, numMeta - numData);\n    }\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      me.parse(0, count);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new me.dataElementType();\n    }\n    if (me._parsing) {\n      move(meta._parsed);\n    }\n    me.parse(start, count);\n    if (resetNewElements) {\n      me.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const me = this;\n    const meta = me._cachedMeta;\n    if (me._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._insertElements(this.getDataset().data.length - count, count);\n  }\n  _onDataPop() {\n    this._removeElements(this._cachedMeta.data.length - 1, 1);\n  }\n  _onDataShift() {\n    this._removeElements(0, 1);\n  }\n  _onDataSplice(start, count) {\n    this._removeElements(start, count);\n    this._insertElements(start, arguments.length - 2);\n  }\n  _onDataUnshift() {\n    this._insertElements(0, arguments.length);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale) {\n  if (!scale._cache.$bar) {\n    const metas = scale.getMatchingVisibleMetas('bar');\n    let values = [];\n    for (let i = 0, ilen = metas.length; i < ilen; i++) {\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(scale) {\n  const values = getAllScaleValues(scale);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    min = Math.min(min, i && Math.abs(curr - prev) || min);\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    const me = this;\n    me.enableOptionSharing = true;\n    super.initialize();\n    const meta = me._cachedMeta;\n    meta.stack = me.getDataset().stack;\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const vScale = me._cachedMeta.vScale;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = me._getRuler();\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = me.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : me._calculateBarValuePixels(i);\n      const ipixels = me._calculateBarIndexPixels(i, ruler);\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : undefined,\n        width: horizontal ? undefined : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      me.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(me._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name) {\n    const stacks = this._getStacks(datasetIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(iScale);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: me._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const me = this;\n    const {vScale, _stacked} = me._cachedMeta;\n    const {base: baseValue, minBarLength} = me.options;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n      size = size < 0 ? -minBarLength : minBarLength;\n      if (value === 0) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    const actualBase = baseValue || 0;\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = vScale.getLineWidthForValue(actualBase) / 2;\n      if (size > 0) {\n        base += halfGrid;\n        size -= halfGrid;\n      } else if (size < 0) {\n        base -= halfGrid;\n        size += halfGrid;\n      }\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const me = this;\n    const scale = ruler.scale;\n    const options = me.options;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = options.skipNull ? me._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    clipArea(chart.ctx, chart.chartArea);\n    for (; i < ilen; ++i) {\n      if (me.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(me._ctx);\n      }\n    }\n    unclipArea(chart.ctx);\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  interaction: {\n    mode: 'index'\n  },\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = [];\n    let i, ilen, item;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      item = data[i];\n      parsed.push({\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\n        _custom: item && item.r && +item.r\n      });\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const {data, _parsed} = this._cachedMeta;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = me.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const me = this;\n    const points = me._cachedMeta.data;\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {xScale, yScale} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && me.getParsed(i);\n      const x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(parsed.x);\n      const y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(parsed.y);\n      const properties = {\n        x,\n        y,\n        skip: isNaN(x) || isNaN(y)\n      };\n      if (includeOptions) {\n        properties.options = me.resolveDataElementOptions(i, mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      me.updateElement(point, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    let i, ilen;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      meta._parsed[i] = +data[i];\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    const me = this;\n    for (let i = 0; i < me.chart.data.datasets.length; ++i) {\n      if (me.chart.isDatasetVisible(i)) {\n        const controller = me.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const me = this;\n    const chart = me.chart;\n    const {chartArea} = chart;\n    const meta = me._cachedMeta;\n    const arcs = meta.data;\n    const spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs);\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(me.options.cutout, maxSize), 1);\n    const chartWeight = me._getRingWeight(me.index);\n    const {circumference, rotation} = me._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(me.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\n    me.offsetX = offsetX * outerRadius;\n    me.offsetY = offsetY * outerRadius;\n    meta.total = me.calculateTotal();\n    me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\n    me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\n    me.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const circumference = me._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null) {\n      return 0;\n    }\n    return me.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : me.innerRadius;\n    const outerRadius = animateScale ? 0 : me.outerRadius;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    let startAngle = me._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += me._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = me._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + me.offsetX,\n        y: centerY + me.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      startAngle += circumference;\n      me.updateElement(arc, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i)) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    const me = this;\n    let max = 0;\n    const chart = me.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          if (controller !== me) {\n            controller.configure();\n          }\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  indexAxis: 'r',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = me.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    me._drawStart = start;\n    me._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = me.resolveDatasetElementOptions(mode);\n    if (!me.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = me.options.segment;\n    me.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    me.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {xScale, yScale, _stacked} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const spanGaps = me.options.spanGaps;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && me.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = me.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed.y);\n      const x = properties.x = xScale.getPixelForValue(parsed.x, i);\n      const y = properties.y = reset || nullData ? yScale.getBasePixel() : yScale.getPixelForValue(_stacked ? me.applyStack(yScale, parsed, _stacked) : parsed.y, i);\n      properties.skip = isNaN(x) || isNaN(y) || nullData;\n      properties.stop = i > 0 && (parsed.x - prevParsed.x) > maxGapLength;\n      properties.parsed = parsed;\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      if (!directUpdate) {\n        me.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(me.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    this._cachedMeta.dataset.updateControlPoints(this.chart.chartArea);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const me = this;\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    me.outerRadius = outerRadius - (radiusLength * me.index);\n    me.innerRadius = me.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const dataset = me.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = me._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / me.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += me._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + me._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: me.resolveDataElementOptions(i, mode)\n      };\n      me.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const me = this;\n    const vScale = me._cachedMeta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = me.resolveDatasetElementOptions(mode);\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      me.updateElement(line, undefined, properties, mode);\n    }\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    const scale = me._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = me.resolveDataElementOptions(i, mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      me.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: either no adapter can be found or an incomplete integration was provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  let items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos: box.position,\n      horizontal: box.isHorizontal(),\n      weight: box.weight\n    });\n  }\n  return layoutBoxes;\n}\nfunction setLayoutDims(layouts, params) {\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    if (layout.horizontal) {\n      layout.width = layout.box.fullSize && params.availableWidth;\n      layout.height = params.hBoxMaxHeight;\n    } else {\n      layout.width = params.vBoxMaxWidth;\n      layout.height = layout.box.fullSize && params.availableHeight;\n    }\n  }\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout) {\n  const box = layout.box;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(layout.pos)) {\n    if (layout.size) {\n      chartArea[layout.pos] -= layout.size;\n    }\n    layout.size = layout.horizontal ? box.height : box.width;\n    chartArea[layout.pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params) || changed;\n}\nfunction placeBoxes(boxes, chartArea, params) {\n  const userPadding = params.padding;\n  let x = chartArea.x;\n  let y = chartArea.y;\n  let i, ilen, layout, box;\n  for (i = 0, ilen = boxes.length; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    if (layout.horizontal) {\n      box.left = box.fullSize ? userPadding.left : chartArea.left;\n      box.right = box.fullSize ? params.outerWidth - userPadding.right : chartArea.left + chartArea.w;\n      box.top = y;\n      box.bottom = y + box.height;\n      box.width = box.right - box.left;\n      y = box.bottom;\n    } else {\n      box.left = x;\n      box.right = x + box.width;\n      box.top = box.fullSize ? userPadding.top : chartArea.top;\n      box.bottom = box.fullSize ? params.outerHeight - userPadding.right : chartArea.top + chartArea.h;\n      box.height = box.bottom - box.top;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = width - padding.width;\n    const availableHeight = height - padding.height;\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params);\n    fitBoxes(verticalBoxes, chartArea, params);\n    if (fitBoxes(horizontalBoxes, chartArea, params)) {\n      fitBoxes(verticalBoxes, chartArea, params);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  const element = container || canvas;\n  const observer = new MutationObserver(entries => {\n    const parent = _getParentNode(element);\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.addedNodes.length; i++) {\n        const added = entry.addedNodes[i];\n        if (added === element || added === parent) {\n          listener(entry.target);\n        }\n      }\n    });\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const observer = new MutationObserver(entries => {\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.removedNodes.length; i++) {\n        if (entry.removedNodes[i] === canvas) {\n          listener();\n          break;\n        }\n      }\n    });\n  });\n  observer.observe(container, {childList: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && _getParentNode(container));\n  }\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const me = this;\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return me;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) > 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return Object.assign(Object.create(parent), {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return Object.assign(Object.create(parent), {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right} = scale;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    titleY = offsetFromEdge(scale, position, offset);\n    maxWidth = right - left;\n  } else {\n    titleX = offsetFromEdge(scale, position, offset);\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    const me = this;\n    me.options = options.setContext(me.getContext());\n    me.axis = options.axis;\n    me._userMin = me.parse(options.min);\n    me._userMax = me.parse(options.max);\n    me._suggestedMin = me.parse(options.suggestedMin);\n    me._suggestedMax = me.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    const me = this;\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = me.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(me, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    const me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    const sampleSize = tickOpts.sampleSize;\n    me.beforeUpdate();\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.ticks = null;\n    me._labelSizes = null;\n    me._gridLineItems = null;\n    me._labelItems = null;\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions();\n    me._maxLength = me.isHorizontal()\n      ? me.width + margins.left + margins.right\n      : me.height + margins.top + margins.bottom;\n    if (!me._dataLimitsCached) {\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits();\n      me._range = _addGrace(me, me.options.grace);\n      me._dataLimitsCached = true;\n    }\n    me.beforeBuildTicks();\n    me.ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    const samplingEnabled = sampleSize < me.ticks.length;\n    me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\n    me.configure();\n    me.beforeCalculateLabelRotation();\n    me.calculateLabelRotation();\n    me.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      me.ticks = autoSkip(me, me.ticks);\n      me._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      me._convertTicksToLabels(me.ticks);\n    }\n    me.beforeFit();\n    me.fit();\n    me.afterFit();\n    me.afterUpdate();\n  }\n  configure() {\n    const me = this;\n    let reversePixels = me.options.reverse;\n    let startPixel, endPixel;\n    if (me.isHorizontal()) {\n      startPixel = me.left;\n      endPixel = me.right;\n    } else {\n      startPixel = me.top;\n      endPixel = me.bottom;\n      reversePixels = !reversePixels;\n    }\n    me._startPixel = startPixel;\n    me._endPixel = endPixel;\n    me._reversePixels = reversePixels;\n    me._length = endPixel - startPixel;\n    me._alignToPixels = me.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    const me = this;\n    me.chart.notifyPlugins(name, me.getContext());\n    callback(me.options[name], [me]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], me);\n    }\n    for (i = 0; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const me = this;\n    const options = me.options;\n    const tickOpts = options.ticks;\n    const numTicks = me.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\n      me.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = me._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(me.chart.width - maxLabelWidth, 0, me.maxWidth);\n    tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = me.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(Math.min((labelSizes.highest.height + 6) / tickWidth, 1)),\n        Math.asin(Math.min(maxHeight / maxLabelDiagonal, 1)) - Math.asin(maxLabelHeight / maxLabelDiagonal)\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    me.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const me = this;\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = me;\n    const display = me._isVisible();\n    const isHorizontal = me.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = me.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = me.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && me.ticks.length) {\n        const {first, last, widest, highest} = me._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(me.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        me._calculatePadding(first, last, sin, cos);\n      }\n    }\n    me._handleMargins();\n    if (isHorizontal) {\n      me.width = me._length = chart.width - me._margins.left - me._margins.right;\n      me.height = minSize.height;\n    } else {\n      me.width = minSize.width;\n      me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const me = this;\n    const {ticks: {align, padding}, position} = me.options;\n    const isRotated = me.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && me.axis === 'x';\n    if (me.isHorizontal()) {\n      const offsetLeft = me.getPixelForTick(0) - me.left;\n      const offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\n      me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      me.paddingTop = paddingTop + padding;\n      me.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    const me = this;\n    if (me._margins) {\n      me._margins.left = Math.max(me.paddingLeft, me._margins.left);\n      me._margins.top = Math.max(me.paddingTop, me._margins.top);\n      me._margins.right = Math.max(me.paddingRight, me._margins.right);\n      me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    const me = this;\n    me.beforeTickToLabelConversion();\n    me.generateTickLabels(ticks);\n    me.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    const me = this;\n    let labelSizes = me._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = me.options.ticks.sampleSize;\n      let ticks = me.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest)\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    const me = this;\n    if (me._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = me._startPixel + decimal * me._length;\n    return _int16Range(me._alignToPixels ? _alignPixel(me.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const me = this;\n    const ticks = me.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(me.getContext(), index, tick));\n    }\n    return me.$context ||\n\t\t\t(me.$context = createScaleContext(me.chart.getContext(), me));\n  }\n  _tickSize() {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    const rot = toRadians(me.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = me._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return me.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const chart = me.chart;\n    const options = me.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(me.getContext(0));\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(me.bottom);\n      ty1 = me.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(me.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = me.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(me.right);\n      tx1 = me.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(me.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = me.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    for (i = 0; i < ticksLength; ++i) {\n      const optsAtIndex = grid.setContext(me.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(me, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    me._ticksLength = ticksLength;\n    me._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const options = me.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(me.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = me.bottom - hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = me.top + hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = me.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = me._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = me._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(me.getContext(i));\n      pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\n      font = me._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y]\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const me = this;\n    const {position, ticks} = me.options;\n    const rotation = -toRadians(me.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const me = this;\n    const {position, ticks: {crossAlign, mirror, padding}} = me.options;\n    const labelSizes = me._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        textAlign = 'left';\n        x = me.right + padding;\n      } else {\n        x = me.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = me.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        textAlign = 'right';\n        x = me.left + padding;\n      } else {\n        x = me.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = me.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    const me = this;\n    if (me.options.ticks.mirror) {\n      return;\n    }\n    const chart = me.chart;\n    const position = me.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: me.left, bottom: chart.height, right: me.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: me.top, left: 0, bottom: me.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const me = this;\n    const grid = me.options.grid;\n    if (!me._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = me.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(me.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const me = this;\n    const grid = me.options.grid;\n    const ctx = me.ctx;\n    const chart = me.chart;\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    const items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n    if (axisWidth) {\n      const lastLineWidth = borderOpts.lineWidth;\n      const borderValue = me._borderValue;\n      let x1, x2, y1, y2;\n      if (me.isHorizontal()) {\n        x1 = _alignPixel(chart, me.left, axisWidth) - axisWidth / 2;\n        x2 = _alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n        y1 = y2 = borderValue;\n      } else {\n        y1 = _alignPixel(chart, me.top, axisWidth) - axisWidth / 2;\n        y2 = _alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n        x1 = x2 = borderValue;\n      }\n      drawLine(\n        {x: x1, y: y1},\n        {x: x2, y: y2},\n        {width: axisWidth, color: borderOpts.borderColor});\n    }\n  }\n  drawLabels(chartArea) {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = me.ctx;\n    const area = me._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom') {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    const me = this;\n    if (!me._isVisible()) {\n      return;\n    }\n    me.drawBackground();\n    me.drawGrid(chartArea);\n    me.drawTitle();\n    me.drawLabels(chartArea);\n  }\n  _layers() {\n    const me = this;\n    const opts = me.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = opts.grid && opts.grid.z || 0;\n    if (!me._isVisible() || tz === gz || me.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw(chartArea) {\n          me.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw(chartArea) {\n        me.drawBackground();\n        me.drawGrid(chartArea);\n        me.drawTitle();\n      }\n    }, {\n      z: tz,\n      draw(chartArea) {\n        me.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const me = this;\n    const metas = me.chart.getSortedVisibleDatasetMetas();\n    const axisID = me.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === me.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const me = this;\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = me.register(proto);\n    }\n    const items = me.items;\n    const id = item.id;\n    const scope = me.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (me.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    const me = this;\n    [...args].forEach(arg => {\n      const reg = typedRegistry || me._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === me.plugins && arg.id)) {\n        me._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || me._getRegistryForType(item);\n          me._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    const me = this;\n    if (hook === 'beforeInit') {\n      me._init = me._createDescriptors(chart, true);\n      me._notify(me._init, chart, 'install');\n    }\n    const descriptors = filter ? me._descriptors(chart).filter(filter) : me._descriptors(chart);\n    const result = me._notify(descriptors, chart, hook, args);\n    if (hook === 'destroy') {\n      me._notify(descriptors, chart, 'stop');\n      me._notify(me._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = [...scopes];\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    if ((isScriptable(prop) && isFunction(proxy[prop]))\n      || (isIndexable(prop) && isArray(proxy[prop]))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.1.1\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction getCanvas(item) {\n  if (isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nclass Chart {\n  constructor(item, config) {\n    const me = this;\n    this.config = config = new Config(config);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    this.platform = me._initializePlatform(initialCanvas, config);\n    const context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._sortedMetasets = [];\n    this.scales = {};\n    this.scale = undefined;\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(() => this.update('resize'), options.resizeDelay || 0);\n    instances[me.id] = me;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(me, 'complete', onAnimationsComplete);\n    animator.listen(me, 'progress', onAnimationProgress);\n    me._initialize();\n    if (me.attached) {\n      me.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    const me = this;\n    me.notifyPlugins('beforeInit');\n    if (me.options.responsive) {\n      me.resize();\n    } else {\n      retinaScale(me, me.options.devicePixelRatio);\n    }\n    me.bindEvents();\n    me.notifyPlugins('afterInit');\n    return me;\n  }\n  _initializePlatform(canvas, config) {\n    if (config.platform) {\n      return new config.platform();\n    } else if (!isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n      return new BasicPlatform();\n    }\n    return new DomPlatform();\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const me = this;\n    const options = me.options;\n    const canvas = me.canvas;\n    const aspectRatio = options.maintainAspectRatio && me.aspectRatio;\n    const newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const oldRatio = me.currentDevicePixelRatio;\n    const newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\n    if (me.width === newSize.width && me.height === newSize.height && oldRatio === newRatio) {\n      return;\n    }\n    me.width = newSize.width;\n    me.height = newSize.height;\n    me._aspectRatio = me.aspectRatio;\n    retinaScale(me, newRatio, true);\n    me.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [me, newSize], me);\n    if (me.attached) {\n      if (me._doResize()) {\n        me.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const me = this;\n    const options = me.options;\n    const scaleOpts = options.scales;\n    const scales = me.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: me.ctx,\n          chart: me\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(me, scale, scale.options);\n      layouts.addBox(me, scale);\n    });\n  }\n  _updateMetasetIndex(meta, index) {\n    const metasets = this._metasets;\n    const oldIndex = meta.index;\n    if (oldIndex !== index) {\n      metasets[oldIndex] = metasets[index];\n      metasets[index] = meta;\n      meta.index = index;\n    }\n  }\n  _updateMetasets() {\n    const me = this;\n    const metasets = me._metasets;\n    const numData = me.data.datasets.length;\n    const numMeta = metasets.length;\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        me._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const me = this;\n    const {_metasets: metasets, data: {datasets}} = me;\n    if (metasets.length > datasets.length) {\n      delete me._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        me._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const me = this;\n    const newControllers = [];\n    const datasets = me.data.datasets;\n    let i, ilen;\n    me._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = me.getDatasetMeta(i);\n      const type = dataset.type || me.config.type;\n      if (meta.type && meta.type !== type) {\n        me._destroyDatasetMeta(i);\n        meta = me.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\n      meta.order = dataset.order || 0;\n      me._updateMetasetIndex(meta, i);\n      meta.label = '' + dataset.label;\n      meta.visible = me.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(me, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    me._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    const me = this;\n    each(me.data.datasets, (dataset, datasetIndex) => {\n      me.getDatasetMeta(datasetIndex).controller.reset();\n    }, me);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const me = this;\n    const config = me.config;\n    config.update();\n    me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    each(me.scales, (scale) => {\n      layouts.removeBox(me, scale);\n    });\n    const animsDisabled = me._animationsDisabled = !me.options.animation;\n    me.ensureScalesHaveIDs();\n    me.buildOrUpdateScales();\n    me._plugins.invalidate();\n    if (me.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = me.buildOrUpdateControllers();\n    me.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\n      const {controller} = me.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    me._minPadding = minPadding;\n    me._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    me._updateDatasets(mode);\n    me.notifyPlugins('afterUpdate', {mode});\n    me._layers.sort(compare2Level('z', '_idx'));\n    if (me._lastEvent) {\n      me._eventHandler(me._lastEvent, true);\n    }\n    me.render();\n  }\n  _updateLayout(minPadding) {\n    const me = this;\n    if (me.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(me, me.width, me.height, minPadding);\n    const area = me.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    me._layers = [];\n    each(me.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      me._layers.push(...box._layers());\n    }, me);\n    me._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    me.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    const me = this;\n    const isFunction = typeof mode === 'function';\n    if (me.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._updateDataset(i, isFunction ? mode({datasetIndex: i}) : mode);\n    }\n    me.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const me = this;\n    const meta = me.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    const me = this;\n    if (me.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(me)) {\n      if (me.attached && !animator.running(me)) {\n        animator.start(me);\n      }\n    } else {\n      me.draw();\n      onAnimationsComplete({chart: me});\n    }\n  }\n  draw() {\n    const me = this;\n    let i;\n    if (me._resizeBeforeDraw) {\n      const {width, height} = me._resizeBeforeDraw;\n      me._resize(width, height);\n      me._resizeBeforeDraw = null;\n    }\n    me.clear();\n    if (me.width <= 0 || me.height <= 0) {\n      return;\n    }\n    if (me.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = me._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const me = this;\n    const metasets = me._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    const me = this;\n    if (me.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = me.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      me._drawDataset(metasets[i]);\n    }\n    me.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const me = this;\n    const ctx = me.ctx;\n    const clip = meta._clip;\n    const area = me.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    clipArea(ctx, {\n      left: clip.left === false ? 0 : area.left - clip.left,\n      right: clip.right === false ? me.width : area.right + clip.right,\n      top: clip.top === false ? 0 : area.top - clip.top,\n      bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\n    });\n    meta.controller.draw();\n    unclipArea(ctx);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const me = this;\n    const dataset = me.data.datasets[datasetIndex];\n    const metasets = me._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = metasets[datasetIndex] = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = {chart: this, type: 'chart'});\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateDatasetVisibility(datasetIndex, visible) {\n    const me = this;\n    const mode = visible ? 'show' : 'hide';\n    const meta = me.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    me.setDatasetVisibility(datasetIndex, visible);\n    anims.update(meta, {visible});\n    me.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n  }\n  hide(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, false);\n  }\n  show(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const me = this;\n    const meta = me._metasets && me._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n      delete me._metasets[datasetIndex];\n    }\n  }\n  destroy() {\n    const me = this;\n    const {canvas, ctx} = me;\n    let i, ilen;\n    me.stop();\n    animator.remove(me);\n    for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._destroyDatasetMeta(i);\n    }\n    me.config.clearCache();\n    if (canvas) {\n      me.unbindEvents();\n      clearCanvas(canvas, ctx);\n      me.platform.releaseContext(ctx);\n      me.canvas = null;\n      me.ctx = null;\n    }\n    me.notifyPlugins('destroy');\n    delete instances[me.id];\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(me, type, listener);\n        delete listeners[type];\n      }\n    };\n    let listener = function(e, x, y) {\n      e.offsetX = x;\n      e.offsetY = y;\n      me._eventHandler(e);\n    };\n    each(me.options.events, (type) => _add(type, listener));\n    if (me.options.responsive) {\n      listener = (width, height) => {\n        if (me.canvas) {\n          me.resize(width, height);\n        }\n      };\n      let detached;\n      const attached = () => {\n        _remove('attach', attached);\n        me.attached = true;\n        me.resize();\n        _add('resize', listener);\n        _add('detach', detached);\n      };\n      detached = () => {\n        me.attached = false;\n        _remove('resize', listener);\n        _add('attach', attached);\n      };\n      if (platform.isAttached(me.canvas)) {\n        attached();\n      } else {\n        detached();\n      }\n    } else {\n      me.attached = true;\n    }\n  }\n  unbindEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    if (!listeners) {\n      return;\n    }\n    delete me._listeners;\n    each(listeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const me = this;\n    const lastActive = me._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const me = this;\n    const hoverOptions = me.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      me.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      me.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const me = this;\n    const args = {event: e, replay, cancelable: true};\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.type);\n    if (me.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = me._handleEvent(e, replay);\n    args.cancelable = false;\n    me.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      me.render();\n    }\n    return me;\n  }\n  _handleEvent(e, replay) {\n    const me = this;\n    const {_active: lastActive = [], options} = me;\n    const hoverOptions = options.hover;\n    const useFinalPosition = replay;\n    let active = [];\n    let changed = false;\n    let lastEvent = null;\n    if (e.type !== 'mouseout') {\n      active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n      lastEvent = e.type === 'click' ? me._lastEvent : e;\n    }\n    me._lastEvent = null;\n    if (_isPointInArea(e, me.chartArea, me._minPadding)) {\n      callback(options.onHover, [e, active, me], me);\n      if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n        callback(options.onClick, [e, active, me], me);\n      }\n    }\n    changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive, replay);\n    }\n    me._lastEvent = lastEvent;\n    return changed;\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element) {\n  const {startAngle, endAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element) {\n  const {x, y, startAngle, endAngle, pixelMargin} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element) {\n  if (element.fullCircles) {\n    element.endAngle = element.startAngle + TAU;\n    pathArc(ctx, element);\n    for (let i = 0; i < element.fullCircles; ++i) {\n      ctx.fill();\n    }\n  }\n  if (!isNaN(element.circumference)) {\n    element.endAngle = element.startAngle + element.circumference % TAU;\n  }\n  pathArc(ctx, element);\n  ctx.fill();\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, endAngle, pixelMargin} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    element.endAngle = element.startAngle + TAU;\n    clipArc(ctx, element);\n    element.endAngle = endAngle;\n    if (element.endAngle === element.startAngle) {\n      element.endAngle += TAU;\n      element.fullCircles--;\n    }\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < element.fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < element.fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element) {\n  const {options} = element;\n  const inner = options.borderAlign === 'inner';\n  if (!options.borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element);\n  }\n  pathArc(ctx, element);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = (distance >= innerRadius && distance <= outerRadius);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options;\n    const offset = options.offset || 0;\n    me.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    me.fullCircles = Math.floor(me.circumference / TAU);\n    if (me.circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    if (offset && me.circumference < TAU) {\n      const halfAngle = (me.startAngle + me.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    drawArc(ctx, me);\n    drawBorder(ctx, me);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension) {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension) {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && line.segments.length === 1) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea) {\n    const me = this;\n    const options = me.options;\n    if (options.tension && !options.stepped && !me._pointsUpdated) {\n      const loop = options.spanGaps ? me._loop : me._fullLoop;\n      _updateBezierControlPoints(me._points, options, chartArea, loop);\n      me._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    const me = this;\n    me._points = points;\n    delete me._segments;\n    delete me._path;\n    me._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const me = this;\n    const options = me.options;\n    const value = point[property];\n    const points = me.points;\n    const segments = _boundSegments(me, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const me = this;\n    const segments = me.segments;\n    const segmentMethod = _getSegmentMethod(me);\n    let loop = me._loop;\n    start = start || 0;\n    count = count || (me.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, me, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const me = this;\n    const options = me.options || {};\n    const points = me.points || [];\n    if (!points.length || !options.borderWidth) {\n      return;\n    }\n    ctx.save();\n    draw(ctx, me, start, count);\n    ctx.restore();\n    if (me.animated) {\n      me._pointsUpdated = false;\n      me._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options;\n    if (me.skip || options.radius < 0.1) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, me.x, me.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction parseBorderSkipped(bar) {\n  let edge = bar.options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    return res;\n  }\n  edge = bar.horizontal\n    ? parseEdge(edge, 'left', 'right', bar.base > bar.x)\n    : parseEdge(edge, 'bottom', 'top', bar.base < bar.y);\n  res[edge] = true;\n  return res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : Math.max(Math.min(value, max), min);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = parseBorderSkipped(bar);\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = parseBorderSkipped(bar);\n  return {\n    topLeft: skipOrLimit(skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const options = this.options;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, outer);\n      ctx.clip();\n      addRectPath(ctx, inner);\n      ctx.fillStyle = options.borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inner);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      if (count <= 4 * availableWidth) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach((segment) => {\n    const first = linePoints[segment.start];\n    const last = linePoints[segment.end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {chart, scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(chart, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nconst isLineAndNotInHideAnimation = (meta) => meta.type === 'line' && !meta.hidden;\nfunction getLinesBelow(chart, index) {\n  const below = [];\n  const metas = chart.getSortedVisibleDatasetMetas();\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (isLineAndNotInHideAnimation(meta)) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    const bounds = getBounds(property, points[segment.start], points[segment.end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[segment.start],\n        end: points[segment.end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      interpolatedLineTo(ctx, target, end, property);\n    }\n    const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n    const loop = lineLoop && targetLoop;\n    if (!loop) {\n      interpolatedLineTo(ctx, target, start, property);\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        source.line.updateControlPoints(area);\n        if (options.drawTime === 'beforeDatasetsDraw') {\n          drawfill(chart.ctx, source, area);\n        }\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins;\n    me.setDimensions();\n    me.buildLabels();\n    me.fit();\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n  }\n  buildLabels() {\n    const me = this;\n    const labelOpts = me.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [me.chart], me) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, me.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, me.chart.data));\n    }\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n    me.legendItems = legendItems;\n  }\n  fit() {\n    const me = this;\n    const {options, ctx} = me;\n    if (!options.display) {\n      me.width = me.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = me._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (me.isHorizontal()) {\n      width = me.maxWidth;\n      height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = me.maxHeight;\n      width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    me.width = Math.min(width, options.maxWidth || me.maxWidth);\n    me.height = Math.min(height, options.maxHeight || me.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxWidth, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const lineWidths = me.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxHeight, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const columnSizes = me.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let top = 0;\n    let col = 0;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + fontSize + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        top = 0;\n        currentColWidth = currentColHeight = 0;\n      }\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += fontSize + padding;\n      hitboxes[i] = {left, top, col, width: itemWidth, height: itemHeight};\n      top += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    const me = this;\n    if (!me.options.display) {\n      return;\n    }\n    const titleHeight = me._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}}} = me;\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n        }\n        hitbox.top += me.top + titleHeight + padding;\n        hitbox.left = left;\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += me.left + padding;\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    const me = this;\n    if (me.options.display) {\n      const ctx = me.ctx;\n      clipArea(ctx, me);\n      me._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const me = this;\n    const {options: opts, columnSizes, lineWidths, ctx} = me;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    me.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: legendItem.textAlign\n      });\n    };\n    const isHorizontal = me.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, me.left + padding, me.right - lineWidths[0]),\n        y: me.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: me.left + padding,\n        y: _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(me.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    me.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + (fontSize / 2) + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(me.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > me.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, me.left + padding, me.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > me.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, me.right);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(me.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const me = this;\n    const opts = me.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const ctx = me.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = me.left;\n    let maxWidth = me.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...me.lineWidths);\n      y = me.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, me.right - maxWidth);\n    } else {\n      const maxHeight = me.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    const me = this;\n    let i, hitBox, lh;\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      lh = me.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          return me.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const me = this;\n    const opts = me.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = me._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = me._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, me], me);\n      }\n      me._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, me], me);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, me], me);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const me = this;\n    const opts = me.options;\n    me.left = 0;\n    me.top = 0;\n    if (!opts.display) {\n      me.width = me.height = me.right = me.bottom = 0;\n      return;\n    }\n    me.width = me.right = maxWidth;\n    me.height = me.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    me._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + me._padding.height;\n    if (me.isHorizontal()) {\n      me.height = textSize;\n    } else {\n      me.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + me._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = me._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip._chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const radiusAndPadding = cornerRadius + caretPadding;\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return Object.assign(Object.create(parent), {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._chart = config._chart;\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const me = this;\n    const cached = me._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = me._chart;\n    const options = me.options.setContext(me.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(me._chart, opts);\n    if (opts._cacheable) {\n      me._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    const me = this;\n    return me.$context ||\n\t\t\t(me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\n  }\n  getTitle(context, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(me, [context]);\n    const title = callbacks.title.apply(me, [context]);\n    const afterTitle = callbacks.afterTitle.apply(me, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\n    const footer = callbacks.footer.apply(me, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const me = this;\n    const active = me._active;\n    const data = me._chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(me._chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(me, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(me, context));\n      labelTextColors.push(scoped.labelTextColor.call(me, context));\n    });\n    me.labelColors = labelColors;\n    me.labelPointStyles = labelPointStyles;\n    me.labelTextColors = labelTextColors;\n    me.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    const active = me._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (me.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(me, active, me._eventPosition);\n      tooltipItems = me._createItems(options);\n      me.title = me.getTitle(tooltipItems, options);\n      me.beforeBody = me.getBeforeBody(tooltipItems, options);\n      me.body = me.getBody(tooltipItems, options);\n      me.afterBody = me.getAfterBody(tooltipItems, options);\n      me.footer = me.getFooter(tooltipItems, options);\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(me._chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\n      me.xAlign = alignment.xAlign;\n      me.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    me._tooltipItems = tooltipItems;\n    me.$context = undefined;\n    if (properties) {\n      me._resolveAnimations().update(me, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(me, {chart: me._chart, tooltip: me, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {cornerRadius, caretSize} = options;\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const me = this;\n    const title = me.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const me = this;\n    const labelColors = me.labelColors[i];\n    const labelPointStyle = me.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(me, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = me.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const me = this;\n    const {body} = me;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(me, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(me.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + 1) : (boxWidth + 2)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = me.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        me._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(me.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const me = this;\n    const footer = me.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const radius = options.cornerRadius;\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const me = this;\n    const chart = me._chart;\n    const anims = me.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(me, me._active, me._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, me._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        me.xAlign = alignment.xAlign;\n        me.yAlign = alignment.yAlign;\n        me.width = size.width;\n        me.height = size.height;\n        me.caretX = position.x;\n        me.caretY = position.y;\n        me._resolveAnimations().update(me, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    let opacity = me.opacity;\n    if (!opacity) {\n      return;\n    }\n    me._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: me.width,\n      height: me.height\n    };\n    const pt = {\n      x: me.x,\n      y: me.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      me.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      me.drawTitle(pt, ctx, options);\n      me.drawBody(pt, ctx, options);\n      me.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const me = this;\n    const lastActive = me._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me._chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = me._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      me._active = active;\n      me._eventPosition = eventPosition;\n      me.update(true);\n    }\n  }\n  handleEvent(e, replay) {\n    const me = this;\n    const options = me.options;\n    const lastActive = me._active || [];\n    let changed = false;\n    let active = [];\n    if (e.type !== 'mouseout') {\n      active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n    }\n    const positionChanged = me._positionChanged(active, e);\n    changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      me._active = active;\n      if (options.enabled || options.external) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({_chart: chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index) => typeof raw === 'string'\n  ? labels.push(raw) - 1\n  : isNaN(raw) ? null : index;\nfunction findOrAddLabel(labels, raw, index) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me.getMinMax(true);\n    if (me.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = me.getLabels().length - 1;\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const min = me.min;\n    const max = me.max;\n    const offset = me.options.offset;\n    const ticks = [];\n    let labels = me.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    me._startValue = me.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const labels = me.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    const me = this;\n    super.configure();\n    if (!me.isHorizontal()) {\n      me._reversePixels = !me._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (typeof value !== 'number') {\n      value = me.parse(value);\n    }\n    return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\n  }\n  getPixelForTick(index) {\n    const me = this;\n    const ticks = me.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return me.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {step, min, max, precision, count, maxTicks} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  niceMin = Math.floor(rmin / spacing) * spacing;\n  niceMax = Math.ceil(rmax / spacing) * spacing;\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.min((max - min) / spacing, maxTicks);\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  factor = Math.pow(10, isNullOrUndef(precision) ? _decimalPlaces(spacing) : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    ticks.push({value: min});\n    if (niceMin <= min) {\n      j++;\n    }\n    if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, spacing / 10)) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined) {\n    if (almostEquals(ticks[ticks.length - 1].value, max, spacing / 10)) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {beginAtZero, stacked} = me.options;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero || stacked) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      setMax(max + 1);\n      if (!beginAtZero) {\n        setMin(min - 1);\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  getTickLimit() {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n    } else {\n      maxTicks = me.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = me.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n    };\n    const dataRange = me._range || me;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const me = this;\n    const ticks = me.ticks;\n    let start = me.min;\n    let end = me.max;\n    super.configure();\n    if (me.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    me._startValue = start;\n    me._endValue = end;\n    me._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? min : 0;\n    me.max = isNumberFinite(max) ? max : 1;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const me = this;\n    if (me.isHorizontal()) {\n      return Math.ceil(me.width / 40);\n    }\n    const tickFont = me._resolveTickFontOptions(0);\n    return Math.ceil(me.height / tickFont.lineHeight);\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    me.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (me.options.beginAtZero) {\n      me._zero = true;\n    }\n    me.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let min = me.min;\n    let max = me.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const generationOptions = {\n      min: me._userMin,\n      max: me._userMax\n    };\n    const ticks = generateTicks(generationOptions, me);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\n  }\n  configure() {\n    const me = this;\n    const start = me.min;\n    super.configure();\n    me._startValue = log10(start);\n    me._valueRange = log10(me.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (value === undefined || value === 0) {\n      value = me.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return me.getPixelForDecimal(value === me.min\n      ? 0\n      : (log10(value) - me._startValue) / me._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const decimal = me.getDecimalForPixel(pixel);\n    return Math.pow(10, me._startValue + decimal * me._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, lineHeight, label) {\n  if (isArray(label)) {\n    return {\n      w: _longestText(ctx, ctx.font, label),\n      h: label.length * lineHeight\n    };\n  }\n  return {\n    w: ctx.measureText(label).width,\n    h: lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  const furthestAngles = {};\n  let i, textSize, pointPosition;\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale.getLabels().length;\n  for (i = 0; i < valueCount; i++) {\n    const opts = scale.options.pointLabels.setContext(scale.getContext(i));\n    padding[i] = opts.padding;\n    pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    const plFont = toFont(opts.font);\n    scale.ctx.font = plFont.string;\n    textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = scale.getIndexAngle(i);\n    const angle = toDegrees(angleRadians);\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  scale._pointLabelItems = [];\n  const opts = scale.options;\n  const tickBackdropHeight = getTickBackdropHeight(opts);\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n  for (i = 0; i < valueCount; i++) {\n    const extra = (i === 0 ? tickBackdropHeight / 2 : 0);\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    const angle = toDegrees(scale.getIndexAngle(i));\n    const size = labelSizes[i];\n    adjustPointPositionForLabelHeight(angle, size, pointLabelPosition);\n    const textAlign = getTextAlignForAngle(angle);\n    let left;\n    if (textAlign === 'left') {\n      left = pointLabelPosition.x;\n    } else if (textAlign === 'center') {\n      left = pointLabelPosition.x - (size.w / 2);\n    } else {\n      left = pointLabelPosition.x - size.w;\n    }\n    const right = left + size.w;\n    scale._pointLabelItems[i] = {\n      x: pointLabelPosition.x,\n      y: pointLabelPosition.y,\n      textAlign,\n      left,\n      top: pointLabelPosition.y,\n      right,\n      bottom: pointLabelPosition.y + size.h,\n    };\n  }\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n  if (angle === 90 || angle === 270) {\n    position.y -= (textSize.h / 2);\n  } else if (angle > 270 || angle < 90) {\n    position.y -= textSize.h;\n  }\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const me = this;\n    me.width = me.maxWidth;\n    me.height = me.maxHeight;\n    me.paddingTop = getTickBackdropHeight(me.options) / 2;\n    me.xCenter = Math.floor(me.width / 2);\n    me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n    me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(false);\n    me.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    me.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\n    me._pointLabels = me.getLabels().map((value, index) => {\n      const label = callback(me.options.pointLabels.callback, [value, index], me);\n      return label || label === 0 ? label : '';\n    });\n  }\n  fit() {\n    const me = this;\n    const opts = me.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(me);\n    } else {\n      me.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n    const me = this;\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n    let radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\n    radiusReductionRight = numberOrZero(radiusReductionRight);\n    radiusReductionTop = numberOrZero(radiusReductionTop);\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\n    me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(\n      Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n      Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n    me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    const me = this;\n    const maxRight = me.width - rightMovement - me.drawingArea;\n    const maxLeft = leftMovement + me.drawingArea;\n    const maxTop = topMovement + me.drawingArea;\n    const maxBottom = (me.height - me.paddingTop) - bottomMovement - me.drawingArea;\n    me.xCenter = Math.floor(((maxLeft + maxRight) / 2) + me.left);\n    me.yCenter = Math.floor(((maxTop + maxBottom) / 2) + me.top + me.paddingTop);\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / this.getLabels().length;\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    const me = this;\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = me.drawingArea / (me.max - me.min);\n    if (me.options.reverse) {\n      return (me.max - value) * scalingFactor;\n    }\n    return (value - me.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const me = this;\n    const scaledDistance = distance / (me.drawingArea / (me.max - me.min));\n    return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\n  }\n  getPointPosition(index, distanceFromCenter) {\n    const me = this;\n    const angle = me.getIndexAngle(index) - HALF_PI;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + me.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + me.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const me = this;\n    const {backgroundColor, grid: {circular}} = me.options;\n    if (backgroundColor) {\n      const ctx = me.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const {angleLines, grid} = opts;\n    const labelCount = me.getLabels().length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(me, labelCount);\n    }\n    if (grid.display) {\n      me.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = me.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(me.getContext(index - 1));\n          drawRadiusLine(me, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = me.getLabels().length - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(me.getContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\n        position = me.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(me.xCenter, me.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawLabels() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = me.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(me.xCenter, me.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    me.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(me.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    backdropColor: 'rgba(255,255,255,0.75)',\n    backdropPadding: 2,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const options = scale.options.time;\n  const {parser, round, isoWeekday} = options;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const me = this;\n    const options = me.options;\n    const adapter = me._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(me._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(me.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    me.min = Math.min(min, max - 1);\n    me.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const me = this;\n    const options = me.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      me.min = me._userMin || timestamps[0];\n      me.max = me._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = me.min;\n    const max = me.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    me._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min))\n      : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\n    me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined\n      : determineMajorUnit(me._unit);\n    me.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(me, ticks, me._majorUnit);\n  }\n  initOffsets(timestamps) {\n    const me = this;\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (me.options.offset && timestamps.length) {\n      first = me.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    me._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const me = this;\n    const adapter = me._adapter;\n    const min = me.min;\n    const max = me.max;\n    const options = me.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const adapter = me._adapter;\n    const timeOpts = me.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const me = this;\n    const options = me.options;\n    const formats = options.time.displayFormats;\n    const unit = me._unit;\n    const majorUnit = me._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], me) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    const me = this;\n    return value === null ? NaN : (value - me.min) / (me.max - me.min);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return me.min + pos * (me.max - me.min);\n  }\n  _getLabelSize(label) {\n    const me = this;\n    const ticksOpts = me.options.ticks;\n    const tickLabelWidth = me.ctx.measureText(label).width;\n    const angle = toRadians(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = me._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const me = this;\n    const timeOpts = me.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\n    const size = me._getLabelSize(exampleLabel);\n    const capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    const me = this;\n    let timestamps = me._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = me.getMatchingVisibleMetas();\n    if (me._normalized && metas.length) {\n      return (me._cache.data = metas[0].controller.getAllParsedValues(me));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\n    }\n    return (me._cache.data = me.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const me = this;\n    const timestamps = me._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = me.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(me, labels[i]));\n    }\n    return (me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    prevSource = Math.floor(val);\n    nextSource = Math.ceil(val);\n    prevTarget = table[prevSource];\n    nextTarget = table[nextSource];\n  } else {\n    const result = _lookup(table, val);\n    prevTarget = result.lo;\n    nextTarget = result.hi;\n    prevSource = table[prevTarget];\n    nextSource = table[nextTarget];\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._maxIndex = undefined;\n  }\n  initOffsets() {\n    const me = this;\n    const timestamps = me._getTimestampsForTable();\n    me._table = me.buildLookupTable(timestamps);\n    me._maxIndex = me._table.length - 1;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const me = this;\n    const {min, max} = me;\n    if (!timestamps.length) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    const items = [min];\n    let i, ilen, curr;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n    items.push(max);\n    return items;\n  }\n  _getTimestampsForTable() {\n    const me = this;\n    let timestamps = me._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = me.getDataTimestamps();\n    const label = me.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = me.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = me._cache.all = timestamps;\n    return timestamps;\n  }\n  getPixelForValue(value, index) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me._normalized && me._maxIndex > 0 && !isNullOrUndef(index)\n      ? index / me._maxIndex : me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getDecimalForValue(value) {\n    return interpolate(this._table, value) / this._maxIndex;\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(me._table, decimal * this._maxIndex, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n"]}}