{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _defineProperty from \"/home/runner/work/mapa-vacinacao-c19/mapa-vacinacao-c19/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useEffect, useRef, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { formatNumber } from '../../utils';\nimport { Card } from './../Card';\nimport classNames from 'classnames';\nimport { RESIZE_TRESHOLD, lineChartCommon } from './../../constants';\nexport function RamBarAdministradasPorFaixaEtaria(_ref) {\n  var statistics = _ref.statistics,\n      colors = _ref.colors;\n\n  var _useState = useState(false),\n      loaded = _useState[0],\n      setLoaded = _useState[1];\n\n  var main = colors.main,\n      shades = colors.shades,\n      tints = colors.tints,\n      complements = colors.complements;\n\n  var _useState2 = useState({}),\n      graphData = _useState2[0],\n      setGraphData = _useState2[1];\n\n  var _useState3 = useState('dose_1'),\n      activeDose = _useState3[0],\n      setActiveDose = _useState3[1];\n\n  var canvasRef = useRef(null);\n\n  function generateColor(color) {\n    return {\n      borderColor: color,\n      pointBorderColor: color,\n      pointBackgroundColor: color,\n      pointHoverBackgroundColor: color,\n      pointHoverBorderColor: color\n    };\n  }\n\n  useEffect(function () {\n    var _canvasRef$current;\n\n    if (canvasRef !== null && canvasRef !== void 0 && (_canvasRef$current = canvasRef.current) !== null && _canvasRef$current !== void 0 && _canvasRef$current.chartInstance) {\n      canvasRef.current.chartInstance.data.datasets.forEach(function (dataset) {\n        if (dataset.customDose == activeDose) {\n          dataset.hidden = false;\n        } else {\n          dataset.hidden = true;\n        }\n\n        canvasRef.current.chartInstance.update();\n      });\n    }\n  }, [activeDose]);\n\n  var data = function data(canvas) {\n    var labels = graphData.labels,\n        groups = graphData.groups;\n\n    if (window.innerWidth <= RESIZE_TRESHOLD) {\n      canvas.parentNode.style.width = '1000px';\n    } else {\n      canvas.parentNode.style.width = 'auto';\n    }\n\n    window.addEventListener('resize', function () {\n      if (window.innerWidth <= RESIZE_TRESHOLD) {\n        canvas.parentNode.style.width = '1000px';\n      } else {\n        canvas.parentNode.style.width = '100%';\n      }\n    });\n    console.log(activeDose, groups.map(function (group) {\n      return group.e1824[activeDose] || 0;\n    }));\n    return {\n      labels: Object.keys(graphData.labels).map(function (key) {\n        var fromDate = new Date(labels[key]);\n        return \"\".concat(formatNumber(fromDate.getDate()), \"/\").concat(formatNumber(fromDate.getMonth() + 1));\n      }),\n      datasets: [_objectSpread(_objectSpread(_objectSpread({}, lineChartCommon), generateColor(shades[0])), {}, {\n        label: 'Grupo 18/24',\n        labelGroup: 'Grupo 18/24',\n        fill: false,\n        backgroundColor: shades[0],\n        data: groups.map(function (group) {\n          return group.e1824[activeDose] || 0;\n        }),\n        order: 1,\n        customDose: 2\n      }), _objectSpread(_objectSpread(_objectSpread({}, lineChartCommon), generateColor(tints[1])), {}, {\n        label: 'Grupo 25/49',\n        labelGroup: 'Grupo 25/49',\n        fill: false,\n        backgroundColor: tints[1],\n        data: groups.map(function (group) {\n          return group.e2549[activeDose] || 0;\n        }),\n        order: 3,\n        customDose: 2\n      }), _objectSpread(_objectSpread(_objectSpread({}, lineChartCommon), generateColor(main)), {}, {\n        label: 'Grupo 50/59',\n        labelGroup: 'Grupo 50/59',\n        fill: false,\n        backgroundColor: main,\n        data: groups.map(function (group) {\n          return group.e5059[activeDose] || 0;\n        }),\n        stack: 'stack1',\n        order: 5,\n        customDose: 2\n      }), _objectSpread(_objectSpread(_objectSpread({}, lineChartCommon), generateColor(shades[2])), {}, {\n        label: 'Grupo 60/69',\n        labelGroup: 'Grupo 60/69',\n        fill: false,\n        backgroundColor: shades[2],\n        data: groups.map(function (group) {\n          return (group.e6064[activeDose] + group.e6569[activeDose]) / 2 || 0;\n        }),\n        order: 7,\n        customDose: 2\n      }), _objectSpread(_objectSpread(_objectSpread({}, lineChartCommon), generateColor(complements[2])), {}, {\n        label: 'Grupo 70/79',\n        labelGroup: 'Grupo 70/79',\n        fill: false,\n        backgroundColor: complements[2],\n        data: groups.map(function (group) {\n          return group.e7079.dose_2 || 0;\n        }),\n        order: 9,\n        customDose: 2\n      }), _objectSpread(_objectSpread(_objectSpread({}, lineChartCommon), generateColor(complements[1])), {}, {\n        label: 'Grupo 80+',\n        labelGroup: 'Grupo 80+',\n        backgroundColor: complements[1],\n        data: groups.map(function (group) {\n          return group.e80.dose_2 || 0;\n        }),\n        order: 11,\n        stack: 'stack2',\n        fill: false,\n        customDose: 2\n      })]\n    };\n  };\n\n  var options = function options() {\n    var maxValue = 100;\n    return {\n      plugins: {\n        datalabels: {\n          display: false\n        },\n        legend: {\n          position: 'bottom',\n          align: 'start',\n          onHover: function onHover(event, legend) {\n            document.body.classList.add('mouse-pointer');\n          },\n          onLeave: function onLeave(event, legend) {\n            document.body.classList.remove('mouse-pointer');\n          }\n        }\n      },\n      onResize: function onResize(a, b, c) {\n        if (window.innerWidth <= RESIZE_TRESHOLD) {\n          a.canvas.parentNode.style.width = '1000px';\n        } else {\n          a.canvas.parentNode.style.width = 'auto';\n        }\n      },\n      animation: {\n        duration: 1000\n      },\n      tooltips: {\n        mode: 'index',\n        intersect: false,\n        callbacks: _objectSpread(_objectSpread(_objectSpread({}, lineChartCommon), generateColor(shades[0])), {}, {\n          label: function label(tooltipItem, data) {\n            var label = data.datasets[tooltipItem.datasetIndex].label;\n            return label.replace('- 1ª Dose', '').replace('- 2ª Dose', '') + ': ' + parseFloat(tooltipItem.value).toFixed(2) + '%';\n          },\n          title: function title(tooltipItem, data) {\n            return tooltipItem[0].label;\n          }\n        })\n      },\n      scales: {\n        y: {\n          id: 'axis',\n          stacked: false,\n          ticks: {\n            beginAtZero: false,\n            min: 0,\n            max: maxValue,\n            stepSize: (maxValue / 5).toFixed(0),\n            callback: function callback(value) {\n              return formatNumber(value, false) + '%';\n            }\n          }\n        },\n        x: {\n          id: 'xaxis',\n          stacked: false,\n          ticks: {\n            beginAtZero: false\n          }\n        }\n      }\n    };\n  };\n\n  useEffect(function () {\n    statistics.getAdministredDosesByAgeByWeekRam().then(function (data) {\n      setGraphData(data);\n      setLoaded(true);\n      setActiveDose('dose_1');\n    });\n  }, []);\n  return /*#__PURE__*/_jsx(Card, {\n    textLeft: true,\n    allowOverflow: true,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      children: loaded === true ? /*#__PURE__*/_jsxs(_Fragment, {\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: 'toggle_buttons',\n          children: /*#__PURE__*/_jsxs(\"p\", {\n            children: [/*#__PURE__*/_jsx(\"button\", {\n              className: classNames('toggle_button', {\n                active: activeDose === 'dose_1'\n              }),\n              onClick: function onClick() {\n                setActiveDose('dose_1');\n              },\n              children: \"1\\xAA Dose\"\n            }), /*#__PURE__*/_jsx(\"button\", {\n              className: classNames('toggle_button', {\n                active: activeDose === 'dose_2'\n              }),\n              onClick: function onClick() {\n                setActiveDose('dose_2');\n              },\n              children: \"2\\xAA Dose\"\n            })]\n          })\n        }), /*#__PURE__*/_jsx(\"div\", {\n          children: /*#__PURE__*/_jsx(Line, {\n            height: 80,\n            ref: canvasRef,\n            options: options(),\n            data: data\n          })\n        })]\n      }) : ''\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"module"}