{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"/home/runner/work/mapa-vacinacao-c19/mapa-vacinacao-c19/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/runner/work/mapa-vacinacao-c19/mapa-vacinacao-c19/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { formatNumber } from '../../utils';\nimport { Card } from './../Card';\nimport { RESIZE_TRESHOLD } from '../../constants';\nexport function BarsVacinacaoArs(_ref) {\n  var statistics = _ref.statistics,\n      colors = _ref.colors;\n\n  var _useState = useState(true),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var main = colors.main,\n      tints = colors.tints;\n\n  var _useState2 = useState({}),\n      snsData = _useState2[0],\n      setSNSData = _useState2[1];\n\n  var data = function data(canvas) {\n    if (window.innerWidth <= RESIZE_TRESHOLD) {\n      canvas.parentNode.style.width = RESIZE_TRESHOLD + 'px';\n    } else {\n      canvas.parentNode.style.width = '100%';\n    }\n\n    window.addEventListener('resize', function () {\n      if (window.innerWidth <= RESIZE_TRESHOLD) {\n        canvas.parentNode.style.width = RESIZE_TRESHOLD + 'px';\n      } else {\n        canvas.parentNode.style.width = '100%';\n      }\n    });\n    return {\n      labels: snsData.filter(function (el) {\n        return el.REGION != 'All';\n      }).map(function (el) {\n        return el.REGION.replace('All', 'Nacional');\n      }),\n      datasets: [{\n        label: '1ª Dose',\n        backgroundColor: main,\n        data: snsData.filter(function (el) {\n          return el.REGION != 'All';\n        }).map(function (el) {\n          return el.CUMUL_VAC_1;\n        }),\n        fill: false,\n        stack: 'stack1'\n      }, {\n        label: '2ª Dose',\n        backgroundColor: tints[1],\n        data: snsData.filter(function (el) {\n          return el.REGION != 'All';\n        }).map(function (el) {\n          return el.CUMUL_VAC_2;\n        }),\n        stack: 'stack1'\n      }]\n    };\n  };\n\n  var options = function options() {\n    return {\n      plugins: {\n        datalabels: {\n          display: false,\n          color: 'white'\n        }\n      },\n      layout: {\n        padding: -5\n      },\n      legend: {\n        display: true,\n        position: 'top',\n        align: 'start',\n        onHover: function onHover(event, legend) {\n          document.body.classList.add('mouse-pointer');\n        },\n        onLeave: function onLeave(event, legend) {\n          document.body.classList.remove('mouse-pointer');\n        }\n      },\n      animation: {\n        duration: 1000\n      },\n      tooltips: {\n        mode: 'index',\n        intersect: false,\n        callbacks: {\n          label: function label(tooltipItem, data) {\n            var label = data.datasets[tooltipItem.datasetIndex].label;\n            return label + ': ' + formatNumber(parseInt(tooltipItem.value), false);\n          }\n        }\n      },\n      scales: {\n        yAxes: [{\n          gridLines: {\n            display: true\n          },\n          ticks: {\n            display: true,\n            maxTicksLimit: 7,\n            minTicksLimit: 7,\n            callback: function callback(value) {\n              return formatNumber(value, false);\n            }\n          }\n        }],\n        xAxes: [{\n          stacked: true,\n          gridLines: {\n            display: true\n          },\n          ticks: {\n            beginAtZero: true,\n            display: true\n          }\n        }]\n      }\n    };\n  };\n\n  useEffect( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.t0 = setSNSData;\n            _context.next = 3;\n            return statistics.getTotalSNS();\n\n          case 3:\n            _context.t1 = _context.sent;\n            (0, _context.t0)(_context.t1);\n            setLoading(false);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), []);\n  return !loading === true ? /*#__PURE__*/_jsx(Card, {\n    allowOverflow: true,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      children: !loading ? /*#__PURE__*/_jsx(_Fragment, {\n        children: /*#__PURE__*/_jsx(Bar, {\n          height: 80,\n          options: options(),\n          data: data\n        })\n      }) : ''\n    })\n  }) : '';\n}","map":null,"metadata":{},"sourceType":"module"}