{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/pi/Web/mapa-vacinacao-c19/components/graphs/PieAdministradasDoses.jsx\";\nimport { useEffect, useRef, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Pie } from 'react-chartjs-2';\nimport { COLOR_1 } from '../../constants';\nimport { Card } from './../Card';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport { formatNumber } from './../../utils';\nexport function PieAdministradasDoses({\n  statistics,\n  colors\n}) {\n  let {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  let {\n    main,\n    shades,\n    tints,\n    complements\n  } = colors;\n\n  const data = canvas => {\n    return {\n      labels: ['Doses Adminstradas - 1ª Inoculação', 'Doses Adminstradas - 2ª Inoculação', 'Doses Recebidas'],\n      datasets: [{\n        backgroundColor: [main, shades[0], shades[1]],\n        data: [statistics.primeiras, statistics.segundas, statistics.recebidas - statistics.administradas]\n      }]\n    };\n  };\n\n  const options = () => {\n    return {\n      maintainAspectRatio: false,\n      plugins: {\n        datalabels: {\n          color: 'white',\n          formatter: (value, chart) => {\n            let sum = 0;\n\n            if (value === statistics.primeiras) {\n              sum = statistics.primeiras / statistics.recebidas;\n            }\n\n            if (value === statistics.segundas) {\n              sum = statistics.segundas / statistics.recebidas;\n            }\n\n            if (value === statistics.recebidas - statistics.administradas) {\n              sum = 1 - statistics.administradas / statistics.recebidas;\n            }\n\n            sum = sum * 100;\n\n            if (sum > 10) {\n              return sum.toFixed(2) + '%';\n            }\n\n            return '';\n          }\n        }\n      },\n      onResize: (a, b, c) => {},\n      legend: {\n        position: 'bottom',\n        align: 'start'\n      },\n      animation: {\n        duration: 1000\n      },\n      tooltips: {\n        callbacks: {\n          label: function ({\n            index\n          }, {\n            datasets,\n            labels\n          }) {\n            let label = labels[index];\n            let data = datasets[0].data[index];\n\n            if (label === 'Doses Recebidas') {\n              data = statistics.recebidas;\n            }\n\n            return `${label}: ${formatNumber(data)}`;\n          }\n        }\n      }\n    };\n  };\n\n  useEffect(() => {\n    setLoading(false);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    allowOverflow: true,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: !loading ? /*#__PURE__*/_jsxDEV(Pie, {\n        plugins: [ChartDataLabels],\n        height: 350,\n        options: options(),\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this) : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 3\n  }, this);\n}","map":{"version":3,"sources":["/home/pi/Web/mapa-vacinacao-c19/components/graphs/PieAdministradasDoses.jsx"],"names":["useEffect","useRef","useState","Bar","Pie","COLOR_1","Card","ChartDataLabels","formatNumber","PieAdministradasDoses","statistics","colors","loading","setLoading","main","shades","tints","complements","data","canvas","labels","datasets","backgroundColor","primeiras","segundas","recebidas","administradas","options","maintainAspectRatio","plugins","datalabels","color","formatter","value","chart","sum","toFixed","onResize","a","b","c","legend","position","align","animation","duration","tooltips","callbacks","label","index"],"mappings":"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","sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Pie } from 'react-chartjs-2';\nimport { COLOR_1 } from '../../constants';\nimport { Card } from './../Card';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport { formatNumber } from './../../utils';\nexport function PieAdministradasDoses({ statistics, colors }) {\n\tlet [loading, setLoading] = useState(true);\n\n\tlet { main, shades, tints, complements } = colors;\n\n\tconst data = (canvas) => {\n\t\treturn {\n\t\t\tlabels: ['Doses Adminstradas - 1ª Inoculação', 'Doses Adminstradas - 2ª Inoculação', 'Doses Recebidas'],\n\t\t\tdatasets: [\n\t\t\t\t{\n\t\t\t\t\tbackgroundColor: [main, shades[0], shades[1]],\n\t\t\t\t\tdata: [statistics.primeiras, statistics.segundas, statistics.recebidas - statistics.administradas],\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\t};\n\tconst options = () => {\n\t\treturn {\n\t\t\tmaintainAspectRatio: false,\n\t\t\tplugins: {\n\t\t\t\tdatalabels: {\n\t\t\t\t\tcolor: 'white',\n\t\t\t\t\tformatter: (value, chart) => {\n\t\t\t\t\t\tlet sum = 0;\n\t\t\t\t\t\tif (value === statistics.primeiras) {\n\t\t\t\t\t\t\tsum = statistics.primeiras / statistics.recebidas;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (value === statistics.segundas) {\n\t\t\t\t\t\t\tsum = statistics.segundas / statistics.recebidas;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (value === statistics.recebidas - statistics.administradas) {\n\t\t\t\t\t\t\tsum = 1 - statistics.administradas / statistics.recebidas;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tsum = sum * 100;\n\n\t\t\t\t\t\tif (sum > 10) {\n\t\t\t\t\t\t\treturn sum.toFixed(2) + '%';\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tonResize: (a, b, c) => {},\n\t\t\tlegend: {\n\t\t\t\tposition: 'bottom',\n\t\t\t\talign: 'start',\n\t\t\t},\n\n\t\t\tanimation: {\n\t\t\t\tduration: 1000,\n\t\t\t},\n\t\t\ttooltips: {\n\t\t\t\tcallbacks: {\n\t\t\t\t\tlabel: function ({ index }, { datasets, labels }) {\n\t\t\t\t\t\tlet label = labels[index];\n\t\t\t\t\t\tlet data = datasets[0].data[index];\n\t\t\t\t\t\tif (label === 'Doses Recebidas') {\n\t\t\t\t\t\t\tdata = statistics.recebidas;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn `${label}: ${formatNumber(data)}`;\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\t};\n\n\tuseEffect(() => {\n\t\tsetLoading(false);\n\t}, []);\n\n\treturn (\n\t\t<Card allowOverflow={true}>\n\t\t\t<div>{!loading ? <Pie plugins={[ChartDataLabels]} height={350} options={options()} data={data} /> : ''}</div>\n\t\t</Card>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}