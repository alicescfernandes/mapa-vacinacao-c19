{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/pi/Web/mapa-vacinacao-c19/components/graphs/PieRecebidasAdquiridas.jsx\";\nimport { useEffect, useRef, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Pie } from 'react-chartjs-2';\nimport { COLOR_1 } from '../../constants';\nimport { Card } from './../Card';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport { formatNumber } from './../../utils';\nexport function PieRecebidasAdquiridas({\n  statistics,\n  colors\n}) {\n  let {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  let {\n    main,\n    shades,\n    tints,\n    complements\n  } = colors;\n\n  const data = canvas => {\n    return {\n      labels: ['Doses Adquiridas', 'Doses Recebidas'],\n      datasets: [{\n        backgroundColor: ['transparent', main],\n        borderColor: [main, main],\n        data: [statistics.encomendadas - statistics.recebidas, statistics.recebidas]\n      }]\n    };\n  };\n\n  const options = () => {\n    return {\n      maintainAspectRatio: false,\n      plugins: {\n        datalabels: {\n          color: [main, 'white'],\n          formatter: (value, chart) => {\n            let sum = 0;\n\n            if (value === statistics.encomendadas - statistics.recebidas) {\n              sum = 1 - statistics.recebidas / statistics.encomendadas;\n            }\n\n            sum = sum * 100;\n\n            if (sum > 10) {\n              return `${formatNumber(value)} ( ${sum.toFixed(2)}% )`;\n            }\n\n            return '';\n          }\n        }\n      },\n      onResize: (a, b, c) => {},\n      legend: {\n        position: 'bottom',\n        align: 'start'\n      },\n      animation: {\n        duration: 1000\n      },\n      tooltips: {\n        callbacks: {\n          label: function ({\n            index\n          }, {\n            datasets,\n            labels\n          }) {\n            let label = labels[index];\n            let data = datasets[0].data[index];\n\n            if (label === 'Doses Adquiridas') {\n              data = statistics.encomendadas;\n            }\n\n            return `${label}: ${formatNumber(data)}`;\n          }\n        }\n      }\n    };\n  };\n\n  useEffect(() => {\n    setLoading(false);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    allowOverflow: true,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: !loading ? /*#__PURE__*/_jsxDEV(Pie, {\n        plugins: [ChartDataLabels],\n        height: 350,\n        options: options(),\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this) : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 3\n  }, this);\n}","map":{"version":3,"sources":["/home/pi/Web/mapa-vacinacao-c19/components/graphs/PieRecebidasAdquiridas.jsx"],"names":["useEffect","useRef","useState","Bar","Pie","COLOR_1","Card","ChartDataLabels","formatNumber","PieRecebidasAdquiridas","statistics","colors","loading","setLoading","main","shades","tints","complements","data","canvas","labels","datasets","backgroundColor","borderColor","encomendadas","recebidas","options","maintainAspectRatio","plugins","datalabels","color","formatter","value","chart","sum","toFixed","onResize","a","b","c","legend","position","align","animation","duration","tooltips","callbacks","label","index"],"mappings":"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","sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Pie } from 'react-chartjs-2';\nimport { COLOR_1 } from '../../constants';\nimport { Card } from './../Card';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport { formatNumber } from './../../utils';\nexport function PieRecebidasAdquiridas({ statistics, colors }) {\n\tlet [loading, setLoading] = useState(true);\n\tlet { main, shades, tints, complements } = colors;\n\n\tconst data = (canvas) => {\n\t\treturn {\n\t\t\tlabels: ['Doses Adquiridas', 'Doses Recebidas'],\n\t\t\tdatasets: [\n\t\t\t\t{\n\t\t\t\t\tbackgroundColor: ['transparent', main],\n\t\t\t\t\tborderColor: [main, main],\n\t\t\t\t\tdata: [statistics.encomendadas - statistics.recebidas, statistics.recebidas],\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\t};\n\tconst options = () => {\n\t\treturn {\n\t\t\tmaintainAspectRatio: false,\n\t\t\tplugins: {\n\t\t\t\tdatalabels: {\n\t\t\t\t\tcolor: [main, 'white'],\n\t\t\t\t\tformatter: (value, chart) => {\n\t\t\t\t\t\tlet sum = 0;\n\n\t\t\t\t\t\tif (value === statistics.encomendadas - statistics.recebidas) {\n\t\t\t\t\t\t\tsum = 1 - statistics.recebidas / statistics.encomendadas;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsum = sum * 100;\n\t\t\t\t\t\tif (sum > 10) {\n\t\t\t\t\t\t\treturn `${formatNumber(value)} ( ${sum.toFixed(2)}% )`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tonResize: (a, b, c) => {},\n\t\t\tlegend: {\n\t\t\t\tposition: 'bottom',\n\t\t\t\talign: 'start',\n\t\t\t},\n\n\t\t\tanimation: {\n\t\t\t\tduration: 1000,\n\t\t\t},\n\t\t\ttooltips: {\n\t\t\t\tcallbacks: {\n\t\t\t\t\tlabel: function ({ index }, { datasets, labels }) {\n\t\t\t\t\t\tlet label = labels[index];\n\t\t\t\t\t\tlet data = datasets[0].data[index];\n\t\t\t\t\t\tif (label === 'Doses Adquiridas') {\n\t\t\t\t\t\t\tdata = statistics.encomendadas;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn `${label}: ${formatNumber(data)}`;\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\t};\n\n\tuseEffect(() => {\n\t\tsetLoading(false);\n\t}, []);\n\n\treturn (\n\t\t<Card allowOverflow={true}>\n\t\t\t<div>{!loading ? <Pie plugins={[ChartDataLabels]} height={350} options={options()} data={data} /> : ''}</div>\n\t\t</Card>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}