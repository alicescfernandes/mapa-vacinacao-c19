{"ast":null,"code":"//  import { useEffect, useState } from 'react';\nimport { useEffect, useState } from 'react';\nimport { RESIZE_TRESHOLD } from '../constants';\nexport function useCanvasResizer() {\n  let canvasLoaded = false;\n  let {\n    0: canvasNode,\n    1: setCanvasNode\n  } = useState(false);\n\n  function attatchResizer(canvasNode) {\n    if (canvasLoaded === false && canvasNode !== false) {\n      canvasLoaded = true;\n\n      if (window.innerWidth <= RESIZE_TRESHOLD) {\n        canvasNode.style.width = RESIZE_TRESHOLD + 'px';\n      } else {\n        canvasNode.style.width = 'auto';\n      }\n\n      window.addEventListener('resize', () => {\n        if (window.innerWidth <= RESIZE_TRESHOLD) {\n          canvasNode.style.width = RESIZE_TRESHOLD + 'px';\n        } else {\n          canvasNode.style.width = '100%';\n        }\n      });\n      return () => {\n        window.removeEventListener('resize', () => {\n          if (window.innerWidth <= RESIZE_TRESHOLD) {\n            canvasNode.style.width = RESIZE_TRESHOLD + 'px';\n          } else {\n            canvasNode.style.width = '100%';\n          }\n        });\n      };\n    }\n  }\n\n  useEffect(() => attatchResizer(canvasNode), [canvasNode]);\n  return {\n    canvasNode,\n    setCanvasNode\n  };\n}","map":null,"metadata":{},"sourceType":"module"}