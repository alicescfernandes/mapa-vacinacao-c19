{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { Component, useEffect, useState, createRef } from 'react';\nimport DatePicker from 'react-datepicker';\nimport { format } from 'date-fns';\nimport styles from './DatePickerButton.module.scss';\nimport Arrow from '../assets/arrow.svg';\nimport { pt } from 'date-fns/locale';\nexport function DatePickerButton({\n  minDate,\n  maxDate,\n  onDateSelect,\n  colors\n}) {\n  const {\n    0: startDate,\n    1: setStartDate\n  } = useState(new Date(maxDate));\n  let [first, ...restDate] = format(startDate, \"eeee, dd 'de' LLLL 'de' yyyy\", {\n    locale: pt\n  }).replace('-feira', '').split('');\n  let d = [first.toUpperCase(), ...restDate].join('');\n  useEffect(() => {\n    onDateSelect === null || onDateSelect === void 0 ? void 0 : onDateSelect(new Date(startDate));\n  }, [startDate]);\n  useEffect(() => {\n    setStartDate(new Date(maxDate));\n  }, [maxDate]);\n\n  class ExampleCustomInput extends Component {\n    constructor(props) {\n      super(props);\n    }\n\n    render() {\n      let {\n        value,\n        onClick\n      } = this.props;\n      return /*#__PURE__*/_jsxs(_Fragment, {\n        children: [/*#__PURE__*/_jsx(\"button\", {\n          className: styles.datepicker,\n          disabled: startDate.getTime() <= minDate,\n          onClick: () => {\n            let prevDay = startDate.getTime() - 86400 * 1000;\n            return setStartDate(new Date(prevDay));\n          },\n          children: /*#__PURE__*/_jsx(Arrow, {\n            className: styles.svg\n          })\n        }), /*#__PURE__*/_jsx(\"button\", {\n          style: {\n            width: 285\n          },\n          className: styles.datepicker,\n          onClick: onClick,\n          children: d\n        }), /*#__PURE__*/_jsx(\"button\", {\n          className: styles.datepicker,\n          disabled: startDate.getTime() >= maxDate,\n          onClick: () => {\n            let prevDay = startDate.getTime() + 86400 * 1000;\n            return setStartDate(new Date(prevDay));\n          },\n          children: /*#__PURE__*/_jsx(Arrow, {\n            className: styles.svg\n          })\n        })]\n      });\n    }\n\n  }\n\n  return /*#__PURE__*/_jsx(DatePicker, {\n    minDate: minDate,\n    maxDate: maxDate,\n    selected: startDate,\n    onChange: date => {\n      setStartDate(date);\n    },\n    customInput: /*#__PURE__*/_jsx(ExampleCustomInput, {})\n  });\n}","map":null,"metadata":{},"sourceType":"module"}