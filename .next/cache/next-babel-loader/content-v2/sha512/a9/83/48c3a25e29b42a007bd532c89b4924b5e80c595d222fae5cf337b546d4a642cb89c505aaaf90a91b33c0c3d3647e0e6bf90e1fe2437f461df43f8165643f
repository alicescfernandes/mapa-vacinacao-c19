{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport fetchNode from 'node-fetch';\nexport var formatNumber = function formatNumber(number) {\n  var isDate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var numberFormatter = new Intl.NumberFormat('pt-PT', {\n    minimumIntegerDigits: isDate ? 2 : 1\n  });\n  return numberFormatter.format(number).replace(/,/gm, ' ');\n};\nimport { populacao } from './data/generic.json'; //https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\n\nexport function hexToRgb(hex) {\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result ? {\n    r: parseInt(result[1], 16),\n    g: parseInt(result[2], 16),\n    b: parseInt(result[3], 16)\n  } : null;\n}\nexport function dateWithoutTimezone(unix) {\n  var dt = new Date(unix);\n  return new Date(dt.valueOf() + dt.getTimezoneOffset() * 60 * 1000);\n}\nexport function trackPlausible(req) {\n  var _req$headers;\n\n  if (req === undefined) return;\n  if (req.url !== '/' && req.url !== '/madeira' && !req.url.match('/api/')) return;\n  var host = req.headers.host;\n  var url = req.url;\n  var userAgent = req.headers['user-agent'];\n  var referer = ((_req$headers = req.headers) === null || _req$headers === void 0 ? void 0 : _req$headers.referer) || '';\n  var ip = req.headers['x-forwarded-for'] || req.connection.remoteAddress;\n\n  if (ip.substr(0, 7) == '::ffff:') {\n    ip = ip.substr(7);\n  }\n\n  var headers = {\n    'user-agent': userAgent,\n    'x-forwarded-for': ip,\n    referer: referer\n  };\n  var data = {\n    name: 'pageview',\n    url: 'https://www.vacinacaocovid19.pt' + url,\n    domain: 'vacinacaocovid19.pt',\n    referrer: referer,\n    screen_width: null\n  };\n  if (host.match('localhost')) return;\n  if (req.headers['x-request-self'] === 'true') return;\n  console.log('track', headers, JSON.stringify(data));\n  fetchNode('https://plausible.io/api/event', {\n    method: 'post',\n    headers: headers,\n    body: JSON.stringify(data)\n  }).then(function () {\n    console.log('request', 'post', JSON.stringify(data), headers);\n  })[\"catch\"](function () {\n    console.log('err');\n  });\n}\nexport function downloadPNG(canvasElement, graphName) {\n  var link = document.createElement('a');\n  link.download = 'filename.png';\n  link.href = canvasElement.toDataURL();\n  link.click();\n}\nexport function perHundred(total) {\n  var populacaoTotal = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : populacao.valor;\n  return total / populacaoTotal * 100;\n}\nexport function fetchWithLocalCache(url, options) {\n  var useCache = true;\n\n  var _url$split = url.split('?'),\n      _url$split2 = _slicedToArray(_url$split, 2),\n      path = _url$split2[0],\n      cacheBuster = _url$split2[1];\n\n  var items = JSON.parse(JSON.stringify(localStorage));\n\n  for (var k in items) {\n    var _k$split = k.split('?'),\n        _k$split2 = _slicedToArray(_k$split, 2),\n        lsPath = _k$split2[0],\n        lsCacheBuster = _k$split2[1];\n\n    if (lsPath === path && lsCacheBuster !== cacheBuster) {\n      useCache = false;\n      localStorage.removeItem(k);\n    }\n  }\n\n  if (url.match('ecdc')) useCache = false;\n\n  if (window && localStorage.getItem(url) && useCache === true) {\n    var data = JSON.parse(localStorage.getItem(url));\n    return Promise.resolve(data);\n  } else {\n    console.log('sw', 'fetch', url);\n    return fetch(url, _objectSpread(_objectSpread({}, options), {}, {\n      headers: {\n        'X-Request-Self': true\n      }\n    })).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      localStorage.setItem(url, JSON.stringify(data));\n      return data;\n    });\n  }\n}","map":null,"metadata":{},"sourceType":"module"}