{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport fetchNode from 'node-fetch';\nexport var formatNumber = function formatNumber(number) {\n  var isDate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var numberFormatter = new Intl.NumberFormat('pt-PT', {\n    minimumIntegerDigits: isDate ? 2 : 1\n  });\n  return numberFormatter.format(number).replace(/,/gm, ' ');\n};\nimport { populacao } from './data/generic.json'; //https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\n\nexport function hexToRgb(hex) {\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result ? {\n    r: parseInt(result[1], 16),\n    g: parseInt(result[2], 16),\n    b: parseInt(result[3], 16)\n  } : null;\n}\nexport function dateWithoutTimezone(unix) {\n  var dt = new Date(unix);\n  return new Date(dt.valueOf() + dt.getTimezoneOffset() * 60 * 1000);\n}\nexport function trackPlausible(req) {\n  var _req$headers;\n\n  var host = req.headers.host;\n  var url = req.url;\n  var userAgent = req.headers['user-agent'];\n  var referer = ((_req$headers = req.headers) === null || _req$headers === void 0 ? void 0 : _req$headers.referer) || '';\n  var ip = req.headers['x-forwarded-for'] || req.connection.remoteAddress;\n\n  if (ip.substr(0, 7) == '::ffff:') {\n    ip = ip.substr(7);\n  }\n\n  var headers = {\n    'user-agent': userAgent,\n    'x-forwarded-for': ip,\n    referer: referer\n  };\n  var data = {\n    name: 'pageview',\n    url: 'https://www.vacinacaocovid19.pt' + url,\n    domain: 'vacinacaocovid19.pt',\n    referrer: referer,\n    screen_width: null\n  };\n  if (host.match('localhost')) return;\n  if (req.headers['x-request-self'] === 'true') return;\n  console.log('track', headers, JSON.stringify(data));\n  fetchNode('https://plausible.io/api/event', {\n    method: 'post',\n    headers: headers,\n    body: JSON.stringify(data)\n  }).then(function () {\n    console.log('request', 'post', JSON.stringify(data), headers);\n  })[\"catch\"](function () {\n    console.log('err');\n  });\n}\nexport function downloadPNG(canvasElement, graphName) {\n  var link = document.createElement('a');\n  link.download = 'filename.png';\n  link.href = canvasElement.toDataURL();\n  link.click();\n}\nexport function perHundred(total) {\n  return total / populacao.valor * 100;\n}\nexport function fetchWithLocalCache(url, options) {\n  var useCache = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  if (window && localStorage.getItem(url) && useCache === true) {\n    var data = JSON.parse(localStorage.getItem(url));\n    return Promise.resolve(data);\n  } else {\n    return fetch(url, _objectSpread(_objectSpread({}, options), {}, {\n      headers: {\n        'X-Request-Self': true\n      }\n    })).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      localStorage.setItem(url, JSON.stringify(data));\n      return data;\n    });\n  }\n}","map":{"version":3,"sources":["/home/pi/Web/mapa-vacinacao-c19/utils.js"],"names":["fetchNode","formatNumber","number","isDate","numberFormatter","Intl","NumberFormat","minimumIntegerDigits","format","replace","populacao","hexToRgb","hex","result","exec","r","parseInt","g","b","dateWithoutTimezone","unix","dt","Date","valueOf","getTimezoneOffset","trackPlausible","req","host","headers","url","userAgent","referer","ip","connection","remoteAddress","substr","data","name","domain","referrer","screen_width","match","console","log","JSON","stringify","method","body","then","downloadPNG","canvasElement","graphName","link","document","createElement","download","href","toDataURL","click","perHundred","total","valor","fetchWithLocalCache","options","useCache","window","localStorage","getItem","parse","Promise","resolve","fetch","res","json","setItem"],"mappings":"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","sourcesContent":["import fetchNode from 'node-fetch';\n\nexport const formatNumber = (number, isDate = true) => {\n\tlet numberFormatter = new Intl.NumberFormat('pt-PT', {\n\t\tminimumIntegerDigits: isDate ? 2 : 1,\n\t});\n\treturn numberFormatter.format(number).replace(/,/gm, ' ');\n};\n\nimport { populacao } from './data/generic.json';\n//https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\nexport function hexToRgb(hex) {\n\tvar result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n\treturn result\n\t\t? {\n\t\t\t\tr: parseInt(result[1], 16),\n\t\t\t\tg: parseInt(result[2], 16),\n\t\t\t\tb: parseInt(result[3], 16),\n\t\t  }\n\t\t: null;\n}\n\nexport function dateWithoutTimezone(unix) {\n\tconst dt = new Date(unix);\n\treturn new Date(dt.valueOf() + dt.getTimezoneOffset() * 60 * 1000);\n}\n\nexport function trackPlausible(req) {\n\tlet host = req.headers.host;\n\tlet url = req.url;\n\tlet userAgent = req.headers['user-agent'];\n\tlet referer = req.headers?.referer || '';\n\tvar ip = req.headers['x-forwarded-for'] || req.connection.remoteAddress;\n\tif (ip.substr(0, 7) == '::ffff:') {\n\t\tip = ip.substr(7);\n\t}\n\n\tlet headers = {\n\t\t'user-agent': userAgent,\n\t\t'x-forwarded-for': ip,\n\t\treferer: referer,\n\t};\n\tlet data = { name: 'pageview', url: 'https://www.vacinacaocovid19.pt' + url, domain: 'vacinacaocovid19.pt', referrer: referer, screen_width: null };\n\n\tif (host.match('localhost')) return;\n\tif (req.headers['x-request-self'] === 'true') return;\n\tconsole.log('track', headers, JSON.stringify(data));\n\tfetchNode('https://plausible.io/api/event', {\n\t\tmethod: 'post',\n\t\theaders,\n\t\tbody: JSON.stringify(data),\n\t})\n\t\t.then(() => {\n\t\t\tconsole.log('request', 'post', JSON.stringify(data), headers);\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log('err');\n\t\t});\n}\n\nexport function downloadPNG(canvasElement, graphName) {\n\tvar link = document.createElement('a');\n\tlink.download = 'filename.png';\n\tlink.href = canvasElement.toDataURL();\n\tlink.click();\n}\n\nexport function perHundred(total) {\n\treturn (total / populacao.valor) * 100;\n}\n\nexport function fetchWithLocalCache(url, options, useCache = false) {\n\tif (window && localStorage.getItem(url) && useCache === true) {\n\t\tlet data = JSON.parse(localStorage.getItem(url));\n\t\treturn Promise.resolve(data);\n\t} else {\n\t\treturn fetch(url, {\n\t\t\t...options,\n\t\t\theaders: {\n\t\t\t\t'X-Request-Self': true,\n\t\t\t},\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((data) => {\n\t\t\t\tlocalStorage.setItem(url, JSON.stringify(data));\n\t\t\t\treturn data;\n\t\t\t});\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}