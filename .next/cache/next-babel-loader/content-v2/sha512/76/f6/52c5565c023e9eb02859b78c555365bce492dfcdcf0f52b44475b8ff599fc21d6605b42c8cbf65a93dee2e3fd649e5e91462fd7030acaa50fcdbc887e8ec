{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useEffect, useRef, useState } from 'react';\nimport { HorizontalBar } from 'react-chartjs-2';\nimport { formatNumber } from '../../utils';\nimport { Card } from './../Card';\nimport classNames from 'classnames';\nimport { Col, Row } from 'react-bootstrap';\nimport { RESIZE_TRESHOLD } from '../../constants';\nlet styles = {\n  'labels-container': {\n    display: 'inline-block',\n    position: 'relative',\n    //width: '15%',\n    width: '0%',\n    height: '126px',\n    overflow: 'hidden',\n    verticalAlign: 'top',\n    padding: '15px 0px'\n  },\n  'labels-label': {\n    textAlign: 'right',\n    fontSize: '12px',\n    marginBottom: '0px',\n    lineHeight: 'calc(100px / 3)'\n  },\n  'graph-container': {\n    display: 'inline-block',\n    lineHeight: '40px',\n    position: 'relative',\n    width: '100%',\n    height: 150,\n    overflow: 'hidden'\n  }\n};\n\nfunction CustomBarChart({\n  type,\n  total,\n  colors,\n  data,\n  showHeading\n}) {\n  let {\n    main,\n    shades,\n    tints,\n    complements\n  } = colors;\n\n  const graphData = canvas => {\n    return {\n      //labels: ['Inoculados', 'Óbitos Novos', 'cenas3'],\n      datasets: [{\n        label: 'Inoculados Totais Novos (Acumulado 7 dias)',\n        type: 'horizontalBar',\n        backgroundColor: main,\n        data: [data['TOTAL_VAC_2']],\n        stack: 'stack1'\n      }, {\n        label: 'Casos Novos (Acumulado 7 dias)',\n        type: 'horizontalBar',\n        backgroundColor: tints[1],\n        data: [data['casosNovos7Dias']],\n        fill: false,\n        stack: 'stack2'\n      }, {\n        label: 'Óbitos Novos (Acumulado 7 dias)',\n        type: 'horizontalBar',\n        backgroundColor: shades[1],\n        data: [data['obitosNovos7Dias']],\n        stack: 'stack3'\n      }]\n    };\n  };\n\n  const options = () => {\n    return {\n      maintainAspectRatio: false,\n      plugins: {\n        datalabels: {\n          display: false,\n          color: 'white'\n        }\n      },\n      layout: {\n        padding: -5\n      },\n      legend: {\n        display: false,\n        position: 'top',\n        align: 'start',\n        onHover: function (event, legend) {\n          document.body.classList.add('mouse-pointer');\n        },\n        onLeave: function (event, legend) {\n          document.body.classList.remove('mouse-pointer');\n        }\n      },\n      animation: {\n        duration: 1000\n      },\n      tooltips: {\n        mode: 'index',\n        intersect: false,\n        callbacks: {\n          label: (tooltipItem, data) => {\n            var label = data.datasets[tooltipItem.datasetIndex].label;\n            return label + ': ' + formatNumber(parseInt(tooltipItem.value), false);\n          },\n          title: (tooltipItem, data) => {\n            var label = data.datasets[tooltipItem[0].datasetIndex];\n          }\n        }\n      },\n      scales: {\n        yAxes: [{\n          gridLines: {\n            display: true\n          },\n          ticks: {\n            display: true\n          }\n        }],\n        xAxes: [{\n          stacked: false,\n          gridLines: {\n            display: true\n          },\n          ticks: {\n            beginAtZero: true,\n            display: true,\n            max: 120000,\n            stepSize: 100000 / 5,\n            callback: function (value, index, values) {\n              return formatNumber(value, false);\n            }\n          }\n        }]\n      }\n    };\n  };\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      style: styles['labels-container'],\n      children: [/*#__PURE__*/_jsx(\"p\", {\n        style: styles['labels-label'],\n        children: \"Inoculados\"\n      }), /*#__PURE__*/_jsx(\"p\", {\n        style: styles['labels-label'],\n        children: \"Casos Novos\"\n      }), /*#__PURE__*/_jsx(\"p\", {\n        style: styles['labels-label'],\n        children: \"Casos Recuperados\"\n      })]\n    }), /*#__PURE__*/_jsx(\"div\", {\n      style: styles['graph-container'],\n      children: /*#__PURE__*/_jsx(\"div\", {\n        style: {\n          height: '100%'\n        },\n        children: /*#__PURE__*/_jsx(HorizontalBar, {\n          options: options(),\n          data: graphData\n        })\n      })\n    })]\n  });\n}\n\nexport function BarArs({\n  statistics,\n  colors\n}) {\n  let {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  let {\n    main,\n    shades,\n    tints\n  } = colors;\n  const {\n    0: snsData,\n    1: setSNSData\n  } = useState({});\n  const {\n    0: ars,\n    1: setArs\n  } = useState({});\n  let graphData = {\n    All: {},\n    'ARS Alentejo': {},\n    'ARS Algarve': {},\n    'ARS Centro': {},\n    'ARS Norte': {},\n    'ARS Lisboa e Vale do Tejo': {},\n    Madeira: {},\n    Açores: {}\n  };\n\n  if (!loading) {\n    //map the data\n    for (let key in graphData) {\n      let obj1 = Object.assign(graphData[key], snsData.filter(el => el.REGION.replace('RA ', '') == key)[0]);\n      let obj2 = ars[key];\n      graphData[key] = _objectSpread(_objectSpread({}, obj2), obj1);\n    }\n  }\n\n  useEffect(async () => {\n    let d = await statistics.getTotalSNS();\n    setSNSData(d);\n    let arsD = await statistics.getTotalARS();\n    setArs(arsD);\n    setLoading(false);\n  }, []);\n  return /*#__PURE__*/_jsx(Card, {\n    allowOverflow: true,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      children: loading === false ? /*#__PURE__*/_jsxs(_Fragment, {\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: 'legends',\n          children: /*#__PURE__*/_jsxs(\"p\", {\n            children: [/*#__PURE__*/_jsxs(\"span\", {\n              className: 'legend',\n              children: [/*#__PURE__*/_jsx(\"span\", {\n                style: {\n                  backgroundColor: main\n                },\n                className: 'color_sample'\n              }), \"Inoculados Novos\"]\n            }), /*#__PURE__*/_jsxs(\"span\", {\n              className: 'legend',\n              children: [/*#__PURE__*/_jsx(\"span\", {\n                style: {\n                  backgroundColor: tints[1]\n                },\n                className: 'color_sample'\n              }), \"Casos Novos\"]\n            }), /*#__PURE__*/_jsxs(\"span\", {\n              className: 'legend',\n              children: [/*#__PURE__*/_jsx(\"span\", {\n                style: {\n                  backgroundColor: shades[1]\n                },\n                className: 'color_sample'\n              }), \"\\xD3bitos Novos\"]\n            })]\n          })\n        }), /*#__PURE__*/_jsxs(Row, {\n          children: [/*#__PURE__*/_jsxs(Col, {\n            xs: 12,\n            lg: 6,\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              className: 'subchart-data',\n              children: /*#__PURE__*/_jsx(\"p\", {\n                children: \"Nacional\"\n              })\n            }), /*#__PURE__*/_jsx(CustomBarChart, {\n              colors: colors,\n              showHeading: true,\n              total: 400,\n              data: graphData['All']\n            })]\n          }), /*#__PURE__*/_jsxs(Col, {\n            xs: 12,\n            lg: 6,\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              className: 'subchart-data',\n              children: /*#__PURE__*/_jsx(\"p\", {\n                children: graphData['ARS Algarve'].REGION\n              })\n            }), /*#__PURE__*/_jsx(CustomBarChart, {\n              colors: colors,\n              data: graphData['ARS Algarve'],\n              total: 5000\n            })]\n          })]\n        }), /*#__PURE__*/_jsxs(Row, {\n          children: [/*#__PURE__*/_jsxs(Col, {\n            xs: 12,\n            lg: 6,\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              className: 'subchart-data',\n              children: /*#__PURE__*/_jsx(\"p\", {\n                children: graphData['ARS Alentejo'].REGION\n              })\n            }), /*#__PURE__*/_jsx(CustomBarChart, {\n              colors: colors,\n              showHeading: true,\n              total: 400,\n              data: graphData['ARS Alentejo']\n            })]\n          }), /*#__PURE__*/_jsxs(Col, {\n            xs: 12,\n            lg: 6,\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              className: 'subchart-data',\n              children: /*#__PURE__*/_jsx(\"p\", {\n                children: graphData['ARS Centro'].REGION\n              })\n            }), /*#__PURE__*/_jsx(CustomBarChart, {\n              colors: colors,\n              data: graphData['ARS Centro'],\n              total: 5000\n            })]\n          })]\n        }), /*#__PURE__*/_jsxs(Row, {\n          children: [/*#__PURE__*/_jsxs(Col, {\n            xs: 12,\n            lg: 6,\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              className: 'subchart-data',\n              children: /*#__PURE__*/_jsx(\"p\", {\n                children: graphData['ARS Lisboa e Vale do Tejo'].REGION\n              })\n            }), /*#__PURE__*/_jsx(CustomBarChart, {\n              colors: colors,\n              showHeading: true,\n              total: 400,\n              data: graphData['ARS Lisboa e Vale do Tejo']\n            })]\n          }), /*#__PURE__*/_jsxs(Col, {\n            xs: 12,\n            lg: 6,\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              className: 'subchart-data',\n              children: /*#__PURE__*/_jsx(\"p\", {\n                children: graphData['ARS Norte'].REGION\n              })\n            }), /*#__PURE__*/_jsx(CustomBarChart, {\n              colors: colors,\n              data: graphData['ARS Norte'],\n              total: 5000\n            })]\n          })]\n        }), /*#__PURE__*/_jsx(Row, {\n          children: /*#__PURE__*/_jsxs(Col, {\n            xs: 12,\n            lg: 6,\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              className: 'subchart-data',\n              children: /*#__PURE__*/_jsx(\"p\", {\n                children: graphData['Madeira'].REGION\n              })\n            }), /*#__PURE__*/_jsx(CustomBarChart, {\n              colors: colors,\n              showHeading: true,\n              total: 400,\n              data: graphData['Madeira']\n            })]\n          })\n        })]\n      }) : ''\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"module"}