{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useState } from 'react';\nimport { Col, Row } from 'react-bootstrap';\nimport { Bar, HorizontalBar } from 'react-chartjs-2';\nimport { ACORES_DICOS, RESIZE_TRESHOLD } from '../../constants';\nimport { formatNumber } from '../../utils';\nimport { Card } from '../Card';\nimport { populacao_residente_raa } from './../../data/generic.json';\nimport cardStyles from './../Card.module.scss';\n\nfunction getColor(d) {\n  if (d >= 80) {\n    return '#01ae97';\n  }\n\n  if (d >= 60) {\n    return '#4dc6b6';\n  }\n\n  if (d >= 40) {\n    return '#80d7cb';\n  }\n\n  if (d >= 20) {\n    return '#b3e7e0';\n  }\n\n  if (d >= 0) {\n    return '#e6f7f5';\n  }\n}\n\nexport function RaaMapa({\n  statistics,\n  colors\n}) {\n  let {\n    0: graphData,\n    1: setGraphData\n  } = useState();\n  let {\n    0: loaded,\n    1: setLoaded\n  } = useState(false);\n  let {\n    main,\n    shades\n  } = colors;\n  const grades = [0, 20, 40, 60, 80];\n  const grades_pretty = {\n    0: '0% a 19%',\n    20: '20% a 39%',\n    40: '40% a 59%',\n    60: '60% a 89%',\n    80: '80% a 100%'\n  };\n\n  const renderMap = async map => {\n    const madeira = await fetch('/acores.geojson').then(r => r.json());\n    const madeiraMapa = L.map('map', {\n      zoomSnap: 0.1,\n      doubleClickZoom: false,\n      closePopupOnClick: false,\n      dragging: false,\n      zoomSnap: false,\n      zoomDelta: false,\n      trackResize: false,\n      touchZoom: false,\n      scrollWheelZoom: false,\n      zoomControl: false,\n      draggable: false\n    });\n    let layers = L.geoJSON(madeira, {\n      onEachFeature: (feature, shape) => {\n        let concelho = ACORES_DICOS[feature.properties.DicoShort];\n        let data = graphData.concelhos[concelho];\n        let percentagem_1 = data.dose_1 / populacao_residente_raa[feature.properties.DicoShort].valor * 100;\n        let percentagem_2 = data.dose_2 / populacao_residente_raa[feature.properties.DicoShort].valor * 100;\n        shape.bindPopup(`<p>\n\t\t\t\t\t\t<strong>${feature.properties.ILHA}</strong>\n\t\t\t\t\t\t<br>1ª Dose: ${formatNumber(data.dose_1)} (${percentagem_1.toFixed(2)}%)\n\t\t\t\t\t\t</br>2ª Dose: ${formatNumber(data.dose_2)} (${percentagem_2.toFixed(2)}%)\n\t\t\t\t\t</p>`);\n        shape.on('click', () => {//console.log('click');\n        });\n      },\n      style: function (feature) {\n        let concelho = ACORES_DICOS[feature.properties.DicoShort];\n        let data = graphData.concelhos[concelho];\n        let percentagem = data.dose_2 / populacao_residente_raa[feature.properties.DicoShort].valor * 100;\n        return {\n          fillOpacity: 1,\n          fillColor: getColor(percentagem),\n          lineJoin: 'round',\n          stroke: true,\n          weight: 2,\n          color: '#018b79'\n        };\n      }\n    }).addTo(madeiraMapa);\n    layers.eachLayer(function (layer) {\n      layer.feature.properties.layerID = layer.feature.properties.DICOFRE;\n    });\n    madeiraMapa.fitBounds(layers.getBounds());\n    madeiraMapa.setZoom(7.8); //Create legend\n\n    /* \tvar legend = L.control({ position: 'bottomleft' });\n    \tlegend.onAdd = function (map) {\n    \tvar div = L.DomUtil.create('div', 'info legend');\n    \t\tfor (var i = 0; i < grades.length; i++) {\n    \t\tlet grade = grades[i];\n    \t\tlet grade_pretty = grades_pretty[grade];\n    \t\tdiv.innerHTML += `<p>\n    \t\t\t\t<i style=\"background:${getColor(grades[i] + 1)}\"></i>${grade_pretty}</p>`;\n    \t}\n    \t\treturn div;\n    };\n    \tlegend.addTo(madeiraMapa);\n    */\n\n    /* var snapToPoint = L.control({ position: 'topleft' });\n    \tsnapToPoint.onAdd = function (map) {\n    \tvar div = L.DomUtil.create('div', 'info legend');\n    \tdiv.innerHTML = '<img style=\"width:20px\" src=\"https://cdns.iconmonstr.com/wp-content/assets/preview/2013/240/iconmonstr-location-1.png\">';\n    \t\treturn div;\n    };\n    \tsnapToPoint.addTo(madeiraMapa);\n    \t//hammering the click event\n    snapToPoint._container.onclick = function () {\n    \tmadeiraMapa.fitBounds(layers.getBounds());\n    }; */\n  };\n\n  function renderGraph(el) {\n    const data = (canvas, cenas) => {\n      /* \tif (window.innerWidth <= RESIZE_TRESHOLD) {\n      \tcanvas.parentNode.style.width = RESIZE_TRESHOLD + 'px';\n      } else {\n      \tcanvas.parentNode.style.width = '100%';\n      } */\n\n      /* \twindow.addEventListener('resize', () => {\n      \tif (window.innerWidth <= RESIZE_TRESHOLD) {\n      \t\tcanvas.parentNode.style.width = RESIZE_TRESHOLD + 'px';\n      \t} else {\n      \t\tcanvas.parentNode.style.width = '100%';\n      \t}\n      });\n      */\n      const chartData = {\n        labels: [''],\n        datasets: [{\n          label: 'Total de vacinas administradas - 1ª Dose',\n          borderColor: main,\n          backgroundColor: main,\n          stack: 'stack0',\n          order: 2,\n          data: [el.dose_1]\n        }, {\n          label: 'Total de vacinas administradas - 2ª Dose',\n          borderColor: shades[0],\n          backgroundColor: shades[0],\n          data: [el.dose_2],\n          stack: 'stack0',\n          order: 1\n        }]\n      };\n      return chartData;\n    };\n\n    const options = () => {\n      let dico = ACORES_DICOS[el.chave];\n      let populacao_residente = populacao_residente_raa[dico].valor;\n      return {\n        indexAxis: 'y',\n        plugins: {\n          datalabels: {\n            display: false\n          },\n          legend: {\n            position: 'bottom',\n            align: 'start',\n            display: false\n          }\n        },\n        layout: {\n          padding: {\n            left: -12\n          }\n        },\n        animation: {\n          duration: 1000\n        },\n        tooltips: {\n          mode: 'index',\n          intersect: false,\n          callbacks: {\n            title: (tooltipItem, data) => {\n              return '';\n            }\n          }\n        },\n        scales: {\n          y: {\n            stacked: true,\n            ticks: {\n              beginAtZero: true\n            }\n          },\n          x: {\n            stacked: false,\n            ticks: {\n              beginAtZero: true,\n              stepSize: Math.round(populacao_residente / 5),\n              callback: value => formatNumber(value, false)\n            },\n            max: populacao_residente\n          }\n        }\n      };\n    };\n\n    return /*#__PURE__*/_jsx(Col, {\n      xs: 12,\n      lg: 4,\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: cardStyles.ram_subchart_bar,\n        children: [/*#__PURE__*/_jsx(\"h2\", {\n          className: cardStyles.text_left,\n          children: el.nome\n        }), /*#__PURE__*/_jsx(Bar, {\n          height: window.innerWidth <= RESIZE_TRESHOLD ? 60 : 60,\n          options: options(),\n          data: data\n        })]\n      })\n    });\n  }\n\n  useEffect(async () => {\n    statistics.getArquipelagoData().then(data => {\n      setGraphData(data[data.length - 1]);\n\n      if (loaded === false) {\n        setLoaded(true);\n      }\n\n      if (loaded === true) {\n        renderMap();\n      }\n    });\n  }, [loaded]);\n  return loaded === true ? /*#__PURE__*/_jsxs(Card, {\n    children: [/*#__PURE__*/_jsx(Row, {\n      children: /*#__PURE__*/_jsx(Col, {\n        children: /*#__PURE__*/_jsx(\"div\", {\n          id: \"map\",\n          style: {\n            height: '350px'\n          }\n        })\n      })\n    }), /*#__PURE__*/_jsx(Row, {\n      style: {\n        marginTop: 15\n      },\n      children: Object.values(graphData.concelhos).map(renderGraph)\n    }), /*#__PURE__*/_jsx(Row, {\n      children: /*#__PURE__*/_jsx(\"div\", {\n        className: 'legends',\n        children: /*#__PURE__*/_jsxs(\"p\", {\n          children: [/*#__PURE__*/_jsxs(\"span\", {\n            className: 'legend',\n            children: [/*#__PURE__*/_jsx(\"span\", {\n              style: {\n                backgroundColor: main\n              },\n              className: 'color_sample'\n            }), \"1\\xAA Dose\"]\n          }), /*#__PURE__*/_jsxs(\"span\", {\n            className: 'legend',\n            children: [/*#__PURE__*/_jsx(\"span\", {\n              style: {\n                backgroundColor: shades[1]\n              },\n              className: 'color_sample'\n            }), \"2\\xAA Dose\"]\n          })]\n        })\n      })\n    })]\n  }) : '';\n}","map":null,"metadata":{},"sourceType":"module"}