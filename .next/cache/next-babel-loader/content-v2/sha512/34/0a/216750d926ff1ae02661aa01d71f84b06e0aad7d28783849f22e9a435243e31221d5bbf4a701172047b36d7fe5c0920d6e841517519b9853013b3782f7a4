{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useRef, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Pie } from 'react-chartjs-2';\nimport { COLOR_1 } from '../../constants';\nimport { Card } from './../Card';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport { formatNumber } from './../../utils';\nexport function PieSuscetiveisProporcao({\n  statistics,\n  colors\n}) {\n  let {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  let {\n    values,\n    labels,\n    valuesIn1,\n    valuesIn2\n  } = statistics.getDiariosInoculacoes();\n  let {\n    values: valueCasesDiarios\n  } = statistics.getDiariosCases();\n  let vaccines = statistics.getRaw();\n  let firstItem = valueCasesDiarios.reverse()[0];\n  let infetadosVacinados = vaccines[vaccines.length - 1].Inoculacao2_Ac - firstItem.ConfirmadosAcumulado;\n  let populacao_suscetivel = 10286300 - (vaccines[vaccines.length - 1].Inoculacao2_Ac + firstItem.Activos + firstItem.Recuperados + firstItem.Obitos); //let populacao_suscetivel = 10286300 - (vaccines[vaccines.length - 1].Inoculacao2_Ac + infetadosVacinados + firstItem.Recuperados + firstItem.Obitos);\n\n  let {\n    main,\n    shades,\n    tints,\n    complements\n  } = colors;\n\n  const data = canvas => {\n    return {\n      //labels: ['Vacinados (com as duas doses)', 'Casos Ativos', 'Casos Recuperados', 'Óbitos', 'População suscetível'],\n      labels: ['Vacinados (com as duas doses)', 'Casos Ativos', 'Casos Recuperados', 'Óbitos', 'População suscetível'],\n      datasets: [{\n        backgroundColor: [main, complements[0], complements[2], shades[2], complements[1]],\n        data: [vaccines[vaccines.length - 1].Inoculacao2_Ac, valueCasesDiarios.reverse()[0].Activos, valueCasesDiarios.reverse()[0].Recuperados, valueCasesDiarios.reverse()[0].Obitos, populacao_suscetivel] //data: [vaccines[vaccines.length - 1].Inoculacao2_Ac, valueCasesDiarios.reverse()[0].Activos, valueCasesDiarios.reverse()[0].Recuperados, valueCasesDiarios.reverse()[0].Obitos, populacao_suscetivel],\n\n      }]\n    };\n  };\n\n  const options = () => {\n    return {\n      maintainAspectRatio: false,\n      plugins: {\n        datalabels: {\n          color: 'white',\n          formatter: (value, chart) => {\n            let sum = chart.dataset.data.reduce((prev, curr) => {\n              return prev + curr;\n            }, 0);\n            sum = value / sum * 100;\n\n            if (sum > 10) {\n              return sum.toFixed(2) + '%';\n            }\n\n            return '';\n          }\n        }\n      },\n      onResize: (a, b, c) => {},\n      legend: {\n        position: 'bottom',\n        align: 'start'\n      },\n      animation: {\n        duration: 1000\n      },\n      tooltips: {\n        callbacks: {\n          label: function ({\n            index\n          }, {\n            datasets,\n            labels\n          }) {\n            let label = labels[index];\n            let data = datasets[0].data[index];\n            return `${label}: ${formatNumber(data)}`;\n          }\n        }\n      }\n    };\n  };\n\n  useEffect(() => {\n    if (values.length > 0) {\n      setLoading(false);\n    }\n  }, [values, labels]);\n  return /*#__PURE__*/_jsx(Card, {\n    allowOverflow: true,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      children: !loading ? /*#__PURE__*/_jsx(Pie, {\n        plugins: [ChartDataLabels],\n        height: 350,\n        options: options(),\n        data: data\n      }) : ''\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"module"}