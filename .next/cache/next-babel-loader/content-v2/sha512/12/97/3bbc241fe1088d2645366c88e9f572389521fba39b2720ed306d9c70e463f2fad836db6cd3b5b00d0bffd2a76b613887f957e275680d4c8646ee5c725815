{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useState } from 'react';\nimport { Pie } from 'react-chartjs-2';\nimport { Card } from './../Card';\nimport { formatNumber } from './../../utils';\nexport function PieAdministradasDoses(_ref) {\n  var statistics = _ref.statistics,\n      colors = _ref.colors;\n\n  var _useState = useState(true),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var main = colors.main,\n      shades = colors.shades;\n\n  var data = function data(canvas) {\n    return {\n      labels: ['Vacinação Iniciada', 'Vacinação Completa', 'Doses por administrar'],\n      datasets: [{\n        backgroundColor: [main, shades[0], shades[1]],\n        data: [statistics.iniciada, statistics.completa, statistics.recebidas - statistics.administradas]\n      }]\n    };\n  };\n\n  var options = function options() {\n    return {\n      maintainAspectRatio: false,\n      plugins: {\n        datalabels: {\n          color: 'white',\n          formatter: function formatter(value, chart) {\n            var sum = 0;\n\n            if (value === statistics.primeiras) {\n              sum = statistics.primeiras / statistics.recebidas;\n            }\n\n            if (value === statistics.segundas) {\n              sum = statistics.segundas / statistics.recebidas;\n            }\n\n            if (value === statistics.recebidas - statistics.administradas) {\n              sum = 1 - statistics.administradas / statistics.recebidas;\n            }\n\n            sum = sum * 100;\n\n            if (sum > 10) {\n              return sum.toFixed(2) + '%';\n            }\n\n            return '';\n          }\n        },\n        legend: {\n          position: 'bottom',\n          align: 'start'\n        }\n      },\n      onResize: function onResize(a, b, c) {},\n      animation: {\n        duration: 1000\n      },\n      tooltips: {\n        callbacks: {\n          label: function label(_ref2, _ref3) {\n            var index = _ref2.index;\n            var datasets = _ref3.datasets,\n                labels = _ref3.labels;\n            var label = labels[index];\n            var data = datasets[0].data[index];\n\n            if (label === 'Doses Recebidas') {\n              data = statistics.recebidas;\n            }\n\n            return \"\".concat(label, \": \").concat(formatNumber(data));\n          }\n        }\n      }\n    };\n  };\n\n  useEffect(function () {\n    setLoading(false);\n  }, []);\n  return /*#__PURE__*/_jsx(Card, {\n    allowOverflow: true,\n    is_dynamic_scroll: false,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      children: !loading ? /*#__PURE__*/_jsx(Pie, {\n        plugins: [],\n        height: 350,\n        options: options(),\n        data: data\n      }) : ''\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"module"}