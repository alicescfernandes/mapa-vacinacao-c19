{"ast":null,"code":"//  import { useEffect, useState } from 'react';\nimport { useEffect, useState } from 'react';\nimport { RESIZE_TRESHOLD } from '../constants';\nexport function useCanvasResizer() {\n  var canvasLoaded = false;\n\n  var _useState = useState(false),\n      canvasNode = _useState[0],\n      setCanvasNode = _useState[1];\n\n  function attatchResizer(canvasNode) {\n    if (canvasLoaded === false && canvasNode !== false) {\n      canvasLoaded = true;\n\n      if (window.innerWidth <= RESIZE_TRESHOLD) {\n        canvasNode.style.width = RESIZE_TRESHOLD + 'px';\n      } else {\n        canvasNode.style.width = 'auto';\n      }\n\n      window.addEventListener('resize', function () {\n        if (window.innerWidth <= RESIZE_TRESHOLD) {\n          canvasNode.style.width = RESIZE_TRESHOLD + 'px';\n        } else {\n          canvasNode.style.width = '100%';\n        }\n      });\n      return function () {\n        window.removeEventListener('resize', function () {\n          if (window.innerWidth <= RESIZE_TRESHOLD) {\n            canvasNode.style.width = RESIZE_TRESHOLD + 'px';\n          } else {\n            canvasNode.style.width = '100%';\n          }\n        });\n      };\n    }\n  }\n\n  useEffect(function () {\n    return attatchResizer(canvasNode);\n  }, [canvasNode]);\n  return {\n    canvasNode: canvasNode,\n    setCanvasNode: setCanvasNode\n  };\n}","map":null,"metadata":{},"sourceType":"module"}