{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport _slicedToArray from \"/home/runner/work/mapa-vacinacao-c19/mapa-vacinacao-c19/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useEffect, useState } from 'react'; //import 'chartjs-plugin-annotation';\n\nimport { Bar } from 'react-chartjs-2';\nimport { formatNumber } from '../../utils';\nimport { Card } from './../Card';\nimport { RESIZE_TRESHOLD } from '../../constants';\nimport { useCanvasResizer } from '../../hooks/useCanvasResizer';\nexport function BarVacinasRecebidaDia(_ref) {\n  var statistics = _ref.statistics,\n      colors = _ref.colors;\n\n  var _useState = useState(true),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useState2 = useState({}),\n      graphData = _useState2[0],\n      setGraphData = _useState2[1];\n\n  var _colors = _slicedToArray(colors, 6),\n      foreground = _colors[0],\n      color_1 = _colors[1],\n      color_2 = _colors[2],\n      color_3 = _colors[4];\n  /* let [annotationsToggle, setAnnotationsToggle] = useState({\n  \tdose: true,\n  \tdose2: true,\n  \tdose3: true,\n  }); */\n\n\n  var _useCanvasResizer = useCanvasResizer(),\n      setCanvasNode = _useCanvasResizer.setCanvasNode;\n\n  var data = function data(canvas) {\n    var labels = graphData.labels,\n        mod = graphData.mod,\n        com = graphData.com,\n        az = graphData.az,\n        janss = graphData.janss;\n    setCanvasNode(canvas.parentNode);\n    return {\n      labels: labels.map(function (_ref2) {\n        var from = _ref2.from,\n            to = _ref2.to;\n        var fromDate = new Date(from);\n        var toDate = new Date(to);\n        return \"De \".concat(formatNumber(fromDate.getDate()), \"/\").concat(formatNumber(fromDate.getMonth() + 1), \" a \").concat(formatNumber(toDate.getDate()), \"/\").concat(formatNumber(toDate.getMonth() + 1));\n      }),\n      datasets: [{\n        label: 'Comirnaty (Pfizer/BioNTech)',\n        fill: false,\n        type: 'bar',\n        overlayBars: true,\n        backgroundColor: foreground,\n        data: com,\n        order: 2,\n        display: false,\n        stack: 'stack0'\n      }, {\n        label: 'Moderna',\n        backgroundColor: color_1,\n        borderColor: color_1,\n        data: mod,\n        type: 'bar',\n        overlayBars: true,\n        order: 3,\n        stack: 'stack0'\n      }, {\n        label: 'AstraZeneca',\n        backgroundColor: color_3,\n        borderColor: color_3,\n        type: 'bar',\n        data: az,\n        overlayBars: true,\n        order: 3,\n        stack: 'stack0'\n      }, {\n        label: 'Janssen',\n        backgroundColor: color_2,\n        borderColor: color_2,\n        type: 'bar',\n        data: janss,\n        overlayBars: true,\n        order: 3,\n        stack: 'stack0'\n      }]\n    };\n  };\n\n  var options = function options() {\n    return {\n      plugins: {\n        datalabels: {\n          display: false,\n          color: 'blue'\n        },\n        legend: {\n          position: 'bottom',\n          align: 'start',\n          onHover: function onHover(event, legend) {\n            document.body.classList.add('mouse-pointer');\n          },\n          onLeave: function onLeave(event, legend) {\n            document.body.classList.remove('mouse-pointer');\n          }\n        }\n      },\n      animation: {\n        duration: 1000\n      },\n\n      /* annotation: {\n      \tannotations: [\n      \t\t{\n      \t\t\ttype: 'line',\n      \t\t\tmode: 'horizontal',\n      \t\t\tscaleID: 'y-axis-0',\n      \t\t\tvalue: annotationsToggle.dose ? generic.doses.valor : null,\n      \t\t\tborderColor: '#0A9DD1',\n      \t\t\tborderWidth: 2,\n      \t\t\tborderDash: [5, 5],\n      \t\t\t\tlabel: {\n      \t\t\t\tbackgroundColor: 'rgba(0,0,0,0.0)',\n      \t\t\t\t\tdrawTime: 'afterDatasetsDraw',\n      \t\t\t\t\tfontSize: 13,\n      \t\t\t\t\ttextAlign: 'left',\n      \t\t\t\tfontColor: '#0A9DD1',\n      \t\t\t\tposition: 'left',\n      \t\t\t\txAdjust: 10,\n      \t\t\t\tyAdjust: -10,\n      \t\t\t\tfontSize: '13px',\n      \t\t\t\tfontStyle: 'bold',\n      \t\t\t\t\tenabled: true,\n      \t\t\t\tcontent: `Doses adquiridas - ${generic.doses.legenda} (01/03/2021) `,\n      \t\t\t},\n      \t\t},\n      \t\t{\n      \t\t\ttype: 'line',\n      \t\t\tmode: 'horizontal',\n      \t\t\tscaleID: 'y-axis-0',\n      \t\t\tvalue: annotationsToggle.dose ? 41000000 : null,\n      \t\t\tborderColor: 'transparent',\n      \t\t\tborderWidth: 0,\n      \t\t\t\tlabel: {\n      \t\t\t\tbackgroundColor: 'rgba(0,0,0,0.0)',\n      \t\t\t\t\txAdjust: 0,\n      \t\t\t\tyAdjust: -10,\n      \t\t\t\t\tenabled: false,\n      \t\t\t},\n      \t\t},\n      \t\t{\n      \t\t\ttype: 'line',\n      \t\t\tmode: 'horizontal',\n      \t\t\tscaleID: 'y-axis-0',\n      \t\t\tvalue: annotationsToggle.dose3 ? generic.doses3.valor : null,\n      \t\t\tborderColor: '#D17615',\n      \t\t\tborderWidth: 2,\n      \t\t\tborderDash: [5, 5],\n      \t\t\t\tlabel: {\n      \t\t\t\tbackgroundColor: 'rgba(0,0,0,0.0)',\n      \t\t\t\t\tdrawTime: 'afterDatasetsDraw',\n      \t\t\t\t\tfontSize: 13,\n      \t\t\t\t\ttextAlign: 'left',\n      \t\t\t\tfont: {\n      \t\t\t\t\tstyle: 'bold',\n      \t\t\t\t},\n      \t\t\t\tfontStyle: 'bold',\n      \t\t\t\t\tfontColor: '#D11541',\n      \t\t\t\tfontSize: '13px',\n      \t\t\t\tposition: 'left',\n      \t\t\t\txAdjust: 0,\n      \t\t\t\tyAdjust: -10,\n      \t\t\t\tenabled: true,\n      \t\t\t\tcontent: `Doses adquiridas - ${generic.doses3.legenda} (21/01/2020) `,\n      \t\t\t},\n      \t\t},\n      \t\t{\n      \t\t\ttype: 'line',\n      \t\t\tmode: 'horizontal',\n      \t\t\tscaleID: 'y-axis-0',\n      \t\t\tvalue: annotationsToggle.dose2 ? generic.doses2.valor : null,\n      \t\t\tborderColor: '#D17615',\n      \t\t\tborderWidth: 2,\n      \t\t\tborderDash: [5, 5],\n      \t\t\t\tlabel: {\n      \t\t\t\tbackgroundColor: 'rgba(0,0,0,0.0)',\n      \t\t\t\t\tdrawTime: 'afterDatasetsDraw',\n      \t\t\t\t\tfontSize: 13,\n      \t\t\t\t\ttextAlign: 'left',\n      \t\t\t\tfont: {\n      \t\t\t\t\tstyle: 'bold',\n      \t\t\t\t},\n      \t\t\t\tfontStyle: 'bold',\n      \t\t\t\t\tfontColor: '#D17615',\n      \t\t\t\tfontSize: '13px',\n      \t\t\t\tposition: 'left',\n      \t\t\t\txAdjust: 0,\n      \t\t\t\tyAdjust: -10,\n      \t\t\t\tenabled: true,\n      \t\t\t\tcontent: `Doses adquiridas - ${generic.doses2.legenda} (04/12/2020) `,\n      \t\t\t},\n      \t\t},\n      \t],\n      }, */\n      tooltips: {\n        mode: 'index',\n        intersect: false,\n        callbacks: {\n          label: function label(tooltipItem, data) {\n            var label = data.datasets[tooltipItem.datasetIndex].label;\n            return label + ': ' + (parseInt(tooltipItem.value) ? formatNumber(parseInt(tooltipItem.value), false) : 0);\n          },\n          title: function title(tooltipItem, data) {\n            return tooltipItem[0].label;\n          }\n        }\n      },\n      scales: {\n        y: {\n          stacked: true,\n          ticks: {\n            beginAtZero: true,\n            maxTicksLimit: window.innerWidth <= RESIZE_TRESHOLD ? 8 : 10,\n            minTicksLimit: window.innerWidth <= RESIZE_TRESHOLD ? 8 : 10,\n            callback: function callback(value) {\n              return formatNumber(value, false);\n            }\n          }\n        },\n        x: {\n          stacked: true,\n          ticks: {\n            beginAtZero: true\n          }\n        }\n      }\n    };\n  };\n\n  useEffect(function () {\n    statistics.getReceivedDosesByBrandByWeek().then(function (recievedData) {\n      setGraphData(recievedData);\n      setLoading(false);\n    });\n  }, []);\n  return /*#__PURE__*/_jsx(Card, {\n    allowOverflow: true,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      children: !loading ? /*#__PURE__*/_jsx(Bar, {\n        height: 80,\n        options: options(),\n        data: data\n      }) : ''\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"module"}