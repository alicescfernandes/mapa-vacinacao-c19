{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/pi/Web/mapa-vacinacao-c19/components/graphs/NumeroTotalVacinados.jsx\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createRef, useEffect, useRef, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Card } from './../Card';\nimport { formatNumber, hexToRgb } from '../../utils';\nimport 'chartjs-plugin-annotation';\nimport { CustomCheckbox } from './../CustomCheckbox';\nimport { RESIZE_TRESHOLD } from '../../constants';\nimport styles from './../Card.module.scss';\nexport function NumeroTotalVacinados(_ref) {\n  _s();\n\n  var colors = _ref.colors,\n      statistics = _ref.statistics;\n\n  var _statistics$getDailyD = statistics.getDailyData(),\n      labels = _statistics$getDailyD.labels,\n      values = _statistics$getDailyD.values;\n\n  var _statistics$getVacina = statistics.getVacinadosAcum(),\n      valuesIn1 = _statistics$getVacina.valuesIn1,\n      valuesIn2 = _statistics$getVacina.valuesIn2;\n\n  var casesData = statistics.getCases();\n\n  var _useState = useState({\n    imunidade: true,\n    primeira_fase: true,\n    segunda_fase: true,\n    infetados: true\n  }),\n      toggleStats = _useState[0],\n      setToggleStats = _useState[1];\n\n  var _useState2 = useState(true),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(400),\n      height = _useState3[0],\n      setHeight = _useState3[1];\n\n  var _colors = _slicedToArray(colors, 3),\n      foreground = _colors[0],\n      color_1 = _colors[1],\n      color_2 = _colors[2];\n\n  var commonProps = {\n    fill: true,\n    lineTension: 0.5,\n    lineBorder: 1,\n    borderWidth: 3,\n    borderJoinStyle: 'miter',\n    pointBorderWidth: 1,\n    pointHoverRadius: 3,\n    pointHoverBorderWidth: 2,\n    pointRadius: 1,\n    pointHitRadius: 10\n  };\n  var chartRef = /*#__PURE__*/createRef();\n\n  var data = function data(canvas, cenas) {\n    var ctx = canvas.getContext('2d');\n    var gradient = ctx.createLinearGradient(0, 0, 0, height);\n\n    var _hexToRgb = hexToRgb(foreground),\n        r = _hexToRgb.r,\n        g = _hexToRgb.g,\n        b = _hexToRgb.b;\n\n    try {\n      gradient.addColorStop(0, 'rgba(' + r + ',' + g + ',' + b + ',15%)');\n      gradient.addColorStop(1, 'rgba(' + r + ',' + g + ',' + b + ',0)');\n    } catch (e) {\n      gradient.addColorStop(0, '#d9f3ef');\n      gradient.addColorStop(1, '#ffffff');\n    }\n\n    if (window.innerWidth <= RESIZE_TRESHOLD) {\n      canvas.parentNode.style.width = RESIZE_TRESHOLD + 'px';\n    } else {\n      canvas.parentNode.style.width = '100%';\n    }\n\n    window.addEventListener('resize', function () {\n      if (window.innerWidth <= RESIZE_TRESHOLD) {\n        canvas.parentNode.style.width = RESIZE_TRESHOLD + 'px';\n      } else {\n        canvas.parentNode.style.width = '100%';\n      }\n    });\n    return {\n      labels: labels,\n      datasets: [_objectSpread(_objectSpread({}, commonProps), {}, {\n        label: 'Total vacinas administradas',\n        backgroundColor: gradient,\n        borderColor: foreground,\n        pointBorderColor: foreground,\n        pointBackgroundColor: foreground,\n        pointHoverBackgroundColor: foreground,\n        pointHoverBorderColor: foreground,\n        data: values\n      }), _objectSpread(_objectSpread({}, commonProps), {}, {\n        label: 'Total de vacinas administradas - 1ª Dose',\n        fill: false,\n        borderColor: color_1,\n        pointBorderColor: color_1,\n        pointBackgroundColor: color_1,\n        pointHoverBackgroundColor: color_1,\n        pointHoverBorderColor: color_1,\n        data: valuesIn1\n      }), _objectSpread(_objectSpread({}, commonProps), {}, {\n        label: 'Total de vacinas administradas - 2ª Dose',\n        fill: false,\n        borderColor: color_2,\n        pointBorderColor: color_2,\n        pointBackgroundColor: color_2,\n        pointHoverBackgroundColor: color_2,\n        pointHoverBorderColor: color_2,\n        data: valuesIn2\n      }), _objectSpread(_objectSpread({}, commonProps), {}, {\n        label: 'Casos Confirmados',\n        backgroundColor: '#D11541',\n        borderColor: '#D11541',\n        fill: false,\n        pointBorderColor: '#D11541',\n        pointBackgroundColor: '#D11541',\n        pointHoverBackgroundColor: '#D11541',\n        pointHoverBorderColor: '#D11541',\n        hidden: toggleStats.infetados === false,\n        data: casesData.map(function (el) {\n          return el.ConfirmadosAcumulado;\n        })\n      })]\n    };\n  };\n\n  var options = function options() {\n    return {\n      plugins: {\n        datalabels: {\n          display: false\n        }\n      },\n      legend: {\n        position: 'bottom',\n        align: 'start'\n      },\n      animation: {\n        duration: 1000\n      },\n      annotation: {\n        annotations: [{\n          type: 'line',\n          mode: 'horizontal',\n          scaleID: 'y-axis-0',\n          value: toggleStats !== null && toggleStats !== void 0 && toggleStats.segunda_fase ? 1800000 : null,\n          borderColor: '#0A9DD1',\n          borderWidth: 2,\n          borderDash: [5, 5],\n          label: {\n            backgroundColor: 'rgba(0,0,0,0.0)',\n            drawTime: 'afterDatasetsDraw',\n            textAlign: 'left',\n            fontColor: '#0A9DD1',\n            position: 'left',\n            xAdjust: 10,\n            yAdjust: -10,\n            fontSize: '13px',\n            enabled: true,\n            content: '2ª Fase - Abril (1.8 milhões de pessoas)'\n          }\n        }, {\n          type: 'line',\n          mode: 'horizontal',\n          scaleID: 'y-axis-0',\n          value: toggleStats !== null && toggleStats !== void 0 && toggleStats.segunda_fase ? 1900000 : null,\n          borderColor: 'transparent',\n          label: {\n            enabled: false\n          }\n        }, {\n          type: 'line',\n          mode: 'horizontal',\n          scaleID: 'y-axis-0',\n          value: toggleStats !== null && toggleStats !== void 0 && toggleStats.primeira_fase ? 1200000 : null,\n          borderColor: 'transparent',\n          label: {\n            enabled: false\n          }\n        }, {\n          type: 'line',\n          mode: 'horizontal',\n          scaleID: 'y-axis-0',\n          value: toggleStats !== null && toggleStats !== void 0 && toggleStats.primeira_fase ? 950000 : null,\n          borderColor: '#0A9DD1',\n          borderWidth: 2,\n          borderDash: [5, 5],\n          label: {\n            backgroundColor: 'rgba(0,0,0,0.0)',\n            drawTime: 'afterDatasetsDraw',\n            textAlign: 'left',\n            fontColor: '#0A9DD1',\n            position: 'left',\n            xAdjust: 5,\n            yAdjust: -10,\n            fontSize: '13px',\n            enabled: true,\n            content: '1ª Fase - Dezembro (950 mil pessoas)'\n          }\n        }, {\n          type: 'line',\n          mode: 'horizontal',\n          scaleID: 'y-axis-0',\n          value: toggleStats !== null && toggleStats !== void 0 && toggleStats.imunidade ? 10286300 * 0.7 : null,\n          borderColor: '#D17615',\n          borderWidth: 2,\n          borderDash: [5, 5],\n          label: {\n            backgroundColor: 'rgba(0,0,0,0.0)',\n            drawTime: 'afterDatasetsDraw',\n            textAlign: 'left',\n            fontColor: '#D17615',\n            fontSize: '13px',\n            position: 'left',\n            xAdjust: 5,\n            yAdjust: -10,\n            enabled: true,\n            content: 'Imunidade de Grupo (cerca de 7.2 milhões de pessoas)'\n          }\n        }]\n      },\n      tooltips: {\n        mode: 'index',\n        intersect: false,\n        callbacks: {\n          label: function label(tooltipItem, data) {\n            var label = data.datasets[tooltipItem.datasetIndex].label;\n            return label + ': ' + formatNumber(tooltipItem.value);\n          },\n          title: function title(tooltipItem, data) {\n            var label = data.datasets[tooltipItem[0].datasetIndex];\n            return 'Dia ' + tooltipItem[0].label;\n          }\n        }\n      },\n      scales: {\n        yAxes: [{\n          scaleLabel: {\n            display: true\n          },\n          gridLines: {\n            drawBorder: false\n          },\n          ticks: {\n            beginAtZero: false,\n            maxTicksLimit: window.innerWidth <= RESIZE_TRESHOLD ? 8 : 10,\n            minTicksLimit: window.innerWidth <= RESIZE_TRESHOLD ? 8 : 10,\n            //max: 10000000,\n            callback: function callback(value) {\n              return formatNumber(value, false);\n            }\n          }\n        }],\n        xAxes: [{\n          ticks: {\n            maxTicksLimit: window.innerWidth <= RESIZE_TRESHOLD ? 30 : 60,\n            minTicksLimit: window.innerWidth <= RESIZE_TRESHOLD ? 30 : 60\n          }\n        }]\n      }\n    };\n  };\n\n  useEffect(function () {}, [chartRef.current]);\n  useEffect(function () {\n    if (values.length > 0) {\n      setLoading(false);\n    }\n  }, [values, labels, height]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    allowOverflow: true,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.card_scrollable,\n      style: {\n        textAlign: 'left'\n      },\n      children: [/*#__PURE__*/_jsxDEV(CustomCheckbox, {\n        checked: toggleStats.primeira_fase,\n        label: '1ª Fase',\n        onChange: function onChange(checked) {\n          setToggleStats(_objectSpread(_objectSpread({}, toggleStats), {}, {\n            primeira_fase: checked\n          }));\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(CustomCheckbox, {\n        checked: toggleStats.primeira_fase,\n        label: '2ª Fase',\n        onChange: function onChange(checked) {\n          setToggleStats(_objectSpread(_objectSpread({}, toggleStats), {}, {\n            segunda_fase: checked\n          }));\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(CustomCheckbox, {\n        checked: toggleStats.imunidade,\n        label: 'Imunidade de Grupo',\n        onChange: function onChange(checked) {\n          setToggleStats(_objectSpread(_objectSpread({}, toggleStats), {}, {\n            imunidade: checked\n          }));\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(CustomCheckbox, {\n        checked: toggleStats.infetados,\n        label: 'Casos Confirmados',\n        onChange: function onChange(checked) {\n          setToggleStats(_objectSpread(_objectSpread({}, toggleStats), {}, {\n            infetados: checked\n          }));\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", !loading ? /*#__PURE__*/_jsxDEV(Line, {\n        height: 100,\n        ref: chartRef,\n        options: options(),\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 22\n      }, this) : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 280,\n    columnNumber: 3\n  }, this);\n}\n\n_s(NumeroTotalVacinados, \"GP+LFAwrJdQ2B7LAXDQnfE7RbZY=\");\n\n_c = NumeroTotalVacinados;\n\nvar _c;\n\n$RefreshReg$(_c, \"NumeroTotalVacinados\");","map":{"version":3,"sources":["/home/pi/Web/mapa-vacinacao-c19/components/graphs/NumeroTotalVacinados.jsx"],"names":["createRef","useEffect","useRef","useState","Line","Card","formatNumber","hexToRgb","CustomCheckbox","RESIZE_TRESHOLD","styles","NumeroTotalVacinados","colors","statistics","getDailyData","labels","values","getVacinadosAcum","valuesIn1","valuesIn2","casesData","getCases","imunidade","primeira_fase","segunda_fase","infetados","toggleStats","setToggleStats","loading","setLoading","height","setHeight","foreground","color_1","color_2","commonProps","fill","lineTension","lineBorder","borderWidth","borderJoinStyle","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointRadius","pointHitRadius","chartRef","data","canvas","cenas","ctx","getContext","gradient","createLinearGradient","r","g","b","addColorStop","e","window","innerWidth","parentNode","style","width","addEventListener","datasets","label","backgroundColor","borderColor","pointBorderColor","pointBackgroundColor","pointHoverBackgroundColor","pointHoverBorderColor","hidden","map","el","ConfirmadosAcumulado","options","plugins","datalabels","display","legend","position","align","animation","duration","annotation","annotations","type","mode","scaleID","value","borderDash","drawTime","textAlign","fontColor","xAdjust","yAdjust","fontSize","enabled","content","tooltips","intersect","callbacks","tooltipItem","datasetIndex","title","scales","yAxes","scaleLabel","gridLines","drawBorder","ticks","beginAtZero","maxTicksLimit","minTicksLimit","callback","xAxes","current","length","card_scrollable","checked"],"mappings":"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","sourcesContent":["import { createRef, useEffect, useRef, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Card } from './../Card';\nimport { formatNumber, hexToRgb } from '../../utils';\nimport 'chartjs-plugin-annotation';\nimport { CustomCheckbox } from './../CustomCheckbox';\nimport { RESIZE_TRESHOLD } from '../../constants';\nimport styles from './../Card.module.scss';\n\nexport function NumeroTotalVacinados({ colors, statistics }) {\n\tlet { labels, values } = statistics.getDailyData();\n\tlet { valuesIn1, valuesIn2 } = statistics.getVacinadosAcum();\n\tlet casesData = statistics.getCases();\n\tlet [toggleStats, setToggleStats] = useState({\n\t\timunidade: true,\n\t\tprimeira_fase: true,\n\t\tsegunda_fase: true,\n\t\tinfetados: true,\n\t});\n\n\tlet [loading, setLoading] = useState(true);\n\tlet [height, setHeight] = useState(400);\n\tlet [foreground, color_1, color_2] = colors;\n\tlet commonProps = {\n\t\tfill: true,\n\t\tlineTension: 0.5,\n\t\tlineBorder: 1,\n\t\tborderWidth: 3,\n\t\tborderJoinStyle: 'miter',\n\t\tpointBorderWidth: 1,\n\t\tpointHoverRadius: 3,\n\t\tpointHoverBorderWidth: 2,\n\t\tpointRadius: 1,\n\t\tpointHitRadius: 10,\n\t};\n\tlet chartRef = createRef();\n\tconst data = (canvas, cenas) => {\n\t\tconst ctx = canvas.getContext('2d');\n\t\tconst gradient = ctx.createLinearGradient(0, 0, 0, height);\n\t\tlet { r, g, b } = hexToRgb(foreground);\n\t\ttry {\n\t\t\tgradient.addColorStop(0, 'rgba(' + r + ',' + g + ',' + b + ',15%)');\n\t\t\tgradient.addColorStop(1, 'rgba(' + r + ',' + g + ',' + b + ',0)');\n\t\t} catch (e) {\n\t\t\tgradient.addColorStop(0, '#d9f3ef');\n\t\t\tgradient.addColorStop(1, '#ffffff');\n\t\t}\n\n\t\tif (window.innerWidth <= RESIZE_TRESHOLD) {\n\t\t\tcanvas.parentNode.style.width = RESIZE_TRESHOLD + 'px';\n\t\t} else {\n\t\t\tcanvas.parentNode.style.width = '100%';\n\t\t}\n\n\t\twindow.addEventListener('resize', () => {\n\t\t\tif (window.innerWidth <= RESIZE_TRESHOLD) {\n\t\t\t\tcanvas.parentNode.style.width = RESIZE_TRESHOLD + 'px';\n\t\t\t} else {\n\t\t\t\tcanvas.parentNode.style.width = '100%';\n\t\t\t}\n\t\t});\n\n\t\treturn {\n\t\t\tlabels: labels,\n\t\t\tdatasets: [\n\t\t\t\t{\n\t\t\t\t\t...commonProps,\n\t\t\t\t\tlabel: 'Total vacinas administradas',\n\t\t\t\t\tbackgroundColor: gradient,\n\t\t\t\t\tborderColor: foreground,\n\t\t\t\t\tpointBorderColor: foreground,\n\t\t\t\t\tpointBackgroundColor: foreground,\n\t\t\t\t\tpointHoverBackgroundColor: foreground,\n\t\t\t\t\tpointHoverBorderColor: foreground,\n\t\t\t\t\tdata: values,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t...commonProps,\n\t\t\t\t\tlabel: 'Total de vacinas administradas - 1ª Dose',\n\t\t\t\t\tfill: false,\n\t\t\t\t\tborderColor: color_1,\n\t\t\t\t\tpointBorderColor: color_1,\n\t\t\t\t\tpointBackgroundColor: color_1,\n\t\t\t\t\tpointHoverBackgroundColor: color_1,\n\t\t\t\t\tpointHoverBorderColor: color_1,\n\t\t\t\t\tdata: valuesIn1,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t...commonProps,\n\t\t\t\t\tlabel: 'Total de vacinas administradas - 2ª Dose',\n\t\t\t\t\tfill: false,\n\t\t\t\t\tborderColor: color_2,\n\t\t\t\t\tpointBorderColor: color_2,\n\t\t\t\t\tpointBackgroundColor: color_2,\n\t\t\t\t\tpointHoverBackgroundColor: color_2,\n\t\t\t\t\tpointHoverBorderColor: color_2,\n\t\t\t\t\tdata: valuesIn2,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t...commonProps,\n\t\t\t\t\tlabel: 'Casos Confirmados',\n\t\t\t\t\tbackgroundColor: '#D11541',\n\t\t\t\t\tborderColor: '#D11541',\n\t\t\t\t\tfill: false,\n\t\t\t\t\tpointBorderColor: '#D11541',\n\t\t\t\t\tpointBackgroundColor: '#D11541',\n\t\t\t\t\tpointHoverBackgroundColor: '#D11541',\n\t\t\t\t\tpointHoverBorderColor: '#D11541',\n\t\t\t\t\thidden: toggleStats.infetados === false,\n\t\t\t\t\tdata: casesData.map((el) => el.ConfirmadosAcumulado),\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\t};\n\tconst options = () => {\n\t\treturn {\n\t\t\tplugins: {\n\t\t\t\tdatalabels: {\n\t\t\t\t\tdisplay: false,\n\t\t\t\t},\n\t\t\t},\n\t\t\tlegend: {\n\t\t\t\tposition: 'bottom',\n\t\t\t\talign: 'start',\n\t\t\t},\n\n\t\t\tanimation: {\n\t\t\t\tduration: 1000,\n\t\t\t},\n\t\t\tannotation: {\n\t\t\t\tannotations: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'line',\n\t\t\t\t\t\tmode: 'horizontal',\n\t\t\t\t\t\tscaleID: 'y-axis-0',\n\t\t\t\t\t\tvalue: toggleStats?.segunda_fase ? 1800000 : null,\n\t\t\t\t\t\tborderColor: '#0A9DD1',\n\t\t\t\t\t\tborderWidth: 2,\n\t\t\t\t\t\tborderDash: [5, 5],\n\n\t\t\t\t\t\tlabel: {\n\t\t\t\t\t\t\tbackgroundColor: 'rgba(0,0,0,0.0)',\n\n\t\t\t\t\t\t\tdrawTime: 'afterDatasetsDraw',\n\n\t\t\t\t\t\t\ttextAlign: 'left',\n\t\t\t\t\t\t\tfontColor: '#0A9DD1',\n\t\t\t\t\t\t\tposition: 'left',\n\t\t\t\t\t\t\txAdjust: 10,\n\t\t\t\t\t\t\tyAdjust: -10,\n\t\t\t\t\t\t\tfontSize: '13px',\n\t\t\t\t\t\t\tenabled: true,\n\t\t\t\t\t\t\tcontent: '2ª Fase - Abril (1.8 milhões de pessoas)',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'line',\n\t\t\t\t\t\tmode: 'horizontal',\n\t\t\t\t\t\tscaleID: 'y-axis-0',\n\t\t\t\t\t\tvalue: toggleStats?.segunda_fase ? 1900000 : null,\n\t\t\t\t\t\tborderColor: 'transparent',\n\t\t\t\t\t\tlabel: {\n\t\t\t\t\t\t\tenabled: false,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'line',\n\t\t\t\t\t\tmode: 'horizontal',\n\t\t\t\t\t\tscaleID: 'y-axis-0',\n\t\t\t\t\t\tvalue: toggleStats?.primeira_fase ? 1200000 : null,\n\t\t\t\t\t\tborderColor: 'transparent',\n\t\t\t\t\t\tlabel: {\n\t\t\t\t\t\t\tenabled: false,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'line',\n\t\t\t\t\t\tmode: 'horizontal',\n\t\t\t\t\t\tscaleID: 'y-axis-0',\n\t\t\t\t\t\tvalue: toggleStats?.primeira_fase ? 950000 : null,\n\t\t\t\t\t\tborderColor: '#0A9DD1',\n\t\t\t\t\t\tborderWidth: 2,\n\t\t\t\t\t\tborderDash: [5, 5],\n\n\t\t\t\t\t\tlabel: {\n\t\t\t\t\t\t\tbackgroundColor: 'rgba(0,0,0,0.0)',\n\n\t\t\t\t\t\t\tdrawTime: 'afterDatasetsDraw',\n\n\t\t\t\t\t\t\ttextAlign: 'left',\n\t\t\t\t\t\t\tfontColor: '#0A9DD1',\n\t\t\t\t\t\t\tposition: 'left',\n\t\t\t\t\t\t\txAdjust: 5,\n\t\t\t\t\t\t\tyAdjust: -10,\n\t\t\t\t\t\t\tfontSize: '13px',\n\n\t\t\t\t\t\t\tenabled: true,\n\t\t\t\t\t\t\tcontent: '1ª Fase - Dezembro (950 mil pessoas)',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'line',\n\t\t\t\t\t\tmode: 'horizontal',\n\t\t\t\t\t\tscaleID: 'y-axis-0',\n\t\t\t\t\t\tvalue: toggleStats?.imunidade ? 10286300 * 0.7 : null,\n\t\t\t\t\t\tborderColor: '#D17615',\n\t\t\t\t\t\tborderWidth: 2,\n\t\t\t\t\t\tborderDash: [5, 5],\n\n\t\t\t\t\t\tlabel: {\n\t\t\t\t\t\t\tbackgroundColor: 'rgba(0,0,0,0.0)',\n\n\t\t\t\t\t\t\tdrawTime: 'afterDatasetsDraw',\n\n\t\t\t\t\t\t\ttextAlign: 'left',\n\n\t\t\t\t\t\t\tfontColor: '#D17615',\n\t\t\t\t\t\t\tfontSize: '13px',\n\t\t\t\t\t\t\tposition: 'left',\n\t\t\t\t\t\t\txAdjust: 5,\n\t\t\t\t\t\t\tyAdjust: -10,\n\t\t\t\t\t\t\tenabled: true,\n\t\t\t\t\t\t\tcontent: 'Imunidade de Grupo (cerca de 7.2 milhões de pessoas)',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\ttooltips: {\n\t\t\t\tmode: 'index',\n\t\t\t\tintersect: false,\n\t\t\t\tcallbacks: {\n\t\t\t\t\tlabel: (tooltipItem, data) => {\n\t\t\t\t\t\tvar label = data.datasets[tooltipItem.datasetIndex].label;\n\t\t\t\t\t\treturn label + ': ' + formatNumber(tooltipItem.value);\n\t\t\t\t\t},\n\t\t\t\t\ttitle: (tooltipItem, data) => {\n\t\t\t\t\t\tvar label = data.datasets[tooltipItem[0].datasetIndex];\n\t\t\t\t\t\treturn 'Dia ' + tooltipItem[0].label;\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tscales: {\n\t\t\t\tyAxes: [\n\t\t\t\t\t{\n\t\t\t\t\t\tscaleLabel: {\n\t\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tgridLines: {\n\t\t\t\t\t\t\tdrawBorder: false,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tticks: {\n\t\t\t\t\t\t\tbeginAtZero: false,\n\t\t\t\t\t\t\tmaxTicksLimit: window.innerWidth <= RESIZE_TRESHOLD ? 8 : 10,\n\t\t\t\t\t\t\tminTicksLimit: window.innerWidth <= RESIZE_TRESHOLD ? 8 : 10,\n\t\t\t\t\t\t\t//max: 10000000,\n\t\t\t\t\t\t\tcallback: (value) => formatNumber(value, false),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\txAxes: [\n\t\t\t\t\t{\n\t\t\t\t\t\tticks: {\n\t\t\t\t\t\t\tmaxTicksLimit: window.innerWidth <= RESIZE_TRESHOLD ? 30 : 60,\n\t\t\t\t\t\t\tminTicksLimit: window.innerWidth <= RESIZE_TRESHOLD ? 30 : 60,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t};\n\t};\n\tuseEffect(() => {}, [chartRef.current]);\n\n\tuseEffect(() => {\n\t\tif (values.length > 0) {\n\t\t\tsetLoading(false);\n\t\t}\n\t}, [values, labels, height]);\n\n\treturn (\n\t\t<Card allowOverflow={true}>\n\t\t\t<div className={styles.card_scrollable} style={{ textAlign: 'left' }}>\n\t\t\t\t<CustomCheckbox\n\t\t\t\t\tchecked={toggleStats.primeira_fase}\n\t\t\t\t\tlabel={'1ª Fase'}\n\t\t\t\t\tonChange={(checked) => {\n\t\t\t\t\t\tsetToggleStats({\n\t\t\t\t\t\t\t...toggleStats,\n\t\t\t\t\t\t\tprimeira_fase: checked,\n\t\t\t\t\t\t});\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<CustomCheckbox\n\t\t\t\t\tchecked={toggleStats.primeira_fase}\n\t\t\t\t\tlabel={'2ª Fase'}\n\t\t\t\t\tonChange={(checked) => {\n\t\t\t\t\t\tsetToggleStats({\n\t\t\t\t\t\t\t...toggleStats,\n\t\t\t\t\t\t\tsegunda_fase: checked,\n\t\t\t\t\t\t});\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<CustomCheckbox\n\t\t\t\t\tchecked={toggleStats.imunidade}\n\t\t\t\t\tlabel={'Imunidade de Grupo'}\n\t\t\t\t\tonChange={(checked) => {\n\t\t\t\t\t\tsetToggleStats({\n\t\t\t\t\t\t\t...toggleStats,\n\t\t\t\t\t\t\timunidade: checked,\n\t\t\t\t\t\t});\n\t\t\t\t\t}}\n\t\t\t\t/>\n\n\t\t\t\t<CustomCheckbox\n\t\t\t\t\tchecked={toggleStats.infetados}\n\t\t\t\t\tlabel={'Casos Confirmados'}\n\t\t\t\t\tonChange={(checked) => {\n\t\t\t\t\t\tsetToggleStats({\n\t\t\t\t\t\t\t...toggleStats,\n\t\t\t\t\t\t\tinfetados: checked,\n\t\t\t\t\t\t});\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div> {!loading ? <Line height={100} ref={chartRef} options={options()} data={data} /> : ''}</div>\n\t\t</Card>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}