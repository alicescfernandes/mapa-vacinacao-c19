{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useEffect, useRef, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { lineChartCommon, RESIZE_TRESHOLD } from '../../constants';\nimport { formatNumber } from '../../utils';\nimport { Card } from './../Card';\nimport classNames from 'classnames';\nimport { CustomCheckbox } from '../CustomCheckbox';\nimport styles from './../Card.module.scss';\nexport function LineVacinadosEu(_ref) {\n  var statistics = _ref.statistics,\n      colors = _ref.colors;\n\n  var _statistics$getOwid = statistics.getOwid(),\n      labels = _statistics$getOwid.labels,\n      pt = _statistics$getOwid.pt,\n      eu = _statistics$getOwid.eu;\n\n  var main = colors.main,\n      shades = colors.shades,\n      tints = colors.tints,\n      complements = colors.complements;\n\n  var _useState = useState(0),\n      activeDose = _useState[0],\n      setActiveDose = _useState[1];\n\n  var doses_map = {\n    normal: ['total_vaccinations', 'people_vaccinated', 'people_fully_vaccinated'],\n    per_hundred: ['total_vaccinations_per_hundred', 'people_vaccinated_per_hundred', 'people_fully_vaccinated_per_hundred']\n  };\n\n  var _useState2 = useState(400),\n      height = _useState2[0],\n      setHeight = _useState2[1];\n\n  var _useState3 = useState({\n    perHundred: true\n  }),\n      toggleStats = _useState3[0],\n      setToggleStats = _useState3[1];\n\n  var canvasRef = useRef(null);\n\n  var data = function data(canvas) {\n    var ctx = canvas.getContext('2d');\n\n    if (window.innerWidth <= RESIZE_TRESHOLD) {\n      canvas.parentNode.style.width = RESIZE_TRESHOLD + 'px';\n    } else {\n      canvas.parentNode.style.width = '100%';\n    }\n\n    window.addEventListener('resize', function () {\n      if (window.innerWidth <= RESIZE_TRESHOLD) {\n        canvas.parentNode.style.width = RESIZE_TRESHOLD + 'px';\n      } else {\n        canvas.parentNode.style.width = '100%';\n      }\n    });\n    return {\n      labels: labels,\n      datasets: [_objectSpread(_objectSpread({}, lineChartCommon), {}, {\n        label: 'Portugal',\n        backgroundColor: main,\n        borderColor: main,\n        type: 'line',\n        fill: false,\n        data: pt.map(function (el) {\n          if (toggleStats.perHundred) {\n            return el[doses_map.per_hundred[activeDose]];\n          }\n\n          return el[doses_map.normal[activeDose]];\n        })\n      }), _objectSpread(_objectSpread({}, lineChartCommon), {}, {\n        label: 'UniÃ£o Europeia',\n        type: 'line',\n        fill: false,\n        backgroundColor: complements[2],\n        borderColor: complements[2],\n        data: eu.map(function (el) {\n          if (toggleStats.perHundred) {\n            return el[doses_map.per_hundred[activeDose]];\n          }\n\n          return el[doses_map.normal[activeDose]];\n        })\n      })]\n    };\n  };\n\n  var numberFormatter = new Intl.NumberFormat();\n\n  var options = function options() {\n    return {\n      plugins: {\n        datalabels: {\n          display: false\n        }\n      },\n      legend: {\n        position: 'bottom',\n        align: 'start'\n      },\n      animation: {\n        duration: 1000\n      },\n      tooltips: {\n        mode: 'index',\n        intersect: true,\n        callbacks: {\n          title: function title(tooltipItem, data) {\n            var label = data.datasets[tooltipItem[0].datasetIndex];\n            return 'Dia ' + tooltipItem[0].label;\n          }\n        }\n      },\n      scales: {\n        yAxes: [{\n          ticks: {\n            beginAtZero: false,\n            maxTicksLimit: window.innerWidth <= RESIZE_TRESHOLD ? 8 : 10,\n            minTicksLimit: window.innerWidth <= RESIZE_TRESHOLD ? 8 : 10,\n            callback: function callback(value) {\n              return formatNumber(value, false);\n            }\n          }\n        }],\n        xAxes: [{\n          ticks: {\n            maxTicksLimit: window.innerWidth <= RESIZE_TRESHOLD ? 30 : 60,\n            minTicksLimit: window.innerWidth <= RESIZE_TRESHOLD ? 30 : 60\n          }\n        }]\n      }\n    };\n  };\n\n  return /*#__PURE__*/_jsxs(Card, {\n    textLeft: true,\n    allowOverflow: true,\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: [styles.card_scrollable].join(' '),\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: 'toggle_buttons',\n        children: /*#__PURE__*/_jsxs(\"p\", {\n          children: [/*#__PURE__*/_jsx(\"button\", {\n            className: classNames('toggle_button', {\n              active: activeDose === 0\n            }),\n            onClick: function onClick() {\n              setActiveDose(0);\n            },\n            children: \"Doses Totais\"\n          }), /*#__PURE__*/_jsx(\"button\", {\n            className: classNames('toggle_button', {\n              active: activeDose === 1\n            }),\n            onClick: function onClick() {\n              setActiveDose(1);\n            },\n            children: \"1\\xAA Dose\"\n          }), /*#__PURE__*/_jsx(\"button\", {\n            className: classNames('toggle_button', {\n              active: activeDose === 2\n            }),\n            onClick: function onClick() {\n              setActiveDose(2);\n            },\n            children: \"2\\xAA Dose\"\n          })]\n        })\n      }), /*#__PURE__*/_jsx(CustomCheckbox, {\n        styles: {\n          marginLeft: '50px'\n        },\n        checked: toggleStats.perHundred,\n        label: 'Por cada 100 habitantes',\n        onChange: function onChange(checked) {\n          setToggleStats({\n            perHundred: checked\n          });\n        }\n      })]\n    }), /*#__PURE__*/_jsx(\"div\", {\n      children: /*#__PURE__*/_jsx(Line, {\n        height: 80,\n        ref: canvasRef,\n        options: options(),\n        data: data\n      })\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}