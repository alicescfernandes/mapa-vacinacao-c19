{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Pie } from 'react-chartjs-2';\nimport { Card } from './../Card';\nimport { formatNumber } from './../../utils';\nexport function PieSuscetiveisProporcao(_ref) {\n  var statistics = _ref.statistics,\n      colors = _ref.colors;\n  var vaccines = statistics.getLastVaccineAvaliable();\n  var lastCase = statistics.getLastCaseAvaliable(); // let infetadosVacinados = vaccines.dose_2 - lastCase.confirmados;\n\n  var vacinados_apenas_uma = Math.abs(vaccines.dose_1 - vaccines.dose_2);\n  var populacao_suscetivel = lastCase.populacao - (vacinados_apenas_uma + vaccines.dose_2 + lastCase.ativos + lastCase.recuperados + lastCase.obitos); //let populacao_suscetivel = 10286300 - (vaccines[vaccines.length - 1].Inoculacao2_Ac + infetadosVacinados + firstItem.recuperados + firstItem.obitos);\n\n  var main = colors.main,\n      tints = colors.tints,\n      shades = colors.shades,\n      complements = colors.complements;\n\n  var data = function data() {\n    return {\n      //labels: ['Vacinados (com as duas doses)', 'Casos Ativos', 'Casos Recuperados', 'Óbitos', 'População suscetível'],\n      labels: ['Vacinados apenas com uma dose', 'Vacinados (com as duas doses)', 'Casos Ativos', 'Casos Recuperados', 'Óbitos', 'População suscetível'],\n      datasets: [{\n        backgroundColor: [tints[1], main, complements[0], complements[2], shades[2], complements[1]],\n        data: [vacinados_apenas_uma, vaccines.dose_2, lastCase.ativos, lastCase.recuperados, lastCase.obitos, populacao_suscetivel] //data: [vaccines.dose_2 , valueCasesDiarios.reverse()[0].ativos, valueCasesDiarios.reverse()[0].recuperados, valueCasesDiarios.reverse()[0].obitos, populacao_suscetivel],\n\n      }]\n    };\n  };\n\n  var options = function options() {\n    return {\n      maintainAspectRatio: false,\n      plugins: {\n        datalabels: {\n          color: 'white',\n          formatter: function formatter(value, chart) {\n            var sum = chart.dataset.data.reduce(function (prev, curr) {\n              return prev + curr;\n            }, 0);\n            sum = value / sum * 100;\n\n            if (sum > 10) {\n              return sum.toFixed(2) + '%';\n            }\n\n            return '';\n          }\n        },\n        legend: {\n          position: 'bottom',\n          align: 'start'\n        }\n      },\n      onResize: function onResize(a, b, c) {},\n      animation: {\n        duration: 1000\n      },\n      tooltips: {\n        callbacks: {\n          label: function label(_ref2, _ref3) {\n            var index = _ref2.index;\n            var datasets = _ref3.datasets,\n                labels = _ref3.labels;\n            var label = labels[index];\n            var data = datasets[0].data[index];\n            return \"\".concat(label, \": \").concat(formatNumber(data));\n          }\n        }\n      }\n    };\n  };\n\n  return /*#__PURE__*/_jsx(Card, {\n    allowOverflow: true,\n    is_dynamic_scroll: false,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      children: /*#__PURE__*/_jsx(Pie, {\n        plugins: [],\n        height: 350,\n        options: options(),\n        data: data\n      })\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"module"}