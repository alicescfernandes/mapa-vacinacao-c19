{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { fetchWithLocalCache } from '../utils';\nimport data from './../data/last-update.json';\nexport function useData() {\n  _s();\n\n  var _useState = useState(false),\n      ready = _useState[0],\n      setReady = _useState[1];\n\n  var _useState2 = useState(false),\n      versioning = _useState2[0],\n      bumpVersioning = _useState2[1];\n\n  var _useState3 = useState(false),\n      weeks = _useState3[0],\n      setWeeks = _useState3[1];\n\n  var _useState4 = useState(false),\n      sns = _useState4[0],\n      setSns = _useState4[1];\n\n  var _useState5 = useState(false),\n      ecdc = _useState5[0],\n      setECDC = _useState5[1];\n\n  var _useState6 = useState(false),\n      ars = _useState6[0],\n      setArs = _useState6[1];\n\n  var _useState7 = useState(false),\n      vaccines = _useState7[0],\n      setVaccines = _useState7[1];\n\n  var _useState8 = useState(false),\n      casesData = _useState8[0],\n      setCasesData = _useState8[1];\n\n  var _useState9 = useState({}),\n      casos = _useState9[0],\n      setCasos = _useState9[1];\n\n  var _useState10 = useState([]),\n      labels = _useState10[0],\n      setLabels = _useState10[1];\n\n  var _useState11 = useState([]),\n      values = _useState11[0],\n      setValues = _useState11[1];\n\n  var _useState12 = useState(null),\n      intervalId = _useState12[0],\n      setIntervalId = _useState12[1];\n\n  var options = {\n    month: 'short',\n    day: 'numeric'\n  };\n  var f = new Intl.DateTimeFormat('pt-PT', options);\n\n  function parseData(data) {\n    if (!ready) return;\n    var values = [];\n    var labels = [];\n    data.forEach(function (el) {\n      labels.push(f.format(new Date(el.Data)));\n      values.push(el.Vacinados_Ac);\n    });\n    return {\n      values: values,\n      labels: labels\n    };\n  }\n\n  var statistics = {\n    getRaw: function getRaw() {\n      return vaccines;\n    },\n    getDailyData: function getDailyData() {\n      return parseData(vaccines);\n    },\n    getDesvioPadrao: function getDesvioPadrao() {},\n    getMediaMovel: function getMediaMovel(dias) {\n      var medias = [];\n      var labelsMedias = [];\n\n      var _parseData = parseData(vaccines),\n          labels = _parseData.labels,\n          values = _parseData.values;\n\n      for (var start = 1; start <= dias; start++) {\n        var sum = Math.round(values.slice(0, start).reduce(function (prev, current) {\n          return prev + current;\n        }, 0) / start);\n        medias.push(sum);\n        labelsMedias.push(labels[start]);\n      }\n\n      for (var _start = dias; _start <= values.length; _start++) {\n        var _sum = Math.round(values.slice(_start - dias, _start).reduce(function (prev, current) {\n          return prev + current;\n        }, 0) / dias);\n\n        medias.push(_sum);\n        labelsMedias.push(labels[_start]);\n      }\n\n      return {\n        values: medias,\n        labels: labelsMedias\n      };\n    },\n    getMediaMovelDiaria: function getMediaMovelDiaria(dias) {\n      var medias = [];\n      var labelsMedias = [];\n\n      var _statistics$getVacina = statistics.getVacinadosPorDia(),\n          values = _statistics$getVacina.values;\n\n      for (var start = 1; start <= dias; start++) {\n        if (values[start] === null) {\n          medias.push(null);\n          continue;\n        }\n\n        var sum = Math.round(values.slice(0, start).reduce(function (prev, current) {\n          return prev + current;\n        }, 0) / start);\n        medias.push(sum);\n        labelsMedias.push(labels[start]);\n      }\n\n      for (var _start2 = dias; _start2 <= values.length; _start2++) {\n        var slice = values.slice(_start2 - dias, _start2);\n\n        if (values[_start2] === null || slice.includes(null) > 0) {\n          medias.push(null);\n          continue;\n        }\n\n        var _sum2 = Math.round(slice.reduce(function (prev, current) {\n          return prev + current;\n        }, 0) / dias);\n\n        medias.push(_sum2);\n        labelsMedias.push(labels[_start2]);\n      }\n\n      return {\n        values: medias,\n        labels: labelsMedias\n      };\n    },\n    getVacinadosPorDia: function getVacinadosPorDia() {\n      var _statistics$getDailyD = statistics.getDailyData(),\n          labels = _statistics$getDailyD.labels,\n          values = _statistics$getDailyD.values;\n\n      var vacinadosPorDia = values.map(function (val, idx, vals) {\n        //The first one\n        if (idx === 0) {\n          return val;\n        }\n\n        var nextDay = idx - 1;\n\n        if (vals[nextDay] == null || val == null) {\n          return null;\n        }\n\n        return val - vals[nextDay];\n      });\n      return {\n        values: vacinadosPorDia,\n        labels: labels\n      };\n    },\n    getVacinadosAcum: function getVacinadosAcum() {\n      var in1 = [];\n      var in2 = [];\n      var total = [];\n\n      var _statistics$getDailyD2 = statistics.getDailyData(),\n          labels = _statistics$getDailyD2.labels,\n          values = _statistics$getDailyD2.values;\n\n      values.forEach(function (val, idx, vals) {\n        in1.push(vaccines[idx].Inoculacao1_Ac);\n        in2.push(vaccines[idx].Inoculacao2_Ac);\n        total.push(vaccines[idx].Vacinados_Ac);\n      });\n      return {\n        valuesIn1: in1,\n        valuesIn2: in2,\n        values: total,\n        labels: labels\n      };\n    },\n    getDiariosInoculacoes: function getDiariosInoculacoes() {\n      var in1 = [];\n      var in2 = [];\n\n      var _parseData2 = parseData(vaccines),\n          labels = _parseData2.labels,\n          values = _parseData2.values;\n\n      var total = values.map(function (val, idx, vals) {\n        //The first one\n        if (idx === 0) {\n          in1.push(vaccines[idx].Inoculacao1_Ac);\n          in2.push(vaccines[idx].Inoculacao2_Ac);\n          return val;\n        }\n\n        var prevDay = idx - 1;\n\n        if (vaccines[prevDay].Inoculacao1_Ac == null || vaccines[idx].Inoculacao1_Ac == null) {\n          in1.push(null);\n        } else {\n          in1.push(vaccines[idx].Inoculacao1_Ac - vaccines[prevDay].Inoculacao1_Ac);\n        }\n\n        if (vaccines[prevDay].Inoculacao2_Ac == null || vaccines[idx].Inoculacao2_Ac == null) {\n          in2.push(null);\n        } else {\n          in2.push(vaccines[idx].Inoculacao2_Ac - vaccines[prevDay].Inoculacao2_Ac);\n        }\n\n        if (vals[prevDay] == null || val == null) {\n          return null;\n        }\n\n        return val - vals[prevDay];\n      });\n      return {\n        valuesIn1: in1,\n        valuesIn2: in2,\n        values: total,\n        raw: vaccines,\n        labels: labels\n      };\n    },\n    getDiariosCases: function getDiariosCases() {\n      var labels2 = [];\n      var values2 = [];\n      casesData.forEach(function (el) {\n        labels2.push(new Date(el.Data));\n        values2.push(el);\n      });\n      return {\n        labels: labels2,\n        values: values2,\n        raw: casesData\n      };\n    },\n    getReceivedDosesByBrandByWeek: function () {\n      var _getReceivedDosesByBrandByWeek = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var labels, com, mod, az;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                labels = {};\n                com = {};\n                mod = {};\n                az = {};\n                ecdc.forEach(function (el) {\n                  var obj = {};\n\n                  if (parseInt(el['Doses received']) > 0) {\n                    com[el['Week']] = com[el['Week']] || null;\n                    mod[el['Week']] = mod[el['Week']] || null;\n                    az[el['Week']] = az[el['Week']] || null;\n                    labels[el['Week']] = weeks[el['Week']];\n\n                    if (el['Vaccine brand'] === 'COM') {\n                      com[el['Week']] = parseInt(el['Doses received']);\n                    }\n\n                    if (el['Vaccine brand'] === 'MOD') {\n                      mod[el['Week']] = parseInt(el['Doses received']);\n                    }\n\n                    if (el['Vaccine brand'] === 'AZ') {\n                      az[el['Week']] = parseInt(el['Doses received']);\n                    }\n                  }\n                });\n                com = Object.values(com);\n                mod = Object.values(mod);\n                az = Object.values(az);\n                labels = Object.values(labels);\n                return _context.abrupt(\"return\", {\n                  com: com,\n                  mod: mod,\n                  az: az,\n                  labels: labels\n                });\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getReceivedDosesByBrandByWeek() {\n        return _getReceivedDosesByBrandByWeek.apply(this, arguments);\n      }\n\n      return getReceivedDosesByBrandByWeek;\n    }(),\n    getAdministredDosesByAgeByWeek: function () {\n      var _getAdministredDosesByAgeByWeek = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var labels, maxValue, groups;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                labels = {};\n                maxValue = 0;\n                groups = {};\n                ecdc.forEach(function (el) {\n                  if (el['Doses received'] == '') {\n                    if (!labels.hasOwnProperty(el['Week'])) {\n                      labels[el['Week'].replace('-', '')] = weeks[el['Week']];\n                    }\n\n                    groups[el['Group']] = groups[el['Group']] || {\n                      dose_1: [],\n                      dose_2: []\n                    };\n                    maxValue = Math.max(el['First dose'], el['Second dose']);\n                    groups[el['Group']].dose_1[el['Week']] = (groups[el['Group']].dose_1[el['Week']] || 0) + parseInt(el['First dose']);\n                    groups[el['Group']].dose_2[el['Week']] = (groups[el['Group']].dose_2[el['Week']] || 0) + parseInt(el['Second dose']);\n                  }\n                });\n                return _context2.abrupt(\"return\", {\n                  maxValue: maxValue,\n                  labels: labels,\n                  groups: groups\n                });\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getAdministredDosesByAgeByWeek() {\n        return _getAdministredDosesByAgeByWeek.apply(this, arguments);\n      }\n\n      return getAdministredDosesByAgeByWeek;\n    }(),\n    getTotalAdministredDosesByAgeByWeek: function () {\n      var _getTotalAdministredDosesByAgeByWeek = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var labels, groups;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                labels = {};\n                groups = {};\n                ecdc.forEach(function (el) {\n                  if (el['Doses received'] == '') {\n                    groups[el['Group']] = groups[el['Group']] || {\n                      mod: [],\n                      com: [],\n                      az: [],\n                      target: 0\n                    };\n\n                    if (el['Vaccine brand'] === 'COM') {\n                      groups[el['Group']].com[0] = parseInt((groups[el['Group']].com[0] || 0) + parseInt(el['First dose']));\n                      groups[el['Group']].com[1] = (groups[el['Group']].com[1] || 0) + parseInt(el['Second dose']);\n                    }\n\n                    if (el['Vaccine brand'] === 'MOD') {\n                      groups[el['Group']].mod[0] = (groups[el['Group']].mod[0] || 0) + parseInt(el['First dose']);\n                      groups[el['Group']].mod[1] = (groups[el['Group']].mod[1] || 0) + parseInt(el['Second dose']);\n                    }\n\n                    if (el['Vaccine brand'] === 'AZ') {\n                      groups[el['Group']].az[0] = (groups[el['Group']].az[0] || 0) + parseInt(el['First dose']);\n                      groups[el['Group']].az[1] = (groups[el['Group']].az[1] || 0) + parseInt(el['Second dose']);\n                    }\n\n                    groups[el['Group']].target = (groups[el['Group']].target || 0) + parseInt(el['Group population']);\n                  }\n                });\n                return _context3.abrupt(\"return\", groups);\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function getTotalAdministredDosesByAgeByWeek() {\n        return _getTotalAdministredDosesByAgeByWeek.apply(this, arguments);\n      }\n\n      return getTotalAdministredDosesByAgeByWeek;\n    }(),\n    getTotalSNS: function getTotalSNS() {\n      return sns.filter(function (el) {\n        debugger;\n        return (el.TYPE === 'REGIONAL' || el.TYPE === 'GENERAL') && el.DATE == data.dateSnsStartWeirdFormat;\n      });\n    },\n    getTotalARS: function getTotalARS() {\n      var data = {};\n      ars.features.forEach(function (el) {\n        if (el.attributes.ARSNome === 'Nacional') el.attributes.ARSNome = 'All';\n\n        if (!(el.attributes.ARSNome in data)) {\n          data[el.attributes.ARSNome] = {\n            obitosNovos7Dias: 0,\n            casosNovos7Dias: 0\n          };\n        }\n\n        data[el.attributes.ARSNome].obitosNovos7Dias += el.attributes.VarObitos;\n        data[el.attributes.ARSNome].casosNovos7Dias += el.attributes.ConfirmadosNovos;\n      });\n      return data;\n    },\n    getCases: function getCases() {\n      return casesData;\n    },\n    getDosesRecebidasAcum: function getDosesRecebidasAcum() {\n      if (ecdc == false) return;\n      var labels = {};\n      var data = {};\n      var com = {};\n      var mod = {};\n      var az = {};\n      var sum = [];\n      var ecdcCopy = JSON.parse(JSON.stringify(ecdc));\n      var numbers = [1, 1, 1, 1];\n\n      function sumArray(array) {\n        return array.reduce(function (prev, current) {\n          return prev + current;\n        }, 0);\n      }\n\n      ecdcCopy.filter(function (el) {\n        return el['Doses received'] > 0;\n      }).forEach(function (el) {\n        if (!labels.hasOwnProperty(el['Week'])) {\n          labels[el['Week']] = weeks[el['Week']];\n        }\n\n        com[el['Week']] = com[el['Week']] || 0;\n        mod[el['Week']] = mod[el['Week']] || 0;\n        az[el['Week']] = az[el['Week']] || 0;\n\n        if (el['Vaccine brand'] === 'COM') {\n          com[el['Week']] = parseInt(el['Doses received']);\n        }\n\n        if (el['Vaccine brand'] === 'MOD') {\n          mod[el['Week']] = parseInt(el['Doses received']);\n        }\n\n        if (el['Vaccine brand'] === 'AZ') {\n          az[el['Week']] = parseInt(el['Doses received']);\n        }\n      });\n      com = Object.values(com).reverse().map(function (el, idx, arr) {\n        return sumArray(arr.slice(idx, arr.length));\n      }).reverse();\n      az = Object.values(az).reverse().map(function (el, idx, arr) {\n        return sumArray(arr.slice(idx, arr.length));\n      }).reverse();\n      mod = Object.values(mod).reverse().map(function (el, idx, arr) {\n        return sumArray(arr.slice(idx, arr.length));\n      }).reverse();\n      sum = mod.map(function (el, idx, arr) {\n        return com[idx] + az[idx] + mod[idx];\n      });\n      return {\n        mod: mod,\n        com: com,\n        az: az,\n        sum: sum,\n        labels: labels\n      };\n    }\n  };\n  useEffect(function () {\n    Promise.all([fetchWithLocalCache('/api/ecdc', false, true), fetchWithLocalCache('/api/weeks', false, true), fetchWithLocalCache('/api/sns', false, false), fetchWithLocalCache('/api/vaccinesold'), fetchWithLocalCache('/api/ars', false, false), fetchWithLocalCache('/api/cases')]).then(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 6),\n          ecdc = _ref2[0],\n          weeks = _ref2[1],\n          sns = _ref2[2],\n          vaccines = _ref2[3],\n          ars = _ref2[4],\n          cases = _ref2[5];\n\n      setSns(sns);\n      setWeeks(weeks);\n      setECDC(ecdc);\n      setVaccines(vaccines);\n      setArs(ars);\n      setCasesData(cases);\n      setReady(true);\n    });\n  }, []);\n\n  function update(type, data) {\n    switch (type) {\n      case 'vacinas':\n        var arr = Array.from(vaccines);\n        arr.push(data);\n        setVaccines(arr);\n        bumpVersioning(versioning + 1);\n        break;\n\n      case 'casos':\n        //casos.push(data);\n        //setCasos(casos);\n        bumpVersioning(versioning + 1);\n        break;\n\n      case 'reload':\n        window.location.reload();\n        break;\n    }\n  }\n\n  return {\n    versioning: versioning,\n    statistics: statistics,\n    ready: ready,\n    update: update\n  };\n}\n\n_s(useData, \"qrulxxbSpIqdXvzPDHhU1CHGLIk=\");","map":{"version":3,"sources":["/home/pi/Web/mapa-vacinacao-c19/hooks/useData.js"],"names":["useEffect","useState","fetchWithLocalCache","data","useData","ready","setReady","versioning","bumpVersioning","weeks","setWeeks","sns","setSns","ecdc","setECDC","ars","setArs","vaccines","setVaccines","casesData","setCasesData","casos","setCasos","labels","setLabels","values","setValues","intervalId","setIntervalId","options","month","day","f","Intl","DateTimeFormat","parseData","forEach","el","push","format","Date","Data","Vacinados_Ac","statistics","getRaw","getDailyData","getDesvioPadrao","getMediaMovel","dias","medias","labelsMedias","start","sum","Math","round","slice","reduce","prev","current","length","getMediaMovelDiaria","getVacinadosPorDia","includes","vacinadosPorDia","map","val","idx","vals","nextDay","getVacinadosAcum","in1","in2","total","Inoculacao1_Ac","Inoculacao2_Ac","valuesIn1","valuesIn2","getDiariosInoculacoes","prevDay","raw","getDiariosCases","labels2","values2","getReceivedDosesByBrandByWeek","com","mod","az","obj","parseInt","Object","getAdministredDosesByAgeByWeek","maxValue","groups","hasOwnProperty","replace","dose_1","dose_2","max","getTotalAdministredDosesByAgeByWeek","target","getTotalSNS","filter","TYPE","DATE","dateSnsStartWeirdFormat","getTotalARS","features","attributes","ARSNome","obitosNovos7Dias","casosNovos7Dias","VarObitos","ConfirmadosNovos","getCases","getDosesRecebidasAcum","ecdcCopy","JSON","parse","stringify","numbers","sumArray","array","reverse","arr","Promise","all","then","cases","update","type","Array","from","window","location","reload"],"mappings":";;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,mBAAT,QAAoC,UAApC;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,OAAO,SAASC,OAAT,GAAmB;AAAA;;AAAA,kBACDH,QAAQ,CAAC,KAAD,CADP;AAAA,MACpBI,KADoB;AAAA,MACbC,QADa;;AAAA,mBAEUL,QAAQ,CAAC,KAAD,CAFlB;AAAA,MAEpBM,UAFoB;AAAA,MAERC,cAFQ;;AAAA,mBAGDP,QAAQ,CAAC,KAAD,CAHP;AAAA,MAGpBQ,KAHoB;AAAA,MAGbC,QAHa;;AAAA,mBAILT,QAAQ,CAAC,KAAD,CAJH;AAAA,MAIpBU,GAJoB;AAAA,MAIfC,MAJe;;AAAA,mBAKHX,QAAQ,CAAC,KAAD,CALL;AAAA,MAKpBY,IALoB;AAAA,MAKdC,OALc;;AAAA,mBAMLb,QAAQ,CAAC,KAAD,CANH;AAAA,MAMpBc,GANoB;AAAA,MAMfC,MANe;;AAAA,mBAOKf,QAAQ,CAAC,KAAD,CAPb;AAAA,MAOpBgB,QAPoB;AAAA,MAOVC,WAPU;;AAAA,mBAQOjB,QAAQ,CAAC,KAAD,CARf;AAAA,MAQpBkB,SARoB;AAAA,MAQTC,YARS;;AAAA,mBASDnB,QAAQ,CAAC,EAAD,CATP;AAAA,MASpBoB,KAToB;AAAA,MASbC,QATa;;AAAA,oBAUCrB,QAAQ,CAAC,EAAD,CAVT;AAAA,MAUpBsB,MAVoB;AAAA,MAUZC,SAVY;;AAAA,oBAWCvB,QAAQ,CAAC,EAAD,CAXT;AAAA,MAWpBwB,MAXoB;AAAA,MAWZC,SAXY;;AAAA,oBAYSzB,QAAQ,CAAC,IAAD,CAZjB;AAAA,MAYpB0B,UAZoB;AAAA,MAYRC,aAZQ;;AAczB,MAAIC,OAAO,GAAG;AACbC,IAAAA,KAAK,EAAE,OADM;AAEbC,IAAAA,GAAG,EAAE;AAFQ,GAAd;AAIA,MAAIC,CAAC,GAAG,IAAIC,IAAI,CAACC,cAAT,CAAwB,OAAxB,EAAiCL,OAAjC,CAAR;;AACA,WAASM,SAAT,CAAmBhC,IAAnB,EAAyB;AACxB,QAAI,CAACE,KAAL,EAAY;AACZ,QAAIoB,MAAM,GAAG,EAAb;AACA,QAAIF,MAAM,GAAG,EAAb;AACApB,IAAAA,IAAI,CAACiC,OAAL,CAAa,UAACC,EAAD,EAAQ;AACpBd,MAAAA,MAAM,CAACe,IAAP,CAAYN,CAAC,CAACO,MAAF,CAAS,IAAIC,IAAJ,CAASH,EAAE,CAACI,IAAZ,CAAT,CAAZ;AACAhB,MAAAA,MAAM,CAACa,IAAP,CAAYD,EAAE,CAACK,YAAf;AACA,KAHD;AAKA,WAAO;AACNjB,MAAAA,MAAM,EAANA,MADM;AAENF,MAAAA,MAAM,EAANA;AAFM,KAAP;AAIA;;AAED,MAAIoB,UAAU,GAAG;AAChBC,IAAAA,MAAM,EAAE,kBAAM;AACb,aAAO3B,QAAP;AACA,KAHe;AAIhB4B,IAAAA,YAAY,EAAE,wBAAM;AACnB,aAAOV,SAAS,CAAClB,QAAD,CAAhB;AACA,KANe;AAOhB6B,IAAAA,eAAe,EAAE,2BAAM,CAAE,CAPT;AAShBC,IAAAA,aAAa,EAAE,uBAACC,IAAD,EAAU;AACxB,UAAIC,MAAM,GAAG,EAAb;AACA,UAAIC,YAAY,GAAG,EAAnB;;AAFwB,uBAGCf,SAAS,CAAClB,QAAD,CAHV;AAAA,UAGlBM,MAHkB,cAGlBA,MAHkB;AAAA,UAGVE,MAHU,cAGVA,MAHU;;AAKxB,WAAK,IAAI0B,KAAK,GAAG,CAAjB,EAAoBA,KAAK,IAAIH,IAA7B,EAAmCG,KAAK,EAAxC,EAA4C;AAC3C,YAAIC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAW7B,MAAM,CAAC8B,KAAP,CAAa,CAAb,EAAgBJ,KAAhB,EAAuBK,MAAvB,CAA8B,UAACC,IAAD,EAAOC,OAAP;AAAA,iBAAmBD,IAAI,GAAGC,OAA1B;AAAA,SAA9B,EAAiE,CAAjE,IAAsEP,KAAjF,CAAV;AACAF,QAAAA,MAAM,CAACX,IAAP,CAAYc,GAAZ;AACAF,QAAAA,YAAY,CAACZ,IAAb,CAAkBf,MAAM,CAAC4B,KAAD,CAAxB;AACA;;AAED,WAAK,IAAIA,MAAK,GAAGH,IAAjB,EAAuBG,MAAK,IAAI1B,MAAM,CAACkC,MAAvC,EAA+CR,MAAK,EAApD,EAAwD;AACvD,YAAIC,IAAG,GAAGC,IAAI,CAACC,KAAL,CAAW7B,MAAM,CAAC8B,KAAP,CAAaJ,MAAK,GAAGH,IAArB,EAA2BG,MAA3B,EAAkCK,MAAlC,CAAyC,UAACC,IAAD,EAAOC,OAAP;AAAA,iBAAmBD,IAAI,GAAGC,OAA1B;AAAA,SAAzC,EAA4E,CAA5E,IAAiFV,IAA5F,CAAV;;AACAC,QAAAA,MAAM,CAACX,IAAP,CAAYc,IAAZ;AACAF,QAAAA,YAAY,CAACZ,IAAb,CAAkBf,MAAM,CAAC4B,MAAD,CAAxB;AACA;;AAED,aAAO;AACN1B,QAAAA,MAAM,EAAEwB,MADF;AAEN1B,QAAAA,MAAM,EAAE2B;AAFF,OAAP;AAIA,KA9Be;AAgChBU,IAAAA,mBAAmB,EAAE,6BAACZ,IAAD,EAAU;AAC9B,UAAIC,MAAM,GAAG,EAAb;AACA,UAAIC,YAAY,GAAG,EAAnB;;AAF8B,kCAGbP,UAAU,CAACkB,kBAAX,EAHa;AAAA,UAGxBpC,MAHwB,yBAGxBA,MAHwB;;AAK9B,WAAK,IAAI0B,KAAK,GAAG,CAAjB,EAAoBA,KAAK,IAAIH,IAA7B,EAAmCG,KAAK,EAAxC,EAA4C;AAC3C,YAAI1B,MAAM,CAAC0B,KAAD,CAAN,KAAkB,IAAtB,EAA4B;AAC3BF,UAAAA,MAAM,CAACX,IAAP,CAAY,IAAZ;AACA;AACA;;AAED,YAAIc,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAW7B,MAAM,CAAC8B,KAAP,CAAa,CAAb,EAAgBJ,KAAhB,EAAuBK,MAAvB,CAA8B,UAACC,IAAD,EAAOC,OAAP;AAAA,iBAAmBD,IAAI,GAAGC,OAA1B;AAAA,SAA9B,EAAiE,CAAjE,IAAsEP,KAAjF,CAAV;AACAF,QAAAA,MAAM,CAACX,IAAP,CAAYc,GAAZ;AACAF,QAAAA,YAAY,CAACZ,IAAb,CAAkBf,MAAM,CAAC4B,KAAD,CAAxB;AACA;;AAED,WAAK,IAAIA,OAAK,GAAGH,IAAjB,EAAuBG,OAAK,IAAI1B,MAAM,CAACkC,MAAvC,EAA+CR,OAAK,EAApD,EAAwD;AACvD,YAAII,KAAK,GAAG9B,MAAM,CAAC8B,KAAP,CAAaJ,OAAK,GAAGH,IAArB,EAA2BG,OAA3B,CAAZ;;AAEA,YAAI1B,MAAM,CAAC0B,OAAD,CAAN,KAAkB,IAAlB,IAA0BI,KAAK,CAACO,QAAN,CAAe,IAAf,IAAuB,CAArD,EAAwD;AACvDb,UAAAA,MAAM,CAACX,IAAP,CAAY,IAAZ;AACA;AACA;;AAED,YAAIc,KAAG,GAAGC,IAAI,CAACC,KAAL,CAAWC,KAAK,CAACC,MAAN,CAAa,UAACC,IAAD,EAAOC,OAAP;AAAA,iBAAmBD,IAAI,GAAGC,OAA1B;AAAA,SAAb,EAAgD,CAAhD,IAAqDV,IAAhE,CAAV;;AACAC,QAAAA,MAAM,CAACX,IAAP,CAAYc,KAAZ;AACAF,QAAAA,YAAY,CAACZ,IAAb,CAAkBf,MAAM,CAAC4B,OAAD,CAAxB;AACA;;AAED,aAAO;AACN1B,QAAAA,MAAM,EAAEwB,MADF;AAEN1B,QAAAA,MAAM,EAAE2B;AAFF,OAAP;AAIA,KAjEe;AAmEhBW,IAAAA,kBAAkB,EAAE,8BAAM;AAAA,kCACAlB,UAAU,CAACE,YAAX,EADA;AAAA,UACnBtB,MADmB,yBACnBA,MADmB;AAAA,UACXE,MADW,yBACXA,MADW;;AAEzB,UAAIsC,eAAe,GAAGtC,MAAM,CAACuC,GAAP,CAAW,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACpD;AACA,YAAID,GAAG,KAAK,CAAZ,EAAe;AACd,iBAAOD,GAAP;AACA;;AAED,YAAIG,OAAO,GAAGF,GAAG,GAAG,CAApB;;AACA,YAAIC,IAAI,CAACC,OAAD,CAAJ,IAAiB,IAAjB,IAAyBH,GAAG,IAAI,IAApC,EAA0C;AACzC,iBAAO,IAAP;AACA;;AACD,eAAOA,GAAG,GAAGE,IAAI,CAACC,OAAD,CAAjB;AACA,OAXqB,CAAtB;AAYA,aAAO;AACN3C,QAAAA,MAAM,EAAEsC,eADF;AAENxC,QAAAA,MAAM,EAANA;AAFM,OAAP;AAIA,KArFe;AAuFhB8C,IAAAA,gBAAgB,EAAE,4BAAM;AACvB,UAAIC,GAAG,GAAG,EAAV;AACA,UAAIC,GAAG,GAAG,EAAV;AACA,UAAIC,KAAK,GAAG,EAAZ;;AAHuB,mCAIE7B,UAAU,CAACE,YAAX,EAJF;AAAA,UAIjBtB,MAJiB,0BAIjBA,MAJiB;AAAA,UAITE,MAJS,0BAITA,MAJS;;AAKvBA,MAAAA,MAAM,CAACW,OAAP,CAAe,UAAC6B,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClCG,QAAAA,GAAG,CAAChC,IAAJ,CAASrB,QAAQ,CAACiD,GAAD,CAAR,CAAcO,cAAvB;AACAF,QAAAA,GAAG,CAACjC,IAAJ,CAASrB,QAAQ,CAACiD,GAAD,CAAR,CAAcQ,cAAvB;AACAF,QAAAA,KAAK,CAAClC,IAAN,CAAWrB,QAAQ,CAACiD,GAAD,CAAR,CAAcxB,YAAzB;AACA,OAJD;AAMA,aAAO;AACNiC,QAAAA,SAAS,EAAEL,GADL;AAENM,QAAAA,SAAS,EAAEL,GAFL;AAGN9C,QAAAA,MAAM,EAAE+C,KAHF;AAINjD,QAAAA,MAAM,EAANA;AAJM,OAAP;AAMA,KAxGe;AAyGhBsD,IAAAA,qBAAqB,EAAE,iCAAM;AAC5B,UAAIP,GAAG,GAAG,EAAV;AACA,UAAIC,GAAG,GAAG,EAAV;;AAF4B,wBAGHpC,SAAS,CAAClB,QAAD,CAHN;AAAA,UAGtBM,MAHsB,eAGtBA,MAHsB;AAAA,UAGdE,MAHc,eAGdA,MAHc;;AAK5B,UAAI+C,KAAK,GAAG/C,MAAM,CAACuC,GAAP,CAAW,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1C;AACA,YAAID,GAAG,KAAK,CAAZ,EAAe;AACdI,UAAAA,GAAG,CAAChC,IAAJ,CAASrB,QAAQ,CAACiD,GAAD,CAAR,CAAcO,cAAvB;AACAF,UAAAA,GAAG,CAACjC,IAAJ,CAASrB,QAAQ,CAACiD,GAAD,CAAR,CAAcQ,cAAvB;AACA,iBAAOT,GAAP;AACA;;AAED,YAAIa,OAAO,GAAGZ,GAAG,GAAG,CAApB;;AAEA,YAAIjD,QAAQ,CAAC6D,OAAD,CAAR,CAAkBL,cAAlB,IAAoC,IAApC,IAA4CxD,QAAQ,CAACiD,GAAD,CAAR,CAAcO,cAAd,IAAgC,IAAhF,EAAsF;AACrFH,UAAAA,GAAG,CAAChC,IAAJ,CAAS,IAAT;AACA,SAFD,MAEO;AACNgC,UAAAA,GAAG,CAAChC,IAAJ,CAASrB,QAAQ,CAACiD,GAAD,CAAR,CAAcO,cAAd,GAA+BxD,QAAQ,CAAC6D,OAAD,CAAR,CAAkBL,cAA1D;AACA;;AAED,YAAIxD,QAAQ,CAAC6D,OAAD,CAAR,CAAkBJ,cAAlB,IAAoC,IAApC,IAA4CzD,QAAQ,CAACiD,GAAD,CAAR,CAAcQ,cAAd,IAAgC,IAAhF,EAAsF;AACrFH,UAAAA,GAAG,CAACjC,IAAJ,CAAS,IAAT;AACA,SAFD,MAEO;AACNiC,UAAAA,GAAG,CAACjC,IAAJ,CAASrB,QAAQ,CAACiD,GAAD,CAAR,CAAcQ,cAAd,GAA+BzD,QAAQ,CAAC6D,OAAD,CAAR,CAAkBJ,cAA1D;AACA;;AAED,YAAIP,IAAI,CAACW,OAAD,CAAJ,IAAiB,IAAjB,IAAyBb,GAAG,IAAI,IAApC,EAA0C;AACzC,iBAAO,IAAP;AACA;;AACD,eAAOA,GAAG,GAAGE,IAAI,CAACW,OAAD,CAAjB;AACA,OA1BW,CAAZ;AA2BA,aAAO;AACNH,QAAAA,SAAS,EAAEL,GADL;AAENM,QAAAA,SAAS,EAAEL,GAFL;AAGN9C,QAAAA,MAAM,EAAE+C,KAHF;AAINO,QAAAA,GAAG,EAAE9D,QAJC;AAKNM,QAAAA,MAAM,EAANA;AALM,OAAP;AAOA,KAhJe;AAiJhByD,IAAAA,eAAe,EAAE,2BAAM;AACtB,UAAIC,OAAO,GAAG,EAAd;AACA,UAAIC,OAAO,GAAG,EAAd;AAEA/D,MAAAA,SAAS,CAACiB,OAAV,CAAkB,UAACC,EAAD,EAAQ;AACzB4C,QAAAA,OAAO,CAAC3C,IAAR,CAAa,IAAIE,IAAJ,CAASH,EAAE,CAACI,IAAZ,CAAb;AACAyC,QAAAA,OAAO,CAAC5C,IAAR,CAAaD,EAAb;AACA,OAHD;AAKA,aAAO;AAAEd,QAAAA,MAAM,EAAE0D,OAAV;AAAmBxD,QAAAA,MAAM,EAAEyD,OAA3B;AAAoCH,QAAAA,GAAG,EAAE5D;AAAzC,OAAP;AACA,KA3Je;AA4JhBgE,IAAAA,6BAA6B;AAAA,oGAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAC1B5D,gBAAAA,MAD0B,GACjB,EADiB;AAG1B6D,gBAAAA,GAH0B,GAGpB,EAHoB;AAI1BC,gBAAAA,GAJ0B,GAIpB,EAJoB;AAK1BC,gBAAAA,EAL0B,GAKrB,EALqB;AAO9BzE,gBAAAA,IAAI,CAACuB,OAAL,CAAa,UAACC,EAAD,EAAQ;AACpB,sBAAIkD,GAAG,GAAG,EAAV;;AACA,sBAAIC,QAAQ,CAACnD,EAAE,CAAC,gBAAD,CAAH,CAAR,GAAiC,CAArC,EAAwC;AACvC+C,oBAAAA,GAAG,CAAC/C,EAAE,CAAC,MAAD,CAAH,CAAH,GAAkB+C,GAAG,CAAC/C,EAAE,CAAC,MAAD,CAAH,CAAH,IAAmB,IAArC;AACAgD,oBAAAA,GAAG,CAAChD,EAAE,CAAC,MAAD,CAAH,CAAH,GAAkBgD,GAAG,CAAChD,EAAE,CAAC,MAAD,CAAH,CAAH,IAAmB,IAArC;AACAiD,oBAAAA,EAAE,CAACjD,EAAE,CAAC,MAAD,CAAH,CAAF,GAAiBiD,EAAE,CAACjD,EAAE,CAAC,MAAD,CAAH,CAAF,IAAkB,IAAnC;AACAd,oBAAAA,MAAM,CAACc,EAAE,CAAC,MAAD,CAAH,CAAN,GAAqB5B,KAAK,CAAC4B,EAAE,CAAC,MAAD,CAAH,CAA1B;;AAEA,wBAAIA,EAAE,CAAC,eAAD,CAAF,KAAwB,KAA5B,EAAmC;AAClC+C,sBAAAA,GAAG,CAAC/C,EAAE,CAAC,MAAD,CAAH,CAAH,GAAkBmD,QAAQ,CAACnD,EAAE,CAAC,gBAAD,CAAH,CAA1B;AACA;;AAED,wBAAIA,EAAE,CAAC,eAAD,CAAF,KAAwB,KAA5B,EAAmC;AAClCgD,sBAAAA,GAAG,CAAChD,EAAE,CAAC,MAAD,CAAH,CAAH,GAAkBmD,QAAQ,CAACnD,EAAE,CAAC,gBAAD,CAAH,CAA1B;AACA;;AACD,wBAAIA,EAAE,CAAC,eAAD,CAAF,KAAwB,IAA5B,EAAkC;AACjCiD,sBAAAA,EAAE,CAACjD,EAAE,CAAC,MAAD,CAAH,CAAF,GAAiBmD,QAAQ,CAACnD,EAAE,CAAC,gBAAD,CAAH,CAAzB;AACA;AACD;AACD,iBAnBD;AAqBA+C,gBAAAA,GAAG,GAAGK,MAAM,CAAChE,MAAP,CAAc2D,GAAd,CAAN;AACAC,gBAAAA,GAAG,GAAGI,MAAM,CAAChE,MAAP,CAAc4D,GAAd,CAAN;AACAC,gBAAAA,EAAE,GAAGG,MAAM,CAAChE,MAAP,CAAc6D,EAAd,CAAL;AAEA/D,gBAAAA,MAAM,GAAGkE,MAAM,CAAChE,MAAP,CAAcF,MAAd,CAAT;AAhC8B,iDAkCvB;AACN6D,kBAAAA,GAAG,EAAHA,GADM;AAENC,kBAAAA,GAAG,EAAHA,GAFM;AAGNC,kBAAAA,EAAE,EAAFA,EAHM;AAIN/D,kBAAAA,MAAM,EAANA;AAJM,iBAlCuB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,OA5Jb;AAqMhBmE,IAAAA,8BAA8B;AAAA,qGAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAC3BnE,gBAAAA,MAD2B,GAClB,EADkB;AAE3BoE,gBAAAA,QAF2B,GAEhB,CAFgB;AAI3BC,gBAAAA,MAJ2B,GAIlB,EAJkB;AAM/B/E,gBAAAA,IAAI,CAACuB,OAAL,CAAa,UAACC,EAAD,EAAQ;AACpB,sBAAIA,EAAE,CAAC,gBAAD,CAAF,IAAwB,EAA5B,EAAgC;AAC/B,wBAAI,CAACd,MAAM,CAACsE,cAAP,CAAsBxD,EAAE,CAAC,MAAD,CAAxB,CAAL,EAAwC;AACvCd,sBAAAA,MAAM,CAACc,EAAE,CAAC,MAAD,CAAF,CAAWyD,OAAX,CAAmB,GAAnB,EAAwB,EAAxB,CAAD,CAAN,GAAsCrF,KAAK,CAAC4B,EAAE,CAAC,MAAD,CAAH,CAA3C;AACA;;AAEDuD,oBAAAA,MAAM,CAACvD,EAAE,CAAC,OAAD,CAAH,CAAN,GAAsBuD,MAAM,CAACvD,EAAE,CAAC,OAAD,CAAH,CAAN,IAAuB;AAC5C0D,sBAAAA,MAAM,EAAE,EADoC;AAE5CC,sBAAAA,MAAM,EAAE;AAFoC,qBAA7C;AAIAL,oBAAAA,QAAQ,GAAGtC,IAAI,CAAC4C,GAAL,CAAS5D,EAAE,CAAC,YAAD,CAAX,EAA2BA,EAAE,CAAC,aAAD,CAA7B,CAAX;AACAuD,oBAAAA,MAAM,CAACvD,EAAE,CAAC,OAAD,CAAH,CAAN,CAAoB0D,MAApB,CAA2B1D,EAAE,CAAC,MAAD,CAA7B,IAAyC,CAACuD,MAAM,CAACvD,EAAE,CAAC,OAAD,CAAH,CAAN,CAAoB0D,MAApB,CAA2B1D,EAAE,CAAC,MAAD,CAA7B,KAA0C,CAA3C,IAAgDmD,QAAQ,CAACnD,EAAE,CAAC,YAAD,CAAH,CAAjG;AACAuD,oBAAAA,MAAM,CAACvD,EAAE,CAAC,OAAD,CAAH,CAAN,CAAoB2D,MAApB,CAA2B3D,EAAE,CAAC,MAAD,CAA7B,IAAyC,CAACuD,MAAM,CAACvD,EAAE,CAAC,OAAD,CAAH,CAAN,CAAoB2D,MAApB,CAA2B3D,EAAE,CAAC,MAAD,CAA7B,KAA0C,CAA3C,IAAgDmD,QAAQ,CAACnD,EAAE,CAAC,aAAD,CAAH,CAAjG;AACA;AACD,iBAdD;AAN+B,kDAqBxB;AACNsD,kBAAAA,QAAQ,EAARA,QADM;AAENpE,kBAAAA,MAAM,EAANA,MAFM;AAGNqE,kBAAAA,MAAM,EAANA;AAHM,iBArBwB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,OArMd;AAgOhBM,IAAAA,mCAAmC;AAAA,0GAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAChC3E,gBAAAA,MADgC,GACvB,EADuB;AAGhCqE,gBAAAA,MAHgC,GAGvB,EAHuB;AAKpC/E,gBAAAA,IAAI,CAACuB,OAAL,CAAa,UAACC,EAAD,EAAQ;AACpB,sBAAIA,EAAE,CAAC,gBAAD,CAAF,IAAwB,EAA5B,EAAgC;AAC/BuD,oBAAAA,MAAM,CAACvD,EAAE,CAAC,OAAD,CAAH,CAAN,GAAsBuD,MAAM,CAACvD,EAAE,CAAC,OAAD,CAAH,CAAN,IAAuB;AAC5CgD,sBAAAA,GAAG,EAAE,EADuC;AAE5CD,sBAAAA,GAAG,EAAE,EAFuC;AAG5CE,sBAAAA,EAAE,EAAE,EAHwC;AAI5Ca,sBAAAA,MAAM,EAAE;AAJoC,qBAA7C;;AAOA,wBAAI9D,EAAE,CAAC,eAAD,CAAF,KAAwB,KAA5B,EAAmC;AAClCuD,sBAAAA,MAAM,CAACvD,EAAE,CAAC,OAAD,CAAH,CAAN,CAAoB+C,GAApB,CAAwB,CAAxB,IAA6BI,QAAQ,CAAC,CAACI,MAAM,CAACvD,EAAE,CAAC,OAAD,CAAH,CAAN,CAAoB+C,GAApB,CAAwB,CAAxB,KAA8B,CAA/B,IAAoCI,QAAQ,CAACnD,EAAE,CAAC,YAAD,CAAH,CAA7C,CAArC;AACAuD,sBAAAA,MAAM,CAACvD,EAAE,CAAC,OAAD,CAAH,CAAN,CAAoB+C,GAApB,CAAwB,CAAxB,IAA6B,CAACQ,MAAM,CAACvD,EAAE,CAAC,OAAD,CAAH,CAAN,CAAoB+C,GAApB,CAAwB,CAAxB,KAA8B,CAA/B,IAAoCI,QAAQ,CAACnD,EAAE,CAAC,aAAD,CAAH,CAAzE;AACA;;AAED,wBAAIA,EAAE,CAAC,eAAD,CAAF,KAAwB,KAA5B,EAAmC;AAClCuD,sBAAAA,MAAM,CAACvD,EAAE,CAAC,OAAD,CAAH,CAAN,CAAoBgD,GAApB,CAAwB,CAAxB,IAA6B,CAACO,MAAM,CAACvD,EAAE,CAAC,OAAD,CAAH,CAAN,CAAoBgD,GAApB,CAAwB,CAAxB,KAA8B,CAA/B,IAAoCG,QAAQ,CAACnD,EAAE,CAAC,YAAD,CAAH,CAAzE;AACAuD,sBAAAA,MAAM,CAACvD,EAAE,CAAC,OAAD,CAAH,CAAN,CAAoBgD,GAApB,CAAwB,CAAxB,IAA6B,CAACO,MAAM,CAACvD,EAAE,CAAC,OAAD,CAAH,CAAN,CAAoBgD,GAApB,CAAwB,CAAxB,KAA8B,CAA/B,IAAoCG,QAAQ,CAACnD,EAAE,CAAC,aAAD,CAAH,CAAzE;AACA;;AAED,wBAAIA,EAAE,CAAC,eAAD,CAAF,KAAwB,IAA5B,EAAkC;AACjCuD,sBAAAA,MAAM,CAACvD,EAAE,CAAC,OAAD,CAAH,CAAN,CAAoBiD,EAApB,CAAuB,CAAvB,IAA4B,CAACM,MAAM,CAACvD,EAAE,CAAC,OAAD,CAAH,CAAN,CAAoBiD,EAApB,CAAuB,CAAvB,KAA6B,CAA9B,IAAmCE,QAAQ,CAACnD,EAAE,CAAC,YAAD,CAAH,CAAvE;AACAuD,sBAAAA,MAAM,CAACvD,EAAE,CAAC,OAAD,CAAH,CAAN,CAAoBiD,EAApB,CAAuB,CAAvB,IAA4B,CAACM,MAAM,CAACvD,EAAE,CAAC,OAAD,CAAH,CAAN,CAAoBiD,EAApB,CAAuB,CAAvB,KAA6B,CAA9B,IAAmCE,QAAQ,CAACnD,EAAE,CAAC,aAAD,CAAH,CAAvE;AACA;;AAEDuD,oBAAAA,MAAM,CAACvD,EAAE,CAAC,OAAD,CAAH,CAAN,CAAoB8D,MAApB,GAA6B,CAACP,MAAM,CAACvD,EAAE,CAAC,OAAD,CAAH,CAAN,CAAoB8D,MAApB,IAA8B,CAA/B,IAAoCX,QAAQ,CAACnD,EAAE,CAAC,kBAAD,CAAH,CAAzE;AACA;AACD,iBA1BD;AALoC,kDAiC7BuD,MAjC6B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,OAhOnB;AAmQhBQ,IAAAA,WAAW,EAAE,uBAAM;AAClB,aAAOzF,GAAG,CAAC0F,MAAJ,CAAW,UAAChE,EAAD,EAAQ;AACzB;AACA,eAAO,CAACA,EAAE,CAACiE,IAAH,KAAY,UAAZ,IAA0BjE,EAAE,CAACiE,IAAH,KAAY,SAAvC,KAAqDjE,EAAE,CAACkE,IAAH,IAAWpG,IAAI,CAACqG,uBAA5E;AACA,OAHM,CAAP;AAIA,KAxQe;AAyQhBC,IAAAA,WAAW,EAAE,uBAAM;AAClB,UAAItG,IAAI,GAAG,EAAX;AACAY,MAAAA,GAAG,CAAC2F,QAAJ,CAAatE,OAAb,CAAqB,UAACC,EAAD,EAAQ;AAC5B,YAAIA,EAAE,CAACsE,UAAH,CAAcC,OAAd,KAA0B,UAA9B,EAA0CvE,EAAE,CAACsE,UAAH,CAAcC,OAAd,GAAwB,KAAxB;;AAC1C,YAAI,EAAEvE,EAAE,CAACsE,UAAH,CAAcC,OAAd,IAAyBzG,IAA3B,CAAJ,EAAsC;AACrCA,UAAAA,IAAI,CAACkC,EAAE,CAACsE,UAAH,CAAcC,OAAf,CAAJ,GAA8B;AAC7BC,YAAAA,gBAAgB,EAAE,CADW;AAE7BC,YAAAA,eAAe,EAAE;AAFY,WAA9B;AAIA;;AAED3G,QAAAA,IAAI,CAACkC,EAAE,CAACsE,UAAH,CAAcC,OAAf,CAAJ,CAA4BC,gBAA5B,IAAgDxE,EAAE,CAACsE,UAAH,CAAcI,SAA9D;AACA5G,QAAAA,IAAI,CAACkC,EAAE,CAACsE,UAAH,CAAcC,OAAf,CAAJ,CAA4BE,eAA5B,IAA+CzE,EAAE,CAACsE,UAAH,CAAcK,gBAA7D;AACA,OAXD;AAYA,aAAO7G,IAAP;AACA,KAxRe;AAyRhB8G,IAAAA,QAAQ,EAAE,oBAAM;AACf,aAAO9F,SAAP;AACA,KA3Re;AA4RhB+F,IAAAA,qBAAqB,EAAE,iCAAM;AAC5B,UAAIrG,IAAI,IAAI,KAAZ,EAAmB;AACnB,UAAIU,MAAM,GAAG,EAAb;AACA,UAAIpB,IAAI,GAAG,EAAX;AACA,UAAIiF,GAAG,GAAG,EAAV;AACA,UAAIC,GAAG,GAAG,EAAV;AACA,UAAIC,EAAE,GAAG,EAAT;AACA,UAAIlC,GAAG,GAAG,EAAV;AAEA,UAAI+D,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAezG,IAAf,CAAX,CAAf;AAEA,UAAI0G,OAAO,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAd;;AAEA,eAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACxB,eAAOA,KAAK,CAACjE,MAAN,CAAa,UAACC,IAAD,EAAOC,OAAP,EAAmB;AACtC,iBAAOD,IAAI,GAAGC,OAAd;AACA,SAFM,EAEJ,CAFI,CAAP;AAGA;;AAEDyD,MAAAA,QAAQ,CACNd,MADF,CACS,UAAChE,EAAD;AAAA,eAAQA,EAAE,CAAC,gBAAD,CAAF,GAAuB,CAA/B;AAAA,OADT,EAEED,OAFF,CAEU,UAACC,EAAD,EAAQ;AAChB,YAAI,CAACd,MAAM,CAACsE,cAAP,CAAsBxD,EAAE,CAAC,MAAD,CAAxB,CAAL,EAAwC;AACvCd,UAAAA,MAAM,CAACc,EAAE,CAAC,MAAD,CAAH,CAAN,GAAqB5B,KAAK,CAAC4B,EAAE,CAAC,MAAD,CAAH,CAA1B;AACA;;AAED+C,QAAAA,GAAG,CAAC/C,EAAE,CAAC,MAAD,CAAH,CAAH,GAAkB+C,GAAG,CAAC/C,EAAE,CAAC,MAAD,CAAH,CAAH,IAAmB,CAArC;AACAgD,QAAAA,GAAG,CAAChD,EAAE,CAAC,MAAD,CAAH,CAAH,GAAkBgD,GAAG,CAAChD,EAAE,CAAC,MAAD,CAAH,CAAH,IAAmB,CAArC;AACAiD,QAAAA,EAAE,CAACjD,EAAE,CAAC,MAAD,CAAH,CAAF,GAAiBiD,EAAE,CAACjD,EAAE,CAAC,MAAD,CAAH,CAAF,IAAkB,CAAnC;;AAEA,YAAIA,EAAE,CAAC,eAAD,CAAF,KAAwB,KAA5B,EAAmC;AAClC+C,UAAAA,GAAG,CAAC/C,EAAE,CAAC,MAAD,CAAH,CAAH,GAAkBmD,QAAQ,CAACnD,EAAE,CAAC,gBAAD,CAAH,CAA1B;AACA;;AAED,YAAIA,EAAE,CAAC,eAAD,CAAF,KAAwB,KAA5B,EAAmC;AAClCgD,UAAAA,GAAG,CAAChD,EAAE,CAAC,MAAD,CAAH,CAAH,GAAkBmD,QAAQ,CAACnD,EAAE,CAAC,gBAAD,CAAH,CAA1B;AACA;;AAED,YAAIA,EAAE,CAAC,eAAD,CAAF,KAAwB,IAA5B,EAAkC;AACjCiD,UAAAA,EAAE,CAACjD,EAAE,CAAC,MAAD,CAAH,CAAF,GAAiBmD,QAAQ,CAACnD,EAAE,CAAC,gBAAD,CAAH,CAAzB;AACA;AACD,OAtBF;AAwBA+C,MAAAA,GAAG,GAAGK,MAAM,CAAChE,MAAP,CAAc2D,GAAd,EACJsC,OADI,GAEJ1D,GAFI,CAEA,UAAC3B,EAAD,EAAK6B,GAAL,EAAUyD,GAAV;AAAA,eAAkBH,QAAQ,CAACG,GAAG,CAACpE,KAAJ,CAAUW,GAAV,EAAeyD,GAAG,CAAChE,MAAnB,CAAD,CAA1B;AAAA,OAFA,EAGJ+D,OAHI,EAAN;AAKApC,MAAAA,EAAE,GAAGG,MAAM,CAAChE,MAAP,CAAc6D,EAAd,EACHoC,OADG,GAEH1D,GAFG,CAEC,UAAC3B,EAAD,EAAK6B,GAAL,EAAUyD,GAAV;AAAA,eAAkBH,QAAQ,CAACG,GAAG,CAACpE,KAAJ,CAAUW,GAAV,EAAeyD,GAAG,CAAChE,MAAnB,CAAD,CAA1B;AAAA,OAFD,EAGH+D,OAHG,EAAL;AAKArC,MAAAA,GAAG,GAAGI,MAAM,CAAChE,MAAP,CAAc4D,GAAd,EACJqC,OADI,GAEJ1D,GAFI,CAEA,UAAC3B,EAAD,EAAK6B,GAAL,EAAUyD,GAAV;AAAA,eAAkBH,QAAQ,CAACG,GAAG,CAACpE,KAAJ,CAAUW,GAAV,EAAeyD,GAAG,CAAChE,MAAnB,CAAD,CAA1B;AAAA,OAFA,EAGJ+D,OAHI,EAAN;AAKAtE,MAAAA,GAAG,GAAGiC,GAAG,CAACrB,GAAJ,CAAQ,UAAC3B,EAAD,EAAK6B,GAAL,EAAUyD,GAAV,EAAkB;AAC/B,eAAOvC,GAAG,CAAClB,GAAD,CAAH,GAAWoB,EAAE,CAACpB,GAAD,CAAb,GAAqBmB,GAAG,CAACnB,GAAD,CAA/B;AACA,OAFK,CAAN;AAIA,aAAO;AACNmB,QAAAA,GAAG,EAAHA,GADM;AAEND,QAAAA,GAAG,EAAHA,GAFM;AAGNE,QAAAA,EAAE,EAAFA,EAHM;AAINlC,QAAAA,GAAG,EAAHA,GAJM;AAKN7B,QAAAA,MAAM,EAANA;AALM,OAAP;AAOA;AAjWe,GAAjB;AAoWAvB,EAAAA,SAAS,CAAC,YAAM;AACf4H,IAAAA,OAAO,CAACC,GAAR,CAAY,CACX3H,mBAAmB,CAAC,WAAD,EAAc,KAAd,EAAqB,IAArB,CADR,EAEXA,mBAAmB,CAAC,YAAD,EAAe,KAAf,EAAsB,IAAtB,CAFR,EAGXA,mBAAmB,CAAC,UAAD,EAAa,KAAb,EAAoB,KAApB,CAHR,EAIXA,mBAAmB,CAAC,kBAAD,CAJR,EAKXA,mBAAmB,CAAC,UAAD,EAAa,KAAb,EAAoB,KAApB,CALR,EAMXA,mBAAmB,CAAC,YAAD,CANR,CAAZ,EAOG4H,IAPH,CAOQ,gBAA8C;AAAA;AAAA,UAA5CjH,IAA4C;AAAA,UAAtCJ,KAAsC;AAAA,UAA/BE,GAA+B;AAAA,UAA1BM,QAA0B;AAAA,UAAhBF,GAAgB;AAAA,UAAXgH,KAAW;;AACrDnH,MAAAA,MAAM,CAACD,GAAD,CAAN;AACAD,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACAK,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAK,MAAAA,WAAW,CAACD,QAAD,CAAX;AACAD,MAAAA,MAAM,CAACD,GAAD,CAAN;AACAK,MAAAA,YAAY,CAAC2G,KAAD,CAAZ;AACAzH,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACA,KAfD;AAgBA,GAjBQ,EAiBN,EAjBM,CAAT;;AAmBA,WAAS0H,MAAT,CAAgBC,IAAhB,EAAsB9H,IAAtB,EAA4B;AAC3B,YAAQ8H,IAAR;AACC,WAAK,SAAL;AACC,YAAIN,GAAG,GAAGO,KAAK,CAACC,IAAN,CAAWlH,QAAX,CAAV;AACA0G,QAAAA,GAAG,CAACrF,IAAJ,CAASnC,IAAT;AACAe,QAAAA,WAAW,CAACyG,GAAD,CAAX;AACAnH,QAAAA,cAAc,CAACD,UAAU,GAAG,CAAd,CAAd;AACA;;AAED,WAAK,OAAL;AACC;AACA;AACAC,QAAAA,cAAc,CAACD,UAAU,GAAG,CAAd,CAAd;AACA;;AAED,WAAK,QAAL;AACC6H,QAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACA;AAhBF;AAkBA;;AAED,SAAO;AAAE/H,IAAAA,UAAU,EAAVA,UAAF;AAAcoC,IAAAA,UAAU,EAAVA,UAAd;AAA0BtC,IAAAA,KAAK,EAALA,KAA1B;AAAiC2H,IAAAA,MAAM,EAANA;AAAjC,GAAP;AACA;;GA/ae5H,O","sourcesContent":["import { useEffect, useState } from 'react';\nimport { fetchWithLocalCache } from '../utils';\nimport data from './../data/last-update.json';\nexport function useData() {\n\tlet [ready, setReady] = useState(false);\n\tlet [versioning, bumpVersioning] = useState(false);\n\tlet [weeks, setWeeks] = useState(false);\n\tlet [sns, setSns] = useState(false);\n\tlet [ecdc, setECDC] = useState(false);\n\tlet [ars, setArs] = useState(false);\n\tlet [vaccines, setVaccines] = useState(false);\n\tlet [casesData, setCasesData] = useState(false);\n\tlet [casos, setCasos] = useState({});\n\tlet [labels, setLabels] = useState([]);\n\tlet [values, setValues] = useState([]);\n\tlet [intervalId, setIntervalId] = useState(null);\n\n\tlet options = {\n\t\tmonth: 'short',\n\t\tday: 'numeric',\n\t};\n\tlet f = new Intl.DateTimeFormat('pt-PT', options);\n\tfunction parseData(data) {\n\t\tif (!ready) return;\n\t\tlet values = [];\n\t\tlet labels = [];\n\t\tdata.forEach((el) => {\n\t\t\tlabels.push(f.format(new Date(el.Data)));\n\t\t\tvalues.push(el.Vacinados_Ac);\n\t\t});\n\n\t\treturn {\n\t\t\tvalues,\n\t\t\tlabels,\n\t\t};\n\t}\n\n\tlet statistics = {\n\t\tgetRaw: () => {\n\t\t\treturn vaccines;\n\t\t},\n\t\tgetDailyData: () => {\n\t\t\treturn parseData(vaccines);\n\t\t},\n\t\tgetDesvioPadrao: () => {},\n\n\t\tgetMediaMovel: (dias) => {\n\t\t\tlet medias = [];\n\t\t\tlet labelsMedias = [];\n\t\t\tlet { labels, values } = parseData(vaccines);\n\n\t\t\tfor (let start = 1; start <= dias; start++) {\n\t\t\t\tlet sum = Math.round(values.slice(0, start).reduce((prev, current) => prev + current, 0) / start);\n\t\t\t\tmedias.push(sum);\n\t\t\t\tlabelsMedias.push(labels[start]);\n\t\t\t}\n\n\t\t\tfor (let start = dias; start <= values.length; start++) {\n\t\t\t\tlet sum = Math.round(values.slice(start - dias, start).reduce((prev, current) => prev + current, 0) / dias);\n\t\t\t\tmedias.push(sum);\n\t\t\t\tlabelsMedias.push(labels[start]);\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tvalues: medias,\n\t\t\t\tlabels: labelsMedias,\n\t\t\t};\n\t\t},\n\n\t\tgetMediaMovelDiaria: (dias) => {\n\t\t\tlet medias = [];\n\t\t\tlet labelsMedias = [];\n\t\t\tlet { values } = statistics.getVacinadosPorDia();\n\n\t\t\tfor (let start = 1; start <= dias; start++) {\n\t\t\t\tif (values[start] === null) {\n\t\t\t\t\tmedias.push(null);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tlet sum = Math.round(values.slice(0, start).reduce((prev, current) => prev + current, 0) / start);\n\t\t\t\tmedias.push(sum);\n\t\t\t\tlabelsMedias.push(labels[start]);\n\t\t\t}\n\n\t\t\tfor (let start = dias; start <= values.length; start++) {\n\t\t\t\tlet slice = values.slice(start - dias, start);\n\n\t\t\t\tif (values[start] === null || slice.includes(null) > 0) {\n\t\t\t\t\tmedias.push(null);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tlet sum = Math.round(slice.reduce((prev, current) => prev + current, 0) / dias);\n\t\t\t\tmedias.push(sum);\n\t\t\t\tlabelsMedias.push(labels[start]);\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tvalues: medias,\n\t\t\t\tlabels: labelsMedias,\n\t\t\t};\n\t\t},\n\n\t\tgetVacinadosPorDia: () => {\n\t\t\tlet { labels, values } = statistics.getDailyData();\n\t\t\tlet vacinadosPorDia = values.map((val, idx, vals) => {\n\t\t\t\t//The first one\n\t\t\t\tif (idx === 0) {\n\t\t\t\t\treturn val;\n\t\t\t\t}\n\n\t\t\t\tlet nextDay = idx - 1;\n\t\t\t\tif (vals[nextDay] == null || val == null) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\treturn val - vals[nextDay];\n\t\t\t});\n\t\t\treturn {\n\t\t\t\tvalues: vacinadosPorDia,\n\t\t\t\tlabels,\n\t\t\t};\n\t\t},\n\n\t\tgetVacinadosAcum: () => {\n\t\t\tlet in1 = [];\n\t\t\tlet in2 = [];\n\t\t\tlet total = [];\n\t\t\tlet { labels, values } = statistics.getDailyData();\n\t\t\tvalues.forEach((val, idx, vals) => {\n\t\t\t\tin1.push(vaccines[idx].Inoculacao1_Ac);\n\t\t\t\tin2.push(vaccines[idx].Inoculacao2_Ac);\n\t\t\t\ttotal.push(vaccines[idx].Vacinados_Ac);\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\tvaluesIn1: in1,\n\t\t\t\tvaluesIn2: in2,\n\t\t\t\tvalues: total,\n\t\t\t\tlabels,\n\t\t\t};\n\t\t},\n\t\tgetDiariosInoculacoes: () => {\n\t\t\tlet in1 = [];\n\t\t\tlet in2 = [];\n\t\t\tlet { labels, values } = parseData(vaccines);\n\n\t\t\tlet total = values.map((val, idx, vals) => {\n\t\t\t\t//The first one\n\t\t\t\tif (idx === 0) {\n\t\t\t\t\tin1.push(vaccines[idx].Inoculacao1_Ac);\n\t\t\t\t\tin2.push(vaccines[idx].Inoculacao2_Ac);\n\t\t\t\t\treturn val;\n\t\t\t\t}\n\n\t\t\t\tlet prevDay = idx - 1;\n\n\t\t\t\tif (vaccines[prevDay].Inoculacao1_Ac == null || vaccines[idx].Inoculacao1_Ac == null) {\n\t\t\t\t\tin1.push(null);\n\t\t\t\t} else {\n\t\t\t\t\tin1.push(vaccines[idx].Inoculacao1_Ac - vaccines[prevDay].Inoculacao1_Ac);\n\t\t\t\t}\n\n\t\t\t\tif (vaccines[prevDay].Inoculacao2_Ac == null || vaccines[idx].Inoculacao2_Ac == null) {\n\t\t\t\t\tin2.push(null);\n\t\t\t\t} else {\n\t\t\t\t\tin2.push(vaccines[idx].Inoculacao2_Ac - vaccines[prevDay].Inoculacao2_Ac);\n\t\t\t\t}\n\n\t\t\t\tif (vals[prevDay] == null || val == null) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\treturn val - vals[prevDay];\n\t\t\t});\n\t\t\treturn {\n\t\t\t\tvaluesIn1: in1,\n\t\t\t\tvaluesIn2: in2,\n\t\t\t\tvalues: total,\n\t\t\t\traw: vaccines,\n\t\t\t\tlabels,\n\t\t\t};\n\t\t},\n\t\tgetDiariosCases: () => {\n\t\t\tlet labels2 = [];\n\t\t\tlet values2 = [];\n\n\t\t\tcasesData.forEach((el) => {\n\t\t\t\tlabels2.push(new Date(el.Data));\n\t\t\t\tvalues2.push(el);\n\t\t\t});\n\n\t\t\treturn { labels: labels2, values: values2, raw: casesData };\n\t\t},\n\t\tgetReceivedDosesByBrandByWeek: async () => {\n\t\t\tlet labels = {};\n\n\t\t\tlet com = {};\n\t\t\tlet mod = {};\n\t\t\tlet az = {};\n\n\t\t\tecdc.forEach((el) => {\n\t\t\t\tvar obj = {};\n\t\t\t\tif (parseInt(el['Doses received']) > 0) {\n\t\t\t\t\tcom[el['Week']] = com[el['Week']] || null;\n\t\t\t\t\tmod[el['Week']] = mod[el['Week']] || null;\n\t\t\t\t\taz[el['Week']] = az[el['Week']] || null;\n\t\t\t\t\tlabels[el['Week']] = weeks[el['Week']];\n\n\t\t\t\t\tif (el['Vaccine brand'] === 'COM') {\n\t\t\t\t\t\tcom[el['Week']] = parseInt(el['Doses received']);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (el['Vaccine brand'] === 'MOD') {\n\t\t\t\t\t\tmod[el['Week']] = parseInt(el['Doses received']);\n\t\t\t\t\t}\n\t\t\t\t\tif (el['Vaccine brand'] === 'AZ') {\n\t\t\t\t\t\taz[el['Week']] = parseInt(el['Doses received']);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tcom = Object.values(com);\n\t\t\tmod = Object.values(mod);\n\t\t\taz = Object.values(az);\n\n\t\t\tlabels = Object.values(labels);\n\n\t\t\treturn {\n\t\t\t\tcom,\n\t\t\t\tmod,\n\t\t\t\taz,\n\t\t\t\tlabels,\n\t\t\t};\n\t\t},\n\t\tgetAdministredDosesByAgeByWeek: async () => {\n\t\t\tlet labels = {};\n\t\t\tlet maxValue = 0;\n\n\t\t\tlet groups = {};\n\n\t\t\tecdc.forEach((el) => {\n\t\t\t\tif (el['Doses received'] == '') {\n\t\t\t\t\tif (!labels.hasOwnProperty(el['Week'])) {\n\t\t\t\t\t\tlabels[el['Week'].replace('-', '')] = weeks[el['Week']];\n\t\t\t\t\t}\n\n\t\t\t\t\tgroups[el['Group']] = groups[el['Group']] || {\n\t\t\t\t\t\tdose_1: [],\n\t\t\t\t\t\tdose_2: [],\n\t\t\t\t\t};\n\t\t\t\t\tmaxValue = Math.max(el['First dose'], el['Second dose']);\n\t\t\t\t\tgroups[el['Group']].dose_1[el['Week']] = (groups[el['Group']].dose_1[el['Week']] || 0) + parseInt(el['First dose']);\n\t\t\t\t\tgroups[el['Group']].dose_2[el['Week']] = (groups[el['Group']].dose_2[el['Week']] || 0) + parseInt(el['Second dose']);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn {\n\t\t\t\tmaxValue,\n\t\t\t\tlabels,\n\t\t\t\tgroups,\n\t\t\t};\n\t\t},\n\t\tgetTotalAdministredDosesByAgeByWeek: async () => {\n\t\t\tlet labels = {};\n\n\t\t\tlet groups = {};\n\n\t\t\tecdc.forEach((el) => {\n\t\t\t\tif (el['Doses received'] == '') {\n\t\t\t\t\tgroups[el['Group']] = groups[el['Group']] || {\n\t\t\t\t\t\tmod: [],\n\t\t\t\t\t\tcom: [],\n\t\t\t\t\t\taz: [],\n\t\t\t\t\t\ttarget: 0,\n\t\t\t\t\t};\n\n\t\t\t\t\tif (el['Vaccine brand'] === 'COM') {\n\t\t\t\t\t\tgroups[el['Group']].com[0] = parseInt((groups[el['Group']].com[0] || 0) + parseInt(el['First dose']));\n\t\t\t\t\t\tgroups[el['Group']].com[1] = (groups[el['Group']].com[1] || 0) + parseInt(el['Second dose']);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (el['Vaccine brand'] === 'MOD') {\n\t\t\t\t\t\tgroups[el['Group']].mod[0] = (groups[el['Group']].mod[0] || 0) + parseInt(el['First dose']);\n\t\t\t\t\t\tgroups[el['Group']].mod[1] = (groups[el['Group']].mod[1] || 0) + parseInt(el['Second dose']);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (el['Vaccine brand'] === 'AZ') {\n\t\t\t\t\t\tgroups[el['Group']].az[0] = (groups[el['Group']].az[0] || 0) + parseInt(el['First dose']);\n\t\t\t\t\t\tgroups[el['Group']].az[1] = (groups[el['Group']].az[1] || 0) + parseInt(el['Second dose']);\n\t\t\t\t\t}\n\n\t\t\t\t\tgroups[el['Group']].target = (groups[el['Group']].target || 0) + parseInt(el['Group population']);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn groups;\n\t\t},\n\t\tgetTotalSNS: () => {\n\t\t\treturn sns.filter((el) => {\n\t\t\t\tdebugger;\n\t\t\t\treturn (el.TYPE === 'REGIONAL' || el.TYPE === 'GENERAL') && el.DATE == data.dateSnsStartWeirdFormat;\n\t\t\t});\n\t\t},\n\t\tgetTotalARS: () => {\n\t\t\tlet data = {};\n\t\t\tars.features.forEach((el) => {\n\t\t\t\tif (el.attributes.ARSNome === 'Nacional') el.attributes.ARSNome = 'All';\n\t\t\t\tif (!(el.attributes.ARSNome in data)) {\n\t\t\t\t\tdata[el.attributes.ARSNome] = {\n\t\t\t\t\t\tobitosNovos7Dias: 0,\n\t\t\t\t\t\tcasosNovos7Dias: 0,\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tdata[el.attributes.ARSNome].obitosNovos7Dias += el.attributes.VarObitos;\n\t\t\t\tdata[el.attributes.ARSNome].casosNovos7Dias += el.attributes.ConfirmadosNovos;\n\t\t\t});\n\t\t\treturn data;\n\t\t},\n\t\tgetCases: () => {\n\t\t\treturn casesData;\n\t\t},\n\t\tgetDosesRecebidasAcum: () => {\n\t\t\tif (ecdc == false) return;\n\t\t\tlet labels = {};\n\t\t\tlet data = {};\n\t\t\tlet com = {};\n\t\t\tlet mod = {};\n\t\t\tlet az = {};\n\t\t\tlet sum = [];\n\n\t\t\tlet ecdcCopy = JSON.parse(JSON.stringify(ecdc));\n\n\t\t\tlet numbers = [1, 1, 1, 1];\n\n\t\t\tfunction sumArray(array) {\n\t\t\t\treturn array.reduce((prev, current) => {\n\t\t\t\t\treturn prev + current;\n\t\t\t\t}, 0);\n\t\t\t}\n\n\t\t\tecdcCopy\n\t\t\t\t.filter((el) => el['Doses received'] > 0)\n\t\t\t\t.forEach((el) => {\n\t\t\t\t\tif (!labels.hasOwnProperty(el['Week'])) {\n\t\t\t\t\t\tlabels[el['Week']] = weeks[el['Week']];\n\t\t\t\t\t}\n\n\t\t\t\t\tcom[el['Week']] = com[el['Week']] || 0;\n\t\t\t\t\tmod[el['Week']] = mod[el['Week']] || 0;\n\t\t\t\t\taz[el['Week']] = az[el['Week']] || 0;\n\n\t\t\t\t\tif (el['Vaccine brand'] === 'COM') {\n\t\t\t\t\t\tcom[el['Week']] = parseInt(el['Doses received']);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (el['Vaccine brand'] === 'MOD') {\n\t\t\t\t\t\tmod[el['Week']] = parseInt(el['Doses received']);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (el['Vaccine brand'] === 'AZ') {\n\t\t\t\t\t\taz[el['Week']] = parseInt(el['Doses received']);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\tcom = Object.values(com)\n\t\t\t\t.reverse()\n\t\t\t\t.map((el, idx, arr) => sumArray(arr.slice(idx, arr.length)))\n\t\t\t\t.reverse();\n\n\t\t\taz = Object.values(az)\n\t\t\t\t.reverse()\n\t\t\t\t.map((el, idx, arr) => sumArray(arr.slice(idx, arr.length)))\n\t\t\t\t.reverse();\n\n\t\t\tmod = Object.values(mod)\n\t\t\t\t.reverse()\n\t\t\t\t.map((el, idx, arr) => sumArray(arr.slice(idx, arr.length)))\n\t\t\t\t.reverse();\n\n\t\t\tsum = mod.map((el, idx, arr) => {\n\t\t\t\treturn com[idx] + az[idx] + mod[idx];\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\tmod,\n\t\t\t\tcom,\n\t\t\t\taz,\n\t\t\t\tsum,\n\t\t\t\tlabels,\n\t\t\t};\n\t\t},\n\t};\n\n\tuseEffect(() => {\n\t\tPromise.all([\n\t\t\tfetchWithLocalCache('/api/ecdc', false, true),\n\t\t\tfetchWithLocalCache('/api/weeks', false, true),\n\t\t\tfetchWithLocalCache('/api/sns', false, false),\n\t\t\tfetchWithLocalCache('/api/vaccinesold'),\n\t\t\tfetchWithLocalCache('/api/ars', false, false),\n\t\t\tfetchWithLocalCache('/api/cases'),\n\t\t]).then(([ecdc, weeks, sns, vaccines, ars, cases]) => {\n\t\t\tsetSns(sns);\n\t\t\tsetWeeks(weeks);\n\t\t\tsetECDC(ecdc);\n\t\t\tsetVaccines(vaccines);\n\t\t\tsetArs(ars);\n\t\t\tsetCasesData(cases);\n\t\t\tsetReady(true);\n\t\t});\n\t}, []);\n\n\tfunction update(type, data) {\n\t\tswitch (type) {\n\t\t\tcase 'vacinas':\n\t\t\t\tlet arr = Array.from(vaccines);\n\t\t\t\tarr.push(data);\n\t\t\t\tsetVaccines(arr);\n\t\t\t\tbumpVersioning(versioning + 1);\n\t\t\t\tbreak;\n\n\t\t\tcase 'casos':\n\t\t\t\t//casos.push(data);\n\t\t\t\t//setCasos(casos);\n\t\t\t\tbumpVersioning(versioning + 1);\n\t\t\t\tbreak;\n\n\t\t\tcase 'reload':\n\t\t\t\twindow.location.reload();\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn { versioning, statistics, ready, update };\n}\n"]},"metadata":{},"sourceType":"module"}