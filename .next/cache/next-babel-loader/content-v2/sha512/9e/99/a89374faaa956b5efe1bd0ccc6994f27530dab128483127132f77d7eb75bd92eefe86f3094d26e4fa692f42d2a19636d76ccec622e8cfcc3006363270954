{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.detectDomainLocale = detectDomainLocale;\n\nfunction detectDomainLocale(domainItems, hostname, detectedLocale) {\n  let domainItem;\n\n  if (domainItems) {\n    if (detectedLocale) {\n      detectedLocale = detectedLocale.toLowerCase();\n    }\n\n    for (const item of domainItems) {\n      var _item$domain, _item$locales; // remove port if present\n\n\n      const domainHostname = (_item$domain = item.domain) == null ? void 0 : _item$domain.split(':')[0].toLowerCase();\n\n      if (hostname === domainHostname || detectedLocale === item.defaultLocale.toLowerCase() || (_item$locales = item.locales) != null && _item$locales.some(locale => locale.toLowerCase() === detectedLocale)) {\n        domainItem = item;\n        break;\n      }\n    }\n  }\n\n  return domainItem;\n}","map":{"version":3,"sources":["../../../../next-server/lib/i18n/detect-domain-locale.ts"],"names":["detectedLocale","domainHostname","item","hostname","locale","domainItem"],"mappings":";;;;;AAAO,SAAA,kBAAA,CAAA,WAAA,EAAA,QAAA,EAAA,cAAA,EAWL;AACA,MAAA,UAAA;;AASA,MAAA,WAAA,EAAiB;AACf,QAAA,cAAA,EAAoB;AAClBA,MAAAA,cAAc,GAAGA,cAAc,CAA/BA,WAAiBA,EAAjBA;AAGF;;AAAA,SAAK,MAAL,IAAA,IAAA,WAAA,EAAgC;AAAA,UAAA,YAAA,EAAA,aAAA,CAAA,CAC9B;;;AACA,YAAMC,cAAc,GAAA,CAAA,YAAA,GAAGC,IAAI,CAAP,MAAA,KAAA,IAAA,GAAA,KAAA,CAAA,GAAGA,YAAAA,CAAAA,KAAAA,CAAAA,GAAAA,EAAAA,CAAAA,EAAvB,WAAuBA,EAAvB;;AACA,UACEC,QAAQ,KAARA,cAAAA,IACAH,cAAc,KAAKE,IAAI,CAAJA,aAAAA,CADnBC,WACmBD,EADnBC,IAAAA,CAAAA,aAAAA,GAEAD,IAAI,CAFJC,OAAAA,KAAAA,IAAAA,IAEAD,aAAAA,CAAAA,IAAAA,CAAoBE,MAAD,IAAYA,MAAM,CAANA,WAAAA,OAHjC,cAGEF,CAHF,EAIE;AACAG,QAAAA,UAAU,GAAVA,IAAAA;AACA;AAEH;AACF;AAED;;AAAA,SAAA,UAAA;AACD","sourcesContent":["export function detectDomainLocale(\n  domainItems:\n    | Array<{\n        http?: boolean\n        domain: string\n        locales?: string[]\n        defaultLocale: string\n      }>\n    | undefined,\n  hostname?: string,\n  detectedLocale?: string\n) {\n  let domainItem:\n    | {\n        http?: boolean\n        domain: string\n        locales?: string[]\n        defaultLocale: string\n      }\n    | undefined\n\n  if (domainItems) {\n    if (detectedLocale) {\n      detectedLocale = detectedLocale.toLowerCase()\n    }\n\n    for (const item of domainItems) {\n      // remove port if present\n      const domainHostname = item.domain?.split(':')[0].toLowerCase()\n      if (\n        hostname === domainHostname ||\n        detectedLocale === item.defaultLocale.toLowerCase() ||\n        item.locales?.some((locale) => locale.toLowerCase() === detectedLocale)\n      ) {\n        domainItem = item\n        break\n      }\n    }\n  }\n\n  return domainItem\n}\n"]},"metadata":{},"sourceType":"script"}