{"ast":null,"code":"import _regeneratorRuntime from \"/Users/AFS09/Documents/repos_private/c19-vaccine/c19-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/AFS09/Documents/repos_private/c19-vaccine/c19-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport './../wydr';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport '../styles/globals.scss';\nimport '@babel/polyfill';\nimport { trackPlausible } from '../utils';\nimport { Footer } from '../components/Footer';\nimport { Metatags } from '../components/MetaTags';\nimport { Header } from '../components/Header';\nimport { RegiaoContext } from './../components/context/regiao';\nimport { useEffect } from 'react';\nimport { initSockets } from '../hooks/initSockets';\nvar allowed_regioes = ['/', 'acores', 'madeira'];\n\nfunction NextApp(_ref) {\n  var Component = _ref.Component,\n      props = _ref.props;\n  // Unconventional way of not having multiple sockets connected between pages\n  useEffect(function () {\n    initSockets(function (data) {\n      var event = new Event('socket_update');\n      event.data = data;\n      window.dispatchEvent(event);\n    });\n\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.register('/sw.js', {\n        scope: './'\n      }).then(function (registration) {\n        /* success */\n      }, function (error) {\n        /* error */\n      });\n    } else {//not supported\n    }\n  }, []);\n  return /*#__PURE__*/_jsxs(RegiaoContext.Provider, {\n    value: props.regiao || 'portugal',\n    children: [/*#__PURE__*/_jsx(Metatags, {}), /*#__PURE__*/_jsx(Header, {}), /*#__PURE__*/_jsx(Component, {}), /*#__PURE__*/_jsx(Footer, {})]\n  });\n}\n\nNextApp.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(app) {\n    var _app$ctx, _app$ctx$req;\n\n    var url, regiao;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            trackPlausible(app.ctx.req);\n            url = (app === null || app === void 0 ? void 0 : (_app$ctx = app.ctx) === null || _app$ctx === void 0 ? void 0 : (_app$ctx$req = _app$ctx.req) === null || _app$ctx$req === void 0 ? void 0 : _app$ctx$req.url.replace('/', '')) || app.ctx.pathname.replace('/', '');\n            url = url.split('?')[0];\n            regiao = 'portugal';\n\n            if (url !== '') {\n              regiao = url;\n            }\n\n            if (!allowed_regioes.includes(regiao)) regiao = 'portugal';\n            return _context.abrupt(\"return\", {\n              props: {\n                regiao: regiao,\n                pusher: ''\n              }\n            });\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default NextApp;","map":null,"metadata":{},"sourceType":"module"}