{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/pi/Web/mapa-vacinacao-c19/components/graphs/BarVacinasRecebidaDia.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useEffect, useRef, useState } from 'react'; //import 'chartjs-plugin-annotation';\n\nimport { Bar, Line } from 'react-chartjs-2';\nimport { formatNumber } from '../../utils';\nimport { Card } from './../Card';\nimport generic from '../../data/generic.json';\nimport { CustomCheckbox } from '../CustomCheckbox';\nimport { RESIZE_TRESHOLD } from '../../constants';\nimport styles from './../Card.module.scss';\nexport function BarVacinasRecebidaDia({\n  statistics,\n  colors\n}) {\n  let {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  let {\n    0: graphData,\n    1: setGraphData\n  } = useState({});\n  let [foreground, color_1, color_2, color_3, color_4] = colors;\n  let {\n    0: annotationsToggle,\n    1: setAnnotationsToggle\n  } = useState({\n    dose: true,\n    dose2: true,\n    dose3: true\n  });\n\n  const data = canvas => {\n    let {\n      labels,\n      mod,\n      com,\n      az\n    } = graphData;\n\n    if (window.innerWidth <= RESIZE_TRESHOLD) {\n      canvas.parentNode.style.width = RESIZE_TRESHOLD + 'px';\n    } else {\n      canvas.parentNode.style.width = '100%';\n    }\n\n    window.addEventListener('resize', () => {\n      if (window.innerWidth <= RESIZE_TRESHOLD) {\n        canvas.parentNode.style.width = RESIZE_TRESHOLD + 'px';\n      } else {\n        canvas.parentNode.style.width = '100%';\n      }\n    });\n    return {\n      labels: labels.map(({\n        from,\n        to\n      }) => {\n        let fromDate = new Date(from);\n        let toDate = new Date(to);\n        return `De ${formatNumber(fromDate.getDate())}/${formatNumber(fromDate.getMonth() + 1)} a ${formatNumber(toDate.getDate())}/${formatNumber(toDate.getMonth() + 1)}`;\n      }),\n      datasets: [{\n        label: 'Comirnaty (Pfizer/BioNTech)',\n        fill: false,\n        type: 'bar',\n        overlayBars: true,\n        backgroundColor: foreground,\n        data: com,\n        order: 2,\n        display: false,\n        stack: 'stack0'\n      }, {\n        label: 'Moderna',\n        backgroundColor: color_1,\n        borderColor: color_1,\n        data: mod,\n        type: 'bar',\n        overlayBars: true,\n        order: 3,\n        stack: 'stack0'\n      }, {\n        label: 'AstraZeneca',\n        backgroundColor: color_3,\n        borderColor: color_3,\n        type: 'bar',\n        data: az,\n        overlayBars: true,\n        order: 3,\n        stack: 'stack0'\n      }]\n    };\n  };\n\n  const options = () => {\n    return {\n      plugins: {\n        datalabels: {\n          display: false,\n          color: 'blue'\n        }\n      },\n      legend: {\n        position: 'bottom',\n        align: 'start',\n        onHover: function (event, legend) {\n          document.body.classList.add('mouse-pointer');\n        },\n        onLeave: function (event, legend) {\n          document.body.classList.remove('mouse-pointer');\n        }\n      },\n      animation: {\n        duration: 1000\n      },\n      annotation: {\n        annotations: [{\n          type: 'line',\n          mode: 'horizontal',\n          scaleID: 'y-axis-0',\n          value: annotationsToggle.dose ? generic.doses.valor : null,\n          borderColor: '#0A9DD1',\n          borderWidth: 2,\n          borderDash: [5, 5],\n          label: {\n            backgroundColor: 'rgba(0,0,0,0.0)',\n            drawTime: 'afterDatasetsDraw',\n            fontSize: 13,\n            textAlign: 'left',\n            fontColor: '#0A9DD1',\n            position: 'left',\n            xAdjust: 10,\n            yAdjust: -10,\n            fontSize: '13px',\n            fontStyle: 'bold',\n            enabled: true,\n            content: `Doses adquiridas - ${generic.doses.legenda} (01/03/2021) `\n          }\n        }, {\n          type: 'line',\n          mode: 'horizontal',\n          scaleID: 'y-axis-0',\n          value: annotationsToggle.dose ? 41000000 : null,\n          borderColor: 'transparent',\n          borderWidth: 0,\n          label: {\n            backgroundColor: 'rgba(0,0,0,0.0)',\n            xAdjust: 0,\n            yAdjust: -10,\n            enabled: false\n          }\n        }, {\n          type: 'line',\n          mode: 'horizontal',\n          scaleID: 'y-axis-0',\n          value: annotationsToggle.dose3 ? generic.doses3.valor : null,\n          borderColor: '#D17615',\n          borderWidth: 2,\n          borderDash: [5, 5],\n          label: {\n            backgroundColor: 'rgba(0,0,0,0.0)',\n            drawTime: 'afterDatasetsDraw',\n            fontSize: 13,\n            textAlign: 'left',\n            font: {\n              style: 'bold'\n            },\n            fontStyle: 'bold',\n            fontColor: '#D11541',\n            fontSize: '13px',\n            position: 'left',\n            xAdjust: 0,\n            yAdjust: -10,\n            enabled: true,\n            content: `Doses adquiridas - ${generic.doses3.legenda} (21/01/2020) `\n          }\n        }, {\n          type: 'line',\n          mode: 'horizontal',\n          scaleID: 'y-axis-0',\n          value: annotationsToggle.dose2 ? generic.doses2.valor : null,\n          borderColor: '#D17615',\n          borderWidth: 2,\n          borderDash: [5, 5],\n          label: {\n            backgroundColor: 'rgba(0,0,0,0.0)',\n            drawTime: 'afterDatasetsDraw',\n            fontSize: 13,\n            textAlign: 'left',\n            font: {\n              style: 'bold'\n            },\n            fontStyle: 'bold',\n            fontColor: '#D17615',\n            fontSize: '13px',\n            position: 'left',\n            xAdjust: 0,\n            yAdjust: -10,\n            enabled: true,\n            content: `Doses adquiridas - ${generic.doses2.legenda} (04/12/2020) `\n          }\n        }]\n      },\n      tooltips: {\n        mode: 'index',\n        intersect: false,\n        callbacks: {\n          label: (tooltipItem, data) => {\n            var label = data.datasets[tooltipItem.datasetIndex].label;\n            return label + ': ' + (parseInt(tooltipItem.value) ? formatNumber(parseInt(tooltipItem.value), false) : 0);\n          },\n          title: (tooltipItem, data) => {\n            var label = data.datasets[tooltipItem[0].datasetIndex];\n            return tooltipItem[0].label;\n          }\n        }\n      },\n      scales: {\n        yAxes: [{\n          stacked: true,\n          scaleLabel: {\n            display: true\n          },\n          gridLines: {\n            drawBorder: false\n          },\n          ticks: {\n            beginAtZero: true,\n            maxTicksLimit: window.innerWidth <= RESIZE_TRESHOLD ? 8 : 10,\n            minTicksLimit: window.innerWidth <= RESIZE_TRESHOLD ? 8 : 10,\n            callback: value => formatNumber(value, false)\n          }\n        }],\n        xAxes: [{\n          stacked: true,\n          ticks: {\n            beginAtZero: true\n          }\n        }]\n      }\n    };\n  };\n\n  useEffect(() => {\n    statistics.getReceivedDosesByBrandByWeek().then(recievedData => {\n      setGraphData(recievedData);\n      setLoading(false);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    allowOverflow: true,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.card_scrollable,\n      style: {\n        textAlign: 'left'\n      },\n      children: [/*#__PURE__*/_jsxDEV(CustomCheckbox, {\n        checked: annotationsToggle.dose,\n        label: 'Doses adquiridas (01/03/2021)',\n        onChange: checked => {\n          setAnnotationsToggle(_objectSpread(_objectSpread({}, annotationsToggle), {}, {\n            dose: checked\n          }));\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(CustomCheckbox, {\n        checked: annotationsToggle.dose3,\n        label: 'Doses adquiridas (21/01/2021)',\n        onChange: checked => {\n          setAnnotationsToggle(_objectSpread(_objectSpread({}, annotationsToggle), {}, {\n            dose3: checked\n          }));\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(CustomCheckbox, {\n        checked: annotationsToggle.dose2,\n        label: 'Doses adquiridas (04/12/2020)',\n        onChange: checked => {\n          setAnnotationsToggle(_objectSpread(_objectSpread({}, annotationsToggle), {}, {\n            dose2: checked\n          }));\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: !loading ? /*#__PURE__*/_jsxDEV(Bar, {\n        height: 100,\n        options: options(),\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 21\n      }, this) : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 268,\n    columnNumber: 3\n  }, this);\n}","map":{"version":3,"sources":["/home/pi/Web/mapa-vacinacao-c19/components/graphs/BarVacinasRecebidaDia.jsx"],"names":["useEffect","useRef","useState","Bar","Line","formatNumber","Card","generic","CustomCheckbox","RESIZE_TRESHOLD","styles","BarVacinasRecebidaDia","statistics","colors","loading","setLoading","graphData","setGraphData","foreground","color_1","color_2","color_3","color_4","annotationsToggle","setAnnotationsToggle","dose","dose2","dose3","data","canvas","labels","mod","com","az","window","innerWidth","parentNode","style","width","addEventListener","map","from","to","fromDate","Date","toDate","getDate","getMonth","datasets","label","fill","type","overlayBars","backgroundColor","order","display","stack","borderColor","options","plugins","datalabels","color","legend","position","align","onHover","event","document","body","classList","add","onLeave","remove","animation","duration","annotation","annotations","mode","scaleID","value","doses","valor","borderWidth","borderDash","drawTime","fontSize","textAlign","fontColor","xAdjust","yAdjust","fontStyle","enabled","content","legenda","doses3","font","doses2","tooltips","intersect","callbacks","tooltipItem","datasetIndex","parseInt","title","scales","yAxes","stacked","scaleLabel","gridLines","drawBorder","ticks","beginAtZero","maxTicksLimit","minTicksLimit","callback","xAxes","getReceivedDosesByBrandByWeek","then","recievedData","card_scrollable","checked"],"mappings":"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","sourcesContent":["import { useEffect, useRef, useState } from 'react';\n//import 'chartjs-plugin-annotation';\nimport { Bar, Line } from 'react-chartjs-2';\nimport { formatNumber } from '../../utils';\nimport { Card } from './../Card';\nimport generic from '../../data/generic.json';\nimport { CustomCheckbox } from '../CustomCheckbox';\nimport { RESIZE_TRESHOLD } from '../../constants';\nimport styles from './../Card.module.scss';\n\nexport function BarVacinasRecebidaDia({ statistics, colors }) {\n\tlet [loading, setLoading] = useState(true);\n\tlet [graphData, setGraphData] = useState({});\n\tlet [foreground, color_1, color_2, color_3, color_4] = colors;\n\tlet [annotationsToggle, setAnnotationsToggle] = useState({\n\t\tdose: true,\n\t\tdose2: true,\n\t\tdose3: true,\n\t});\n\tconst data = (canvas) => {\n\t\tlet { labels, mod, com, az } = graphData;\n\n\t\tif (window.innerWidth <= RESIZE_TRESHOLD) {\n\t\t\tcanvas.parentNode.style.width = RESIZE_TRESHOLD + 'px';\n\t\t} else {\n\t\t\tcanvas.parentNode.style.width = '100%';\n\t\t}\n\n\t\twindow.addEventListener('resize', () => {\n\t\t\tif (window.innerWidth <= RESIZE_TRESHOLD) {\n\t\t\t\tcanvas.parentNode.style.width = RESIZE_TRESHOLD + 'px';\n\t\t\t} else {\n\t\t\t\tcanvas.parentNode.style.width = '100%';\n\t\t\t}\n\t\t});\n\n\t\treturn {\n\t\t\tlabels: labels.map(({ from, to }) => {\n\t\t\t\tlet fromDate = new Date(from);\n\t\t\t\tlet toDate = new Date(to);\n\n\t\t\t\treturn `De ${formatNumber(fromDate.getDate())}/${formatNumber(fromDate.getMonth() + 1)} a ${formatNumber(toDate.getDate())}/${formatNumber(toDate.getMonth() + 1)}`;\n\t\t\t}),\n\t\t\tdatasets: [\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Comirnaty (Pfizer/BioNTech)',\n\t\t\t\t\tfill: false,\n\t\t\t\t\ttype: 'bar',\n\t\t\t\t\toverlayBars: true,\n\t\t\t\t\tbackgroundColor: foreground,\n\t\t\t\t\tdata: com,\n\t\t\t\t\torder: 2,\n\t\t\t\t\tdisplay: false,\n\t\t\t\t\tstack: 'stack0',\n\t\t\t\t},\n\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Moderna',\n\t\t\t\t\tbackgroundColor: color_1,\n\t\t\t\t\tborderColor: color_1,\n\t\t\t\t\tdata: mod,\n\t\t\t\t\ttype: 'bar',\n\n\t\t\t\t\toverlayBars: true,\n\t\t\t\t\torder: 3,\n\t\t\t\t\tstack: 'stack0',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'AstraZeneca',\n\t\t\t\t\tbackgroundColor: color_3,\n\t\t\t\t\tborderColor: color_3,\n\t\t\t\t\ttype: 'bar',\n\t\t\t\t\tdata: az,\n\t\t\t\t\toverlayBars: true,\n\t\t\t\t\torder: 3,\n\t\t\t\t\tstack: 'stack0',\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\t};\n\tconst options = () => {\n\t\treturn {\n\t\t\tplugins: {\n\t\t\t\tdatalabels: {\n\t\t\t\t\tdisplay: false,\n\t\t\t\t\tcolor: 'blue',\n\t\t\t\t},\n\t\t\t},\n\t\t\tlegend: {\n\t\t\t\tposition: 'bottom',\n\t\t\t\talign: 'start',\n\t\t\t\tonHover: function (event, legend) {\n\t\t\t\t\tdocument.body.classList.add('mouse-pointer');\n\t\t\t\t},\n\t\t\t\tonLeave: function (event, legend) {\n\t\t\t\t\tdocument.body.classList.remove('mouse-pointer');\n\t\t\t\t},\n\t\t\t},\n\t\t\tanimation: {\n\t\t\t\tduration: 1000,\n\t\t\t},\n\t\t\tannotation: {\n\t\t\t\tannotations: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'line',\n\t\t\t\t\t\tmode: 'horizontal',\n\t\t\t\t\t\tscaleID: 'y-axis-0',\n\t\t\t\t\t\tvalue: annotationsToggle.dose ? generic.doses.valor : null,\n\t\t\t\t\t\tborderColor: '#0A9DD1',\n\t\t\t\t\t\tborderWidth: 2,\n\t\t\t\t\t\tborderDash: [5, 5],\n\n\t\t\t\t\t\tlabel: {\n\t\t\t\t\t\t\tbackgroundColor: 'rgba(0,0,0,0.0)',\n\n\t\t\t\t\t\t\tdrawTime: 'afterDatasetsDraw',\n\n\t\t\t\t\t\t\tfontSize: 13,\n\n\t\t\t\t\t\t\ttextAlign: 'left',\n\t\t\t\t\t\t\tfontColor: '#0A9DD1',\n\t\t\t\t\t\t\tposition: 'left',\n\t\t\t\t\t\t\txAdjust: 10,\n\t\t\t\t\t\t\tyAdjust: -10,\n\t\t\t\t\t\t\tfontSize: '13px',\n\t\t\t\t\t\t\tfontStyle: 'bold',\n\n\t\t\t\t\t\t\tenabled: true,\n\t\t\t\t\t\t\tcontent: `Doses adquiridas - ${generic.doses.legenda} (01/03/2021) `,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'line',\n\t\t\t\t\t\tmode: 'horizontal',\n\t\t\t\t\t\tscaleID: 'y-axis-0',\n\t\t\t\t\t\tvalue: annotationsToggle.dose ? 41000000 : null,\n\t\t\t\t\t\tborderColor: 'transparent',\n\t\t\t\t\t\tborderWidth: 0,\n\n\t\t\t\t\t\tlabel: {\n\t\t\t\t\t\t\tbackgroundColor: 'rgba(0,0,0,0.0)',\n\n\t\t\t\t\t\t\txAdjust: 0,\n\t\t\t\t\t\t\tyAdjust: -10,\n\n\t\t\t\t\t\t\tenabled: false,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'line',\n\t\t\t\t\t\tmode: 'horizontal',\n\t\t\t\t\t\tscaleID: 'y-axis-0',\n\t\t\t\t\t\tvalue: annotationsToggle.dose3 ? generic.doses3.valor : null,\n\t\t\t\t\t\tborderColor: '#D17615',\n\t\t\t\t\t\tborderWidth: 2,\n\t\t\t\t\t\tborderDash: [5, 5],\n\n\t\t\t\t\t\tlabel: {\n\t\t\t\t\t\t\tbackgroundColor: 'rgba(0,0,0,0.0)',\n\n\t\t\t\t\t\t\tdrawTime: 'afterDatasetsDraw',\n\n\t\t\t\t\t\t\tfontSize: 13,\n\n\t\t\t\t\t\t\ttextAlign: 'left',\n\t\t\t\t\t\t\tfont: {\n\t\t\t\t\t\t\t\tstyle: 'bold',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tfontStyle: 'bold',\n\n\t\t\t\t\t\t\tfontColor: '#D11541',\n\t\t\t\t\t\t\tfontSize: '13px',\n\t\t\t\t\t\t\tposition: 'left',\n\t\t\t\t\t\t\txAdjust: 0,\n\t\t\t\t\t\t\tyAdjust: -10,\n\t\t\t\t\t\t\tenabled: true,\n\t\t\t\t\t\t\tcontent: `Doses adquiridas - ${generic.doses3.legenda} (21/01/2020) `,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'line',\n\t\t\t\t\t\tmode: 'horizontal',\n\t\t\t\t\t\tscaleID: 'y-axis-0',\n\t\t\t\t\t\tvalue: annotationsToggle.dose2 ? generic.doses2.valor : null,\n\t\t\t\t\t\tborderColor: '#D17615',\n\t\t\t\t\t\tborderWidth: 2,\n\t\t\t\t\t\tborderDash: [5, 5],\n\n\t\t\t\t\t\tlabel: {\n\t\t\t\t\t\t\tbackgroundColor: 'rgba(0,0,0,0.0)',\n\n\t\t\t\t\t\t\tdrawTime: 'afterDatasetsDraw',\n\n\t\t\t\t\t\t\tfontSize: 13,\n\n\t\t\t\t\t\t\ttextAlign: 'left',\n\t\t\t\t\t\t\tfont: {\n\t\t\t\t\t\t\t\tstyle: 'bold',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tfontStyle: 'bold',\n\n\t\t\t\t\t\t\tfontColor: '#D17615',\n\t\t\t\t\t\t\tfontSize: '13px',\n\t\t\t\t\t\t\tposition: 'left',\n\t\t\t\t\t\t\txAdjust: 0,\n\t\t\t\t\t\t\tyAdjust: -10,\n\t\t\t\t\t\t\tenabled: true,\n\t\t\t\t\t\t\tcontent: `Doses adquiridas - ${generic.doses2.legenda} (04/12/2020) `,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\ttooltips: {\n\t\t\t\tmode: 'index',\n\t\t\t\tintersect: false,\n\t\t\t\tcallbacks: {\n\t\t\t\t\tlabel: (tooltipItem, data) => {\n\t\t\t\t\t\tvar label = data.datasets[tooltipItem.datasetIndex].label;\n\t\t\t\t\t\treturn label + ': ' + (parseInt(tooltipItem.value) ? formatNumber(parseInt(tooltipItem.value), false) : 0);\n\t\t\t\t\t},\n\t\t\t\t\ttitle: (tooltipItem, data) => {\n\t\t\t\t\t\tvar label = data.datasets[tooltipItem[0].datasetIndex];\n\n\t\t\t\t\t\treturn tooltipItem[0].label;\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\n\t\t\tscales: {\n\t\t\t\tyAxes: [\n\t\t\t\t\t{\n\t\t\t\t\t\tstacked: true,\n\t\t\t\t\t\tscaleLabel: {\n\t\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tgridLines: {\n\t\t\t\t\t\t\tdrawBorder: false,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tticks: {\n\t\t\t\t\t\t\tbeginAtZero: true,\n\t\t\t\t\t\t\tmaxTicksLimit: window.innerWidth <= RESIZE_TRESHOLD ? 8 : 10,\n\t\t\t\t\t\t\tminTicksLimit: window.innerWidth <= RESIZE_TRESHOLD ? 8 : 10,\n\n\t\t\t\t\t\t\tcallback: (value) => formatNumber(value, false),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\txAxes: [\n\t\t\t\t\t{\n\t\t\t\t\t\tstacked: true,\n\t\t\t\t\t\tticks: {\n\t\t\t\t\t\t\tbeginAtZero: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t};\n\t};\n\n\tuseEffect(() => {\n\t\tstatistics.getReceivedDosesByBrandByWeek().then((recievedData) => {\n\t\t\tsetGraphData(recievedData);\n\t\t\tsetLoading(false);\n\t\t});\n\t}, []);\n\n\treturn (\n\t\t<Card allowOverflow={true}>\n\t\t\t<div className={styles.card_scrollable} style={{ textAlign: 'left' }}>\n\t\t\t\t<CustomCheckbox\n\t\t\t\t\tchecked={annotationsToggle.dose}\n\t\t\t\t\tlabel={'Doses adquiridas (01/03/2021)'}\n\t\t\t\t\tonChange={(checked) => {\n\t\t\t\t\t\tsetAnnotationsToggle({\n\t\t\t\t\t\t\t...annotationsToggle,\n\t\t\t\t\t\t\tdose: checked,\n\t\t\t\t\t\t});\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<CustomCheckbox\n\t\t\t\t\tchecked={annotationsToggle.dose3}\n\t\t\t\t\tlabel={'Doses adquiridas (21/01/2021)'}\n\t\t\t\t\tonChange={(checked) => {\n\t\t\t\t\t\tsetAnnotationsToggle({\n\t\t\t\t\t\t\t...annotationsToggle,\n\t\t\t\t\t\t\tdose3: checked,\n\t\t\t\t\t\t});\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<CustomCheckbox\n\t\t\t\t\tchecked={annotationsToggle.dose2}\n\t\t\t\t\tlabel={'Doses adquiridas (04/12/2020)'}\n\t\t\t\t\tonChange={(checked) => {\n\t\t\t\t\t\tsetAnnotationsToggle({\n\t\t\t\t\t\t\t...annotationsToggle,\n\t\t\t\t\t\t\tdose2: checked,\n\t\t\t\t\t\t});\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div>{!loading ? <Bar height={100} options={options()} data={data} /> : ''}</div>\n\t\t</Card>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}