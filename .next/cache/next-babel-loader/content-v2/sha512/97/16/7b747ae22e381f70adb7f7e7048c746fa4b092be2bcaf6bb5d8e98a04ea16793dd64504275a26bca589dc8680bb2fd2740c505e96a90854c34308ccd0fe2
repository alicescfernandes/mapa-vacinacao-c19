{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _toArray from \"@babel/runtime/helpers/esm/toArray\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, useEffect, useState } from 'react';\nimport DatePicker from 'react-datepicker';\nimport { format, subDays } from 'date-fns';\nimport styles from './DatePickerButton.module.scss';\nimport Arrow from '../assets/arrow.svg';\nimport { pt } from 'date-fns/locale';\nexport function DatePickerButton(_ref) {\n  var minDate = _ref.minDate,\n      maxDate = _ref.maxDate,\n      onDateSelect = _ref.onDateSelect,\n      colors = _ref.colors;\n\n  var _useState = useState(new Date(maxDate)),\n      startDate = _useState[0],\n      setStartDate = _useState[1];\n\n  var _format$replace$split = format(startDate, \"eeee, dd 'de' LLLL 'de' yyyy\", {\n    locale: pt\n  }).replace('-feira', '').split(''),\n      _format$replace$split2 = _toArray(_format$replace$split),\n      first = _format$replace$split2[0],\n      restDate = _format$replace$split2.slice(1);\n\n  var d = [first.toUpperCase()].concat(_toConsumableArray(restDate)).join('');\n\n  var _format$replace$split3 = format(startDate, \"dd 'de' LLL 'de' yyyy\", {\n    locale: pt\n  }).replace('-feira', '').split(''),\n      _format$replace$split4 = _toArray(_format$replace$split3),\n      first = _format$replace$split4[0],\n      restDate = _format$replace$split4.slice(1);\n\n  var d2 = [first.toUpperCase()].concat(_toConsumableArray(restDate)).join('');\n  useEffect(function () {\n    onDateSelect === null || onDateSelect === void 0 ? void 0 : onDateSelect(new Date(startDate));\n  }, [startDate]);\n  useEffect(function () {\n    setStartDate(new Date(maxDate));\n  }, [maxDate]);\n\n  var ExampleCustomInput = /*#__PURE__*/function (_Component) {\n    _inherits(ExampleCustomInput, _Component);\n\n    var _super = _createSuper(ExampleCustomInput);\n\n    function ExampleCustomInput(props) {\n      _classCallCheck(this, ExampleCustomInput);\n\n      return _super.call(this, props);\n    }\n\n    _createClass(ExampleCustomInput, [{\n      key: \"render\",\n      value: function render() {\n        var onClick = this.props.onClick;\n        return /*#__PURE__*/_jsx(_Fragment, {\n          children: /*#__PURE__*/_jsxs(\"div\", {\n            children: [/*#__PURE__*/_jsx(\"button\", {\n              className: styles.datepicker,\n              disabled: startDate.getTime() <= minDate,\n              onClick: function onClick() {\n                var prevDay = subDays(startDate, 1);\n                return setStartDate(new Date(prevDay));\n              },\n              children: /*#__PURE__*/_jsx(Arrow, {\n                className: styles.svg\n              })\n            }), /*#__PURE__*/_jsxs(\"button\", {\n              style: {\n                width: '60vw',\n                maxWidth: 285\n              },\n              className: styles.datepicker,\n              onClick: onClick,\n              children: [/*#__PURE__*/_jsx(\"span\", {\n                className: 'hide_micro_mobile',\n                children: d\n              }), /*#__PURE__*/_jsx(\"span\", {\n                className: 'show_micro_mobile',\n                children: d2\n              })]\n            }), /*#__PURE__*/_jsx(\"button\", {\n              className: styles.datepicker,\n              disabled: startDate.getTime() >= maxDate,\n              onClick: function onClick() {\n                var prevDay = startDate.getTime() + 86400 * 1000;\n                return setStartDate(new Date(prevDay));\n              },\n              children: /*#__PURE__*/_jsx(Arrow, {\n                className: styles.svg\n              })\n            })]\n          })\n        });\n      }\n    }]);\n\n    return ExampleCustomInput;\n  }(Component);\n\n  return /*#__PURE__*/_jsx(DatePicker, {\n    minDate: minDate,\n    maxDate: maxDate,\n    selected: startDate,\n    onChange: function onChange(date) {\n      setStartDate(date);\n    },\n    customInput: /*#__PURE__*/_jsx(ExampleCustomInput, {})\n  });\n}","map":null,"metadata":{},"sourceType":"module"}